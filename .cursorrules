Always start replies with Yo!

├── .cursorrules
├── .gitignore
├── .nvmrc
├── .vscode
    └── settings.json
├── Cursor Agent - Task Master Prompt.md
├── README.md
├── apps
    ├── api
    │   ├── .env.example
    │   ├── jest.config.ts
    │   ├── package.json
    │   ├── prisma
    │   │   ├── migrations
    │   │   │   ├── 20250112191046_init
    │   │   │   │   └── migration.sql
    │   │   │   ├── 20250112201244_add_featured_field
    │   │   │   │   └── migration.sql
    │   │   │   ├── 20250113201522_init
    │   │   │   │   └── migration.sql
    │   │   │   ├── 20250113223215_wordpress_sync
    │   │   │   │   └── migration.sql
    │   │   │   └── 20250114224900_update_location_models
    │   │   │   │   └── migration.sql
    │   │   ├── schema.prisma
    │   │   └── seed.ts
    │   ├── scripts
    │   │   └── fix-property-categories.ts
    │   ├── src
    │   │   ├── config
    │   │   │   └── multer.ts
    │   │   ├── index.ts
    │   │   ├── lib
    │   │   │   ├── contact.ts
    │   │   │   ├── logger.ts
    │   │   │   └── prisma.ts
    │   │   ├── middleware
    │   │   │   ├── auth.ts
    │   │   │   ├── error.ts
    │   │   │   └── rateLimiter.ts
    │   │   ├── routes
    │   │   │   ├── __tests__
    │   │   │   │   ├── properties.test.ts
    │   │   │   │   └── setup.ts
    │   │   │   ├── admin.ts
    │   │   │   ├── auth.ts
    │   │   │   ├── contact.ts
    │   │   │   ├── locations.ts
    │   │   │   ├── properties.ts
    │   │   │   └── users.ts
    │   │   ├── server.ts
    │   │   └── types
    │   │   │   ├── contact.ts
    │   │   │   ├── express.d.ts
    │   │   │   └── multer.d.ts
    │   ├── tsconfig.json
    │   ├── tsup.config.ts
    │   └── uploads
    │   │   └── .gitkeep
    └── web
    │   ├── .gitignore
    │   ├── README.md
    │   ├── eslint.config.js
    │   ├── index.html
    │   ├── package.json
    │   ├── postcss.config.js
    │   ├── public
    │       ├── images
    │       │   ├── about-us.jpg
    │       │   ├── contact.jpg
    │       │   ├── homepage-hero.webp
    │       │   ├── logo.png
    │       │   ├── logo.svg
    │       │   └── property-placeholder.webp
    │       └── vite.svg
    │   ├── src
    │       ├── App.css
    │       ├── App.tsx
    │       ├── AppRoutes.tsx
    │       ├── assets
    │       │   └── react.svg
    │       ├── components
    │       │   ├── LoadingSpinner.tsx
    │       │   ├── Logo.tsx
    │       │   ├── ThemeToggle.tsx
    │       │   ├── admin
    │       │   │   ├── AdminLayout.tsx
    │       │   │   └── PropertyForm.tsx
    │       │   ├── auth
    │       │   │   └── ProtectedRoute.tsx
    │       │   ├── layout
    │       │   │   └── Layout.tsx
    │       │   ├── maps
    │       │   │   └── GoogleMap.tsx
    │       │   └── properties
    │       │   │   ├── PropertyCard.tsx
    │       │   │   └── PropertyCardSkeleton.tsx
    │       ├── constants
    │       │   └── property.ts
    │       ├── contexts
    │       │   ├── ThemeContext.tsx
    │       │   └── auth.tsx
    │       ├── hooks
    │       │   ├── useDebounce.ts
    │       │   └── useTheme.ts
    │       ├── index.css
    │       ├── lib
    │       │   ├── analytics.ts
    │       │   ├── api.ts
    │       │   └── schemas
    │       │   │   └── property.ts
    │       ├── main.tsx
    │       ├── pages
    │       │   ├── About.tsx
    │       │   ├── Contact.tsx
    │       │   ├── Home.tsx
    │       │   ├── NotFound.tsx
    │       │   ├── Properties.tsx
    │       │   ├── PropertyDetails.tsx
    │       │   └── admin
    │       │   │   ├── Dashboard.tsx
    │       │   │   ├── EditProperty.tsx
    │       │   │   ├── Login.tsx
    │       │   │   ├── Messages.tsx
    │       │   │   ├── NewProperty.tsx
    │       │   │   ├── NewUser.tsx
    │       │   │   ├── Properties.tsx
    │       │   │   ├── Users.tsx
    │       │   │   └── __tests__
    │       │   │       └── Login.test.tsx
    │       ├── services
    │       │   ├── auth.ts
    │       │   ├── contact.ts
    │       │   ├── locationService.ts
    │       │   ├── messages.ts
    │       │   ├── properties.ts
    │       │   ├── propertyService.ts
    │       │   └── users.ts
    │       ├── test
    │       │   └── setup.ts
    │       ├── types
    │       │   └── api.ts
    │       └── vite-env.d.ts
    │   ├── tailwind.config.js
    │   ├── tsconfig.app.json
    │   ├── tsconfig.json
    │   ├── tsconfig.node.json
    │   ├── vite.config.ts
    │   └── vitest.config.ts
├── package.json
├── packages
    └── shared-types
    │   ├── package.json
    │   ├── src
    │       ├── admin
    │       │   └── index.ts
    │       ├── auth
    │       │   └── index.ts
    │       ├── common
    │       │   ├── api.ts
    │       │   └── pagination.ts
    │       ├── contact
    │       │   └── index.ts
    │       ├── index.ts
    │       ├── location
    │       │   └── index.ts
    │       ├── property
    │       │   ├── base.ts
    │       │   ├── enums.ts
    │       │   ├── requests.ts
    │       │   └── responses.ts
    │       └── user
    │       │   └── index.ts
    │   ├── tsconfig.json
    │   └── tsup.config.ts
├── pnpm-lock.yaml
├── pnpm-workspace.yaml
└── turbo.json


/.cursorrules:
--------------------------------------------------------------------------------
    1 | ├── .gitignore
    2 | ├── .nvmrc
    3 | ├── .vscode
    4 |     └── settings.json
    5 | ├── README.md
    6 | ├── apps
    7 |     ├── api
    8 |     │   ├── .env.example
    9 |     │   ├── jest.config.ts
   10 |     │   ├── package.json
   11 |     │   ├── prisma
   12 |     │   │   ├── migrations
   13 |     │   │   │   ├── 20250112191046_init
   14 |     │   │   │   │   └── migration.sql
   15 |     │   │   │   ├── 20250112201244_add_featured_field
   16 |     │   │   │   │   └── migration.sql
   17 |     │   │   │   ├── 20250113201522_init
   18 |     │   │   │   │   └── migration.sql
   19 |     │   │   │   ├── 20250113223215_wordpress_sync
   20 |     │   │   │   │   └── migration.sql
   21 |     │   │   │   └── 20250114224900_update_location_models
   22 |     │   │   │   │   └── migration.sql
   23 |     │   │   ├── schema.prisma
   24 |     │   │   └── seed.ts
   25 |     │   ├── scripts
   26 |     │   │   └── fix-property-categories.ts
   27 |     │   ├── src
   28 |     │   │   ├── config
   29 |     │   │   │   └── multer.ts
   30 |     │   │   ├── index.ts
   31 |     │   │   ├── lib
   32 |     │   │   │   ├── contact.ts
   33 |     │   │   │   ├── logger.ts
   34 |     │   │   │   └── prisma.ts
   35 |     │   │   ├── middleware
   36 |     │   │   │   ├── auth.ts
   37 |     │   │   │   ├── error.ts
   38 |     │   │   │   └── rateLimiter.ts
   39 |     │   │   ├── routes
   40 |     │   │   │   ├── __tests__
   41 |     │   │   │   │   ├── properties.test.ts
   42 |     │   │   │   │   └── setup.ts
   43 |     │   │   │   ├── admin.ts
   44 |     │   │   │   ├── auth.ts
   45 |     │   │   │   ├── contact.ts
   46 |     │   │   │   ├── locations.ts
   47 |     │   │   │   ├── properties.ts
   48 |     │   │   │   └── users.ts
   49 |     │   │   ├── server.ts
   50 |     │   │   └── types
   51 |     │   │   │   ├── contact.ts
   52 |     │   │   │   ├── express.d.ts
   53 |     │   │   │   └── multer.d.ts
   54 |     │   ├── tsconfig.json
   55 |     │   ├── tsup.config.ts
   56 |     │   └── uploads
   57 |     │   │   └── .gitkeep
   58 |     └── web
   59 |     │   ├── .gitignore
   60 |     │   ├── README.md
   61 |     │   ├── eslint.config.js
   62 |     │   ├── index.html
   63 |     │   ├── package.json
   64 |     │   ├── postcss.config.js
   65 |     │   ├── public
   66 |     │       ├── images
   67 |     │       │   ├── about-us.jpg
   68 |     │       │   ├── contact.jpg
   69 |     │       │   ├── homepage-hero.webp
   70 |     │       │   ├── logo.png
   71 |     │       │   ├── logo.svg
   72 |     │       │   └── property-placeholder.webp
   73 |     │       └── vite.svg
   74 |     │   ├── src
   75 |     │       ├── App.css
   76 |     │       ├── App.tsx
   77 |     │       ├── AppRoutes.tsx
   78 |     │       ├── assets
   79 |     │       │   └── react.svg
   80 |     │       ├── components
   81 |     │       │   ├── LoadingSpinner.tsx
   82 |     │       │   ├── Logo.tsx
   83 |     │       │   ├── ThemeToggle.tsx
   84 |     │       │   ├── admin
   85 |     │       │   │   ├── AdminLayout.tsx
   86 |     │       │   │   └── PropertyForm.tsx
   87 |     │       │   ├── auth
   88 |     │       │   │   └── ProtectedRoute.tsx
   89 |     │       │   ├── layout
   90 |     │       │   │   └── Layout.tsx
   91 |     │       │   ├── maps
   92 |     │       │   │   └── GoogleMap.tsx
   93 |     │       │   └── properties
   94 |     │       │   │   ├── PropertyCard.tsx
   95 |     │       │   │   └── PropertyCardSkeleton.tsx
   96 |     │       ├── constants
   97 |     │       │   └── property.ts
   98 |     │       ├── contexts
   99 |     │       │   ├── ThemeContext.tsx
  100 |     │       │   └── auth.tsx
  101 |     │       ├── hooks
  102 |     │       │   ├── useDebounce.ts
  103 |     │       │   └── useTheme.ts
  104 |     │       ├── index.css
  105 |     │       ├── lib
  106 |     │       │   ├── analytics.ts
  107 |     │       │   ├── api.ts
  108 |     │       │   ├── schemas
  109 |     │       │   │   └── property.ts
  110 |     │       │   └── types
  111 |     │       │   │   └── index.ts
  112 |     │       ├── main.tsx
  113 |     │       ├── pages
  114 |     │       │   ├── About.tsx
  115 |     │       │   ├── Contact.tsx
  116 |     │       │   ├── Home.tsx
  117 |     │       │   ├── NotFound.tsx
  118 |     │       │   ├── Properties.tsx
  119 |     │       │   ├── PropertyDetails.tsx
  120 |     │       │   └── admin
  121 |     │       │   │   ├── Dashboard.tsx
  122 |     │       │   │   ├── EditProperty.tsx
  123 |     │       │   │   ├── Login.tsx
  124 |     │       │   │   ├── Messages.tsx
  125 |     │       │   │   ├── NewProperty.tsx
  126 |     │       │   │   ├── NewUser.tsx
  127 |     │       │   │   ├── Properties.tsx
  128 |     │       │   │   ├── Users.tsx
  129 |     │       │   │   └── __tests__
  130 |     │       │   │       └── Login.test.tsx
  131 |     │       ├── services
  132 |     │       │   ├── auth.ts
  133 |     │       │   ├── contact.ts
  134 |     │       │   ├── locationService.ts
  135 |     │       │   ├── messages.ts
  136 |     │       │   ├── properties.ts
  137 |     │       │   ├── propertyService.ts
  138 |     │       │   └── users.ts
  139 |     │       ├── test
  140 |     │       │   └── setup.ts
  141 |     │       ├── types
  142 |     │       │   └── api.ts
  143 |     │       └── vite-env.d.ts
  144 |     │   ├── tailwind.config.js
  145 |     │   ├── tsconfig.app.json
  146 |     │   ├── tsconfig.json
  147 |     │   ├── tsconfig.node.json
  148 |     │   ├── vite.config.ts
  149 |     │   └── vitest.config.ts
  150 | ├── package.json
  151 | ├── packages
  152 |     └── shared-types
  153 |     │   ├── package.json
  154 |     │   ├── src
  155 |     │       ├── admin
  156 |     │       │   └── index.ts
  157 |     │       ├── auth
  158 |     │       │   └── index.ts
  159 |     │       ├── common
  160 |     │       │   ├── api.ts
  161 |     │       │   └── pagination.ts
  162 |     │       ├── contact
  163 |     │       │   └── index.ts
  164 |     │       ├── index.ts
  165 |     │       ├── location
  166 |     │       │   └── index.ts
  167 |     │       ├── property
  168 |     │       │   ├── base.ts
  169 |     │       │   ├── enums.ts
  170 |     │       │   ├── requests.ts
  171 |     │       │   └── responses.ts
  172 |     │       └── user
  173 |     │       │   └── index.ts
  174 |     │   ├── tsconfig.json
  175 |     │   └── tsup.config.ts
  176 | ├── pnpm-lock.yaml
  177 | ├── pnpm-workspace.yaml
  178 | └── turbo.json
  179 | 
  180 | 
  181 | /.gitignore:
  182 | --------------------------------------------------------------------------------
  183 |  1 | # Dependencies
  184 |  2 | node_modules
  185 |  3 | .pnp
  186 |  4 | .pnp.js
  187 |  5 | 
  188 |  6 | # Testing
  189 |  7 | coverage
  190 |  8 | 
  191 |  9 | # Production
  192 | 10 | dist
  193 | 11 | build
  194 | 12 | out
  195 | 13 | .next
  196 | 14 | 
  197 | 15 | # Environment Variables
  198 | 16 | .env
  199 | 17 | .env.local
  200 | 18 | .env.development.local
  201 | 19 | .env.test.local
  202 | 20 | .env.production.local
  203 | 21 | .env*.local
  204 | 22 | 
  205 | 23 | # Debug
  206 | 24 | npm-debug.log*
  207 | 25 | yarn-debug.log*
  208 | 26 | yarn-error.log*
  209 | 27 | pnpm-debug.log*
  210 | 28 | 
  211 | 29 | # IDEs and editors
  212 | 30 | .idea
  213 | 31 | .vscode/*
  214 | 32 | !.vscode/extensions.json
  215 | 33 | !.vscode/settings.json
  216 | 34 | !.vscode/tasks.json
  217 | 35 | !.vscode/launch.json
  218 | 36 | *.suo
  219 | 37 | *.ntvs*
  220 | 38 | *.njsproj
  221 | 39 | *.sln
  222 | 40 | *.sw?
  223 | 41 | 
  224 | 42 | # OS files
  225 | 43 | .DS_Store
  226 | 44 | Thumbs.db
  227 | 45 | 
  228 | 46 | # Prisma
  229 | 47 | apps/api/prisma/dev.db
  230 | 48 | apps/api/prisma/dev.db-journal
  231 | 49 | apps/api/prisma/migrations/migration_lock.toml
  232 | 50 | 
  233 | 51 | # Logs
  234 | 52 | logs
  235 | 53 | *.log
  236 | 54 | npm-debug.log*
  237 | 55 | yarn-debug.log*
  238 | 56 | yarn-error.log*
  239 | 57 | pnpm-debug.log*
  240 | 58 | lerna-debug.log*
  241 | 59 | 
  242 | 60 | # Turborepo
  243 | 61 | .turbo
  244 | 62 | 
  245 | 63 | # Cache
  246 | 64 | .cache
  247 | 65 | .eslintcache
  248 | 66 | .stylelintcache
  249 | 67 | 
  250 | 68 | # Uploads
  251 | 69 | apps/api/uploads/*
  252 | 70 | !apps/api/uploads/.gitkeep
  253 | 71 | 
  254 | 72 | # TypeScript
  255 | 73 | *.tsbuildinfo
  256 | 74 | 
  257 | 75 | # Vite
  258 | 76 | *.local
  259 | 77 | 
  260 | 78 | # Testing
  261 | 79 | /coverage
  262 | 80 | .nyc_output
  263 | 81 | 
  264 | 82 | # Temporary files
  265 | 83 | *.tmp
  266 | 84 | *.temp
  267 | 85 | .temp
  268 | 86 | .tmp
  269 | 87 | 
  270 | 
  271 | 
  272 | --------------------------------------------------------------------------------
  273 | /.nvmrc:
  274 | --------------------------------------------------------------------------------
  275 | 1 | v20.12.2
  276 | 2 | 
  277 | 
  278 | 
  279 | --------------------------------------------------------------------------------
  280 | /.vscode/settings.json:
  281 | --------------------------------------------------------------------------------
  282 |  1 | {
  283 |  2 |   "workbench.colorCustomizations": {
  284 |  3 |     "activityBar.activeBackground": "#d6a251",
  285 |  4 |     "activityBar.background": "#d6a251",
  286 |  5 |     "activityBar.foreground": "#15202b",
  287 |  6 |     "activityBar.inactiveForeground": "#15202b99",
  288 |  7 |     "activityBarBadge.background": "#e5f9f1",
  289 |  8 |     "activityBarBadge.foreground": "#15202b",
  290 |  9 |     "commandCenter.border": "#15202b99",
  291 | 10 |     "sash.hoverBorder": "#d6a251",
  292 | 11 |     "statusBar.background": "#c58b2f",
  293 | 12 |     "statusBar.foreground": "#15202b",
  294 | 13 |     "statusBarItem.hoverBackground": "#9c6e25",
  295 | 14 |     "statusBarItem.remoteBackground": "#c58b2f",
  296 | 15 |     "statusBarItem.remoteForeground": "#15202b",
  297 | 16 |     "titleBar.activeBackground": "#c58b2f",
  298 | 17 |     "titleBar.activeForeground": "#15202b",
  299 | 18 |     "titleBar.inactiveBackground": "#c58b2f99",
  300 | 19 |     "titleBar.inactiveForeground": "#15202b99"
  301 | 20 |   },
  302 | 21 |   "peacock.color": "#c58b2f"
  303 | 22 | }
  304 | 23 | 
  305 | 
  306 | 
  307 | --------------------------------------------------------------------------------
  308 | /README.md:
  309 | --------------------------------------------------------------------------------
  310 |  1 | # Avalon Real Estate Website
  311 |  2 | 
  312 |  3 | Modern real estate website for Авалон Недвижими Имоти, built with React, Node.js, and TypeScript.
  313 |  4 | 
  314 |  5 | ## Project Structure
  315 |  6 | 
  316 |  7 | ```
  317 |  8 | avalon-real-estate/
  318 |  9 | ├── apps/
  319 | 10 | │   ├── web/           # React frontend application
  320 | 11 | │   └── api/           # Node.js/Express backend
  321 | 12 | ├── packages/
  322 | 13 | │   ├── ui/            # Shared UI components
  323 | 14 | │   ├── config/        # Shared configurations
  324 | 15 | │   └── types/         # Shared TypeScript types
  325 | 16 | ├── pnpm-workspace.yaml
  326 | 17 | └── package.json
  327 | 18 | ```
  328 | 19 | 
  329 | 20 | ## Prerequisites
  330 | 21 | 
  331 | 22 | - Node.js (v18 or higher)
  332 | 23 | - pnpm (v8.14.1 or higher)
  333 | 24 | 
  334 | 25 | ## Getting Started
  335 | 26 | 
  336 | 27 | 1. Install dependencies:
  337 | 28 |    ```bash
  338 | 29 |    pnpm install
  339 | 30 |    ```
  340 | 31 | 
  341 | 32 | 2. Start development servers:
  342 | 33 |    ```bash
  343 | 34 |    pnpm dev
  344 | 35 |    ```
  345 | 36 | 
  346 | 37 |    This will start both the frontend and backend development servers:
  347 | 38 |    - Frontend: http://localhost:5173
  348 | 39 |    - Backend: http://localhost:3000
  349 | 40 | 
  350 | 41 | ## Tech Stack
  351 | 42 | 
  352 | 43 | - **Frontend:**
  353 | 44 |   - React + TypeScript
  354 | 45 |   - Tailwind CSS
  355 | 46 |   - React Router
  356 | 47 |   - TanStack Query (React Query)
  357 | 48 |   - Zod for runtime type validation
  358 | 49 | 
  359 | 50 | - **Backend:**
  360 | 51 |   - Node.js + TypeScript
  361 | 52 |   - Express
  362 | 53 |   - Prisma (Type-safe ORM)
  363 | 54 |   - SQLite/MongoDB
  364 | 55 |   - JWT Authentication
  365 | 56 | 
  366 | 57 | ## Features
  367 | 58 | 
  368 | 59 | - Responsive design with light/dark mode
  369 | 60 | - Property search and filtering
  370 | 61 | - Admin panel for property management
  371 | 62 | - Contact form with reCAPTCHA
  372 | 63 | - Google Analytics integration
  373 | 64 | - Interactive map integration
  374 | 65 | 
  375 | 66 | ## Development
  376 | 67 | 
  377 | 68 | - All code is written in TypeScript
  378 | 69 | - ESLint for code linting
  379 | 70 | - Prettier for code formatting
  380 | 71 | - Turborepo for monorepo management
  381 | 72 | - pnpm for fast, disk-space efficient package management
  382 | 73 | 
  383 | 74 | ## License
  384 | 75 | 
  385 | 76 | Private - All rights reserved 
  386 | 77 | 
  387 | 
  388 | 
  389 | --------------------------------------------------------------------------------
  390 | /apps/api/.env.example:
  391 | --------------------------------------------------------------------------------
  392 |  1 | # Email Configuration
  393 |  2 | SMTP_HOST=smtp.example.com
  394 |  3 | SMTP_PORT=587
  395 |  4 | SMTP_SECURE=false
  396 |  5 | SMTP_USER=your-email@example.com
  397 |  6 | SMTP_PASS=your-email-password
  398 |  7 | SMTP_FROM=noreply@example.com
  399 |  8 | ADMIN_EMAIL=admin@example.com
  400 |  9 | 
  401 | 10 | # reCAPTCHA Configuration
  402 | 11 | RECAPTCHA_SITE_KEY=your-recaptcha-site-key
  403 | 12 | RECAPTCHA_SECRET_KEY=your-recaptcha-secret-key 
  404 | 13 | 
  405 | 
  406 | 
  407 | --------------------------------------------------------------------------------
  408 | /apps/api/jest.config.ts:
  409 | --------------------------------------------------------------------------------
  410 |  1 | import type { Config } from '@jest/types';
  411 |  2 | 
  412 |  3 | const config: Config.InitialOptions = {
  413 |  4 |   preset: 'ts-jest',
  414 |  5 |   testEnvironment: 'node',
  415 |  6 |   moduleNameMapper: {
  416 |  7 |     '^@avalon/shared-types
  417 | #39;: '<rootDir>/../../packages/shared-types/src/index.ts'
  418 |  8 |   },
  419 |  9 |   transform: {
  420 | 10 |     '^.+\\.tsx?
  421 | #39;: ['ts-jest', {
  422 | 11 |       useESM: true,
  423 | 12 |     }]
  424 | 13 |   },
  425 | 14 |   extensionsToTreatAsEsm: ['.ts'],
  426 | 15 |   moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node']
  427 | 16 | };
  428 | 17 | 
  429 | 18 | export default config; 
  430 | 19 | 
  431 | 
  432 | 
  433 | --------------------------------------------------------------------------------
  434 | /apps/api/package.json:
  435 | --------------------------------------------------------------------------------
  436 |  1 | {
  437 |  2 |   "name": "@avalon/api",
  438 |  3 |   "version": "1.0.0",
  439 |  4 |   "private": true,
  440 |  5 |   "type": "module",
  441 |  6 |   "scripts": {
  442 |  7 |     "dev": "tsup src/index.ts --watch --onSuccess \"node dist/index.js\"",
  443 |  8 |     "build": "tsup src/index.ts --minify",
  444 |  9 |     "start": "node dist/index.js",
  445 | 10 |     "clean": "rm -rf dist",
  446 | 11 |     "prisma:generate": "prisma generate",
  447 | 12 |     "prisma:migrate": "prisma migrate deploy",
  448 | 13 |     "prisma:studio": "prisma studio",
  449 | 14 |     "prisma:seed": "tsx prisma/seed.ts",
  450 | 15 |     "fix:categories": "tsx scripts/fix-property-categories.ts",
  451 | 16 |     "test": "cross-env NODE_ENV=test jest"
  452 | 17 |   },
  453 | 18 |   "dependencies": {
  454 | 19 |     "@avalon/shared-types": "workspace:*",
  455 | 20 |     "@prisma/client": "^5.22.0",
  456 | 21 |     "@types/nodemailer": "^6.4.17",
  457 | 22 |     "bcryptjs": "^2.4.3",
  458 | 23 |     "cors": "^2.8.5",
  459 | 24 |     "dotenv": "^16.4.5",
  460 | 25 |     "express": "^4.18.3",
  461 | 26 |     "express-rate-limit": "^7.5.0",
  462 | 27 |     "jsonwebtoken": "^9.0.2",
  463 | 28 |     "morgan": "^1.10.0",
  464 | 29 |     "multer": "^1.4.5-lts.1",
  465 | 30 |     "nodemailer": "^6.9.16",
  466 | 31 |     "winston": "^3.17.0",
  467 | 32 |     "zod": "^3.22.4"
  468 | 33 |   },
  469 | 34 |   "devDependencies": {
  470 | 35 |     "@jest/globals": "^29.7.0",
  471 | 36 |     "@jest/types": "^29.6.3",
  472 | 37 |     "@types/bcryptjs": "^2.4.6",
  473 | 38 |     "@types/cors": "^2.8.17",
  474 | 39 |     "@types/express": "^4.17.21",
  475 | 40 |     "@types/jest": "^29.5.14",
  476 | 41 |     "@types/jsonwebtoken": "^9.0.5",
  477 | 42 |     "@types/morgan": "^1.9.9",
  478 | 43 |     "@types/multer": "^1.4.11",
  479 | 44 |     "@types/node": "^20.17.12",
  480 | 45 |     "@types/supertest": "^6.0.2",
  481 | 46 |     "@typescript-eslint/eslint-plugin": "^6.21.0",
  482 | 47 |     "@typescript-eslint/parser": "^6.21.0",
  483 | 48 |     "cross-env": "^7.0.3",
  484 | 49 |     "jest": "^29.7.0",
  485 | 50 |     "prisma": "^5.22.0",
  486 | 51 |     "supertest": "^7.0.0",
  487 | 52 |     "ts-jest": "^29.2.5",
  488 | 53 |     "tsup": "^8.3.5",
  489 | 54 |     "tsx": "^4.7.1",
  490 | 55 |     "typescript": "^5.4.2"
  491 | 56 |   }
  492 | 57 | }
  493 | 58 | 
  494 | 
  495 | 
  496 | --------------------------------------------------------------------------------
  497 | /apps/api/prisma/migrations/20250112191046_init/migration.sql:
  498 | --------------------------------------------------------------------------------
  499 |  1 | -- CreateTable
  500 |  2 | CREATE TABLE "User" (
  501 |  3 |     "id" TEXT NOT NULL PRIMARY KEY,
  502 |  4 |     "email" TEXT NOT NULL,
  503 |  5 |     "name" TEXT NOT NULL,
  504 |  6 |     "password" TEXT NOT NULL,
  505 |  7 |     "role" TEXT NOT NULL DEFAULT 'USER',
  506 |  8 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  507 |  9 |     "updatedAt" DATETIME NOT NULL
  508 | 10 | );
  509 | 11 | 
  510 | 12 | -- CreateTable
  511 | 13 | CREATE TABLE "Property" (
  512 | 14 |     "id" TEXT NOT NULL PRIMARY KEY,
  513 | 15 |     "title" TEXT NOT NULL,
  514 | 16 |     "description" TEXT NOT NULL,
  515 | 17 |     "price" REAL NOT NULL,
  516 | 18 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
  517 | 19 |     "area_sqm" REAL NOT NULL,
  518 | 20 |     "floor" INTEGER,
  519 | 21 |     "construction_type" TEXT,
  520 | 22 |     "furnishing" TEXT,
  521 | 23 |     "location" TEXT NOT NULL,
  522 | 24 |     "category" TEXT NOT NULL,
  523 | 25 |     "type" TEXT NOT NULL,
  524 | 26 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  525 | 27 |     "updatedAt" DATETIME NOT NULL
  526 | 28 | );
  527 | 29 | 
  528 | 30 | -- CreateTable
  529 | 31 | CREATE TABLE "Image" (
  530 | 32 |     "id" TEXT NOT NULL PRIMARY KEY,
  531 | 33 |     "url" TEXT NOT NULL,
  532 | 34 |     "propertyId" TEXT NOT NULL,
  533 | 35 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  534 | 36 |     "updatedAt" DATETIME NOT NULL,
  535 | 37 |     CONSTRAINT "Image_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE
  536 | 38 | );
  537 | 39 | 
  538 | 40 | -- CreateTable
  539 | 41 | CREATE TABLE "ContactInfo" (
  540 | 42 |     "id" TEXT NOT NULL PRIMARY KEY,
  541 | 43 |     "phone" TEXT NOT NULL,
  542 | 44 |     "email" TEXT NOT NULL,
  543 | 45 |     "propertyId" TEXT NOT NULL,
  544 | 46 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  545 | 47 |     "updatedAt" DATETIME NOT NULL,
  546 | 48 |     CONSTRAINT "ContactInfo_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE
  547 | 49 | );
  548 | 50 | 
  549 | 51 | -- CreateTable
  550 | 52 | CREATE TABLE "ContactMessage" (
  551 | 53 |     "id" TEXT NOT NULL PRIMARY KEY,
  552 | 54 |     "name" TEXT NOT NULL,
  553 | 55 |     "email" TEXT NOT NULL,
  554 | 56 |     "message" TEXT NOT NULL,
  555 | 57 |     "isRead" BOOLEAN NOT NULL DEFAULT false,
  556 | 58 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  557 | 59 |     "updatedAt" DATETIME NOT NULL
  558 | 60 | );
  559 | 61 | 
  560 | 62 | -- CreateIndex
  561 | 63 | CREATE UNIQUE INDEX "User_email_key" ON "User"("email");
  562 | 64 | 
  563 | 65 | -- CreateIndex
  564 | 66 | CREATE UNIQUE INDEX "ContactInfo_propertyId_key" ON "ContactInfo"("propertyId");
  565 | 67 | 
  566 | 
  567 | 
  568 | --------------------------------------------------------------------------------
  569 | /apps/api/prisma/migrations/20250112201244_add_featured_field/migration.sql:
  570 | --------------------------------------------------------------------------------
  571 |  1 | -- RedefineTables
  572 |  2 | PRAGMA defer_foreign_keys=ON;
  573 |  3 | PRAGMA foreign_keys=OFF;
  574 |  4 | CREATE TABLE "new_Property" (
  575 |  5 |     "id" TEXT NOT NULL PRIMARY KEY,
  576 |  6 |     "title" TEXT NOT NULL,
  577 |  7 |     "description" TEXT NOT NULL,
  578 |  8 |     "price" REAL NOT NULL,
  579 |  9 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
  580 | 10 |     "area_sqm" REAL NOT NULL,
  581 | 11 |     "floor" INTEGER,
  582 | 12 |     "construction_type" TEXT,
  583 | 13 |     "furnishing" TEXT,
  584 | 14 |     "location" TEXT NOT NULL,
  585 | 15 |     "category" TEXT NOT NULL,
  586 | 16 |     "type" TEXT NOT NULL,
  587 | 17 |     "featured" BOOLEAN NOT NULL DEFAULT false,
  588 | 18 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  589 | 19 |     "updatedAt" DATETIME NOT NULL
  590 | 20 | );
  591 | 21 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt" FROM "Property";
  592 | 22 | DROP TABLE "Property";
  593 | 23 | ALTER TABLE "new_Property" RENAME TO "Property";
  594 | 24 | PRAGMA foreign_keys=ON;
  595 | 25 | PRAGMA defer_foreign_keys=OFF;
  596 | 26 | 
  597 | 
  598 | 
  599 | --------------------------------------------------------------------------------
  600 | /apps/api/prisma/migrations/20250113201522_init/migration.sql:
  601 | --------------------------------------------------------------------------------
  602 |  1 | -- RedefineTables
  603 |  2 | PRAGMA defer_foreign_keys=ON;
  604 |  3 | PRAGMA foreign_keys=OFF;
  605 |  4 | CREATE TABLE "new_Property" (
  606 |  5 |     "id" TEXT NOT NULL PRIMARY KEY,
  607 |  6 |     "title" TEXT NOT NULL,
  608 |  7 |     "description" TEXT NOT NULL,
  609 |  8 |     "price" REAL NOT NULL,
  610 |  9 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
  611 | 10 |     "area_sqm" REAL NOT NULL,
  612 | 11 |     "floor" INTEGER,
  613 | 12 |     "construction_type" TEXT,
  614 | 13 |     "furnishing" TEXT,
  615 | 14 |     "location" TEXT NOT NULL,
  616 | 15 |     "category" TEXT NOT NULL DEFAULT 'SALE',
  617 | 16 |     "type" TEXT NOT NULL DEFAULT 'APARTMENT',
  618 | 17 |     "featured" BOOLEAN NOT NULL DEFAULT false,
  619 | 18 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  620 | 19 |     "updatedAt" DATETIME NOT NULL
  621 | 20 | );
  622 | 21 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt" FROM "Property";
  623 | 22 | DROP TABLE "Property";
  624 | 23 | ALTER TABLE "new_Property" RENAME TO "Property";
  625 | 24 | CREATE INDEX "Property_category_idx" ON "Property"("category");
  626 | 25 | CREATE INDEX "Property_type_idx" ON "Property"("type");
  627 | 26 | PRAGMA foreign_keys=ON;
  628 | 27 | PRAGMA defer_foreign_keys=OFF;
  629 | 28 | 
  630 | 
  631 | 
  632 | --------------------------------------------------------------------------------
  633 | /apps/api/prisma/migrations/20250113223215_wordpress_sync/migration.sql:
  634 | --------------------------------------------------------------------------------
  635 |  1 | /*
  636 |  2 |   Warnings:
  637 |  3 | 
  638 |  4 |   - You are about to drop the column `location` on the `Property` table. All the data in the column will be lost.
  639 |  5 | 
  640 |  6 | */
  641 |  7 | -- CreateTable
  642 |  8 | CREATE TABLE "Region" (
  643 |  9 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  644 | 10 |     "name" TEXT NOT NULL,
  645 | 11 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  646 | 12 |     "updatedAt" DATETIME NOT NULL
  647 | 13 | );
  648 | 14 | 
  649 | 15 | -- CreateTable
  650 | 16 | CREATE TABLE "Neighborhood" (
  651 | 17 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  652 | 18 |     "name" TEXT NOT NULL,
  653 | 19 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  654 | 20 |     "updatedAt" DATETIME NOT NULL
  655 | 21 | );
  656 | 22 | 
  657 | 23 | -- CreateTable
  658 | 24 | CREATE TABLE "Feature" (
  659 | 25 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  660 | 26 |     "name" TEXT NOT NULL,
  661 | 27 |     "type" TEXT NOT NULL,
  662 | 28 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  663 | 29 |     "updatedAt" DATETIME NOT NULL
  664 | 30 | );
  665 | 31 | 
  666 | 32 | -- CreateTable
  667 | 33 | CREATE TABLE "PropertyFeature" (
  668 | 34 |     "propertyId" TEXT NOT NULL,
  669 | 35 |     "featureId" INTEGER NOT NULL,
  670 | 36 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  671 | 37 |     "updatedAt" DATETIME NOT NULL,
  672 | 38 | 
  673 | 39 |     PRIMARY KEY ("propertyId", "featureId"),
  674 | 40 |     CONSTRAINT "PropertyFeature_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE,
  675 | 41 |     CONSTRAINT "PropertyFeature_featureId_fkey" FOREIGN KEY ("featureId") REFERENCES "Feature" ("id") ON DELETE RESTRICT ON UPDATE CASCADE
  676 | 42 | );
  677 | 43 | 
  678 | 44 | -- RedefineTables
  679 | 45 | PRAGMA defer_foreign_keys=ON;
  680 | 46 | PRAGMA foreign_keys=OFF;
  681 | 47 | CREATE TABLE "new_Property" (
  682 | 48 |     "id" TEXT NOT NULL PRIMARY KEY,
  683 | 49 |     "title" TEXT NOT NULL,
  684 | 50 |     "description" TEXT NOT NULL,
  685 | 51 |     "price" REAL NOT NULL,
  686 | 52 |     "currency" TEXT NOT NULL DEFAULT 'BGN',
  687 | 53 |     "area_sqm" REAL NOT NULL,
  688 | 54 |     "land_area_sqm" REAL,
  689 | 55 |     "floor" INTEGER,
  690 | 56 |     "total_floors" INTEGER,
  691 | 57 |     "construction_type" TEXT,
  692 | 58 |     "furnishing" TEXT,
  693 | 59 |     "location_type" TEXT NOT NULL DEFAULT 'CITY',
  694 | 60 |     "regionId" INTEGER,
  695 | 61 |     "neighborhoodId" INTEGER,
  696 | 62 |     "has_regulation" BOOLEAN,
  697 | 63 |     "category" TEXT NOT NULL DEFAULT 'SALE',
  698 | 64 |     "type" TEXT NOT NULL DEFAULT 'APARTMENT',
  699 | 65 |     "featured" BOOLEAN NOT NULL DEFAULT false,
  700 | 66 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  701 | 67 |     "updatedAt" DATETIME NOT NULL,
  702 | 68 |     CONSTRAINT "Property_regionId_fkey" FOREIGN KEY ("regionId") REFERENCES "Region" ("id") ON DELETE SET NULL ON UPDATE CASCADE,
  703 | 69 |     CONSTRAINT "Property_neighborhoodId_fkey" FOREIGN KEY ("neighborhoodId") REFERENCES "Neighborhood" ("id") ON DELETE SET NULL ON UPDATE CASCADE
  704 | 70 | );
  705 | 71 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "price", "title", "type", "updatedAt" FROM "Property";
  706 | 72 | DROP TABLE "Property";
  707 | 73 | ALTER TABLE "new_Property" RENAME TO "Property";
  708 | 74 | CREATE INDEX "Property_category_idx" ON "Property"("category");
  709 | 75 | CREATE INDEX "Property_type_idx" ON "Property"("type");
  710 | 76 | CREATE INDEX "Property_regionId_idx" ON "Property"("regionId");
  711 | 77 | CREATE INDEX "Property_neighborhoodId_idx" ON "Property"("neighborhoodId");
  712 | 78 | PRAGMA foreign_keys=ON;
  713 | 79 | PRAGMA defer_foreign_keys=OFF;
  714 | 80 | 
  715 | 
  716 | 
  717 | --------------------------------------------------------------------------------
  718 | /apps/api/prisma/migrations/20250114224900_update_location_models/migration.sql:
  719 | --------------------------------------------------------------------------------
  720 |  1 | /*
  721 |  2 |   Warnings:
  722 |  3 | 
  723 |  4 |   - A unique constraint covering the columns `[name]` on the table `Neighborhood` will be added. If there are existing duplicate values, this will fail.
  724 |  5 |   - A unique constraint covering the columns `[name]` on the table `Region` will be added. If there are existing duplicate values, this will fail.
  725 |  6 | 
  726 |  7 | */
  727 |  8 | -- CreateIndex
  728 |  9 | CREATE UNIQUE INDEX "Neighborhood_name_key" ON "Neighborhood"("name");
  729 | 10 | 
  730 | 11 | -- CreateIndex
  731 | 12 | CREATE UNIQUE INDEX "Region_name_key" ON "Region"("name");
  732 | 13 | 
  733 | 
  734 | 
  735 | --------------------------------------------------------------------------------
  736 | /apps/api/prisma/schema.prisma:
  737 | --------------------------------------------------------------------------------
  738 |   1 | generator client {
  739 |   2 |   provider = "prisma-client-js"
  740 |   3 | }
  741 |   4 | 
  742 |   5 | datasource db {
  743 |   6 |   provider = "sqlite"
  744 |   7 |   url      = "file:./dev.db"
  745 |   8 | }
  746 |   9 | 
  747 |  10 | model User {
  748 |  11 |   id        String   @id @default(cuid())
  749 |  12 |   email     String   @unique
  750 |  13 |   name      String
  751 |  14 |   password  String
  752 |  15 |   role      String   @default("USER") // Can be "USER" or "ADMIN"
  753 |  16 |   createdAt DateTime @default(now())
  754 |  17 |   updatedAt DateTime @updatedAt
  755 |  18 | }
  756 |  19 | 
  757 |  20 | model Region {
  758 |  21 |   id         Int        @id @default(autoincrement())
  759 |  22 |   name       String     @unique
  760 |  23 |   properties Property[]
  761 |  24 |   createdAt  DateTime   @default(now())
  762 |  25 |   updatedAt  DateTime   @updatedAt
  763 |  26 | }
  764 |  27 | 
  765 |  28 | model Neighborhood {
  766 |  29 |   id         Int        @id @default(autoincrement())
  767 |  30 |   name       String     @unique
  768 |  31 |   properties Property[]
  769 |  32 |   createdAt  DateTime   @default(now())
  770 |  33 |   updatedAt  DateTime   @updatedAt
  771 |  34 | }
  772 |  35 | 
  773 |  36 | model Feature {
  774 |  37 |   id          Int               @id @default(autoincrement())
  775 |  38 |   name        String
  776 |  39 |   type        String            // 'INFRASTRUCTURE' or 'BUILDING'
  777 |  40 |   properties  PropertyFeature[]
  778 |  41 |   createdAt   DateTime          @default(now())
  779 |  42 |   updatedAt   DateTime          @updatedAt
  780 |  43 | }
  781 |  44 | 
  782 |  45 | model Property {
  783 |  46 |   id               String            @id @default(cuid())
  784 |  47 |   title            String
  785 |  48 |   description      String
  786 |  49 |   price            Float
  787 |  50 |   currency         String            @default("BGN") // BGN or EUR
  788 |  51 |   area_sqm         Float
  789 |  52 |   land_area_sqm    Float?
  790 |  53 |   floor            Int?
  791 |  54 |   total_floors     Int?
  792 |  55 |   construction_type String?          // BRICK, EPK, PK, PANEL, WOOD_FLOOR
  793 |  56 |   furnishing       String?           // FURNISHED, PARTIALLY_FURNISHED, UNFURNISHED
  794 |  57 |   location_type    String            @default("CITY") // CITY or REGION
  795 |  58 |   region           Region?           @relation(fields: [regionId], references: [id])
  796 |  59 |   regionId         Int?
  797 |  60 |   neighborhood     Neighborhood?     @relation(fields: [neighborhoodId], references: [id])
  798 |  61 |   neighborhoodId   Int?
  799 |  62 |   has_regulation   Boolean?
  800 |  63 |   category         String            @default("SALE") // SALE or RENT
  801 |  64 |   type             String            @default("APARTMENT") // APARTMENT, HOUSE, LAND, COMMERCIAL, INDUSTRIAL
  802 |  65 |   featured         Boolean           @default(false)
  803 |  66 |   images           Image[]
  804 |  67 |   contact_info     ContactInfo?
  805 |  68 |   features         PropertyFeature[]
  806 |  69 |   createdAt        DateTime          @default(now())
  807 |  70 |   updatedAt        DateTime          @updatedAt
  808 |  71 | 
  809 |  72 |   @@index([category])
  810 |  73 |   @@index([type])
  811 |  74 |   @@index([regionId])
  812 |  75 |   @@index([neighborhoodId])
  813 |  76 | }
  814 |  77 | 
  815 |  78 | model PropertyFeature {
  816 |  79 |   propertyId String
  817 |  80 |   featureId  Int
  818 |  81 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  819 |  82 |   feature    Feature  @relation(fields: [featureId], references: [id])
  820 |  83 |   createdAt  DateTime @default(now())
  821 |  84 |   updatedAt  DateTime @updatedAt
  822 |  85 | 
  823 |  86 |   @@id([propertyId, featureId])
  824 |  87 | }
  825 |  88 | 
  826 |  89 | model Image {
  827 |  90 |   id         String   @id @default(cuid())
  828 |  91 |   url        String
  829 |  92 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  830 |  93 |   propertyId String
  831 |  94 |   createdAt  DateTime @default(now())
  832 |  95 |   updatedAt  DateTime @updatedAt
  833 |  96 | }
  834 |  97 | 
  835 |  98 | model ContactInfo {
  836 |  99 |   id         String   @id @default(cuid())
  837 | 100 |   phone      String
  838 | 101 |   email      String
  839 | 102 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  840 | 103 |   propertyId String   @unique
  841 | 104 |   createdAt  DateTime @default(now())
  842 | 105 |   updatedAt  DateTime @updatedAt
  843 | 106 | }
  844 | 107 | 
  845 | 108 | model ContactMessage {
  846 | 109 |   id        String   @id @default(cuid())
  847 | 110 |   name      String
  848 | 111 |   email     String
  849 | 112 |   message   String
  850 | 113 |   isRead    Boolean  @default(false)
  851 | 114 |   createdAt DateTime @default(now())
  852 | 115 |   updatedAt DateTime @updatedAt
  853 | 116 | } 
  854 | 117 | 
  855 | 
  856 | 
  857 | --------------------------------------------------------------------------------
  858 | /apps/api/prisma/seed.ts:
  859 | --------------------------------------------------------------------------------
  860 |   1 | import { PrismaClient } from '@prisma/client';
  861 |   2 | import bcryptjs from 'bcryptjs';
  862 |   3 | import { randomUUID } from 'crypto';
  863 |   4 | 
  864 |   5 | const prisma = new PrismaClient();
  865 |   6 | 
  866 |   7 | // Data mapping constants
  867 |   8 | const CURRENCY_MAP = {
  868 |   9 |   euro: 'EUR',
  869 |  10 |   bgn: 'BGN',
  870 |  11 | } as const;
  871 |  12 | 
  872 |  13 | const CONSTRUCTION_TYPE_MAP = {
  873 |  14 |   brick: 'BRICK',
  874 |  15 |   epk: 'EPK',
  875 |  16 |   pk: 'PK',
  876 |  17 |   panel: 'PANEL',
  877 |  18 |   wood: 'WOOD_FLOOR',
  878 |  19 | } as const;
  879 |  20 | 
  880 |  21 | const FURNISHING_MAP = {
  881 |  22 |   furnished: 'FURNISHED',
  882 |  23 |   partially_furnished: 'PARTIALLY_FURNISHED',
  883 |  24 |   unfurnished: 'UNFURNISHED',
  884 |  25 | } as const;
  885 |  26 | 
  886 |  27 | const PROPERTY_TYPE_MAP = {
  887 |  28 |   apartment: 'APARTMENT',
  888 |  29 |   house: 'HOUSE',
  889 |  30 |   land: 'LAND',
  890 |  31 |   commercial: 'COMMERCIAL',
  891 |  32 |   industrial: 'INDUSTRIAL',
  892 |  33 | } as const;
  893 |  34 | 
  894 |  35 | const regions = [
  895 |  36 |   { id: 1, name: "главен път Е85" },
  896 |  37 |   { id: 2, name: "гр. Борово" },
  897 |  38 |   { id: 3, name: "гр. Бяла" },
  898 |  39 |   { id: 4, name: "гр. Ветово" },
  899 |  40 |   { id: 5, name: "гр. Глоджево" },
  900 |  41 |   { id: 6, name: "гр. Две могили" },
  901 |  42 |   { id: 7, name: "гр. Мартен" },
  902 |  43 |   { id: 8, name: "гр. Сеново" },
  903 |  44 |   { id: 9, name: "гр. Сливо поле" },
  904 |  45 |   { id: 10, name: "с. Бабово" },
  905 |  46 |   { id: 11, name: "с. Баниска" },
  906 |  47 |   { id: 12, name: "с. Басарбово" },
  907 |  48 |   { id: 13, name: "с. Батин" },
  908 |  49 |   { id: 14, name: "с. Батишница" },
  909 |  50 |   { id: 15, name: "с. Белцов" },
  910 |  51 |   { id: 16, name: "с. Беляново" },
  911 |  52 |   { id: 17, name: "с. Бистренци" },
  912 |  53 |   { id: 18, name: "с. Божичен" },
  913 |  54 |   { id: 19, name: "с. Борисово" },
  914 |  55 |   { id: 20, name: "с. Босилковци" },
  915 |  56 |   { id: 21, name: "с. Ботров" },
  916 |  57 |   { id: 22, name: "с. Брестовица" },
  917 |  58 |   { id: 23, name: "с. Бръшлен" },
  918 |  59 |   { id: 24, name: "с. Бъзовец" },
  919 |  60 |   { id: 25, name: "с. Бъзън" },
  920 |  61 |   { id: 26, name: "с. Волово" },
  921 |  62 |   { id: 27, name: "с. Голямо Враново" },
  922 |  63 |   { id: 28, name: "с. Горно Абланово" },
  923 |  64 |   { id: 29, name: "с. Джулюница" },
  924 |  65 |   { id: 30, name: "с. Долна Студена" },
  925 |  66 |   { id: 31, name: "с. Долно Абланово" },
  926 |  67 |   { id: 32, name: "с. Дряновец" },
  927 |  68 |   { id: 33, name: "с. Екзарх Йосиф" },
  928 |  69 |   { id: 34, name: "с. Иваново" },
  929 |  70 |   { id: 35, name: "с. Караманово" },
  930 |  71 |   { id: 36, name: "с. Каран Върбовка" },
  931 |  72 |   { id: 37, name: "с. Кацелово" },
  932 |  73 |   { id: 38, name: "с. Копривец" },
  933 |  74 |   { id: 39, name: "с. Кошарна" },
  934 |  75 |   { id: 40, name: "с. Кошов" },
  935 |  76 |   { id: 41, name: "с. Красен" },
  936 |  77 |   { id: 42, name: "с. Кривина" },
  937 |  78 |   { id: 43, name: "с. Кривня" },
  938 |  79 |   { id: 44, name: "с. Лом Черковна" },
  939 |  80 |   { id: 45, name: "с. Малко Враново" },
  940 |  81 |   { id: 46, name: "с. Мечка" },
  941 |  82 |   { id: 47, name: "с. Могилино" },
  942 |  83 |   { id: 48, name: "с. Николово" },
  943 |  84 |   { id: 49, name: "с. Нисово" },
  944 |  85 |   { id: 50, name: "с. Новград" },
  945 |  86 |   { id: 51, name: "с. Ново село" },
  946 |  87 |   { id: 52, name: "с. Обретеник" },
  947 |  88 |   { id: 53, name: "с. Острица" },
  948 |  89 |   { id: 54, name: "с. Пейчиново" },
  949 |  90 |   { id: 55, name: "с. Пепелина" },
  950 |  91 |   { id: 56, name: "с. Пет кладенци" },
  951 |  92 |   { id: 57, name: "с. Пиперково" },
  952 |  93 |   { id: 58, name: "с. Пиргово" },
  953 |  94 |   { id: 59, name: "с. Писанец" },
  954 |  95 |   { id: 60, name: "с. Полско Косово" },
  955 |  96 |   { id: 61, name: "с. Помен" },
  956 |  97 |   { id: 62, name: "с. Просена" },
  957 |  98 |   { id: 63, name: "с. Ряхово" },
  958 |  99 |   { id: 64, name: "с. Сандрово" },
  959 | 100 |   { id: 65, name: "с. Сваленик" },
  960 | 101 |   { id: 66, name: "с. Семерджиево" },
  961 | 102 |   { id: 67, name: "с. Смирненски" },
  962 | 103 |   { id: 68, name: "с. Стамболово" },
  963 | 104 |   { id: 69, name: "с. Стърмен" },
  964 | 105 |   { id: 70, name: "с. Табачка" },
  965 | 106 |   { id: 71, name: "с. Тетово" },
  966 | 107 |   { id: 72, name: "с. Тръстеник" },
  967 | 108 |   { id: 73, name: "с. Хотанца" },
  968 | 109 |   { id: 74, name: "с. Ценово" },
  969 | 110 |   { id: 75, name: "с. Церовец" },
  970 | 111 |   { id: 76, name: "с. Червен" },
  971 | 112 |   { id: 77, name: "с. Червена вода" },
  972 | 113 |   { id: 78, name: "с. Черешово" },
  973 | 114 |   { id: 79, name: "с. Чилнов" },
  974 | 115 |   { id: 80, name: "с. Широково" },
  975 | 116 |   { id: 81, name: "с. Щръклево" },
  976 | 117 |   { id: 82, name: "с. Юделник" },
  977 | 118 |   { id: 83, name: "с. Ястребово" }
  978 | 119 | ];
  979 | 120 | 
  980 | 121 | const neighborhoods = [
  981 | 122 |   { id: 1, name: "Алеи Възраждане" },
  982 | 123 |   { id: 2, name: "Басарбово" },
  983 | 124 |   { id: 3, name: "Веждата" },
  984 | 125 |   { id: 4, name: "Възраждане" },
  985 | 126 |   { id: 5, name: "Долапите" },
  986 | 127 |   { id: 6, name: "Дружба 1" },
  987 | 128 |   { id: 7, name: "Дружба 2" },
  988 | 129 |   { id: 8, name: "Дружба 3" },
  989 | 130 |   { id: 9, name: "Завод Найден Киров" },
  990 | 131 |   { id: 10, name: "Захарна фабрика" },
  991 | 132 |   { id: 11, name: "Здравец" },
  992 | 133 |   { id: 12, name: "Здравец Изток" },
  993 | 134 |   { id: 13, name: "Здравец Север 1" },
  994 | 135 |   { id: 14, name: "Здравец Север 2" },
  995 | 136 |   { id: 15, name: "КТМ" },
  996 | 137 |   { id: 16, name: "Мальовица" },
  997 | 138 |   { id: 17, name: "Мидия Енос" },
  998 | 139 |   { id: 18, name: "Нова промишлена зона" },
  999 | 140 |   { id: 19, name: "Новата махала" },
 1000 | 141 |   { id: 20, name: "Промишлена зона - Запад" },
 1001 | 142 |   { id: 21, name: "Промишлена зона - Изток" },
 1002 | 143 |   { id: 22, name: "Родина 1" },
 1003 | 144 |   { id: 23, name: "Родина 2" },
 1004 | 145 |   { id: 24, name: "Родина 3" },
 1005 | 146 |   { id: 25, name: "Родина 4" },
 1006 | 147 |   { id: 26, name: "Сарая" },
 1007 | 148 |   { id: 27, name: "Средна кула" },
 1008 | 149 |   { id: 28, name: "Товарна гара" },
 1009 | 150 |   { id: 29, name: "Тракцията" },
 1010 | 151 |   { id: 30, name: "Търговия на едро" },
 1011 | 152 |   { id: 31, name: "Хъшове" },
 1012 | 153 |   { id: 32, name: "Цветница" },
 1013 | 154 |   { id: 33, name: "Централен кооп. Пазар" },
 1014 | 155 |   { id: 34, name: "Централен южен район" },
 1015 | 156 |   { id: 35, name: "Център" },
 1016 | 157 |   { id: 36, name: "Чародейка - Север" },
 1017 | 158 |   { id: 37, name: "Чародейка - Юг" },
 1018 | 159 |   { id: 38, name: "Широк център" },
 1019 | 160 |   { id: 39, name: "Ялта" },
 1020 | 161 |   { id: 40, name: "в.з. Д. Басарбовски" },
 1021 | 162 |   { id: 41, name: "в.з. Касева Чешма" },
 1022 | 163 |   { id: 42, name: "в.з. Кръста" },
 1023 | 164 |   { id: 43, name: "в.з. Кулата" },
 1024 | 165 |   { id: 44, name: "в.з. Левента" },
 1025 | 166 |   { id: 45, name: "в.з. Липака" },
 1026 | 167 |   { id: 46, name: "в.з. Русофили" },
 1027 | 168 |   { id: 47, name: "в.з. Средна кула" },
 1028 | 169 |   { id: 48, name: "в.з. Трите гълъба" },
 1029 | 170 |   { id: 49, name: "Птицекомбинат" },
 1030 | 171 |   { id: 50, name: "с. Николово" }
 1031 | 172 | ];
 1032 | 173 | 
 1033 | 174 | const infrastructureFeatures = [
 1034 | 175 |   { name: "Ток", type: "INFRASTRUCTURE" },
 1035 | 176 |   { name: "Вода", type: "INFRASTRUCTURE" },
 1036 | 177 |   { name: "Ограда", type: "INFRASTRUCTURE" },
 1037 | 178 |   { name: "Асвалтов път", type: "INFRASTRUCTURE" },
 1038 | 179 |   { name: "Черен път", type: "INFRASTRUCTURE" }
 1039 | 180 | ];
 1040 | 181 | 
 1041 | 182 | const buildingFeatures = [
 1042 | 183 |   { name: "ТЕЦ", type: "BUILDING" },
 1043 | 184 |   { name: "Газ", type: "BUILDING" },
 1044 | 185 |   { name: "Климатик", type: "BUILDING" },
 1045 | 186 |   { name: "Локално парно", type: "BUILDING" },
 1046 | 187 |   { name: "В строеж", type: "BUILDING" },
 1047 | 188 |   { name: "С преход", type: "BUILDING" },
 1048 | 189 |   { name: "Асансьор", type: "BUILDING" },
 1049 | 190 |   { name: "Гараж", type: "BUILDING" },
 1050 | 191 |   { name: "Паркинг", type: "BUILDING" },
 1051 | 192 |   { name: "С действащ бизнес", type: "BUILDING" },
 1052 | 193 |   { name: "Видео наблюдение", type: "BUILDING" },
 1053 | 194 |   { name: "Охрана", type: "BUILDING" },
 1054 | 195 |   { name: "Саниран", type: "BUILDING" },
 1055 | 196 |   { name: "Тераса", type: "BUILDING" }
 1056 | 197 | ];
 1057 | 198 | 
 1058 | 199 | async function main() {
 1059 | 200 |   try {
 1060 | 201 |     // Create admin user
 1061 | 202 |     const salt = await bcryptjs.genSalt(10);
 1062 | 203 |     const hashedPassword = await bcryptjs.hash('admin123', salt);
 1063 | 204 | 
 1064 | 205 |     const admin = await prisma.user.upsert({
 1065 | 206 |       where: { email: 'admin@avalon.bg' },
 1066 | 207 |       update: {},
 1067 | 208 |       create: {
 1068 | 209 |         email: 'admin@avalon.bg',
 1069 | 210 |         name: 'Admin',
 1070 | 211 |         password: hashedPassword,
 1071 | 212 |         role: 'ADMIN',
 1072 | 213 |       },
 1073 | 214 |     });
 1074 | 215 | 
 1075 | 216 |     console.log('Created admin user:', admin.email);
 1076 | 217 | 
 1077 | 218 |     // Seed regions
 1078 | 219 |     console.log('Seeding regions...');
 1079 | 220 |     for (const region of regions) {
 1080 | 221 |       await prisma.$transaction([
 1081 | 222 |         prisma.$executeRaw`INSERT OR IGNORE INTO Region (id, name, createdAt, updatedAt) VALUES (${region.id}, ${region.name}, datetime('now'), datetime('now'))`
 1082 | 223 |       ]);
 1083 | 224 |     }
 1084 | 225 | 
 1085 | 226 |     // Seed neighborhoods
 1086 | 227 |     console.log('Seeding neighborhoods...');
 1087 | 228 |     for (const neighborhood of neighborhoods) {
 1088 | 229 |       await prisma.$transaction([
 1089 | 230 |         prisma.$executeRaw`INSERT OR IGNORE INTO Neighborhood (id, name, createdAt, updatedAt) VALUES (${neighborhood.id}, ${neighborhood.name}, datetime('now'), datetime('now'))`
 1090 | 231 |       ]);
 1091 | 232 |     }
 1092 | 233 | 
 1093 | 234 |     // Seed features
 1094 | 235 |     console.log('Seeding features...');
 1095 | 236 |     const allFeatures = [...infrastructureFeatures, ...buildingFeatures];
 1096 | 237 |     for (const [index, feature] of allFeatures.entries()) {
 1097 | 238 |       await prisma.$transaction([
 1098 | 239 |         prisma.$executeRaw`INSERT OR IGNORE INTO Feature (id, name, type, createdAt, updatedAt) VALUES (${index + 1}, ${feature.name}, ${feature.type}, datetime('now'), datetime('now'))`
 1099 | 240 |       ]);
 1100 | 241 |     }
 1101 | 242 | 
 1102 | 243 |     // Create sample property
 1103 | 244 |     console.log('Creating sample property...');
 1104 | 245 |     const propertyId = await prisma.$transaction(async (tx) => {
 1105 | 246 |       // Create property
 1106 | 247 |       const result = await tx.$queryRaw<{ id: string }[]>`
 1107 | 248 |         INSERT INTO Property (
 1108 | 249 |           id, title, description, price, currency, area_sqm, floor,
 1109 | 250 |           total_floors, construction_type, furnishing, location_type,
 1110 | 251 |           neighborhoodId, category, type, featured, has_regulation,
 1111 | 252 |           createdAt, updatedAt
 1112 | 253 |         ) VALUES (
 1113 | 254 |           ${randomUUID()},
 1114 | 255 |           'Магазин, кв. Възраждане, 267000 Е',
 1115 | 256 |           'Агенция за недвижими имоти АВАЛОН Ви представя, МАГАЗИН с голяма витрина и лице към улица 15 метра...',
 1116 | 257 |           267000,
 1117 | 258 |           ${CURRENCY_MAP.euro},
 1118 | 259 |           149,
 1119 | 260 |           0,
 1120 | 261 |           1,
 1121 | 262 |           ${CONSTRUCTION_TYPE_MAP.brick},
 1122 | 263 |           ${FURNISHING_MAP.unfurnished},
 1123 | 264 |           'CITY',
 1124 | 265 |           4,
 1125 | 266 |           'SALE',
 1126 | 267 |           ${PROPERTY_TYPE_MAP.commercial},
 1127 | 268 |           false,
 1128 | 269 |           false,
 1129 | 270 |           datetime('now'),
 1130 | 271 |           datetime('now')
 1131 | 272 |         ) RETURNING id;
 1132 | 273 |       `;
 1133 | 274 | 
 1134 | 275 |       const id = result[0].id;
 1135 | 276 | 
 1136 | 277 |       // Create features
 1137 | 278 |       await tx.$executeRaw`
 1138 | 279 |         INSERT INTO PropertyFeature (propertyId, featureId, createdAt, updatedAt)
 1139 | 280 |         VALUES 
 1140 | 281 |           (${id}, 1, datetime('now'), datetime('now')),
 1141 | 282 |           (${id}, 2, datetime('now'), datetime('now')),
 1142 | 283 |           (${id}, 4, datetime('now'), datetime('now'));
 1143 | 284 |       `;
 1144 | 285 | 
 1145 | 286 |       // Create image
 1146 | 287 |       await tx.$executeRaw`
 1147 | 288 |         INSERT INTO Image (id, url, propertyId, createdAt, updatedAt)
 1148 | 289 |         VALUES (${randomUUID()}, '/uploads/properties/2803.jpg', ${id}, datetime('now'), datetime('now'));
 1149 | 290 |       `;
 1150 | 291 | 
 1151 | 292 |       // Create contact info
 1152 | 293 |       await tx.$executeRaw`
 1153 | 294 |         INSERT INTO ContactInfo (id, phone, email, propertyId, createdAt, updatedAt)
 1154 | 295 |         VALUES (${randomUUID()}, '0895 606 165', 'agent@avalon.bg', ${id}, datetime('now'), datetime('now'));
 1155 | 296 |       `;
 1156 | 297 | 
 1157 | 298 |       return id;
 1158 | 299 |     });
 1159 | 300 | 
 1160 | 301 |     console.log('Created sample property:', propertyId);
 1161 | 302 | 
 1162 | 303 |   } catch (e) {
 1163 | 304 |     console.error(e);
 1164 | 305 |     throw e;
 1165 | 306 |   } finally {
 1166 | 307 |     await prisma.$disconnect();
 1167 | 308 |   }
 1168 | 309 | }
 1169 | 310 | 
 1170 | 311 | main(); 
 1171 | 312 | 
 1172 | 
 1173 | 
 1174 | --------------------------------------------------------------------------------
 1175 | /apps/api/scripts/fix-property-categories.ts:
 1176 | --------------------------------------------------------------------------------
 1177 |  1 | import { PrismaClient } from '@prisma/client';
 1178 |  2 | 
 1179 |  3 | const prisma = new PrismaClient();
 1180 |  4 | 
 1181 |  5 | async function main() {
 1182 |  6 |   try {
 1183 |  7 |     // Update any properties with incorrect category values
 1184 |  8 |     await prisma.property.updateMany({
 1185 |  9 |       where: {
 1186 | 10 |         category: 'Residential',
 1187 | 11 |       },
 1188 | 12 |       data: {
 1189 | 13 |         category: 'SALE',
 1190 | 14 |       },
 1191 | 15 |     });
 1192 | 16 | 
 1193 | 17 |     console.log('Successfully updated property categories');
 1194 | 18 |   } catch (error) {
 1195 | 19 |     console.error('Error updating property categories:', error);
 1196 | 20 |     process.exit(1);
 1197 | 21 |   } finally {
 1198 | 22 |     await prisma.$disconnect();
 1199 | 23 |   }
 1200 | 24 | }
 1201 | 25 | 
 1202 | 26 | main(); 
 1203 | 27 | 
 1204 | 
 1205 | 
 1206 | --------------------------------------------------------------------------------
 1207 | /apps/api/src/config/multer.ts:
 1208 | --------------------------------------------------------------------------------
 1209 |  1 | import multer, { FileFilterCallback } from 'multer';
 1210 |  2 | import path from 'path';
 1211 |  3 | import { Request } from 'express';
 1212 |  4 | import { AppError } from '../middleware/error';
 1213 |  5 | 
 1214 |  6 | type DestinationCallback = (error: Error | null, destination: string) => void;
 1215 |  7 | type FileNameCallback = (error: Error | null, filename: string) => void;
 1216 |  8 | 
 1217 |  9 | // Configure multer for image uploads
 1218 | 10 | const storage = multer.diskStorage({
 1219 | 11 |   destination: (_req: Request, _file: Express.Multer.File, cb: DestinationCallback) => {
 1220 | 12 |     cb(null, path.join(process.cwd(), 'uploads/properties'));
 1221 | 13 |   },
 1222 | 14 |   filename: (_req: Request, file: Express.Multer.File, cb: FileNameCallback) => {
 1223 | 15 |     const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1e9);
 1224 | 16 |     cb(null, uniqueSuffix + path.extname(file.originalname));
 1225 | 17 |   },
 1226 | 18 | });
 1227 | 19 | 
 1228 | 20 | const fileFilter = (_req: Request, file: Express.Multer.File, cb: FileFilterCallback) => {
 1229 | 21 |   const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
 1230 | 22 |   if (!allowedTypes.includes(file.mimetype)) {
 1231 | 23 |     cb(new AppError(400, 'Invalid file type. Only JPEG, PNG and WebP are allowed'));
 1232 | 24 |     return;
 1233 | 25 |   }
 1234 | 26 |   cb(null, true);
 1235 | 27 | };
 1236 | 28 | 
 1237 | 29 | export const upload = multer({
 1238 | 30 |   storage,
 1239 | 31 |   fileFilter,
 1240 | 32 |   limits: {
 1241 | 33 |     fileSize: 10 * 1024 * 1024, // 10MB
 1242 | 34 |   },
 1243 | 35 | }); 
 1244 | 36 | 
 1245 | 
 1246 | 
 1247 | --------------------------------------------------------------------------------
 1248 | /apps/api/src/index.ts:
 1249 | --------------------------------------------------------------------------------
 1250 | 1 | import app from './server';
 1251 | 2 | 
 1252 | 3 | const port = process.env.PORT || 3001;
 1253 | 4 | app.listen(port, () => {
 1254 | 5 |   console.log(`Server is running on port ${port}`);
 1255 | 6 | }); 
 1256 | 7 | 
 1257 | 
 1258 | 
 1259 | --------------------------------------------------------------------------------
 1260 | /apps/api/src/lib/contact.ts:
 1261 | --------------------------------------------------------------------------------
 1262 |  1 | import nodemailer from 'nodemailer';
 1263 |  2 | import { ContactFormData } from '../types/contact';
 1264 |  3 | import { AppError } from '../middleware/error';
 1265 |  4 | 
 1266 |  5 | // Configure nodemailer with environment variables
 1267 |  6 | const transporter = nodemailer.createTransport({
 1268 |  7 |   host: process.env.SMTP_HOST,
 1269 |  8 |   port: parseInt(process.env.SMTP_PORT || '587'),
 1270 |  9 |   secure: process.env.SMTP_SECURE === 'true',
 1271 | 10 |   auth: {
 1272 | 11 |     user: process.env.SMTP_USER,
 1273 | 12 |     pass: process.env.SMTP_PASS,
 1274 | 13 |   },
 1275 | 14 | });
 1276 | 15 | 
 1277 | 16 | export async function verifyRecaptcha(token: string): Promise<boolean> {
 1278 | 17 |   try {
 1279 | 18 |     const response = await fetch('https://www.google.com/recaptcha/api/siteverify', {
 1280 | 19 |       method: 'POST',
 1281 | 20 |       headers: {
 1282 | 21 |         'Content-Type': 'application/x-www-form-urlencoded',
 1283 | 22 |       },
 1284 | 23 |       body: new URLSearchParams({
 1285 | 24 |         secret: process.env.RECAPTCHA_SECRET_KEY || '',
 1286 | 25 |         response: token,
 1287 | 26 |       }),
 1288 | 27 |     });
 1289 | 28 | 
 1290 | 29 |     const data = await response.json();
 1291 | 30 |     return data.success;
 1292 | 31 |   } catch (error) {
 1293 | 32 |     console.error('reCAPTCHA verification failed:', error);
 1294 | 33 |     return false;
 1295 | 34 |   }
 1296 | 35 | }
 1297 | 36 | 
 1298 | 37 | export async function sendContactEmail(formData: ContactFormData & { recaptchaToken?: string }): Promise<void> {
 1299 | 38 |   const { name, email, message } = formData;
 1300 | 39 | 
 1301 | 40 |   // Verify reCAPTCHA token if provided
 1302 | 41 |   if (formData.recaptchaToken) {
 1303 | 42 |     const isValidRecaptcha = await verifyRecaptcha(formData.recaptchaToken);
 1304 | 43 |     if (!isValidRecaptcha) {
 1305 | 44 |       throw new AppError(400, 'reCAPTCHA verification failed');
 1306 | 45 |     }
 1307 | 46 |   }
 1308 | 47 | 
 1309 | 48 |   try {
 1310 | 49 |     // Send email to admin
 1311 | 50 |     await transporter.sendMail({
 1312 | 51 |       from: process.env.SMTP_FROM,
 1313 | 52 |       to: process.env.ADMIN_EMAIL,
 1314 | 53 |       subject: `New Contact Form Submission from ${name}`,
 1315 | 54 |       html: `
 1316 | 55 |         <h2>New Contact Form Submission</h2>
 1317 | 56 |         <p><strong>Name:</strong> ${name}</p>
 1318 | 57 |         <p><strong>Email:</strong> ${email}</p>
 1319 | 58 |         <p><strong>Message:</strong></p>
 1320 | 59 |         <p>${message}</p>
 1321 | 60 |       `,
 1322 | 61 |     });
 1323 | 62 | 
 1324 | 63 |     // Send confirmation email to user
 1325 | 64 |     await transporter.sendMail({
 1326 | 65 |       from: process.env.SMTP_FROM,
 1327 | 66 |       to: email,
 1328 | 67 |       subject: 'Thank you for contacting us',
 1329 | 68 |       html: `
 1330 | 69 |         <h2>Thank you for contacting us</h2>
 1331 | 70 |         <p>Dear ${name},</p>
 1332 | 71 |         <p>We have received your message and will get back to you as soon as possible.</p>
 1333 | 72 |         <p>Best regards,<br>The Property AI Team</p>
 1334 | 73 |       `,
 1335 | 74 |     });
 1336 | 75 |   } catch (error) {
 1337 | 76 |     console.error('Failed to send email:', error);
 1338 | 77 |     throw new AppError(500, 'Failed to send email');
 1339 | 78 |   }
 1340 | 79 | } 
 1341 | 80 | 
 1342 | 
 1343 | 
 1344 | --------------------------------------------------------------------------------
 1345 | /apps/api/src/lib/logger.ts:
 1346 | --------------------------------------------------------------------------------
 1347 |  1 | import winston from 'winston';
 1348 |  2 | import path from 'path';
 1349 |  3 | 
 1350 |  4 | const logDir = 'logs';
 1351 |  5 | const { combine, timestamp, printf, colorize } = winston.format;
 1352 |  6 | 
 1353 |  7 | // Custom log format
 1354 |  8 | const logFormat = printf(({ level, message, timestamp, ...metadata }) => {
 1355 |  9 |   let msg = `${timestamp} [${level}] : ${message}`;
 1356 | 10 |   if (Object.keys(metadata).length > 0) {
 1357 | 11 |     msg += ` ${JSON.stringify(metadata)}`;
 1358 | 12 |   }
 1359 | 13 |   return msg;
 1360 | 14 | });
 1361 | 15 | 
 1362 | 16 | // Create logger instance
 1363 | 17 | const logger = winston.createLogger({
 1364 | 18 |   level: process.env.NODE_ENV === 'production' ? 'info' : 'debug',
 1365 | 19 |   format: combine(
 1366 | 20 |     timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
 1367 | 21 |     logFormat
 1368 | 22 |   ),
 1369 | 23 |   transports: [
 1370 | 24 |     // Console transport with colors
 1371 | 25 |     new winston.transports.Console({
 1372 | 26 |       format: combine(
 1373 | 27 |         colorize(),
 1374 | 28 |         timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
 1375 | 29 |         logFormat
 1376 | 30 |       ),
 1377 | 31 |     }),
 1378 | 32 |     // File transport for errors
 1379 | 33 |     new winston.transports.File({
 1380 | 34 |       filename: path.join(logDir, 'error.log'),
 1381 | 35 |       level: 'error',
 1382 | 36 |       maxsize: 5242880, // 5MB
 1383 | 37 |       maxFiles: 5,
 1384 | 38 |     }),
 1385 | 39 |     // File transport for all logs
 1386 | 40 |     new winston.transports.File({
 1387 | 41 |       filename: path.join(logDir, 'combined.log'),
 1388 | 42 |       maxsize: 5242880, // 5MB
 1389 | 43 |       maxFiles: 5,
 1390 | 44 |     }),
 1391 | 45 |   ],
 1392 | 46 | });
 1393 | 47 | 
 1394 | 48 | // Create a stream object for Morgan
 1395 | 49 | export const stream = {
 1396 | 50 |   write: (message: string) => {
 1397 | 51 |     logger.info(message.trim());
 1398 | 52 |   },
 1399 | 53 | };
 1400 | 54 | 
 1401 | 55 | export default logger; 
 1402 | 56 | 
 1403 | 
 1404 | 
 1405 | --------------------------------------------------------------------------------
 1406 | /apps/api/src/lib/prisma.ts:
 1407 | --------------------------------------------------------------------------------
 1408 | 1 | import { PrismaClient } from '@prisma/client';
 1409 | 2 | 
 1410 | 3 | const prisma = new PrismaClient();
 1411 | 4 | 
 1412 | 5 | export default prisma; 
 1413 | 6 | 
 1414 | 
 1415 | 
 1416 | --------------------------------------------------------------------------------
 1417 | /apps/api/src/middleware/auth.ts:
 1418 | --------------------------------------------------------------------------------
 1419 |  1 | import { Request, Response, NextFunction } from 'express';
 1420 |  2 | import jwt from 'jsonwebtoken';
 1421 |  3 | import prisma from '../lib/prisma';
 1422 |  4 | import { AppError } from './error';
 1423 |  5 | import { User, UserRole } from '@avalon/shared-types';
 1424 |  6 | 
 1425 |  7 | // Extend Express Request type to include user
 1426 |  8 | declare global {
 1427 |  9 |   namespace Express {
 1428 | 10 |     interface Request {
 1429 | 11 |       user?: User;
 1430 | 12 |     }
 1431 | 13 |   }
 1432 | 14 | }
 1433 | 15 | 
 1434 | 16 | interface JwtPayload {
 1435 | 17 |   id: string;
 1436 | 18 | }
 1437 | 19 | 
 1438 | 20 | const mapUserToResponse = (user: { 
 1439 | 21 |   id: string; 
 1440 | 22 |   name: string; 
 1441 | 23 |   email: string; 
 1442 | 24 |   role: string;
 1443 | 25 |   createdAt: Date;
 1444 | 26 | }): User => ({
 1445 | 27 |   id: user.id,
 1446 | 28 |   name: user.name,
 1447 | 29 |   email: user.email,
 1448 | 30 |   role: user.role as UserRole,
 1449 | 31 |   createdAt: user.createdAt.toISOString()
 1450 | 32 | });
 1451 | 33 | 
 1452 | 34 | // Protect routes
 1453 | 35 | export const protect = async (req: Request, res: Response, next: NextFunction) => {
 1454 | 36 |   try {
 1455 | 37 |     // Get token from header
 1456 | 38 |     const token = req.headers.authorization?.replace('Bearer ', '');
 1457 | 39 | 
 1458 | 40 |     if (!token) {
 1459 | 41 |       throw new AppError(401, 'Please log in to access this resource');
 1460 | 42 |     }
 1461 | 43 | 
 1462 | 44 |     // Verify token
 1463 | 45 |     const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JwtPayload;
 1464 | 46 | 
 1465 | 47 |     // Get user from token
 1466 | 48 |     const user = await prisma.user.findUnique({
 1467 | 49 |       where: { id: decoded.id },
 1468 | 50 |       select: {
 1469 | 51 |         id: true,
 1470 | 52 |         name: true,
 1471 | 53 |         email: true,
 1472 | 54 |         role: true,
 1473 | 55 |         createdAt: true
 1474 | 56 |       },
 1475 | 57 |     });
 1476 | 58 | 
 1477 | 59 |     if (!user) {
 1478 | 60 |       throw new AppError(401, 'The user belonging to this token no longer exists');
 1479 | 61 |     }
 1480 | 62 | 
 1481 | 63 |     // Add user to request
 1482 | 64 |     req.user = mapUserToResponse(user);
 1483 | 65 |     next();
 1484 | 66 |   } catch (error) {
 1485 | 67 |     next(error);
 1486 | 68 |   }
 1487 | 69 | };
 1488 | 70 | 
 1489 | 71 | // Restrict to certain roles
 1490 | 72 | export const restrictTo = (role: UserRole) => {
 1491 | 73 |   return (req: Request, res: Response, next: NextFunction) => {
 1492 | 74 |     if (req.user?.role !== role) {
 1493 | 75 |       throw new AppError(403, 'You do not have permission to perform this action');
 1494 | 76 |     }
 1495 | 77 |     next();
 1496 | 78 |   };
 1497 | 79 | }; 
 1498 | 80 | 
 1499 | 
 1500 | 
 1501 | --------------------------------------------------------------------------------
 1502 | /apps/api/src/middleware/error.ts:
 1503 | --------------------------------------------------------------------------------
 1504 |  1 | import { Request, Response, NextFunction } from 'express';
 1505 |  2 | import { ZodError } from 'zod';
 1506 |  3 | import { Prisma } from '@prisma/client';
 1507 |  4 | 
 1508 |  5 | export class AppError extends Error {
 1509 |  6 |   constructor(
 1510 |  7 |     public statusCode: number,
 1511 |  8 |     message: string
 1512 |  9 |   ) {
 1513 | 10 |     super(message);
 1514 | 11 |     this.name = 'AppError';
 1515 | 12 |   }
 1516 | 13 | }
 1517 | 14 | 
 1518 | 15 | export const errorHandler = (
 1519 | 16 |   err: Error,
 1520 | 17 |   _req: Request,
 1521 | 18 |   res: Response,
 1522 | 19 |   _next: NextFunction
 1523 | 20 | ) => {
 1524 | 21 |   console.error('Error:', err);
 1525 | 22 | 
 1526 | 23 |   // Custom application error
 1527 | 24 |   if (err instanceof AppError) {
 1528 | 25 |     return res.status(err.statusCode).json({
 1529 | 26 |       status: 'error',
 1530 | 27 |       message: err.message,
 1531 | 28 |     });
 1532 | 29 |   }
 1533 | 30 | 
 1534 | 31 |   // Zod validation error
 1535 | 32 |   if (err instanceof ZodError) {
 1536 | 33 |     return res.status(400).json({
 1537 | 34 |       status: 'error',
 1538 | 35 |       message: 'Validation error',
 1539 | 36 |       errors: err.errors,
 1540 | 37 |     });
 1541 | 38 |   }
 1542 | 39 | 
 1543 | 40 |   // Prisma error
 1544 | 41 |   if (err instanceof Prisma.PrismaClientKnownRequestError) {
 1545 | 42 |     if (err.code === 'P2002') {
 1546 | 43 |       return res.status(409).json({
 1547 | 44 |         status: 'error',
 1548 | 45 |         message: 'A record with this value already exists',
 1549 | 46 |       });
 1550 | 47 |     }
 1551 | 48 |   }
 1552 | 49 | 
 1553 | 50 |   // Default error
 1554 | 51 |   return res.status(500).json({
 1555 | 52 |     status: 'error',
 1556 | 53 |     message: 'Internal server error',
 1557 | 54 |   });
 1558 | 55 | }; 
 1559 | 56 | 
 1560 | 
 1561 | 
 1562 | --------------------------------------------------------------------------------
 1563 | /apps/api/src/middleware/rateLimiter.ts:
 1564 | --------------------------------------------------------------------------------
 1565 |  1 | import rateLimit from 'express-rate-limit';
 1566 |  2 | import { AppError } from './error';
 1567 |  3 | import logger from '../lib/logger';
 1568 |  4 | 
 1569 |  5 | // Rate limiter for contact form
 1570 |  6 | export const contactFormLimiter = rateLimit({
 1571 |  7 |   windowMs: 60 * 60 * 1000, // 1 hour window
 1572 |  8 |   max: 5, // limit each IP to 5 requests per windowMs
 1573 |  9 |   message: 'Too many contact requests from this IP, please try again after an hour',
 1574 | 10 |   handler: (req, res, next, options) => {
 1575 | 11 |     logger.warn(`Rate limit exceeded for IP: ${req.ip}`);
 1576 | 12 |     next(new AppError(429, options.message));
 1577 | 13 |   },
 1578 | 14 |   standardHeaders: true, // Return rate limit info in the `RateLimit-*` headers
 1579 | 15 |   legacyHeaders: false, // Disable the `X-RateLimit-*` headers
 1580 | 16 | });
 1581 | 17 | 
 1582 | 18 | // General API rate limiter
 1583 | 19 | export const apiLimiter = rateLimit({
 1584 | 20 |   windowMs: 15 * 60 * 1000, // 15 minutes
 1585 | 21 |   max: 100, // limit each IP to 100 requests per windowMs
 1586 | 22 |   message: 'Too many requests from this IP, please try again after 15 minutes',
 1587 | 23 |   handler: (req, res, next, options) => {
 1588 | 24 |     logger.warn(`API rate limit exceeded for IP: ${req.ip}`);
 1589 | 25 |     next(new AppError(429, options.message));
 1590 | 26 |   },
 1591 | 27 |   standardHeaders: true,
 1592 | 28 |   legacyHeaders: false,
 1593 | 29 | }); 
 1594 | 30 | 
 1595 | 
 1596 | 
 1597 | --------------------------------------------------------------------------------
 1598 | /apps/api/src/routes/__tests__/properties.test.ts:
 1599 | --------------------------------------------------------------------------------
 1600 |   1 | import { describe, it, expect, beforeAll, afterAll } from '@jest/globals';
 1601 |   2 | import request from 'supertest';
 1602 |   3 | import bcrypt from 'bcryptjs';
 1603 |   4 | import app from '../../server';
 1604 |   5 | import prisma from '../../lib/prisma';
 1605 |   6 | import jwt from 'jsonwebtoken';
 1606 |   7 | import { PropertyType, PropertyCategory, Currency, LocationType, UserRole } from '@avalon/shared-types';
 1607 |   8 | 
 1608 |   9 | describe('Property Routes', () => {
 1609 |  10 |   let adminToken: string;
 1610 |  11 | 
 1611 |  12 |   beforeAll(async () => {
 1612 |  13 |     // Create an admin user for testing
 1613 |  14 |     const hashedPassword = await bcrypt.hash('password123', 10);
 1614 |  15 |     const admin = await prisma.user.create({
 1615 |  16 |       data: {
 1616 |  17 |         name: 'Admin User',
 1617 |  18 |         email: 'admin@test.com',
 1618 |  19 |         password: hashedPassword,
 1619 |  20 |         role: 'ADMIN',
 1620 |  21 |       },
 1621 |  22 |     });
 1622 |  23 | 
 1623 |  24 |     // Get JWT token for admin
 1624 |  25 |     const response = await request(app)
 1625 |  26 |       .post('/api/auth/login')
 1626 |  27 |       .send({
 1627 |  28 |         email: 'admin@test.com',
 1628 |  29 |         password: 'password123',
 1629 |  30 |       });
 1630 |  31 | 
 1631 |  32 |     console.log('Login response:', response.body);
 1632 |  33 |     adminToken = response.body.data.token;
 1633 |  34 |   });
 1634 |  35 | 
 1635 |  36 |   afterAll(async () => {
 1636 |  37 |     // Clean up test data
 1637 |  38 |     await prisma.user.deleteMany({
 1638 |  39 |       where: {
 1639 |  40 |         email: 'admin@test.com',
 1640 |  41 |       },
 1641 |  42 |     });
 1642 |  43 |   });
 1643 |  44 | 
 1644 |  45 |   describe('GET /properties', () => {
 1645 |  46 |     it('should return a list of properties', async () => {
 1646 |  47 |       const response = await request(app)
 1647 |  48 |         .get('/api/properties')
 1648 |  49 |         .expect(200);
 1649 |  50 | 
 1650 |  51 |       expect(response.body.status).toBe('success');
 1651 |  52 |       expect(Array.isArray(response.body.data.data)).toBe(true);
 1652 |  53 |     });
 1653 |  54 | 
 1654 |  55 |     it('should filter properties by price range', async () => {
 1655 |  56 |       const response = await request(app)
 1656 |  57 |         .get('/api/properties')
 1657 |  58 |         .query({ min_price: '100000', max_price: '500000' })
 1658 |  59 |         .expect(200);
 1659 |  60 | 
 1660 |  61 |       expect(response.body.status).toBe('success');
 1661 |  62 |       expect(Array.isArray(response.body.data.data)).toBe(true);
 1662 |  63 |     });
 1663 |  64 |   });
 1664 |  65 | 
 1665 |  66 |   describe('POST /properties', () => {
 1666 |  67 |     it('should create a new property when authenticated as admin', async () => {
 1667 |  68 |       const propertyData = {
 1668 |  69 |         title: 'Test Property',
 1669 |  70 |         description: 'A test property description',
 1670 |  71 |         price: 200000,
 1671 |  72 |         currency: Currency.USD,
 1672 |  73 |         area_sqm: 120,
 1673 |  74 |         type: PropertyType.APARTMENT,
 1674 |  75 |         category: PropertyCategory.SALE,
 1675 |  76 |         location_type: LocationType.CITY,
 1676 |  77 |         contact_info: {
 1677 |  78 |           phone: '+1234567890',
 1678 |  79 |           email: 'contact@test.com'
 1679 |  80 |         }
 1680 |  81 |       };
 1681 |  82 | 
 1682 |  83 |       const response = await request(app)
 1683 |  84 |         .post('/api/properties')
 1684 |  85 |         .set('Authorization', `Bearer ${adminToken}`)
 1685 |  86 |         .field('title', propertyData.title)
 1686 |  87 |         .field('description', propertyData.description)
 1687 |  88 |         .field('price', propertyData.price.toString())
 1688 |  89 |         .field('currency', propertyData.currency)
 1689 |  90 |         .field('area_sqm', propertyData.area_sqm.toString())
 1690 |  91 |         .field('type', propertyData.type)
 1691 |  92 |         .field('category', propertyData.category)
 1692 |  93 |         .field('location_type', propertyData.location_type)
 1693 |  94 |         .field('contact_info', JSON.stringify(propertyData.contact_info))
 1694 |  95 |         .expect(201);
 1695 |  96 | 
 1696 |  97 |       console.log('Create property response:', response.body);
 1697 |  98 |       expect(response.body.status).toBe('success');
 1698 |  99 |       expect(response.body.data.property).toBeDefined();
 1699 | 100 |       expect(response.body.data.property.title).toBe(propertyData.title);
 1700 | 101 |     });
 1701 | 102 | 
 1702 | 103 |     it('should return 401 when not authenticated', async () => {
 1703 | 104 |       const propertyData = {
 1704 | 105 |         title: 'Test Property',
 1705 | 106 |         description: 'A test property description',
 1706 | 107 |         price: 200000,
 1707 | 108 |         currency: Currency.USD,
 1708 | 109 |         area_sqm: 120,
 1709 | 110 |         type: PropertyType.APARTMENT,
 1710 | 111 |         category: PropertyCategory.SALE,
 1711 | 112 |         location_type: LocationType.CITY,
 1712 | 113 |         contact_info: {
 1713 | 114 |           phone: '+1234567890',
 1714 | 115 |           email: 'contact@test.com'
 1715 | 116 |         }
 1716 | 117 |       };
 1717 | 118 | 
 1718 | 119 |       await request(app)
 1719 | 120 |         .post('/api/properties')
 1720 | 121 |         .field('title', propertyData.title)
 1721 | 122 |         .field('description', propertyData.description)
 1722 | 123 |         .field('price', propertyData.price.toString())
 1723 | 124 |         .field('currency', propertyData.currency)
 1724 | 125 |         .field('area_sqm', propertyData.area_sqm.toString())
 1725 | 126 |         .field('type', propertyData.type)
 1726 | 127 |         .field('category', propertyData.category)
 1727 | 128 |         .field('location_type', propertyData.location_type)
 1728 | 129 |         .field('contact_info', JSON.stringify(propertyData.contact_info))
 1729 | 130 |         .expect(401);
 1730 | 131 |     });
 1731 | 132 |   });
 1732 | 133 | }); 
 1733 | 134 | 
 1734 | 
 1735 | 
 1736 | --------------------------------------------------------------------------------
 1737 | /apps/api/src/routes/__tests__/setup.ts:
 1738 | --------------------------------------------------------------------------------
 1739 |  1 | import { describe, it, expect } from '@jest/globals';
 1740 |  2 | 
 1741 |  3 | // Set test environment variables
 1742 |  4 | process.env.NODE_ENV = 'test';
 1743 |  5 | process.env.JWT_SECRET = 'test-secret-key';
 1744 |  6 | process.env.JWT_EXPIRES_IN = '30d';
 1745 |  7 | process.env.DATABASE_URL = 'file:./test.db';
 1746 |  8 | 
 1747 |  9 | // Configure test timeouts
 1748 | 10 | jest.setTimeout(30000);
 1749 | 11 | 
 1750 | 12 | describe('Test Environment Setup', () => {
 1751 | 13 |   it('should have correct environment variables', () => {
 1752 | 14 |     expect(process.env.NODE_ENV).toBe('test');
 1753 | 15 |     expect(process.env.JWT_SECRET).toBe('test-secret-key');
 1754 | 16 |     expect(process.env.JWT_EXPIRES_IN).toBe('30d');
 1755 | 17 |     expect(process.env.DATABASE_URL).toBe('file:./test.db');
 1756 | 18 |   });
 1757 | 19 | });
 1758 | 20 | 
 1759 | 21 | describe('Setup', () => {
 1760 | 22 |   it('should pass', () => {
 1761 | 23 |     expect(true).toBe(true);
 1762 | 24 |   });
 1763 | 25 | }); 
 1764 | 26 | 
 1765 | 
 1766 | 
 1767 | --------------------------------------------------------------------------------
 1768 | /apps/api/src/routes/admin.ts:
 1769 | --------------------------------------------------------------------------------
 1770 |   1 | import { Router, Response } from 'express';
 1771 |   2 | import { z } from 'zod';
 1772 |   3 | import prisma from '../lib/prisma';
 1773 |   4 | import { protect, restrictTo } from '../middleware/auth';
 1774 |   5 | import { AppError } from '../middleware/error';
 1775 |   6 | import { upload } from '../config/multer';
 1776 |   7 | import { propertySchema } from './properties';
 1777 |   8 | import { 
 1778 |   9 |   ApiSuccessResponse, 
 1779 |  10 |   ApiErrorResponse,
 1780 |  11 |   ApiErrorCode,
 1781 |  12 |   UserRole,
 1782 |  13 |   User,
 1783 |  14 |   Property,
 1784 |  15 |   AdminStatsResponse,
 1785 |  16 |   PropertiesResponse,
 1786 |  17 |   PropertyResponse,
 1787 |  18 |   CreateUserInput,
 1788 |  19 |   UpdateUserInput,
 1789 |  20 |   UsersResponse,
 1790 |  21 |   UserResponse
 1791 |  22 | } from '@avalon/shared-types';
 1792 |  23 | 
 1793 |  24 | const router = Router();
 1794 |  25 | 
 1795 |  26 | // User schema for validation
 1796 |  27 | const userSchema = z.object({
 1797 |  28 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 1798 |  29 |   email: z.string().email('Invalid email address'),
 1799 |  30 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 1800 |  31 |   role: z.nativeEnum(UserRole).default(UserRole.USER),
 1801 |  32 | }) satisfies z.ZodType<CreateUserInput>;
 1802 |  33 | 
 1803 |  34 | const handleError = (error: unknown, res: Response) => {
 1804 |  35 |   if (error instanceof z.ZodError) {
 1805 |  36 |     const response: ApiErrorResponse = {
 1806 |  37 |       status: 'error',
 1807 |  38 |       message: 'Invalid input data',
 1808 |  39 |       code: ApiErrorCode.VALIDATION_ERROR,
 1809 |  40 |       errors: error.errors.reduce((acc, err) => {
 1810 |  41 |         const path = err.path.join('.');
 1811 |  42 |         acc[path] = [err.message];
 1812 |  43 |         return acc;
 1813 |  44 |       }, {} as Record<string, string[]>)
 1814 |  45 |     };
 1815 |  46 |     res.status(400).json(response);
 1816 |  47 |   } else if (error instanceof AppError) {
 1817 |  48 |     const response: ApiErrorResponse = {
 1818 |  49 |       status: 'error',
 1819 |  50 |       message: error.message,
 1820 |  51 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 1821 |  52 |     };
 1822 |  53 |     res.status(error.statusCode).json(response);
 1823 |  54 |   } else {
 1824 |  55 |     console.error(error);
 1825 |  56 |     const response: ApiErrorResponse = {
 1826 |  57 |       status: 'error',
 1827 |  58 |       message: 'Internal server error',
 1828 |  59 |       code: ApiErrorCode.INTERNAL_ERROR
 1829 |  60 |     };
 1830 |  61 |     res.status(500).json(response);
 1831 |  62 |   }
 1832 |  63 | };
 1833 |  64 | 
 1834 |  65 | const mapUser = (user: { id: string; name: string; email: string; role: string; createdAt: Date }): User => ({
 1835 |  66 |   ...user,
 1836 |  67 |   role: user.role as UserRole,
 1837 |  68 |   createdAt: user.createdAt.toISOString()
 1838 |  69 | });
 1839 |  70 | 
 1840 |  71 | const mapProperty = (property: any): Property => ({
 1841 |  72 |   ...property,
 1842 |  73 |   createdAt: property.createdAt.toISOString(),
 1843 |  74 |   updatedAt: property.updatedAt.toISOString(),
 1844 |  75 |   images: property.images?.map((image: any) => ({
 1845 |  76 |     ...image,
 1846 |  77 |     createdAt: image.createdAt.toISOString(),
 1847 |  78 |     updatedAt: image.updatedAt.toISOString()
 1848 |  79 |   })),
 1849 |  80 |   contact_info: property.contact_info ? {
 1850 |  81 |     ...property.contact_info,
 1851 |  82 |     createdAt: property.contact_info.createdAt.toISOString(),
 1852 |  83 |     updatedAt: property.contact_info.updatedAt.toISOString()
 1853 |  84 |   } : undefined
 1854 |  85 | });
 1855 |  86 | 
 1856 |  87 | // Get admin dashboard stats
 1857 |  88 | router.get('/stats', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 1858 |  89 |   try {
 1859 |  90 |     const [properties, messages, users] = await Promise.all([
 1860 |  91 |       prisma.property.count(),
 1861 |  92 |       prisma.contactMessage.count(),
 1862 |  93 |       prisma.user.count(),
 1863 |  94 |     ]);
 1864 |  95 | 
 1865 |  96 |     const response: ApiSuccessResponse<AdminStatsResponse> = {
 1866 |  97 |       status: 'success',
 1867 |  98 |       data: {
 1868 |  99 |         properties,
 1869 | 100 |         messages,
 1870 | 101 |         users,
 1871 | 102 |       },
 1872 | 103 |     };
 1873 | 104 | 
 1874 | 105 |     res.json(response);
 1875 | 106 |   } catch (error) {
 1876 | 107 |     handleError(error, res);
 1877 | 108 |   }
 1878 | 109 | });
 1879 | 110 | 
 1880 | 111 | // Get all properties (admin)
 1881 | 112 | router.get('/properties', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 1882 | 113 |   try {
 1883 | 114 |     const page = parseInt(req.query.page as string) || 1;
 1884 | 115 |     const limit = parseInt(req.query.limit as string) || 10;
 1885 | 116 |     const skip = (page - 1) * limit;
 1886 | 117 | 
 1887 | 118 |     const [properties, total] = await Promise.all([
 1888 | 119 |       prisma.property.findMany({
 1889 | 120 |         skip,
 1890 | 121 |         take: limit,
 1891 | 122 |         orderBy: { createdAt: 'desc' },
 1892 | 123 |         include: {
 1893 | 124 |           images: true,
 1894 | 125 |           contact_info: true,
 1895 | 126 |         },
 1896 | 127 |       }),
 1897 | 128 |       prisma.property.count(),
 1898 | 129 |     ]);
 1899 | 130 | 
 1900 | 131 |     const response: ApiSuccessResponse<PropertiesResponse> = {
 1901 | 132 |       status: 'success',
 1902 | 133 |       data: {
 1903 | 134 |         data: properties.map(mapProperty),
 1904 | 135 |         meta: {
 1905 | 136 |           total,
 1906 | 137 |           page,
 1907 | 138 |           pageSize: limit,
 1908 | 139 |           totalPages: Math.ceil(total / limit),
 1909 | 140 |           hasNextPage: skip + limit < total,
 1910 | 141 |           hasPreviousPage: page > 1
 1911 | 142 |         }
 1912 | 143 |       }
 1913 | 144 |     };
 1914 | 145 | 
 1915 | 146 |     res.json(response);
 1916 | 147 |   } catch (error) {
 1917 | 148 |     handleError(error, res);
 1918 | 149 |   }
 1919 | 150 | });
 1920 | 151 | 
 1921 | 152 | // Get single property (admin)
 1922 | 153 | router.get('/properties/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 1923 | 154 |   try {
 1924 | 155 |     const property = await prisma.property.findUnique({
 1925 | 156 |       where: { id: req.params.id },
 1926 | 157 |       include: {
 1927 | 158 |         images: true,
 1928 | 159 |         contact_info: true,
 1929 | 160 |       },
 1930 | 161 |     });
 1931 | 162 | 
 1932 | 163 |     if (!property) {
 1933 | 164 |       throw new AppError(404, 'Property not found');
 1934 | 165 |     }
 1935 | 166 | 
 1936 | 167 |     const response: ApiSuccessResponse<PropertyResponse> = {
 1937 | 168 |       status: 'success',
 1938 | 169 |       data: { property: mapProperty(property) }
 1939 | 170 |     };
 1940 | 171 | 
 1941 | 172 |     res.json(response);
 1942 | 173 |   } catch (error) {
 1943 | 174 |     handleError(error, res);
 1944 | 175 |   }
 1945 | 176 | });
 1946 | 177 | 
 1947 | 178 | // Update property (admin only)
 1948 | 179 | router.patch(
 1949 | 180 |   '/properties/:id',
 1950 | 181 |   protect,
 1951 | 182 |   restrictTo(UserRole.ADMIN),
 1952 | 183 |   upload.array('image', 20),
 1953 | 184 |   async (req, res: Response) => {
 1954 | 185 |     try {
 1955 | 186 |       const data = propertySchema.parse({
 1956 | 187 |         ...req.body,
 1957 | 188 |         contact_info: typeof req.body.contact_info === 'string' 
 1958 | 189 |           ? JSON.parse(req.body.contact_info)
 1959 | 190 |           : req.body.contact_info
 1960 | 191 |       });
 1961 | 192 |       const files = req.files as Express.Multer.File[];
 1962 | 193 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
 1963 | 194 | 
 1964 | 195 |       // Get the existing property to get the contact info ID
 1965 | 196 |       const existingProperty = await prisma.property.findUnique({
 1966 | 197 |         where: { id: req.params.id },
 1967 | 198 |         include: { contact_info: true },
 1968 | 199 |       });
 1969 | 200 | 
 1970 | 201 |       if (!existingProperty) {
 1971 | 202 |         throw new AppError(404, 'Property not found');
 1972 | 203 |       }
 1973 | 204 | 
 1974 | 205 |       // Update the property with the correct contact info reference
 1975 | 206 |       const property = await prisma.property.update({
 1976 | 207 |         where: { id: req.params.id },
 1977 | 208 |         data: {
 1978 | 209 |           title: data.title,
 1979 | 210 |           description: data.description,
 1980 | 211 |           price: data.price,
 1981 | 212 |           currency: data.currency,
 1982 | 213 |           area_sqm: data.area_sqm,
 1983 | 214 |           floor: data.floor,
 1984 | 215 |           construction_type: data.construction_type,
 1985 | 216 |           furnishing: data.furnishing,
 1986 | 217 |           location_type: data.location_type,
 1987 | 218 |           category: data.category,
 1988 | 219 |           type: data.type,
 1989 | 220 |           featured: data.featured,
 1990 | 221 |           contact_info: data.contact_info ? {
 1991 | 222 |             update: {
 1992 | 223 |               phone: data.contact_info.phone,
 1993 | 224 |               email: data.contact_info.email,
 1994 | 225 |             },
 1995 | 226 |           } : undefined,
 1996 | 227 |           ...(files.length > 0 && {
 1997 | 228 |             images: {
 1998 | 229 |               deleteMany: {},
 1999 | 230 |               create: files.map((file) => ({
 2000 | 231 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
 2001 | 232 |               })),
 2002 | 233 |             },
 2003 | 234 |           }),
 2004 | 235 |         },
 2005 | 236 |         include: {
 2006 | 237 |           images: true,
 2007 | 238 |           contact_info: true,
 2008 | 239 |         },
 2009 | 240 |       });
 2010 | 241 | 
 2011 | 242 |       const response: ApiSuccessResponse<PropertyResponse> = {
 2012 | 243 |         status: 'success',
 2013 | 244 |         data: { property: mapProperty(property) }
 2014 | 245 |       };
 2015 | 246 | 
 2016 | 247 |       res.json(response);
 2017 | 248 |     } catch (error) {
 2018 | 249 |       handleError(error, res);
 2019 | 250 |     }
 2020 | 251 |   }
 2021 | 252 | );
 2022 | 253 | 
 2023 | 254 | // Get all users (admin)
 2024 | 255 | router.get('/users', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 2025 | 256 |   try {
 2026 | 257 |     const page = parseInt(req.query.page as string) || 1;
 2027 | 258 |     const limit = parseInt(req.query.limit as string) || 10;
 2028 | 259 |     const skip = (page - 1) * limit;
 2029 | 260 | 
 2030 | 261 |     const [users, total] = await Promise.all([
 2031 | 262 |       prisma.user.findMany({
 2032 | 263 |         skip,
 2033 | 264 |         take: limit,
 2034 | 265 |         orderBy: { createdAt: 'desc' },
 2035 | 266 |         select: {
 2036 | 267 |           id: true,
 2037 | 268 |           name: true,
 2038 | 269 |           email: true,
 2039 | 270 |           role: true,
 2040 | 271 |           createdAt: true,
 2041 | 272 |         },
 2042 | 273 |       }),
 2043 | 274 |       prisma.user.count(),
 2044 | 275 |     ]);
 2045 | 276 | 
 2046 | 277 |     const response: ApiSuccessResponse<UsersResponse> = {
 2047 | 278 |       status: 'success',
 2048 | 279 |       data: {
 2049 | 280 |         users: users.map(mapUser),
 2050 | 281 |         meta: {
 2051 | 282 |           total,
 2052 | 283 |           page,
 2053 | 284 |           pageSize: limit,
 2054 | 285 |           totalPages: Math.ceil(total / limit),
 2055 | 286 |           hasNextPage: skip + limit < total,
 2056 | 287 |           hasPreviousPage: page > 1
 2057 | 288 |         }
 2058 | 289 |       }
 2059 | 290 |     };
 2060 | 291 | 
 2061 | 292 |     res.json(response);
 2062 | 293 |   } catch (error) {
 2063 | 294 |     handleError(error, res);
 2064 | 295 |   }
 2065 | 296 | });
 2066 | 297 | 
 2067 | 298 | // Get single user (admin)
 2068 | 299 | router.get('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 2069 | 300 |   try {
 2070 | 301 |     const user = await prisma.user.findUnique({
 2071 | 302 |       where: { id: String(req.params.id) },
 2072 | 303 |       select: {
 2073 | 304 |         id: true,
 2074 | 305 |         name: true,
 2075 | 306 |         email: true,
 2076 | 307 |         role: true,
 2077 | 308 |         createdAt: true,
 2078 | 309 |       },
 2079 | 310 |     });
 2080 | 311 | 
 2081 | 312 |     if (!user) {
 2082 | 313 |       throw new AppError(404, 'User not found');
 2083 | 314 |     }
 2084 | 315 | 
 2085 | 316 |     const response: ApiSuccessResponse<UserResponse> = {
 2086 | 317 |       status: 'success',
 2087 | 318 |       data: { user: mapUser(user) }
 2088 | 319 |     };
 2089 | 320 | 
 2090 | 321 |     res.json(response);
 2091 | 322 |   } catch (error) {
 2092 | 323 |     handleError(error, res);
 2093 | 324 |   }
 2094 | 325 | });
 2095 | 326 | 
 2096 | 327 | // Create user (admin)
 2097 | 328 | router.post('/users', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 2098 | 329 |   try {
 2099 | 330 |     const data = userSchema.parse(req.body);
 2100 | 331 | 
 2101 | 332 |     // Check if user with email already exists
 2102 | 333 |     const existingUser = await prisma.user.findUnique({
 2103 | 334 |       where: { email: data.email },
 2104 | 335 |     });
 2105 | 336 | 
 2106 | 337 |     if (existingUser) {
 2107 | 338 |       throw new AppError(400, 'User with this email already exists');
 2108 | 339 |     }
 2109 | 340 | 
 2110 | 341 |     const user = await prisma.user.create({
 2111 | 342 |       data,
 2112 | 343 |       select: {
 2113 | 344 |         id: true,
 2114 | 345 |         name: true,
 2115 | 346 |         email: true,
 2116 | 347 |         role: true,
 2117 | 348 |         createdAt: true,
 2118 | 349 |       },
 2119 | 350 |     });
 2120 | 351 | 
 2121 | 352 |     const response: ApiSuccessResponse<UserResponse> = {
 2122 | 353 |       status: 'success',
 2123 | 354 |       data: { user: mapUser(user) }
 2124 | 355 |     };
 2125 | 356 | 
 2126 | 357 |     res.status(201).json(response);
 2127 | 358 |   } catch (error) {
 2128 | 359 |     handleError(error, res);
 2129 | 360 |   }
 2130 | 361 | });
 2131 | 362 | 
 2132 | 363 | // Update user (admin)
 2133 | 364 | router.patch('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 2134 | 365 |   try {
 2135 | 366 |     const data = userSchema.partial().parse(req.body) as UpdateUserInput;
 2136 | 367 | 
 2137 | 368 |     // If email is being updated, check if it's already taken
 2138 | 369 |     if (data.email) {
 2139 | 370 |       const existingUser = await prisma.user.findFirst({
 2140 | 371 |         where: {
 2141 | 372 |           email: data.email,
 2142 | 373 |           NOT: { id: String(req.params.id) },
 2143 | 374 |         },
 2144 | 375 |       });
 2145 | 376 | 
 2146 | 377 |       if (existingUser) {
 2147 | 378 |         throw new AppError(400, 'User with this email already exists');
 2148 | 379 |       }
 2149 | 380 |     }
 2150 | 381 | 
 2151 | 382 |     const user = await prisma.user.update({
 2152 | 383 |       where: { id: String(req.params.id) },
 2153 | 384 |       data,
 2154 | 385 |       select: {
 2155 | 386 |         id: true,
 2156 | 387 |         name: true,
 2157 | 388 |         email: true,
 2158 | 389 |         role: true,
 2159 | 390 |         createdAt: true,
 2160 | 391 |       },
 2161 | 392 |     });
 2162 | 393 | 
 2163 | 394 |     const response: ApiSuccessResponse<UserResponse> = {
 2164 | 395 |       status: 'success',
 2165 | 396 |       data: { user: mapUser(user) }
 2166 | 397 |     };
 2167 | 398 | 
 2168 | 399 |     res.json(response);
 2169 | 400 |   } catch (error) {
 2170 | 401 |     handleError(error, res);
 2171 | 402 |   }
 2172 | 403 | });
 2173 | 404 | 
 2174 | 405 | // Delete user (admin)
 2175 | 406 | router.delete('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 2176 | 407 |   try {
 2177 | 408 |     await prisma.user.delete({
 2178 | 409 |       where: { id: String(req.params.id) },
 2179 | 410 |     });
 2180 | 411 | 
 2181 | 412 |     const response: ApiSuccessResponse<null> = {
 2182 | 413 |       status: 'success',
 2183 | 414 |       data: null
 2184 | 415 |     };
 2185 | 416 | 
 2186 | 417 |     res.status(204).json(response);
 2187 | 418 |   } catch (error) {
 2188 | 419 |     handleError(error, res);
 2189 | 420 |   }
 2190 | 421 | });
 2191 | 422 | 
 2192 | 423 | // Create property (admin only)
 2193 | 424 | router.post(
 2194 | 425 |   '/properties',
 2195 | 426 |   protect,
 2196 | 427 |   restrictTo(UserRole.ADMIN),
 2197 | 428 |   upload.array('image', 20),
 2198 | 429 |   async (req, res: Response) => {
 2199 | 430 |     try {
 2200 | 431 |       const data = propertySchema.parse(req.body);
 2201 | 432 |       const files = req.files as Express.Multer.File[];
 2202 | 433 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
 2203 | 434 | 
 2204 | 435 |       const property = await prisma.property.create({
 2205 | 436 |         data: {
 2206 | 437 |           title: data.title,
 2207 | 438 |           description: data.description,
 2208 | 439 |           price: data.price,
 2209 | 440 |           currency: data.currency,
 2210 | 441 |           area_sqm: data.area_sqm,
 2211 | 442 |           floor: data.floor,
 2212 | 443 |           construction_type: data.construction_type,
 2213 | 444 |           furnishing: data.furnishing,
 2214 | 445 |           location_type: data.location_type,
 2215 | 446 |           category: data.category,
 2216 | 447 |           type: data.type,
 2217 | 448 |           featured: data.featured,
 2218 | 449 |           contact_info: data.contact_info ? {
 2219 | 450 |             create: {
 2220 | 451 |               phone: data.contact_info.phone,
 2221 | 452 |               email: data.contact_info.email,
 2222 | 453 |             },
 2223 | 454 |           } : undefined,
 2224 | 455 |           ...(files.length > 0 && {
 2225 | 456 |             images: {
 2226 | 457 |               create: files.map((file) => ({
 2227 | 458 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
 2228 | 459 |               })),
 2229 | 460 |             },
 2230 | 461 |           }),
 2231 | 462 |         },
 2232 | 463 |         include: {
 2233 | 464 |           images: true,
 2234 | 465 |           contact_info: true,
 2235 | 466 |         },
 2236 | 467 |       });
 2237 | 468 | 
 2238 | 469 |       const response: ApiSuccessResponse<PropertyResponse> = {
 2239 | 470 |         status: 'success',
 2240 | 471 |         data: { property: mapProperty(property) }
 2241 | 472 |       };
 2242 | 473 | 
 2243 | 474 |       res.status(201).json(response);
 2244 | 475 |     } catch (error) {
 2245 | 476 |       handleError(error, res);
 2246 | 477 |     }
 2247 | 478 |   }
 2248 | 479 | );
 2249 | 480 | 
 2250 | 481 | export const adminRoutes = router; 
 2251 | 482 | 
 2252 | 
 2253 | 
 2254 | --------------------------------------------------------------------------------
 2255 | /apps/api/src/routes/auth.ts:
 2256 | --------------------------------------------------------------------------------
 2257 |   1 | import { Router, Response } from 'express';
 2258 |   2 | import { z } from 'zod';
 2259 |   3 | import bcrypt from 'bcryptjs';
 2260 |   4 | import jwt from 'jsonwebtoken';
 2261 |   5 | import prisma from '../lib/prisma';
 2262 |   6 | import { AppError } from '../middleware/error';
 2263 |   7 | import { protect } from '../middleware/auth';
 2264 |   8 | import { 
 2265 |   9 |   ApiSuccessResponse, 
 2266 |  10 |   ApiErrorResponse,
 2267 |  11 |   ApiErrorCode,
 2268 |  12 |   RegisterInput,
 2269 |  13 |   LoginInput,
 2270 |  14 |   AuthResponse,
 2271 |  15 |   MeResponse,
 2272 |  16 |   UserRole,
 2273 |  17 |   User
 2274 |  18 | } from '@avalon/shared-types';
 2275 |  19 | 
 2276 |  20 | const router = Router();
 2277 |  21 | 
 2278 |  22 | const registerSchema = z.object({
 2279 |  23 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 2280 |  24 |   email: z.string().email('Invalid email address'),
 2281 |  25 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 2282 |  26 |   passwordConfirm: z.string().min(6, 'Password confirmation must be at least 6 characters')
 2283 |  27 | }).refine((data) => data.password === data.passwordConfirm, {
 2284 |  28 |   message: "Passwords don't match",
 2285 |  29 |   path: ["passwordConfirm"],
 2286 |  30 | }) satisfies z.ZodType<RegisterInput>;
 2287 |  31 | 
 2288 |  32 | const loginSchema = z.object({
 2289 |  33 |   email: z.string().email('Invalid email address'),
 2290 |  34 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 2291 |  35 | }) satisfies z.ZodType<LoginInput>;
 2292 |  36 | 
 2293 |  37 | const handleError = (error: unknown, res: Response) => {
 2294 |  38 |   if (error instanceof z.ZodError) {
 2295 |  39 |     const response: ApiErrorResponse = {
 2296 |  40 |       status: 'error',
 2297 |  41 |       message: 'Invalid input data',
 2298 |  42 |       code: ApiErrorCode.VALIDATION_ERROR,
 2299 |  43 |       errors: error.errors.reduce((acc, err) => {
 2300 |  44 |         const path = err.path.join('.');
 2301 |  45 |         acc[path] = [err.message];
 2302 |  46 |         return acc;
 2303 |  47 |       }, {} as Record<string, string[]>)
 2304 |  48 |     };
 2305 |  49 |     res.status(400).json(response);
 2306 |  50 |   } else if (error instanceof AppError) {
 2307 |  51 |     const response: ApiErrorResponse = {
 2308 |  52 |       status: 'error',
 2309 |  53 |       message: error.message,
 2310 |  54 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 2311 |  55 |     };
 2312 |  56 |     res.status(error.statusCode).json(response);
 2313 |  57 |   } else {
 2314 |  58 |     console.error(error);
 2315 |  59 |     const response: ApiErrorResponse = {
 2316 |  60 |       status: 'error',
 2317 |  61 |       message: 'Internal server error',
 2318 |  62 |       code: ApiErrorCode.INTERNAL_ERROR
 2319 |  63 |     };
 2320 |  64 |     res.status(500).json(response);
 2321 |  65 |   }
 2322 |  66 | };
 2323 |  67 | 
 2324 |  68 | const mapUserToResponse = (user: { 
 2325 |  69 |   id: string; 
 2326 |  70 |   name: string; 
 2327 |  71 |   email: string; 
 2328 |  72 |   role: string;
 2329 |  73 |   createdAt: Date;
 2330 |  74 | }): User => ({
 2331 |  75 |   id: user.id,
 2332 |  76 |   name: user.name,
 2333 |  77 |   email: user.email,
 2334 |  78 |   role: user.role as UserRole,
 2335 |  79 |   createdAt: user.createdAt.toISOString()
 2336 |  80 | });
 2337 |  81 | 
 2338 |  82 | // Register
 2339 |  83 | router.post('/register', async (req, res, next) => {
 2340 |  84 |   try {
 2341 |  85 |     const data = registerSchema.parse(req.body);
 2342 |  86 | 
 2343 |  87 |     // Check if user exists
 2344 |  88 |     const existingUser = await prisma.user.findUnique({
 2345 |  89 |       where: { email: data.email },
 2346 |  90 |     });
 2347 |  91 | 
 2348 |  92 |     if (existingUser) {
 2349 |  93 |       throw new AppError(400, 'User already exists');
 2350 |  94 |     }
 2351 |  95 | 
 2352 |  96 |     // Hash password
 2353 |  97 |     const salt = await bcrypt.genSalt(10);
 2354 |  98 |     const hashedPassword = await bcrypt.hash(data.password, salt);
 2355 |  99 | 
 2356 | 100 |     // Create user
 2357 | 101 |     const user = await prisma.user.create({
 2358 | 102 |       data: {
 2359 | 103 |         name: data.name,
 2360 | 104 |         email: data.email,
 2361 | 105 |         password: hashedPassword,
 2362 | 106 |         role: UserRole.USER
 2363 | 107 |       },
 2364 | 108 |       select: {
 2365 | 109 |         id: true,
 2366 | 110 |         name: true,
 2367 | 111 |         email: true,
 2368 | 112 |         role: true,
 2369 | 113 |         createdAt: true
 2370 | 114 |       },
 2371 | 115 |     });
 2372 | 116 | 
 2373 | 117 |     // Create token
 2374 | 118 |     const token = jwt.sign(
 2375 | 119 |       { id: user.id },
 2376 | 120 |       process.env.JWT_SECRET!,
 2377 | 121 |       { expiresIn: '30d' }
 2378 | 122 |     );
 2379 | 123 | 
 2380 | 124 |     const response: ApiSuccessResponse<AuthResponse> = {
 2381 | 125 |       status: 'success',
 2382 | 126 |       data: { 
 2383 | 127 |         user: mapUserToResponse(user),
 2384 | 128 |         token 
 2385 | 129 |       }
 2386 | 130 |     };
 2387 | 131 | 
 2388 | 132 |     res.status(201).json(response);
 2389 | 133 |   } catch (error) {
 2390 | 134 |     handleError(error, res);
 2391 | 135 |   }
 2392 | 136 | });
 2393 | 137 | 
 2394 | 138 | // Login
 2395 | 139 | router.post('/login', async (req, res, next) => {
 2396 | 140 |   try {
 2397 | 141 |     const data = loginSchema.parse(req.body);
 2398 | 142 | 
 2399 | 143 |     // Check if user exists
 2400 | 144 |     const user = await prisma.user.findUnique({
 2401 | 145 |       where: { email: data.email },
 2402 | 146 |       select: {
 2403 | 147 |         id: true,
 2404 | 148 |         name: true,
 2405 | 149 |         email: true,
 2406 | 150 |         role: true,
 2407 | 151 |         password: true,
 2408 | 152 |         createdAt: true
 2409 | 153 |       }
 2410 | 154 |     });
 2411 | 155 | 
 2412 | 156 |     if (!user || !(await bcrypt.compare(data.password, user.password))) {
 2413 | 157 |       throw new AppError(401, 'Invalid credentials');
 2414 | 158 |     }
 2415 | 159 | 
 2416 | 160 |     // Create token
 2417 | 161 |     const token = jwt.sign(
 2418 | 162 |       { id: user.id },
 2419 | 163 |       process.env.JWT_SECRET!,
 2420 | 164 |       { expiresIn: '30d' }
 2421 | 165 |     );
 2422 | 166 | 
 2423 | 167 |     // Remove password from response
 2424 | 168 |     const { password: _, ...userWithoutPassword } = user;
 2425 | 169 | 
 2426 | 170 |     const response: ApiSuccessResponse<AuthResponse> = {
 2427 | 171 |       status: 'success',
 2428 | 172 |       data: { 
 2429 | 173 |         user: mapUserToResponse(userWithoutPassword),
 2430 | 174 |         token 
 2431 | 175 |       }
 2432 | 176 |     };
 2433 | 177 | 
 2434 | 178 |     res.json(response);
 2435 | 179 |   } catch (error) {
 2436 | 180 |     handleError(error, res);
 2437 | 181 |   }
 2438 | 182 | });
 2439 | 183 | 
 2440 | 184 | // Get current user
 2441 | 185 | router.get('/me', protect, async (req, res) => {
 2442 | 186 |   const response: ApiSuccessResponse<MeResponse> = {
 2443 | 187 |     status: 'success',
 2444 | 188 |     data: { user: req.user as User }
 2445 | 189 |   };
 2446 | 190 | 
 2447 | 191 |   res.json(response);
 2448 | 192 | });
 2449 | 193 | 
 2450 | 194 | export const authRoutes = router; 
 2451 | 195 | 
 2452 | 
 2453 | 
 2454 | --------------------------------------------------------------------------------
 2455 | /apps/api/src/routes/contact.ts:
 2456 | --------------------------------------------------------------------------------
 2457 |   1 | import { Router, Response } from 'express';
 2458 |   2 | import { z } from 'zod';
 2459 |   3 | import prisma from '../lib/prisma';
 2460 |   4 | import { protect, restrictTo } from '../middleware/auth';
 2461 |   5 | import { AppError } from '../middleware/error';
 2462 |   6 | import { 
 2463 |   7 |   ApiSuccessResponse, 
 2464 |   8 |   ApiErrorResponse,
 2465 |   9 |   ApiErrorCode,
 2466 |  10 |   CreateContactMessageInput,
 2467 |  11 |   ContactMessageResponse,
 2468 |  12 |   ContactMessagesResponse,
 2469 |  13 |   UserRole,
 2470 |  14 |   ContactMessage
 2471 |  15 | } from '@avalon/shared-types';
 2472 |  16 | 
 2473 |  17 | const router = Router();
 2474 |  18 | 
 2475 |  19 | const contactSchema = z.object({
 2476 |  20 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 2477 |  21 |   email: z.string().email('Invalid email address'),
 2478 |  22 |   message: z.string().min(10, 'Message must be at least 10 characters'),
 2479 |  23 | }) satisfies z.ZodType<CreateContactMessageInput>;
 2480 |  24 | 
 2481 |  25 | const mapContactMessage = (message: {
 2482 |  26 |   id: string;
 2483 |  27 |   name: string;
 2484 |  28 |   email: string;
 2485 |  29 |   message: string;
 2486 |  30 |   isRead: boolean;
 2487 |  31 |   createdAt: Date;
 2488 |  32 |   updatedAt: Date;
 2489 |  33 | }): ContactMessage => ({
 2490 |  34 |   id: message.id,
 2491 |  35 |   name: message.name,
 2492 |  36 |   email: message.email,
 2493 |  37 |   message: message.message,
 2494 |  38 |   isRead: message.isRead,
 2495 |  39 |   createdAt: message.createdAt.toISOString(),
 2496 |  40 |   updatedAt: message.updatedAt.toISOString()
 2497 |  41 | });
 2498 |  42 | 
 2499 |  43 | const handleError = (error: unknown, res: Response) => {
 2500 |  44 |   if (error instanceof z.ZodError) {
 2501 |  45 |     const response: ApiErrorResponse = {
 2502 |  46 |       status: 'error',
 2503 |  47 |       message: 'Invalid input data',
 2504 |  48 |       code: ApiErrorCode.VALIDATION_ERROR,
 2505 |  49 |       errors: error.errors.reduce((acc, err) => {
 2506 |  50 |         const path = err.path.join('.');
 2507 |  51 |         acc[path] = [err.message];
 2508 |  52 |         return acc;
 2509 |  53 |       }, {} as Record<string, string[]>)
 2510 |  54 |     };
 2511 |  55 |     res.status(400).json(response);
 2512 |  56 |   } else if (error instanceof AppError) {
 2513 |  57 |     const response: ApiErrorResponse = {
 2514 |  58 |       status: 'error',
 2515 |  59 |       message: error.message,
 2516 |  60 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 2517 |  61 |     };
 2518 |  62 |     res.status(error.statusCode).json(response);
 2519 |  63 |   } else {
 2520 |  64 |     console.error(error);
 2521 |  65 |     const response: ApiErrorResponse = {
 2522 |  66 |       status: 'error',
 2523 |  67 |       message: 'Internal server error',
 2524 |  68 |       code: ApiErrorCode.INTERNAL_ERROR
 2525 |  69 |     };
 2526 |  70 |     res.status(500).json(response);
 2527 |  71 |   }
 2528 |  72 | };
 2529 |  73 | 
 2530 |  74 | // Create contact message
 2531 |  75 | router.post('/', async (req, res: Response, next) => {
 2532 |  76 |   try {
 2533 |  77 |     const data = contactSchema.parse(req.body);
 2534 |  78 | 
 2535 |  79 |     const message = await prisma.contactMessage.create({
 2536 |  80 |       data
 2537 |  81 |     });
 2538 |  82 | 
 2539 |  83 |     const response: ApiSuccessResponse<ContactMessageResponse> = {
 2540 |  84 |       status: 'success',
 2541 |  85 |       data: { message: mapContactMessage(message) }
 2542 |  86 |     };
 2543 |  87 | 
 2544 |  88 |     res.status(201).json(response);
 2545 |  89 |   } catch (error) {
 2546 |  90 |     handleError(error, res);
 2547 |  91 |   }
 2548 |  92 | });
 2549 |  93 | 
 2550 |  94 | // Get all messages (admin only)
 2551 |  95 | router.get('/messages', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2552 |  96 |   try {
 2553 |  97 |     const page = Number(req.query.page) || 1;
 2554 |  98 |     const limit = Number(req.query.limit) || 10;
 2555 |  99 |     const skip = (page - 1) * limit;
 2556 | 100 | 
 2557 | 101 |     const [messages, total] = await Promise.all([
 2558 | 102 |       prisma.contactMessage.findMany({
 2559 | 103 |         skip,
 2560 | 104 |         take: limit,
 2561 | 105 |         orderBy: { createdAt: 'desc' },
 2562 | 106 |       }),
 2563 | 107 |       prisma.contactMessage.count(),
 2564 | 108 |     ]);
 2565 | 109 | 
 2566 | 110 |     const response: ApiSuccessResponse<ContactMessagesResponse> = {
 2567 | 111 |       status: 'success',
 2568 | 112 |       data: {
 2569 | 113 |         data: messages.map(mapContactMessage),
 2570 | 114 |         meta: {
 2571 | 115 |           total,
 2572 | 116 |           page,
 2573 | 117 |           pageSize: limit,
 2574 | 118 |           totalPages: Math.ceil(total / limit),
 2575 | 119 |           hasNextPage: skip + limit < total,
 2576 | 120 |           hasPreviousPage: page > 1
 2577 | 121 |         }
 2578 | 122 |       }
 2579 | 123 |     };
 2580 | 124 | 
 2581 | 125 |     res.json(response);
 2582 | 126 |   } catch (error) {
 2583 | 127 |     handleError(error, res);
 2584 | 128 |   }
 2585 | 129 | });
 2586 | 130 | 
 2587 | 131 | // Mark message as read (admin only)
 2588 | 132 | router.patch('/messages/:id/read', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2589 | 133 |   try {
 2590 | 134 |     const { id } = req.params;
 2591 | 135 | 
 2592 | 136 |     const message = await prisma.contactMessage.update({
 2593 | 137 |       where: { id },
 2594 | 138 |       data: { isRead: true },
 2595 | 139 |     });
 2596 | 140 | 
 2597 | 141 |     const response: ApiSuccessResponse<ContactMessageResponse> = {
 2598 | 142 |       status: 'success',
 2599 | 143 |       data: { message: mapContactMessage(message) }
 2600 | 144 |     };
 2601 | 145 | 
 2602 | 146 |     res.json(response);
 2603 | 147 |   } catch (error) {
 2604 | 148 |     handleError(error, res);
 2605 | 149 |   }
 2606 | 150 | });
 2607 | 151 | 
 2608 | 152 | // Delete message (admin only)
 2609 | 153 | router.delete('/messages/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2610 | 154 |   try {
 2611 | 155 |     const { id } = req.params;
 2612 | 156 | 
 2613 | 157 |     await prisma.contactMessage.delete({
 2614 | 158 |       where: { id },
 2615 | 159 |     });
 2616 | 160 | 
 2617 | 161 |     const response: ApiSuccessResponse<null> = {
 2618 | 162 |       status: 'success',
 2619 | 163 |       data: null
 2620 | 164 |     };
 2621 | 165 | 
 2622 | 166 |     res.json(response);
 2623 | 167 |   } catch (error) {
 2624 | 168 |     handleError(error, res);
 2625 | 169 |   }
 2626 | 170 | });
 2627 | 171 | 
 2628 | 172 | export const contactRoutes = router; 
 2629 | 173 | 
 2630 | 
 2631 | 
 2632 | --------------------------------------------------------------------------------
 2633 | /apps/api/src/routes/locations.ts:
 2634 | --------------------------------------------------------------------------------
 2635 |   1 | import { Router, Response } from 'express';
 2636 |   2 | import { z } from 'zod';
 2637 |   3 | import prisma from '../lib/prisma';
 2638 |   4 | import { protect, restrictTo } from '../middleware/auth';
 2639 |   5 | import { AppError } from '../middleware/error';
 2640 |   6 | import { 
 2641 |   7 |   ApiSuccessResponse, 
 2642 |   8 |   ApiErrorResponse,
 2643 |   9 |   ApiErrorCode,
 2644 |  10 |   CreateLocationInput,
 2645 |  11 |   CreateFeatureInput,
 2646 |  12 |   RegionResponse,
 2647 |  13 |   RegionsResponse,
 2648 |  14 |   NeighborhoodResponse,
 2649 |  15 |   NeighborhoodsResponse,
 2650 |  16 |   FeatureResponse,
 2651 |  17 |   FeaturesResponse,
 2652 |  18 |   FeatureType,
 2653 |  19 |   UserRole,
 2654 |  20 |   Feature,
 2655 |  21 |   Region,
 2656 |  22 |   Neighborhood
 2657 |  23 | } from '@avalon/shared-types';
 2658 |  24 | 
 2659 |  25 | const router = Router();
 2660 |  26 | 
 2661 |  27 | const locationSchema = z.object({
 2662 |  28 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 2663 |  29 | }) satisfies z.ZodType<CreateLocationInput>;
 2664 |  30 | 
 2665 |  31 | const featureSchema = z.object({
 2666 |  32 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 2667 |  33 |   type: z.nativeEnum(FeatureType),
 2668 |  34 | }) satisfies z.ZodType<CreateFeatureInput>;
 2669 |  35 | 
 2670 |  36 | const handleError = (error: unknown, res: Response) => {
 2671 |  37 |   if (error instanceof z.ZodError) {
 2672 |  38 |     const response: ApiErrorResponse = {
 2673 |  39 |       status: 'error',
 2674 |  40 |       message: 'Invalid input data',
 2675 |  41 |       code: ApiErrorCode.VALIDATION_ERROR,
 2676 |  42 |       errors: error.errors.reduce((acc, err) => {
 2677 |  43 |         const path = err.path.join('.');
 2678 |  44 |         acc[path] = [err.message];
 2679 |  45 |         return acc;
 2680 |  46 |       }, {} as Record<string, string[]>)
 2681 |  47 |     };
 2682 |  48 |     res.status(400).json(response);
 2683 |  49 |   } else if (error instanceof AppError) {
 2684 |  50 |     const response: ApiErrorResponse = {
 2685 |  51 |       status: 'error',
 2686 |  52 |       message: error.message,
 2687 |  53 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 2688 |  54 |     };
 2689 |  55 |     res.status(error.statusCode).json(response);
 2690 |  56 |   } else {
 2691 |  57 |     console.error(error);
 2692 |  58 |     const response: ApiErrorResponse = {
 2693 |  59 |       status: 'error',
 2694 |  60 |       message: 'Internal server error',
 2695 |  61 |       code: ApiErrorCode.INTERNAL_ERROR
 2696 |  62 |     };
 2697 |  63 |     res.status(500).json(response);
 2698 |  64 |   }
 2699 |  65 | };
 2700 |  66 | 
 2701 |  67 | const mapDatesToISOString = <T extends { createdAt: Date; updatedAt: Date }>(
 2702 |  68 |   item: T
 2703 |  69 | ): Omit<T, 'createdAt' | 'updatedAt'> & { createdAt: string; updatedAt: string } => ({
 2704 |  70 |   ...item,
 2705 |  71 |   createdAt: item.createdAt.toISOString(),
 2706 |  72 |   updatedAt: item.updatedAt.toISOString()
 2707 |  73 | });
 2708 |  74 | 
 2709 |  75 | const mapRegion = (region: { id: number; name: string; createdAt: Date; updatedAt: Date }): Region => ({
 2710 |  76 |   ...mapDatesToISOString(region)
 2711 |  77 | });
 2712 |  78 | 
 2713 |  79 | const mapNeighborhood = (neighborhood: { id: number; name: string; createdAt: Date; updatedAt: Date }): Neighborhood => ({
 2714 |  80 |   ...mapDatesToISOString(neighborhood)
 2715 |  81 | });
 2716 |  82 | 
 2717 |  83 | const mapFeature = (feature: { id: number; name: string; type: string; createdAt: Date; updatedAt: Date }): Feature => ({
 2718 |  84 |   ...mapDatesToISOString(feature),
 2719 |  85 |   type: feature.type as FeatureType
 2720 |  86 | });
 2721 |  87 | 
 2722 |  88 | // Get all regions
 2723 |  89 | router.get('/regions', protect, async (req, res: Response, next) => {
 2724 |  90 |   try {
 2725 |  91 |     const regions = await prisma.region.findMany({
 2726 |  92 |       orderBy: { name: 'asc' },
 2727 |  93 |     });
 2728 |  94 | 
 2729 |  95 |     const response: ApiSuccessResponse<RegionsResponse> = {
 2730 |  96 |       status: 'success',
 2731 |  97 |       data: { regions: regions.map(mapRegion) }
 2732 |  98 |     };
 2733 |  99 | 
 2734 | 100 |     res.json(response);
 2735 | 101 |   } catch (error) {
 2736 | 102 |     handleError(error, res);
 2737 | 103 |   }
 2738 | 104 | });
 2739 | 105 | 
 2740 | 106 | // Get all neighborhoods
 2741 | 107 | router.get('/neighborhoods', protect, async (req, res: Response, next) => {
 2742 | 108 |   try {
 2743 | 109 |     const neighborhoods = await prisma.neighborhood.findMany({
 2744 | 110 |       orderBy: { name: 'asc' },
 2745 | 111 |     });
 2746 | 112 | 
 2747 | 113 |     const response: ApiSuccessResponse<NeighborhoodsResponse> = {
 2748 | 114 |       status: 'success',
 2749 | 115 |       data: { neighborhoods: neighborhoods.map(mapNeighborhood) }
 2750 | 116 |     };
 2751 | 117 | 
 2752 | 118 |     res.json(response);
 2753 | 119 |   } catch (error) {
 2754 | 120 |     handleError(error, res);
 2755 | 121 |   }
 2756 | 122 | });
 2757 | 123 | 
 2758 | 124 | // Get all features
 2759 | 125 | router.get('/features', protect, async (req, res: Response, next) => {
 2760 | 126 |   try {
 2761 | 127 |     const features = await prisma.feature.findMany({
 2762 | 128 |       orderBy: [
 2763 | 129 |         { type: 'asc' },
 2764 | 130 |         { name: 'asc' }
 2765 | 131 |       ],
 2766 | 132 |     });
 2767 | 133 | 
 2768 | 134 |     const response: ApiSuccessResponse<FeaturesResponse> = {
 2769 | 135 |       status: 'success',
 2770 | 136 |       data: { features: features.map(mapFeature) }
 2771 | 137 |     };
 2772 | 138 | 
 2773 | 139 |     res.json(response);
 2774 | 140 |   } catch (error) {
 2775 | 141 |     handleError(error, res);
 2776 | 142 |   }
 2777 | 143 | });
 2778 | 144 | 
 2779 | 145 | // Create region (admin only)
 2780 | 146 | router.post('/regions', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2781 | 147 |   try {
 2782 | 148 |     const { name } = locationSchema.parse(req.body);
 2783 | 149 | 
 2784 | 150 |     const region = await prisma.region.create({
 2785 | 151 |       data: { name },
 2786 | 152 |     });
 2787 | 153 | 
 2788 | 154 |     const response: ApiSuccessResponse<RegionResponse> = {
 2789 | 155 |       status: 'success',
 2790 | 156 |       data: { region: mapRegion(region) }
 2791 | 157 |     };
 2792 | 158 | 
 2793 | 159 |     res.status(201).json(response);
 2794 | 160 |   } catch (error) {
 2795 | 161 |     handleError(error, res);
 2796 | 162 |   }
 2797 | 163 | });
 2798 | 164 | 
 2799 | 165 | // Create neighborhood (admin only)
 2800 | 166 | router.post('/neighborhoods', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2801 | 167 |   try {
 2802 | 168 |     const { name } = locationSchema.parse(req.body);
 2803 | 169 | 
 2804 | 170 |     const neighborhood = await prisma.neighborhood.create({
 2805 | 171 |       data: { name },
 2806 | 172 |     });
 2807 | 173 | 
 2808 | 174 |     const response: ApiSuccessResponse<NeighborhoodResponse> = {
 2809 | 175 |       status: 'success',
 2810 | 176 |       data: { neighborhood: mapNeighborhood(neighborhood) }
 2811 | 177 |     };
 2812 | 178 | 
 2813 | 179 |     res.status(201).json(response);
 2814 | 180 |   } catch (error) {
 2815 | 181 |     handleError(error, res);
 2816 | 182 |   }
 2817 | 183 | });
 2818 | 184 | 
 2819 | 185 | // Create feature (admin only)
 2820 | 186 | router.post('/features', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2821 | 187 |   try {
 2822 | 188 |     const { name, type } = featureSchema.parse(req.body);
 2823 | 189 | 
 2824 | 190 |     const feature = await prisma.feature.create({
 2825 | 191 |       data: { 
 2826 | 192 |         name,
 2827 | 193 |         type: type as string // Cast to string for Prisma
 2828 | 194 |       },
 2829 | 195 |     });
 2830 | 196 | 
 2831 | 197 |     const response: ApiSuccessResponse<FeatureResponse> = {
 2832 | 198 |       status: 'success',
 2833 | 199 |       data: { feature: mapFeature(feature) }
 2834 | 200 |     };
 2835 | 201 | 
 2836 | 202 |     res.status(201).json(response);
 2837 | 203 |   } catch (error) {
 2838 | 204 |     handleError(error, res);
 2839 | 205 |   }
 2840 | 206 | });
 2841 | 207 | 
 2842 | 208 | // Update region (admin only)
 2843 | 209 | router.patch('/regions/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2844 | 210 |   try {
 2845 | 211 |     const data = locationSchema.partial().parse(req.body);
 2846 | 212 | 
 2847 | 213 |     const region = await prisma.region.update({
 2848 | 214 |       where: { id: parseInt(req.params.id) },
 2849 | 215 |       data,
 2850 | 216 |     });
 2851 | 217 | 
 2852 | 218 |     const response: ApiSuccessResponse<RegionResponse> = {
 2853 | 219 |       status: 'success',
 2854 | 220 |       data: { region: mapRegion(region) }
 2855 | 221 |     };
 2856 | 222 | 
 2857 | 223 |     res.json(response);
 2858 | 224 |   } catch (error) {
 2859 | 225 |     handleError(error, res);
 2860 | 226 |   }
 2861 | 227 | });
 2862 | 228 | 
 2863 | 229 | // Update neighborhood (admin only)
 2864 | 230 | router.patch('/neighborhoods/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2865 | 231 |   try {
 2866 | 232 |     const data = locationSchema.partial().parse(req.body);
 2867 | 233 | 
 2868 | 234 |     const neighborhood = await prisma.neighborhood.update({
 2869 | 235 |       where: { id: parseInt(req.params.id) },
 2870 | 236 |       data,
 2871 | 237 |     });
 2872 | 238 | 
 2873 | 239 |     const response: ApiSuccessResponse<NeighborhoodResponse> = {
 2874 | 240 |       status: 'success',
 2875 | 241 |       data: { neighborhood: mapNeighborhood(neighborhood) }
 2876 | 242 |     };
 2877 | 243 | 
 2878 | 244 |     res.json(response);
 2879 | 245 |   } catch (error) {
 2880 | 246 |     handleError(error, res);
 2881 | 247 |   }
 2882 | 248 | });
 2883 | 249 | 
 2884 | 250 | // Update feature (admin only)
 2885 | 251 | router.patch('/features/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2886 | 252 |   try {
 2887 | 253 |     const data = featureSchema.partial().parse(req.body);
 2888 | 254 | 
 2889 | 255 |     const feature = await prisma.feature.update({
 2890 | 256 |       where: { id: parseInt(req.params.id) },
 2891 | 257 |       data: {
 2892 | 258 |         name: data.name,
 2893 | 259 |         type: data.type as string | undefined
 2894 | 260 |       },
 2895 | 261 |     });
 2896 | 262 | 
 2897 | 263 |     const response: ApiSuccessResponse<FeatureResponse> = {
 2898 | 264 |       status: 'success',
 2899 | 265 |       data: { feature: mapFeature(feature) }
 2900 | 266 |     };
 2901 | 267 | 
 2902 | 268 |     res.json(response);
 2903 | 269 |   } catch (error) {
 2904 | 270 |     handleError(error, res);
 2905 | 271 |   }
 2906 | 272 | });
 2907 | 273 | 
 2908 | 274 | // Delete region (admin only)
 2909 | 275 | router.delete('/regions/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2910 | 276 |   try {
 2911 | 277 |     await prisma.region.delete({
 2912 | 278 |       where: { id: parseInt(req.params.id) },
 2913 | 279 |     });
 2914 | 280 | 
 2915 | 281 |     res.status(204).json({
 2916 | 282 |       status: 'success',
 2917 | 283 |       data: null,
 2918 | 284 |     });
 2919 | 285 |   } catch (error) {
 2920 | 286 |     handleError(error, res);
 2921 | 287 |   }
 2922 | 288 | });
 2923 | 289 | 
 2924 | 290 | // Delete neighborhood (admin only)
 2925 | 291 | router.delete('/neighborhoods/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2926 | 292 |   try {
 2927 | 293 |     await prisma.neighborhood.delete({
 2928 | 294 |       where: { id: parseInt(req.params.id) },
 2929 | 295 |     });
 2930 | 296 | 
 2931 | 297 |     res.status(204).json({
 2932 | 298 |       status: 'success',
 2933 | 299 |       data: null,
 2934 | 300 |     });
 2935 | 301 |   } catch (error) {
 2936 | 302 |     handleError(error, res);
 2937 | 303 |   }
 2938 | 304 | });
 2939 | 305 | 
 2940 | 306 | // Delete feature (admin only)
 2941 | 307 | router.delete('/features/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 2942 | 308 |   try {
 2943 | 309 |     await prisma.feature.delete({
 2944 | 310 |       where: { id: parseInt(req.params.id) },
 2945 | 311 |     });
 2946 | 312 | 
 2947 | 313 |     res.status(204).json({
 2948 | 314 |       status: 'success',
 2949 | 315 |       data: null,
 2950 | 316 |     });
 2951 | 317 |   } catch (error) {
 2952 | 318 |     handleError(error, res);
 2953 | 319 |   }
 2954 | 320 | });
 2955 | 321 | 
 2956 | 322 | export const locationRoutes = router; 
 2957 | 323 | 
 2958 | 
 2959 | 
 2960 | --------------------------------------------------------------------------------
 2961 | /apps/api/src/routes/properties.ts:
 2962 | --------------------------------------------------------------------------------
 2963 |   1 | import express, { Response } from 'express';
 2964 |   2 | import { z } from 'zod';
 2965 |   3 | import { PrismaClient, Prisma } from '@prisma/client';
 2966 |   4 | import multer from 'multer';
 2967 |   5 | import { protect, restrictTo } from '../middleware/auth';
 2968 |   6 | import prisma from '../lib/prisma';
 2969 |   7 | import { AppError } from '../middleware/error';
 2970 |   8 | import { upload } from '../config/multer';
 2971 |   9 | import { 
 2972 |  10 |   PropertyType, 
 2973 |  11 |   PropertyCategory, 
 2974 |  12 |   LocationType, 
 2975 |  13 |   Currency, 
 2976 |  14 |   ConstructionType, 
 2977 |  15 |   FurnishingType,
 2978 |  16 |   ApiSuccessResponse,
 2979 |  17 |   ApiErrorResponse,
 2980 |  18 |   ApiErrorCode,
 2981 |  19 |   PropertyResponse,
 2982 |  20 |   PropertiesResponse,
 2983 |  21 |   GetPropertiesParams,
 2984 |  22 |   CreatePropertyInput,
 2985 |  23 |   UpdatePropertyInput,
 2986 |  24 |   Property,
 2987 |  25 |   UserRole
 2988 |  26 | } from '@avalon/shared-types';
 2989 |  27 | 
 2990 |  28 | const router = express.Router();
 2991 |  29 | 
 2992 |  30 | export const propertySchema = z.object({
 2993 |  31 |   title: z.string(),
 2994 |  32 |   description: z.string(),
 2995 |  33 |   price: z.coerce.number(),
 2996 |  34 |   currency: z.nativeEnum(Currency),
 2997 |  35 |   area_sqm: z.coerce.number(),
 2998 |  36 |   floor: z.coerce.number().optional(),
 2999 |  37 |   construction_type: z.nativeEnum(ConstructionType).optional(),
 3000 |  38 |   furnishing: z.nativeEnum(FurnishingType).optional(),
 3001 |  39 |   location_type: z.nativeEnum(LocationType).optional(),
 3002 |  40 |   category: z.nativeEnum(PropertyCategory).optional(),
 3003 |  41 |   type: z.nativeEnum(PropertyType).optional(),
 3004 |  42 |   featured: z.coerce.boolean().optional(),
 3005 |  43 |   contact_info: z.object({
 3006 |  44 |     phone: z.string(),
 3007 |  45 |     email: z.string().email()
 3008 |  46 |   }).optional()
 3009 |  47 | }) satisfies z.ZodType<CreatePropertyInput>;
 3010 |  48 | 
 3011 |  49 | const propertyInclude = {
 3012 |  50 |   region: true,
 3013 |  51 |   neighborhood: true,
 3014 |  52 |   features: {
 3015 |  53 |     include: {
 3016 |  54 |       feature: true
 3017 |  55 |     }
 3018 |  56 |   },
 3019 |  57 |   images: true,
 3020 |  58 |   contact_info: true,
 3021 |  59 | } as const;
 3022 |  60 | 
 3023 |  61 | const handleError = (error: unknown, res: Response) => {
 3024 |  62 |   if (error instanceof z.ZodError) {
 3025 |  63 |     const response: ApiErrorResponse = {
 3026 |  64 |       status: 'error',
 3027 |  65 |       message: 'Invalid input data',
 3028 |  66 |       code: ApiErrorCode.VALIDATION_ERROR,
 3029 |  67 |       errors: error.errors.reduce((acc, err) => {
 3030 |  68 |         const path = err.path.join('.');
 3031 |  69 |         acc[path] = [err.message];
 3032 |  70 |         return acc;
 3033 |  71 |       }, {} as Record<string, string[]>)
 3034 |  72 |     };
 3035 |  73 |     res.status(400).json(response);
 3036 |  74 |   } else if (error instanceof AppError) {
 3037 |  75 |     const response: ApiErrorResponse = {
 3038 |  76 |       status: 'error',
 3039 |  77 |       message: error.message,
 3040 |  78 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 3041 |  79 |     };
 3042 |  80 |     res.status(error.statusCode).json(response);
 3043 |  81 |   } else {
 3044 |  82 |     console.error(error);
 3045 |  83 |     const response: ApiErrorResponse = {
 3046 |  84 |       status: 'error',
 3047 |  85 |       message: 'Internal server error',
 3048 |  86 |       code: ApiErrorCode.INTERNAL_ERROR
 3049 |  87 |     };
 3050 |  88 |     res.status(500).json(response);
 3051 |  89 |   }
 3052 |  90 | };
 3053 |  91 | 
 3054 |  92 | const mapProperty = (property: any): Property => ({
 3055 |  93 |   ...property,
 3056 |  94 |   createdAt: property.createdAt.toISOString(),
 3057 |  95 |   updatedAt: property.updatedAt.toISOString(),
 3058 |  96 |   images: property.images?.map((image: any) => ({
 3059 |  97 |     ...image,
 3060 |  98 |     createdAt: image.createdAt.toISOString(),
 3061 |  99 |     updatedAt: image.updatedAt.toISOString()
 3062 | 100 |   })),
 3063 | 101 |   contact_info: property.contact_info ? {
 3064 | 102 |     ...property.contact_info,
 3065 | 103 |     createdAt: property.contact_info.createdAt.toISOString(),
 3066 | 104 |     updatedAt: property.contact_info.updatedAt.toISOString()
 3067 | 105 |   } : undefined
 3068 | 106 | });
 3069 | 107 | 
 3070 | 108 | // Get all properties with filtering
 3071 | 109 | router.get('/', async (req, res: Response) => {
 3072 | 110 |   try {
 3073 | 111 |     const {
 3074 | 112 |       page = '1',
 3075 | 113 |       limit = '10',
 3076 | 114 |       min_price,
 3077 | 115 |       max_price,
 3078 | 116 |       min_area,
 3079 | 117 |       max_area,
 3080 | 118 |       type,
 3081 | 119 |       category,
 3082 | 120 |       location_type,
 3083 | 121 |       construction_type,
 3084 | 122 |       furnishing,
 3085 | 123 |       featured,
 3086 | 124 |     } = req.query as GetPropertiesParams;
 3087 | 125 | 
 3088 | 126 |     const skip = (parseInt(page) - 1) * parseInt(limit);
 3089 | 127 |     const where: Prisma.PropertyWhereInput = {};
 3090 | 128 | 
 3091 | 129 |     // Apply filters
 3092 | 130 |     if (type) where.type = type;
 3093 | 131 |     if (category) where.category = category;
 3094 | 132 |     if (location_type) where.location_type = location_type;
 3095 | 133 |     if (construction_type) where.construction_type = construction_type;
 3096 | 134 |     if (furnishing) where.furnishing = furnishing;
 3097 | 135 |     if (featured) where.featured = featured === 'true';
 3098 | 136 | 
 3099 | 137 |     // Handle price range when both min and max are provided
 3100 | 138 |     if (min_price && max_price) {
 3101 | 139 |       where.price = {
 3102 | 140 |         gte: parseInt(min_price),
 3103 | 141 |         lte: parseInt(max_price)
 3104 | 142 |       };
 3105 | 143 |     } else {
 3106 | 144 |       if (min_price) where.price = { gte: parseInt(min_price) };
 3107 | 145 |       if (max_price) where.price = { lte: parseInt(max_price) };
 3108 | 146 |     }
 3109 | 147 | 
 3110 | 148 |     // Handle area range when both min and max are provided
 3111 | 149 |     if (min_area && max_area) {
 3112 | 150 |       where.area_sqm = {
 3113 | 151 |         gte: parseInt(min_area),
 3114 | 152 |         lte: parseInt(max_area)
 3115 | 153 |       };
 3116 | 154 |     } else {
 3117 | 155 |       if (min_area) where.area_sqm = { gte: parseInt(min_area) };
 3118 | 156 |       if (max_area) where.area_sqm = { lte: parseInt(max_area) };
 3119 | 157 |     }
 3120 | 158 | 
 3121 | 159 |     const [properties, total] = await Promise.all([
 3122 | 160 |       prisma.property.findMany({
 3123 | 161 |         where,
 3124 | 162 |         include: propertyInclude,
 3125 | 163 |         skip,
 3126 | 164 |         take: parseInt(limit),
 3127 | 165 |         orderBy: { createdAt: 'desc' },
 3128 | 166 |       }),
 3129 | 167 |       prisma.property.count({ where }),
 3130 | 168 |     ]);
 3131 | 169 | 
 3132 | 170 |     const response: ApiSuccessResponse<PropertiesResponse> = {
 3133 | 171 |       status: 'success',
 3134 | 172 |       data: {
 3135 | 173 |         data: properties.map(mapProperty),
 3136 | 174 |         meta: {
 3137 | 175 |           total,
 3138 | 176 |           page: parseInt(page),
 3139 | 177 |           pageSize: parseInt(limit),
 3140 | 178 |           totalPages: Math.ceil(total / parseInt(limit)),
 3141 | 179 |           hasNextPage: skip + parseInt(limit) < total,
 3142 | 180 |           hasPreviousPage: parseInt(page) > 1
 3143 | 181 |         }
 3144 | 182 |       }
 3145 | 183 |     };
 3146 | 184 | 
 3147 | 185 |     res.json(response);
 3148 | 186 |   } catch (error) {
 3149 | 187 |     handleError(error, res);
 3150 | 188 |   }
 3151 | 189 | });
 3152 | 190 | 
 3153 | 191 | // Get featured properties
 3154 | 192 | router.get('/featured', async (req, res: Response) => {
 3155 | 193 |   try {
 3156 | 194 |     const properties = await prisma.property.findMany({
 3157 | 195 |       where: {
 3158 | 196 |         featured: true,
 3159 | 197 |       },
 3160 | 198 |       include: propertyInclude,
 3161 | 199 |       take: 6,
 3162 | 200 |       orderBy: { createdAt: 'desc' },
 3163 | 201 |     });
 3164 | 202 | 
 3165 | 203 |     const response: ApiSuccessResponse<PropertiesResponse> = {
 3166 | 204 |       status: 'success',
 3167 | 205 |       data: {
 3168 | 206 |         data: properties.map(mapProperty),
 3169 | 207 |         meta: {
 3170 | 208 |           total: properties.length,
 3171 | 209 |           page: 1,
 3172 | 210 |           pageSize: 6,
 3173 | 211 |           totalPages: 1,
 3174 | 212 |           hasNextPage: false,
 3175 | 213 |           hasPreviousPage: false
 3176 | 214 |         }
 3177 | 215 |       }
 3178 | 216 |     };
 3179 | 217 | 
 3180 | 218 |     res.json(response);
 3181 | 219 |   } catch (error) {
 3182 | 220 |     handleError(error, res);
 3183 | 221 |   }
 3184 | 222 | });
 3185 | 223 | 
 3186 | 224 | // Get single property
 3187 | 225 | router.get('/:id', async (req, res: Response) => {
 3188 | 226 |   try {
 3189 | 227 |     const property = await prisma.property.findUnique({
 3190 | 228 |       where: { id: req.params.id },
 3191 | 229 |       include: propertyInclude,
 3192 | 230 |     });
 3193 | 231 | 
 3194 | 232 |     if (!property) {
 3195 | 233 |       throw new AppError(404, 'Property not found');
 3196 | 234 |     }
 3197 | 235 | 
 3198 | 236 |     const response: ApiSuccessResponse<PropertyResponse> = {
 3199 | 237 |       status: 'success',
 3200 | 238 |       data: { property: mapProperty(property) }
 3201 | 239 |     };
 3202 | 240 | 
 3203 | 241 |     res.json(response);
 3204 | 242 |   } catch (error) {
 3205 | 243 |     handleError(error, res);
 3206 | 244 |   }
 3207 | 245 | });
 3208 | 246 | 
 3209 | 247 | // Create property (admin only)
 3210 | 248 | router.post(
 3211 | 249 |   '/',
 3212 | 250 |   protect,
 3213 | 251 |   restrictTo(UserRole.ADMIN),
 3214 | 252 |   upload.array('image', 20),
 3215 | 253 |   async (req, res: Response) => {
 3216 | 254 |     try {
 3217 | 255 |       // Parse fields from multipart/form-data
 3218 | 256 |       const parsedBody = {
 3219 | 257 |         ...req.body,
 3220 | 258 |         price: req.body.price ? parseInt(req.body.price) : undefined,
 3221 | 259 |         area_sqm: req.body.area_sqm ? parseInt(req.body.area_sqm) : undefined,
 3222 | 260 |         contact_info: req.body.contact_info ? JSON.parse(req.body.contact_info) : undefined,
 3223 | 261 |       };
 3224 | 262 | 
 3225 | 263 |       const data = propertySchema.parse(parsedBody);
 3226 | 264 |       const files = req.files as Express.Multer.File[];
 3227 | 265 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
 3228 | 266 | 
 3229 | 267 |       const property = await prisma.property.create({
 3230 | 268 |         data: {
 3231 | 269 |           title: data.title,
 3232 | 270 |           description: data.description,
 3233 | 271 |           price: data.price,
 3234 | 272 |           currency: data.currency,
 3235 | 273 |           area_sqm: data.area_sqm,
 3236 | 274 |           floor: data.floor,
 3237 | 275 |           construction_type: data.construction_type,
 3238 | 276 |           furnishing: data.furnishing,
 3239 | 277 |           location_type: data.location_type,
 3240 | 278 |           category: data.category,
 3241 | 279 |           type: data.type,
 3242 | 280 |           featured: data.featured,
 3243 | 281 |           contact_info: data.contact_info ? {
 3244 | 282 |             create: {
 3245 | 283 |               phone: data.contact_info.phone,
 3246 | 284 |               email: data.contact_info.email,
 3247 | 285 |             },
 3248 | 286 |           } : undefined,
 3249 | 287 |           ...(files.length > 0 && {
 3250 | 288 |             images: {
 3251 | 289 |               create: files.map((file) => ({
 3252 | 290 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
 3253 | 291 |               })),
 3254 | 292 |             },
 3255 | 293 |           }),
 3256 | 294 |         },
 3257 | 295 |         include: propertyInclude,
 3258 | 296 |       });
 3259 | 297 | 
 3260 | 298 |       const response: ApiSuccessResponse<PropertyResponse> = {
 3261 | 299 |         status: 'success',
 3262 | 300 |         data: { property: mapProperty(property) }
 3263 | 301 |       };
 3264 | 302 | 
 3265 | 303 |       res.status(201).json(response);
 3266 | 304 |     } catch (error) {
 3267 | 305 |       handleError(error, res);
 3268 | 306 |     }
 3269 | 307 |   }
 3270 | 308 | );
 3271 | 309 | 
 3272 | 310 | // Update property (admin only)
 3273 | 311 | router.patch(
 3274 | 312 |   '/:id',
 3275 | 313 |   protect,
 3276 | 314 |   restrictTo(UserRole.ADMIN),
 3277 | 315 |   upload.array('image', 20),
 3278 | 316 |   async (req, res: Response) => {
 3279 | 317 |     try {
 3280 | 318 |       const data = propertySchema.partial().parse(req.body) as UpdatePropertyInput;
 3281 | 319 |       const files = req.files as Express.Multer.File[];
 3282 | 320 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
 3283 | 321 | 
 3284 | 322 |       // Get the existing property to get the contact info ID
 3285 | 323 |       const existingProperty = await prisma.property.findUnique({
 3286 | 324 |         where: { id: req.params.id },
 3287 | 325 |         include: { contact_info: true },
 3288 | 326 |       });
 3289 | 327 | 
 3290 | 328 |       if (!existingProperty) {
 3291 | 329 |         throw new AppError(404, 'Property not found');
 3292 | 330 |       }
 3293 | 331 | 
 3294 | 332 |       // Update the property with the correct contact info reference
 3295 | 333 |       const property = await prisma.property.update({
 3296 | 334 |         where: { id: req.params.id },
 3297 | 335 |         data: {
 3298 | 336 |           title: data.title,
 3299 | 337 |           description: data.description,
 3300 | 338 |           price: data.price,
 3301 | 339 |           currency: data.currency,
 3302 | 340 |           area_sqm: data.area_sqm,
 3303 | 341 |           floor: data.floor,
 3304 | 342 |           construction_type: data.construction_type,
 3305 | 343 |           furnishing: data.furnishing,
 3306 | 344 |           location_type: data.location_type,
 3307 | 345 |           category: data.category,
 3308 | 346 |           type: data.type,
 3309 | 347 |           featured: data.featured,
 3310 | 348 |           contact_info: data.contact_info ? {
 3311 | 349 |             update: {
 3312 | 350 |               phone: data.contact_info.phone,
 3313 | 351 |               email: data.contact_info.email,
 3314 | 352 |             },
 3315 | 353 |           } : undefined,
 3316 | 354 |           ...(files.length > 0 && {
 3317 | 355 |             images: {
 3318 | 356 |               deleteMany: {},
 3319 | 357 |               create: files.map((file) => ({
 3320 | 358 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
 3321 | 359 |               })),
 3322 | 360 |             },
 3323 | 361 |           }),
 3324 | 362 |         },
 3325 | 363 |         include: propertyInclude,
 3326 | 364 |       });
 3327 | 365 | 
 3328 | 366 |       const response: ApiSuccessResponse<PropertyResponse> = {
 3329 | 367 |         status: 'success',
 3330 | 368 |         data: { property: mapProperty(property) }
 3331 | 369 |       };
 3332 | 370 | 
 3333 | 371 |       res.json(response);
 3334 | 372 |     } catch (error) {
 3335 | 373 |       handleError(error, res);
 3336 | 374 |     }
 3337 | 375 |   }
 3338 | 376 | );
 3339 | 377 | 
 3340 | 378 | // Delete property (admin only)
 3341 | 379 | router.delete('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 3342 | 380 |   try {
 3343 | 381 |     await prisma.property.delete({
 3344 | 382 |       where: { id: req.params.id },
 3345 | 383 |     });
 3346 | 384 | 
 3347 | 385 |     const response: ApiSuccessResponse<null> = {
 3348 | 386 |       status: 'success',
 3349 | 387 |       data: null
 3350 | 388 |     };
 3351 | 389 | 
 3352 | 390 |     res.status(204).json(response);
 3353 | 391 |   } catch (error) {
 3354 | 392 |     handleError(error, res);
 3355 | 393 |   }
 3356 | 394 | });
 3357 | 395 | 
 3358 | 396 | export const propertyRoutes = router; 
 3359 | 397 | 
 3360 | 
 3361 | 
 3362 | --------------------------------------------------------------------------------
 3363 | /apps/api/src/routes/users.ts:
 3364 | --------------------------------------------------------------------------------
 3365 |   1 | import { Router, Response } from 'express';
 3366 |   2 | import { z } from 'zod';
 3367 |   3 | import prisma from '../lib/prisma';
 3368 |   4 | import { protect, restrictTo } from '../middleware/auth';
 3369 |   5 | import { AppError } from '../middleware/error';
 3370 |   6 | import { 
 3371 |   7 |   ApiSuccessResponse, 
 3372 |   8 |   ApiErrorResponse,
 3373 |   9 |   ApiErrorCode,
 3374 |  10 |   UserRole,
 3375 |  11 |   User,
 3376 |  12 |   UsersResponse,
 3377 |  13 |   UserResponse,
 3378 |  14 |   CreateUserInput,
 3379 |  15 |   UpdateUserInput
 3380 |  16 | } from '@avalon/shared-types';
 3381 |  17 | 
 3382 |  18 | const router = Router();
 3383 |  19 | 
 3384 |  20 | const userSchema = z.object({
 3385 |  21 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 3386 |  22 |   email: z.string().email('Invalid email address'),
 3387 |  23 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 3388 |  24 |   role: z.nativeEnum(UserRole).default(UserRole.USER),
 3389 |  25 | }) satisfies z.ZodType<CreateUserInput>;
 3390 |  26 | 
 3391 |  27 | const handleError = (error: unknown, res: Response) => {
 3392 |  28 |   if (error instanceof z.ZodError) {
 3393 |  29 |     const response: ApiErrorResponse = {
 3394 |  30 |       status: 'error',
 3395 |  31 |       message: 'Invalid input data',
 3396 |  32 |       code: ApiErrorCode.VALIDATION_ERROR,
 3397 |  33 |       errors: error.errors.reduce((acc, err) => {
 3398 |  34 |         const path = err.path.join('.');
 3399 |  35 |         acc[path] = [err.message];
 3400 |  36 |         return acc;
 3401 |  37 |       }, {} as Record<string, string[]>)
 3402 |  38 |     };
 3403 |  39 |     res.status(400).json(response);
 3404 |  40 |   } else if (error instanceof AppError) {
 3405 |  41 |     const response: ApiErrorResponse = {
 3406 |  42 |       status: 'error',
 3407 |  43 |       message: error.message,
 3408 |  44 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 3409 |  45 |     };
 3410 |  46 |     res.status(error.statusCode).json(response);
 3411 |  47 |   } else {
 3412 |  48 |     console.error(error);
 3413 |  49 |     const response: ApiErrorResponse = {
 3414 |  50 |       status: 'error',
 3415 |  51 |       message: 'Internal server error',
 3416 |  52 |       code: ApiErrorCode.INTERNAL_ERROR
 3417 |  53 |     };
 3418 |  54 |     res.status(500).json(response);
 3419 |  55 |   }
 3420 |  56 | };
 3421 |  57 | 
 3422 |  58 | const mapUser = (user: { id: string; name: string; email: string; role: string; createdAt: Date }): User => ({
 3423 |  59 |   ...user,
 3424 |  60 |   role: user.role as UserRole,
 3425 |  61 |   createdAt: user.createdAt.toISOString()
 3426 |  62 | });
 3427 |  63 | 
 3428 |  64 | // Get all users (admin only)
 3429 |  65 | router.get('/', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 3430 |  66 |   try {
 3431 |  67 |     const { page = '1', limit = '10' } = req.query;
 3432 |  68 |     const skip = (parseInt(page as string) - 1) * parseInt(limit as string);
 3433 |  69 | 
 3434 |  70 |     const [users, total] = await Promise.all([
 3435 |  71 |       prisma.user.findMany({
 3436 |  72 |         select: {
 3437 |  73 |           id: true,
 3438 |  74 |           name: true,
 3439 |  75 |           email: true,
 3440 |  76 |           role: true,
 3441 |  77 |           createdAt: true,
 3442 |  78 |         },
 3443 |  79 |         skip,
 3444 |  80 |         take: parseInt(limit as string),
 3445 |  81 |         orderBy: { createdAt: 'desc' },
 3446 |  82 |       }),
 3447 |  83 |       prisma.user.count(),
 3448 |  84 |     ]);
 3449 |  85 | 
 3450 |  86 |     const response: ApiSuccessResponse<UsersResponse> = {
 3451 |  87 |       status: 'success',
 3452 |  88 |       data: {
 3453 |  89 |         users: users.map(mapUser),
 3454 |  90 |         meta: {
 3455 |  91 |           total,
 3456 |  92 |           page: parseInt(page as string),
 3457 |  93 |           pageSize: parseInt(limit as string),
 3458 |  94 |           totalPages: Math.ceil(total / parseInt(limit as string)),
 3459 |  95 |           hasNextPage: skip + parseInt(limit as string) < total,
 3460 |  96 |           hasPreviousPage: parseInt(page as string) > 1
 3461 |  97 |         }
 3462 |  98 |       }
 3463 |  99 |     };
 3464 | 100 | 
 3465 | 101 |     res.json(response);
 3466 | 102 |   } catch (error) {
 3467 | 103 |     handleError(error, res);
 3468 | 104 |   }
 3469 | 105 | });
 3470 | 106 | 
 3471 | 107 | // Get single user (admin only)
 3472 | 108 | router.get('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 3473 | 109 |   try {
 3474 | 110 |     const user = await prisma.user.findUnique({
 3475 | 111 |       where: { id: req.params.id },
 3476 | 112 |       select: {
 3477 | 113 |         id: true,
 3478 | 114 |         name: true,
 3479 | 115 |         email: true,
 3480 | 116 |         role: true,
 3481 | 117 |         createdAt: true,
 3482 | 118 |       },
 3483 | 119 |     });
 3484 | 120 | 
 3485 | 121 |     if (!user) {
 3486 | 122 |       throw new AppError(404, 'User not found');
 3487 | 123 |     }
 3488 | 124 | 
 3489 | 125 |     const response: ApiSuccessResponse<UserResponse> = {
 3490 | 126 |       status: 'success',
 3491 | 127 |       data: { user: mapUser(user) }
 3492 | 128 |     };
 3493 | 129 | 
 3494 | 130 |     res.json(response);
 3495 | 131 |   } catch (error) {
 3496 | 132 |     handleError(error, res);
 3497 | 133 |   }
 3498 | 134 | });
 3499 | 135 | 
 3500 | 136 | // Create user (admin only)
 3501 | 137 | router.post('/', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 3502 | 138 |   try {
 3503 | 139 |     const data = userSchema.parse(req.body);
 3504 | 140 | 
 3505 | 141 |     const existingUser = await prisma.user.findUnique({
 3506 | 142 |       where: { email: data.email },
 3507 | 143 |     });
 3508 | 144 | 
 3509 | 145 |     if (existingUser) {
 3510 | 146 |       throw new AppError(400, 'User already exists');
 3511 | 147 |     }
 3512 | 148 | 
 3513 | 149 |     const user = await prisma.user.create({
 3514 | 150 |       data,
 3515 | 151 |       select: {
 3516 | 152 |         id: true,
 3517 | 153 |         name: true,
 3518 | 154 |         email: true,
 3519 | 155 |         role: true,
 3520 | 156 |         createdAt: true,
 3521 | 157 |       },
 3522 | 158 |     });
 3523 | 159 | 
 3524 | 160 |     const response: ApiSuccessResponse<UserResponse> = {
 3525 | 161 |       status: 'success',
 3526 | 162 |       data: { user: mapUser(user) }
 3527 | 163 |     };
 3528 | 164 | 
 3529 | 165 |     res.status(201).json(response);
 3530 | 166 |   } catch (error) {
 3531 | 167 |     handleError(error, res);
 3532 | 168 |   }
 3533 | 169 | });
 3534 | 170 | 
 3535 | 171 | // Update user (admin only)
 3536 | 172 | router.patch('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 3537 | 173 |   try {
 3538 | 174 |     const data = userSchema.partial().parse(req.body) as UpdateUserInput;
 3539 | 175 | 
 3540 | 176 |     if (data.email) {
 3541 | 177 |       const existingUser = await prisma.user.findFirst({
 3542 | 178 |         where: {
 3543 | 179 |           email: data.email,
 3544 | 180 |           NOT: { id: req.params.id },
 3545 | 181 |         },
 3546 | 182 |       });
 3547 | 183 | 
 3548 | 184 |       if (existingUser) {
 3549 | 185 |         throw new AppError(400, 'Email already in use');
 3550 | 186 |       }
 3551 | 187 |     }
 3552 | 188 | 
 3553 | 189 |     const user = await prisma.user.update({
 3554 | 190 |       where: { id: req.params.id },
 3555 | 191 |       data,
 3556 | 192 |       select: {
 3557 | 193 |         id: true,
 3558 | 194 |         name: true,
 3559 | 195 |         email: true,
 3560 | 196 |         role: true,
 3561 | 197 |         createdAt: true,
 3562 | 198 |       },
 3563 | 199 |     });
 3564 | 200 | 
 3565 | 201 |     const response: ApiSuccessResponse<UserResponse> = {
 3566 | 202 |       status: 'success',
 3567 | 203 |       data: { user: mapUser(user) }
 3568 | 204 |     };
 3569 | 205 | 
 3570 | 206 |     res.json(response);
 3571 | 207 |   } catch (error) {
 3572 | 208 |     handleError(error, res);
 3573 | 209 |   }
 3574 | 210 | });
 3575 | 211 | 
 3576 | 212 | // Delete user (admin only)
 3577 | 213 | router.delete('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 3578 | 214 |   try {
 3579 | 215 |     await prisma.user.delete({
 3580 | 216 |       where: { id: req.params.id },
 3581 | 217 |     });
 3582 | 218 | 
 3583 | 219 |     const response: ApiSuccessResponse<null> = {
 3584 | 220 |       status: 'success',
 3585 | 221 |       data: null
 3586 | 222 |     };
 3587 | 223 | 
 3588 | 224 |     res.status(204).json(response);
 3589 | 225 |   } catch (error) {
 3590 | 226 |     handleError(error, res);
 3591 | 227 |   }
 3592 | 228 | });
 3593 | 229 | 
 3594 | 230 | export const userRoutes = router; 
 3595 | 231 | 
 3596 | 
 3597 | 
 3598 | --------------------------------------------------------------------------------
 3599 | /apps/api/src/server.ts:
 3600 | --------------------------------------------------------------------------------
 3601 |  1 | import express from 'express';
 3602 |  2 | import cors from 'cors';
 3603 |  3 | import { errorHandler } from './middleware/error';
 3604 |  4 | import { authRoutes } from './routes/auth';
 3605 |  5 | import { propertyRoutes } from './routes/properties';
 3606 |  6 | import { contactRoutes } from './routes/contact';
 3607 |  7 | import { adminRoutes } from './routes/admin';
 3608 |  8 | import { locationRoutes } from './routes/locations';
 3609 |  9 | import path from 'path';
 3610 | 10 | 
 3611 | 11 | const app = express();
 3612 | 12 | 
 3613 | 13 | // Middleware
 3614 | 14 | app.use(cors());
 3615 | 15 | app.use(express.json());
 3616 | 16 | 
 3617 | 17 | // Serve static files from uploads directory
 3618 | 18 | app.use('/uploads', express.static(path.join(process.cwd(), 'uploads')));
 3619 | 19 | 
 3620 | 20 | // Routes
 3621 | 21 | app.use('/api/auth', authRoutes);
 3622 | 22 | app.use('/api/properties', propertyRoutes);
 3623 | 23 | app.use('/api/contact', contactRoutes);
 3624 | 24 | app.use('/api/admin', adminRoutes);
 3625 | 25 | app.use('/api/locations', locationRoutes);
 3626 | 26 | 
 3627 | 27 | // Error handling
 3628 | 28 | app.use(errorHandler);
 3629 | 29 | 
 3630 | 30 | export default app; 
 3631 | 31 | 
 3632 | 
 3633 | 
 3634 | --------------------------------------------------------------------------------
 3635 | /apps/api/src/types/contact.ts:
 3636 | --------------------------------------------------------------------------------
 3637 |  1 | import { z } from 'zod';
 3638 |  2 | import type { ContactMessage } from '@prisma/client';
 3639 |  3 | 
 3640 |  4 | export const ContactFormSchema = z.object({
 3641 |  5 |   name: z.string().min(2, 'Name must be at least 2 characters long'),
 3642 |  6 |   email: z.string().email('Invalid email address'),
 3643 |  7 |   message: z.string().min(10, 'Message must be at least 10 characters long'),
 3644 |  8 |   recaptchaToken: z.string(),
 3645 |  9 | });
 3646 | 10 | 
 3647 | 11 | export type ContactFormData = z.infer<typeof ContactFormSchema>;
 3648 | 12 | 
 3649 | 13 | export interface ContactFormResponse {
 3650 | 14 |   success: boolean;
 3651 | 15 |   message: string;
 3652 | 16 |   data?: {
 3653 | 17 |     message: ContactMessage;
 3654 | 18 |   };
 3655 | 19 | }
 3656 | 20 | 
 3657 | 21 | export interface MessagesResponse {
 3658 | 22 |   success: boolean;
 3659 | 23 |   data: {
 3660 | 24 |     items: ContactMessage[];
 3661 | 25 |     total: number;
 3662 | 26 |     page: number;
 3663 | 27 |     pages: number;
 3664 | 28 |     hasNextPage: boolean;
 3665 | 29 |   };
 3666 | 30 | }
 3667 | 31 | 
 3668 | 32 | export interface MessageResponse {
 3669 | 33 |   success: boolean;
 3670 | 34 |   data: {
 3671 | 35 |     message: ContactMessage;
 3672 | 36 |   };
 3673 | 37 | } 
 3674 | 38 | 
 3675 | 
 3676 | 
 3677 | --------------------------------------------------------------------------------
 3678 | /apps/api/src/types/express.d.ts:
 3679 | --------------------------------------------------------------------------------
 3680 |  1 | import { Request } from 'express';
 3681 |  2 | import { Role } from '@prisma/client';
 3682 |  3 | 
 3683 |  4 | declare global {
 3684 |  5 |   namespace Express {
 3685 |  6 |     interface Request {
 3686 |  7 |       user?: {
 3687 |  8 |         id: string;
 3688 |  9 |         email: string;
 3689 | 10 |         role: Role;
 3690 | 11 |       };
 3691 | 12 |       files?: Express.Multer.File[];
 3692 | 13 |     }
 3693 | 14 |   }
 3694 | 15 | }
 3695 | 16 | 
 3696 | 17 | export {}; 
 3697 | 18 | 
 3698 | 
 3699 | 
 3700 | --------------------------------------------------------------------------------
 3701 | /apps/api/src/types/multer.d.ts:
 3702 | --------------------------------------------------------------------------------
 3703 |  1 | declare namespace Express {
 3704 |  2 |   namespace Multer {
 3705 |  3 |     interface File {
 3706 |  4 |       fieldname: string;
 3707 |  5 |       originalname: string;
 3708 |  6 |       encoding: string;
 3709 |  7 |       mimetype: string;
 3710 |  8 |       size: number;
 3711 |  9 |       destination: string;
 3712 | 10 |       filename: string;
 3713 | 11 |       path: string;
 3714 | 12 |       buffer: Buffer;
 3715 | 13 |     }
 3716 | 14 |   }
 3717 | 15 | } 
 3718 | 16 | 
 3719 | 
 3720 | 
 3721 | --------------------------------------------------------------------------------
 3722 | /apps/api/tsconfig.json:
 3723 | --------------------------------------------------------------------------------
 3724 |  1 | {
 3725 |  2 |   "compilerOptions": {
 3726 |  3 |     "target": "ES2020",
 3727 |  4 |     "module": "ESNext",
 3728 |  5 |     "moduleResolution": "Bundler",
 3729 |  6 |     "esModuleInterop": true,
 3730 |  7 |     "strict": true,
 3731 |  8 |     "skipLibCheck": true,
 3732 |  9 |     "forceConsistentCasingInFileNames": true,
 3733 | 10 |     "outDir": "dist",
 3734 | 11 |     "rootDir": "src",
 3735 | 12 |     "baseUrl": ".",
 3736 | 13 |     "allowImportingTsExtensions": true,
 3737 | 14 |     "declaration": true,
 3738 | 15 |     "emitDeclarationOnly": true,
 3739 | 16 |     "paths": {
 3740 | 17 |       "@/*": ["src/*"]
 3741 | 18 |     }
 3742 | 19 |   },
 3743 | 20 |   "include": ["src/**/*"],
 3744 | 21 |   "exclude": ["node_modules", "dist"]
 3745 | 22 | }
 3746 | 23 | 
 3747 | 
 3748 | 
 3749 | --------------------------------------------------------------------------------
 3750 | /apps/api/tsup.config.ts:
 3751 | --------------------------------------------------------------------------------
 3752 |  1 | import { defineConfig } from 'tsup'
 3753 |  2 | 
 3754 |  3 | export default defineConfig({
 3755 |  4 |   entry: ['src/index.ts'],
 3756 |  5 |   format: ['esm'],
 3757 |  6 |   dts: true,
 3758 |  7 |   splitting: false,
 3759 |  8 |   sourcemap: true,
 3760 |  9 |   clean: true,
 3761 | 10 |   treeshake: true,
 3762 | 11 |   // Important for Prisma
 3763 | 12 |   external: ['@prisma/client'],
 3764 | 13 |   // Needed for __dirname, require, etc
 3765 | 14 |   banner: {
 3766 | 15 |     js: `import { createRequire } from 'module';
 3767 | 16 | const require = createRequire(import.meta.url);
 3768 | 17 | import { fileURLToPath } from 'url';
 3769 | 18 | import { dirname } from 'path';
 3770 | 19 | const __filename = fileURLToPath(import.meta.url);
 3771 | 20 | const __dirname = dirname(__filename);`,
 3772 | 21 |   },
 3773 | 22 |   esbuildOptions(options) {
 3774 | 23 |     options.platform = 'node'
 3775 | 24 |     options.target = 'node20'
 3776 | 25 |   }
 3777 | 26 | }) 
 3778 | 27 | 
 3779 | 
 3780 | 
 3781 | --------------------------------------------------------------------------------
 3782 | /apps/api/uploads/.gitkeep:
 3783 | --------------------------------------------------------------------------------
 3784 | https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/api/uploads/.gitkeep
 3785 | 
 3786 | 
 3787 | --------------------------------------------------------------------------------
 3788 | /apps/web/.gitignore:
 3789 | --------------------------------------------------------------------------------
 3790 |  1 | # Logs
 3791 |  2 | logs
 3792 |  3 | *.log
 3793 |  4 | npm-debug.log*
 3794 |  5 | yarn-debug.log*
 3795 |  6 | yarn-error.log*
 3796 |  7 | pnpm-debug.log*
 3797 |  8 | lerna-debug.log*
 3798 |  9 | 
 3799 | 10 | node_modules
 3800 | 11 | dist
 3801 | 12 | dist-ssr
 3802 | 13 | *.local
 3803 | 14 | 
 3804 | 15 | # Editor directories and files
 3805 | 16 | .vscode/*
 3806 | 17 | !.vscode/extensions.json
 3807 | 18 | .idea
 3808 | 19 | .DS_Store
 3809 | 20 | *.suo
 3810 | 21 | *.ntvs*
 3811 | 22 | *.njsproj
 3812 | 23 | *.sln
 3813 | 24 | *.sw?
 3814 | 25 | 
 3815 | 
 3816 | 
 3817 | --------------------------------------------------------------------------------
 3818 | /apps/web/README.md:
 3819 | --------------------------------------------------------------------------------
 3820 |  1 | # React + TypeScript + Vite
 3821 |  2 | 
 3822 |  3 | This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
 3823 |  4 | 
 3824 |  5 | Currently, two official plugins are available:
 3825 |  6 | 
 3826 |  7 | - [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
 3827 |  8 | - [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
 3828 |  9 | 
 3829 | 10 | ## Expanding the ESLint configuration
 3830 | 11 | 
 3831 | 12 | If you are developing a production application, we recommend updating the configuration to enable type aware lint rules:
 3832 | 13 | 
 3833 | 14 | - Configure the top-level `parserOptions` property like this:
 3834 | 15 | 
 3835 | 16 | ```js
 3836 | 17 | export default tseslint.config({
 3837 | 18 |   languageOptions: {
 3838 | 19 |     // other options...
 3839 | 20 |     parserOptions: {
 3840 | 21 |       project: ['./tsconfig.node.json', './tsconfig.app.json'],
 3841 | 22 |       tsconfigRootDir: import.meta.dirname,
 3842 | 23 |     },
 3843 | 24 |   },
 3844 | 25 | })
 3845 | 26 | ```
 3846 | 27 | 
 3847 | 28 | - Replace `tseslint.configs.recommended` to `tseslint.configs.recommendedTypeChecked` or `tseslint.configs.strictTypeChecked`
 3848 | 29 | - Optionally add `...tseslint.configs.stylisticTypeChecked`
 3849 | 30 | - Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and update the config:
 3850 | 31 | 
 3851 | 32 | ```js
 3852 | 33 | // eslint.config.js
 3853 | 34 | import react from 'eslint-plugin-react'
 3854 | 35 | 
 3855 | 36 | export default tseslint.config({
 3856 | 37 |   // Set the react version
 3857 | 38 |   settings: { react: { version: '18.3' } },
 3858 | 39 |   plugins: {
 3859 | 40 |     // Add the react plugin
 3860 | 41 |     react,
 3861 | 42 |   },
 3862 | 43 |   rules: {
 3863 | 44 |     // other rules...
 3864 | 45 |     // Enable its recommended rules
 3865 | 46 |     ...react.configs.recommended.rules,
 3866 | 47 |     ...react.configs['jsx-runtime'].rules,
 3867 | 48 |   },
 3868 | 49 | })
 3869 | 50 | ```
 3870 | 51 | 
 3871 | 
 3872 | 
 3873 | --------------------------------------------------------------------------------
 3874 | /apps/web/eslint.config.js:
 3875 | --------------------------------------------------------------------------------
 3876 |  1 | import js from '@eslint/js'
 3877 |  2 | import globals from 'globals'
 3878 |  3 | import reactHooks from 'eslint-plugin-react-hooks'
 3879 |  4 | import reactRefresh from 'eslint-plugin-react-refresh'
 3880 |  5 | import tseslint from 'typescript-eslint'
 3881 |  6 | 
 3882 |  7 | export default tseslint.config(
 3883 |  8 |   { ignores: ['dist'] },
 3884 |  9 |   {
 3885 | 10 |     extends: [js.configs.recommended, ...tseslint.configs.recommended],
 3886 | 11 |     files: ['**/*.{ts,tsx}'],
 3887 | 12 |     languageOptions: {
 3888 | 13 |       ecmaVersion: 2020,
 3889 | 14 |       globals: globals.browser,
 3890 | 15 |     },
 3891 | 16 |     plugins: {
 3892 | 17 |       'react-hooks': reactHooks,
 3893 | 18 |       'react-refresh': reactRefresh,
 3894 | 19 |     },
 3895 | 20 |     rules: {
 3896 | 21 |       ...reactHooks.configs.recommended.rules,
 3897 | 22 |       'react-refresh/only-export-components': [
 3898 | 23 |         'warn',
 3899 | 24 |         { allowConstantExport: true },
 3900 | 25 |       ],
 3901 | 26 |     },
 3902 | 27 |   },
 3903 | 28 | )
 3904 | 29 | 
 3905 | 
 3906 | 
 3907 | --------------------------------------------------------------------------------
 3908 | /apps/web/index.html:
 3909 | --------------------------------------------------------------------------------
 3910 |  1 | <!doctype html>
 3911 |  2 | <html lang="en">
 3912 |  3 |   <head>
 3913 |  4 |     <meta charset="UTF-8" />
 3914 |  5 |     <link rel="icon" type="image/svg+xml" href="/vite.svg" />
 3915 |  6 |     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 3916 |  7 |     <title>Vite + React + TS</title>
 3917 |  8 |   </head>
 3918 |  9 |   <body>
 3919 | 10 |     <div id="root"></div>
 3920 | 11 |     <script type="module" src="/src/main.tsx"></script>
 3921 | 12 |   </body>
 3922 | 13 | </html>
 3923 | 14 | 
 3924 | 
 3925 | 
 3926 | --------------------------------------------------------------------------------
 3927 | /apps/web/package.json:
 3928 | --------------------------------------------------------------------------------
 3929 |  1 | {
 3930 |  2 |   "name": "web",
 3931 |  3 |   "private": true,
 3932 |  4 |   "version": "0.0.0",
 3933 |  5 |   "type": "module",
 3934 |  6 |   "scripts": {
 3935 |  7 |     "dev": "vite",
 3936 |  8 |     "build": "tsc && vite build",
 3937 |  9 |     "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
 3938 | 10 |     "preview": "vite preview",
 3939 | 11 |     "test": "vitest",
 3940 | 12 |     "coverage": "vitest run --coverage"
 3941 | 13 |   },
 3942 | 14 |   "dependencies": {
 3943 | 15 |     "@headlessui/react": "^1.7.17",
 3944 | 16 |     "@heroicons/react": "^2.0.18",
 3945 | 17 |     "@react-google-maps/api": "^2.20.5",
 3946 | 18 |     "@tanstack/react-query": "^5.64.1",
 3947 | 19 |     "@tanstack/react-query-devtools": "^5.64.1",
 3948 | 20 |     "axios": "^1.6.2",
 3949 | 21 |     "clsx": "^2.0.0",
 3950 | 22 |     "react": "^18.2.0",
 3951 | 23 |     "react-dom": "^18.2.0",
 3952 | 24 |     "react-router-dom": "^6.20.1",
 3953 | 25 |     "react-transition-group": "^4.4.5",
 3954 | 26 |     "zod": "^3.22.4"
 3955 | 27 |   },
 3956 | 28 |   "devDependencies": {
 3957 | 29 |     "@testing-library/jest-dom": "^6.1.5",
 3958 | 30 |     "@testing-library/react": "^14.1.2",
 3959 | 31 |     "@testing-library/user-event": "^14.5.1",
 3960 | 32 |     "@types/react": "^18.2.37",
 3961 | 33 |     "@types/react-dom": "^18.2.15",
 3962 | 34 |     "@types/react-transition-group": "^4.4.12",
 3963 | 35 |     "@typescript-eslint/eslint-plugin": "^6.10.0",
 3964 | 36 |     "@typescript-eslint/parser": "^6.10.0",
 3965 | 37 |     "@vitejs/plugin-react": "^4.2.0",
 3966 | 38 |     "@vitejs/plugin-react-swc": "^3.7.2",
 3967 | 39 |     "@vitest/coverage-v8": "^1.0.4",
 3968 | 40 |     "autoprefixer": "^10.4.16",
 3969 | 41 |     "eslint": "^8.53.0",
 3970 | 42 |     "eslint-plugin-react-hooks": "^4.6.0",
 3971 | 43 |     "eslint-plugin-react-refresh": "^0.4.4",
 3972 | 44 |     "happy-dom": "^12.10.3",
 3973 | 45 |     "postcss": "^8.4.32",
 3974 | 46 |     "tailwindcss": "^3.3.6",
 3975 | 47 |     "typescript": "^5.2.2",
 3976 | 48 |     "vite": "^5.0.0",
 3977 | 49 |     "vitest": "^1.0.4"
 3978 | 50 |   }
 3979 | 51 | }
 3980 | 52 | 
 3981 | 
 3982 | 
 3983 | --------------------------------------------------------------------------------
 3984 | /apps/web/postcss.config.js:
 3985 | --------------------------------------------------------------------------------
 3986 | 1 | export default {
 3987 | 2 |   plugins: {
 3988 | 3 |     tailwindcss: {},
 3989 | 4 |     autoprefixer: {}
 3990 | 5 |   }
 3991 | 6 | };
 3992 | 7 | 
 3993 | 
 3994 | 
 3995 | --------------------------------------------------------------------------------
 3996 | /apps/web/public/images/about-us.jpg:
 3997 | --------------------------------------------------------------------------------
 3998 | https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/about-us.jpg
 3999 | 
 4000 | 
 4001 | --------------------------------------------------------------------------------
 4002 | /apps/web/public/images/contact.jpg:
 4003 | --------------------------------------------------------------------------------
 4004 | https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/contact.jpg
 4005 | 
 4006 | 
 4007 | --------------------------------------------------------------------------------
 4008 | /apps/web/public/images/homepage-hero.webp:
 4009 | --------------------------------------------------------------------------------
 4010 | https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/homepage-hero.webp
 4011 | 
 4012 | 
 4013 | --------------------------------------------------------------------------------
 4014 | /apps/web/public/images/logo.png:
 4015 | --------------------------------------------------------------------------------
 4016 | https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/logo.png
 4017 | 
 4018 | 
 4019 | --------------------------------------------------------------------------------
 4020 | /apps/web/public/images/logo.svg:
 4021 | --------------------------------------------------------------------------------
 4022 |  1 | <svg width="125" height="49" viewBox="0 0 125 49" fill="none" xmlns="http://www.w3.org/2000/svg">
 4023 |  2 |   <path fill-rule="evenodd" clip-rule="evenodd"
 4024 |  3 |     d="M12.299 23.96C6.689 27.38 3.841 35.889 6.031 42.685C7.852 48.335 8.69 49.098 11.615 47.766C13.111 47.084 13.864 46.088 13.534 45.229C13.236 44.451 12.72 42.731 12.387 41.407C11.833 39.197 12.079 39 15.392 39C18.541 39 19 39.307 19 41.418C19 45.568 20.054 47 23.107 47H26V37.437V27.873L22.75 28.187C20.11 28.441 19.515 28.922 19.579 30.75C19.646 32.649 19.139 33 16.329 33C12.315 33 12.111 31.845 15.635 29.073C17.408 27.678 19.732 27 22.742 27C26.409 27 27.105 26.715 26.607 25.418C26.273 24.548 26 23.423 26 22.918C26 21.139 15.632 21.927 12.299 23.96ZM30 37.573V47.145L35.75 46.896C43.345 46.566 44.868 46.116 46.087 43.838C46.823 42.462 46.723 41.15 45.729 39.158C44.712 37.12 44.62 35.777 45.381 34.072C47.022 30.395 43.278 28 35.889 28H30V37.573ZM53.763 29.565C48.483 32.43 46.44 39.852 49.791 43.99C51.23 45.768 52.9 46.29 58.291 46.647L65 47.093V37.546V28L60.75 28.04C58.413 28.062 55.268 28.748 53.763 29.565ZM73.286 29.728C69.31 31.708 67 36.365 67 42.401C67 46.844 67.102 47 70 47C72.895 47 73 46.841 73 42.434C73 39.923 73.466 36.998 74.035 35.934C75.491 33.214 78.189 33.431 77.961 36.25C77.861 37.487 77.828 40.413 77.889 42.75C77.989 46.587 78.243 47 80.5 47C82.991 47 83 46.967 83 37.5V28L79.75 28.064C77.963 28.099 75.054 28.848 73.286 29.728ZM89.827 29.701C85.575 34.571 84.575 42.4 87.829 45.345C90.443 47.711 99.148 47.599 101.345 45.171C103.769 42.493 103.461 35.983 100.718 31.898C97.965 27.799 92.458 26.689 89.827 29.701ZM106 37.566V47.133L108.75 46.816C111.102 46.546 111.572 45.952 112 42.717C112.275 40.636 112.838 38.949 113.25 38.967C113.662 38.985 114.45 39 115 39C115.55 39 116 40.83 116 43.066C116 46.913 116.149 47.116 118.75 46.816L121.5 46.5L121.788 37.25L122.075 28H119.038C116.329 28 116 28.325 116 31C116 33.333 115.556 34 114 34C112.444 34 112 33.333 112 31C112 28.333 111.667 28 109 28H106V37.566ZM36 37.5C36 41.333 36.296 42 38 42C40.467 42 40.596 40.161 38.25 38.428C36.848 37.392 36.748 36.883 37.75 35.867C39.429 34.166 39.327 33 37.5 33C36.389 33 36 34.167 36 37.5ZM55.44 35.451C53.357 38.63 53.935 41.416 56.76 41.82C58.8 42.111 59 41.731 59 37.57C59 32.472 57.843 31.783 55.44 35.451ZM92.607 34.582C92.273 35.452 92 37.477 92 39.082C92 41.528 92.404 42 94.5 42C96.662 42 97 41.553 97 38.7C97 34.039 93.922 31.154 92.607 34.582Z"
 4025 |  4 |     fill="black" />
 4026 |  5 |   <path
 4027 |  6 |     d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
 4028 |  7 |     fill="black" />
 4029 |  8 |   <path
 4030 |  9 |     d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
 4031 | 10 |     fill="#D9261E" />
 4032 | 11 | </svg>
 4033 | 12 | 
 4034 | 
 4035 | 
 4036 | --------------------------------------------------------------------------------
 4037 | /apps/web/public/images/property-placeholder.webp:
 4038 | --------------------------------------------------------------------------------
 4039 | https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/property-placeholder.webp
 4040 | 
 4041 | 
 4042 | --------------------------------------------------------------------------------
 4043 | /apps/web/public/vite.svg:
 4044 | --------------------------------------------------------------------------------
 4045 | 1 | <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
 4046 | 
 4047 | 
 4048 | --------------------------------------------------------------------------------
 4049 | /apps/web/src/App.css:
 4050 | --------------------------------------------------------------------------------
 4051 |  1 | #root {
 4052 |  2 |   max-width: 1280px;
 4053 |  3 |   margin: 0 auto;
 4054 |  4 |   padding: 2rem;
 4055 |  5 |   text-align: center;
 4056 |  6 | }
 4057 |  7 | 
 4058 |  8 | .logo {
 4059 |  9 |   height: 6em;
 4060 | 10 |   padding: 1.5em;
 4061 | 11 |   will-change: filter;
 4062 | 12 |   transition: filter 300ms;
 4063 | 13 | }
 4064 | 14 | .logo:hover {
 4065 | 15 |   filter: drop-shadow(0 0 2em #646cffaa);
 4066 | 16 | }
 4067 | 17 | .logo.react:hover {
 4068 | 18 |   filter: drop-shadow(0 0 2em #61dafbaa);
 4069 | 19 | }
 4070 | 20 | 
 4071 | 21 | @keyframes logo-spin {
 4072 | 22 |   from {
 4073 | 23 |     transform: rotate(0deg);
 4074 | 24 |   }
 4075 | 25 |   to {
 4076 | 26 |     transform: rotate(360deg);
 4077 | 27 |   }
 4078 | 28 | }
 4079 | 29 | 
 4080 | 30 | @media (prefers-reduced-motion: no-preference) {
 4081 | 31 |   a:nth-of-type(2) .logo {
 4082 | 32 |     animation: logo-spin infinite 20s linear;
 4083 | 33 |   }
 4084 | 34 | }
 4085 | 35 | 
 4086 | 36 | .card {
 4087 | 37 |   padding: 2em;
 4088 | 38 | }
 4089 | 39 | 
 4090 | 40 | .read-the-docs {
 4091 | 41 |   color: #888;
 4092 | 42 | }
 4093 | 43 | 
 4094 | 
 4095 | 
 4096 | --------------------------------------------------------------------------------
 4097 | /apps/web/src/App.tsx:
 4098 | --------------------------------------------------------------------------------
 4099 |  1 | import { BrowserRouter } from 'react-router-dom';
 4100 |  2 | import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
 4101 |  3 | import { ReactQueryDevtools } from '@tanstack/react-query-devtools';
 4102 |  4 | import AppRoutes from './AppRoutes';
 4103 |  5 | import { ThemeProvider } from './contexts/ThemeContext';
 4104 |  6 | import { AuthProvider } from './contexts/auth';
 4105 |  7 | 
 4106 |  8 | const queryClient = new QueryClient({
 4107 |  9 |   defaultOptions: {
 4108 | 10 |     queries: {
 4109 | 11 |       retry: 1,
 4110 | 12 |       refetchOnWindowFocus: false,
 4111 | 13 |     },
 4112 | 14 |   },
 4113 | 15 | });
 4114 | 16 | 
 4115 | 17 | export default function App() {
 4116 | 18 |   return (
 4117 | 19 |     <QueryClientProvider client={queryClient}>
 4118 | 20 |       <BrowserRouter>
 4119 | 21 |         <ThemeProvider>
 4120 | 22 |           <AuthProvider>
 4121 | 23 |             <AppRoutes />
 4122 | 24 |           </AuthProvider>
 4123 | 25 |         </ThemeProvider>
 4124 | 26 |       </BrowserRouter>
 4125 | 27 |       <ReactQueryDevtools />
 4126 | 28 |     </QueryClientProvider>
 4127 | 29 |   );
 4128 | 30 | }
 4129 | 31 | 
 4130 | 
 4131 | 
 4132 | --------------------------------------------------------------------------------
 4133 | /apps/web/src/AppRoutes.tsx:
 4134 | --------------------------------------------------------------------------------
 4135 |  1 | import { Routes, Route } from 'react-router-dom';
 4136 |  2 | import Home from './pages/Home';
 4137 |  3 | import About from './pages/About';
 4138 |  4 | import Contact from './pages/Contact';
 4139 |  5 | import PropertyDetails from './pages/PropertyDetails';
 4140 |  6 | import Properties from './pages/Properties';
 4141 |  7 | import AdminDashboard from './pages/admin/Dashboard';
 4142 |  8 | import AdminProperties from './pages/admin/Properties';
 4143 |  9 | import EditProperty from './pages/admin/EditProperty';
 4144 | 10 | import NewProperty from './pages/admin/NewProperty';
 4145 | 11 | import Messages from './pages/admin/Messages';
 4146 | 12 | import Users from './pages/admin/Users';
 4147 | 13 | import NewUser from './pages/admin/NewUser';
 4148 | 14 | import ProtectedRoute from './components/auth/ProtectedRoute';
 4149 | 15 | import AdminLayout from './components/admin/AdminLayout';
 4150 | 16 | import Layout from './components/layout/Layout';
 4151 | 17 | import Login from './pages/admin/Login';
 4152 | 18 | 
 4153 | 19 | export default function AppRoutes() {
 4154 | 20 |   return (
 4155 | 21 |     <Routes>
 4156 | 22 |       <Route element={<Layout />}>
 4157 | 23 |         <Route path="/" element={<Home />} />
 4158 | 24 |         <Route path="/about" element={<About />} />
 4159 | 25 |         <Route path="/contact" element={<Contact />} />
 4160 | 26 |         <Route path="/properties" element={<Properties />} />
 4161 | 27 |         <Route path="/properties/:id" element={<PropertyDetails />} />
 4162 | 28 |       </Route>
 4163 | 29 | 
 4164 | 30 |       {/* Admin Routes */}
 4165 | 31 |       <Route path="/admin/login" element={<Login />} />
 4166 | 32 |       
 4167 | 33 |       <Route
 4168 | 34 |         path="/admin"
 4169 | 35 |         element={
 4170 | 36 |           <ProtectedRoute>
 4171 | 37 |             <AdminLayout />
 4172 | 38 |           </ProtectedRoute>
 4173 | 39 |         }
 4174 | 40 |       >
 4175 | 41 |         <Route index element={<AdminDashboard />} />
 4176 | 42 |         <Route path="properties" element={<AdminProperties />} />
 4177 | 43 |         <Route path="properties/new" element={<NewProperty />} />
 4178 | 44 |         <Route path="properties/:id/edit" element={<EditProperty />} />
 4179 | 45 |         <Route path="messages" element={<Messages />} />
 4180 | 46 |         <Route path="users" element={<Users />} />
 4181 | 47 |         <Route path="users/new" element={<NewUser />} />
 4182 | 48 |       </Route>
 4183 | 49 |     </Routes>
 4184 | 50 |   );
 4185 | 51 | } 
 4186 | 52 | 
 4187 | 
 4188 | 
 4189 | --------------------------------------------------------------------------------
 4190 | /apps/web/src/assets/react.svg:
 4191 | --------------------------------------------------------------------------------
 4192 | 1 | <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
 4193 | 
 4194 | 
 4195 | --------------------------------------------------------------------------------
 4196 | /apps/web/src/components/LoadingSpinner.tsx:
 4197 | --------------------------------------------------------------------------------
 4198 | 1 | export default function LoadingSpinner() {
 4199 | 2 |   return (
 4200 | 3 |     <div className="w-12 h-12 rounded-full border-4 border-gray-200 border-t-primary-600 animate-spin" />
 4201 | 4 |   );
 4202 | 5 | } 
 4203 | 6 | 
 4204 | 
 4205 | 
 4206 | --------------------------------------------------------------------------------
 4207 | /apps/web/src/components/Logo.tsx:
 4208 | --------------------------------------------------------------------------------
 4209 |  1 | import { useTheme } from '../hooks/useTheme';
 4210 |  2 | 
 4211 |  3 | export default function Logo({ className = '' }: { className?: string }) {
 4212 |  4 |   const { isDark } = useTheme();
 4213 |  5 | 
 4214 |  6 |   return (
 4215 |  7 |     <svg 
 4216 |  8 |       className={className}
 4217 |  9 |       width="125" 
 4218 | 10 |       height="49" 
 4219 | 11 |       viewBox="0 0 125 49" 
 4220 | 12 |       fill="none" 
 4221 | 13 |       xmlns="http://www.w3.org/2000/svg"
 4222 | 14 |     >
 4223 | 15 |       <path 
 4224 | 16 |         fillRule="evenodd" 
 4225 | 17 |         clipRule="evenodd"
 4226 | 18 |         className={`${isDark ? 'fill-gray-200' : 'fill-gray-900'}`}
 4227 | 19 |         d="M12.299 23.96C6.689 27.38 3.841 35.889 6.031 42.685C7.852 48.335 8.69 49.098 11.615 47.766C13.111 47.084 13.864 46.088 13.534 45.229C13.236 44.451 12.72 42.731 12.387 41.407C11.833 39.197 12.079 39 15.392 39C18.541 39 19 39.307 19 41.418C19 45.568 20.054 47 23.107 47H26V37.437V27.873L22.75 28.187C20.11 28.441 19.515 28.922 19.579 30.75C19.646 32.649 19.139 33 16.329 33C12.315 33 12.111 31.845 15.635 29.073C17.408 27.678 19.732 27 22.742 27C26.409 27 27.105 26.715 26.607 25.418C26.273 24.548 26 23.423 26 22.918C26 21.139 15.632 21.927 12.299 23.96ZM30 37.573V47.145L35.75 46.896C43.345 46.566 44.868 46.116 46.087 43.838C46.823 42.462 46.723 41.15 45.729 39.158C44.712 37.12 44.62 35.777 45.381 34.072C47.022 30.395 43.278 28 35.889 28H30V37.573ZM53.763 29.565C48.483 32.43 46.44 39.852 49.791 43.99C51.23 45.768 52.9 46.29 58.291 46.647L65 47.093V37.546V28L60.75 28.04C58.413 28.062 55.268 28.748 53.763 29.565ZM73.286 29.728C69.31 31.708 67 36.365 67 42.401C67 46.844 67.102 47 70 47C72.895 47 73 46.841 73 42.434C73 39.923 73.466 36.998 74.035 35.934C75.491 33.214 78.189 33.431 77.961 36.25C77.861 37.487 77.828 40.413 77.889 42.75C77.989 46.587 78.243 47 80.5 47C82.991 47 83 46.967 83 37.5V28L79.75 28.064C77.963 28.099 75.054 28.848 73.286 29.728ZM89.827 29.701C85.575 34.571 84.575 42.4 87.829 45.345C90.443 47.711 99.148 47.599 101.345 45.171C103.769 42.493 103.461 35.983 100.718 31.898C97.965 27.799 92.458 26.689 89.827 29.701ZM106 37.566V47.133L108.75 46.816C111.102 46.546 111.572 45.952 112 42.717C112.275 40.636 112.838 38.949 113.25 38.967C113.662 38.985 114.45 39 115 39C115.55 39 116 40.83 116 43.066C116 46.913 116.149 47.116 118.75 46.816L121.5 46.5L121.788 37.25L122.075 28H119.038C116.329 28 116 28.325 116 31C116 33.333 115.556 34 114 34C112.444 34 112 33.333 112 31C112 28.333 111.667 28 109 28H106V37.566ZM36 37.5C36 41.333 36.296 42 38 42C40.467 42 40.596 40.161 38.25 38.428C36.848 37.392 36.748 36.883 37.75 35.867C39.429 34.166 39.327 33 37.5 33C36.389 33 36 34.167 36 37.5ZM55.44 35.451C53.357 38.63 53.935 41.416 56.76 41.82C58.8 42.111 59 41.731 59 37.57C59 32.472 57.843 31.783 55.44 35.451ZM92.607 34.582C92.273 35.452 92 37.477 92 39.082C92 41.528 92.404 42 94.5 42C96.662 42 97 41.553 97 38.7C97 34.039 93.922 31.154 92.607 34.582Z"
 4228 | 20 |       />
 4229 | 21 |       <path
 4230 | 22 |         className="fill-primary-600"
 4231 | 23 |         d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
 4232 | 24 |       />
 4233 | 25 |     </svg>
 4234 | 26 |   );
 4235 | 27 | } 
 4236 | 28 | 
 4237 | 
 4238 | 
 4239 | --------------------------------------------------------------------------------
 4240 | /apps/web/src/components/ThemeToggle.tsx:
 4241 | --------------------------------------------------------------------------------
 4242 |  1 | import { Fragment } from 'react';
 4243 |  2 | import { Menu, Transition } from '@headlessui/react';
 4244 |  3 | import { SunIcon, MoonIcon, ComputerDesktopIcon } from '@heroicons/react/24/outline';
 4245 |  4 | import { useTheme } from '../contexts/ThemeContext';
 4246 |  5 | 
 4247 |  6 | function classNames(...classes: string[]) {
 4248 |  7 |   return classes.filter(Boolean).join(' ');
 4249 |  8 | }
 4250 |  9 | 
 4251 | 10 | export default function ThemeToggle() {
 4252 | 11 |   const { theme, setTheme } = useTheme();
 4253 | 12 | 
 4254 | 13 |   const getIcon = () => {
 4255 | 14 |     switch (theme) {
 4256 | 15 |       case 'light':
 4257 | 16 |         return <SunIcon className="h-5 w-5" aria-hidden="true" />;
 4258 | 17 |       case 'dark':
 4259 | 18 |         return <MoonIcon className="h-5 w-5" aria-hidden="true" />;
 4260 | 19 |       case 'gray':
 4261 | 20 |         return <ComputerDesktopIcon className="h-5 w-5" aria-hidden="true" />;
 4262 | 21 |       default:
 4263 | 22 |         return <SunIcon className="h-5 w-5" aria-hidden="true" />;
 4264 | 23 |     }
 4265 | 24 |   };
 4266 | 25 | 
 4267 | 26 |   const themes = [
 4268 | 27 |     { name: 'Light', value: 'light', icon: SunIcon },
 4269 | 28 |     { name: 'Dark', value: 'dark', icon: MoonIcon },
 4270 | 29 |     { name: 'Gray', value: 'gray', icon: ComputerDesktopIcon },
 4271 | 30 |   ];
 4272 | 31 | 
 4273 | 32 |   return (
 4274 | 33 |     <Menu as="div" className="relative">
 4275 | 34 |       <Menu.Button
 4276 | 35 |         className="rounded-md p-2 text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500"
 4277 | 36 |         aria-label="Select theme"
 4278 | 37 |       >
 4279 | 38 |         {getIcon()}
 4280 | 39 |       </Menu.Button>
 4281 | 40 |       <Transition
 4282 | 41 |         as={Fragment}
 4283 | 42 |         enter="transition ease-out duration-100"
 4284 | 43 |         enterFrom="transform opacity-0 scale-95"
 4285 | 44 |         enterTo="transform opacity-100 scale-100"
 4286 | 45 |         leave="transition ease-in duration-75"
 4287 | 46 |         leaveFrom="transform opacity-100 scale-100"
 4288 | 47 |         leaveTo="transform opacity-0 scale-95"
 4289 | 48 |       >
 4290 | 49 |         <Menu.Items className="absolute right-0 z-10 mt-2 w-36 origin-top-right rounded-md bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
 4291 | 50 |           <div className="py-1">
 4292 | 51 |             {themes.map((themeOption) => (
 4293 | 52 |               <Menu.Item key={themeOption.value}>
 4294 | 53 |                 {({ active }) => (
 4295 | 54 |                   <button
 4296 | 55 |                     onClick={() => setTheme(themeOption.value as 'light' | 'dark' | 'gray')}
 4297 | 56 |                     className={classNames(
 4298 | 57 |                       active ? 'bg-gray-100 dark:bg-[rgb(var(--color-dark-border))]' : '',
 4299 | 58 |                       theme === themeOption.value ? 'text-primary-600 dark:text-primary-500' : 'text-gray-700 dark:text-[rgb(var(--color-dark-text))]',
 4300 | 59 |                       'group flex w-full items-center px-4 py-2 text-sm'
 4301 | 60 |                     )}
 4302 | 61 |                   >
 4303 | 62 |                     <themeOption.icon
 4304 | 63 |                       className={classNames(
 4305 | 64 |                         'mr-3 h-5 w-5',
 4306 | 65 |                         theme === themeOption.value ? 'text-primary-600 dark:text-primary-500' : 'text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))]'
 4307 | 66 |                       )}
 4308 | 67 |                       aria-hidden="true"
 4309 | 68 |                     />
 4310 | 69 |                     {themeOption.name}
 4311 | 70 |                   </button>
 4312 | 71 |                 )}
 4313 | 72 |               </Menu.Item>
 4314 | 73 |             ))}
 4315 | 74 |           </div>
 4316 | 75 |         </Menu.Items>
 4317 | 76 |       </Transition>
 4318 | 77 |     </Menu>
 4319 | 78 |   );
 4320 | 79 | } 
 4321 | 80 | 
 4322 | 
 4323 | 
 4324 | --------------------------------------------------------------------------------
 4325 | /apps/web/src/components/admin/AdminLayout.tsx:
 4326 | --------------------------------------------------------------------------------
 4327 |   1 | import { Fragment, useState } from 'react';
 4328 |   2 | import { Dialog, Menu, Transition } from '@headlessui/react';
 4329 |   3 | import {
 4330 |   4 |   Bars3Icon,
 4331 |   5 |   HomeIcon,
 4332 |   6 |   UsersIcon,
 4333 |   7 |   BuildingOfficeIcon,
 4334 |   8 |   XMarkIcon,
 4335 |   9 |   EnvelopeIcon,
 4336 |  10 | } from '@heroicons/react/24/outline';
 4337 |  11 | import { Link, Outlet, useLocation } from 'react-router-dom';
 4338 |  12 | import ThemeToggle from '../ThemeToggle';
 4339 |  13 | import { useAuth } from '../../contexts/auth';
 4340 |  14 | import { useTheme } from '../../hooks/useTheme';
 4341 |  15 | import Logo from '../Logo';
 4342 |  16 | 
 4343 |  17 | const navigation = [
 4344 |  18 |   { name: 'Dashboard', href: '/admin', icon: HomeIcon },
 4345 |  19 |   { name: 'Properties', href: '/admin/properties', icon: BuildingOfficeIcon },
 4346 |  20 |   { name: 'Users', href: '/admin/users', icon: UsersIcon },
 4347 |  21 |   { name: 'Messages', href: '/admin/messages', icon: EnvelopeIcon },
 4348 |  22 | ];
 4349 |  23 | 
 4350 |  24 | function classNames(...classes: string[]) {
 4351 |  25 |   return classes.filter(Boolean).join(' ');
 4352 |  26 | }
 4353 |  27 | 
 4354 |  28 | export default function AdminLayout() {
 4355 |  29 |   const [sidebarOpen, setSidebarOpen] = useState(false);
 4356 |  30 |   const location = useLocation();
 4357 |  31 |   const { user, logout } = useAuth();
 4358 |  32 |   const { isDark } = useTheme();
 4359 |  33 | 
 4360 |  34 |   return (
 4361 |  35 |     <div className="min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 4362 |  36 |       <Transition.Root show={sidebarOpen} as={Fragment}>
 4363 |  37 |         <Dialog as="div" className="relative z-50 lg:hidden" onClose={setSidebarOpen}>
 4364 |  38 |           <Transition.Child
 4365 |  39 |             as={Fragment}
 4366 |  40 |             enter="transition-opacity ease-linear duration-300"
 4367 |  41 |             enterFrom="opacity-0"
 4368 |  42 |             enterTo="opacity-100"
 4369 |  43 |             leave="transition-opacity ease-linear duration-300"
 4370 |  44 |             leaveFrom="opacity-100"
 4371 |  45 |             leaveTo="opacity-0"
 4372 |  46 |           >
 4373 |  47 |             <div className="fixed inset-0 bg-[rgb(var(--color-dark-bg))]/80" />
 4374 |  48 |           </Transition.Child>
 4375 |  49 | 
 4376 |  50 |           <div className="fixed inset-0 flex">
 4377 |  51 |             <Transition.Child
 4378 |  52 |               as={Fragment}
 4379 |  53 |               enter="transition ease-in-out duration-300 transform"
 4380 |  54 |               enterFrom="-translate-x-full"
 4381 |  55 |               enterTo="translate-x-0"
 4382 |  56 |               leave="transition ease-in-out duration-300 transform"
 4383 |  57 |               leaveFrom="translate-x-0"
 4384 |  58 |               leaveTo="-translate-x-full"
 4385 |  59 |             >
 4386 |  60 |               <Dialog.Panel className="relative flex flex-1 w-full max-w-xs mr-16">
 4387 |  61 |                 <Transition.Child
 4388 |  62 |                   as={Fragment}
 4389 |  63 |                   enter="ease-in-out duration-300"
 4390 |  64 |                   enterFrom="opacity-0"
 4391 |  65 |                   enterTo="opacity-100"
 4392 |  66 |                   leave="ease-in-out duration-300"
 4393 |  67 |                   leaveFrom="opacity-100"
 4394 |  68 |                   leaveTo="opacity-0"
 4395 |  69 |                 >
 4396 |  70 |                   <div className="absolute top-0 flex justify-center w-16 pt-5 left-full">
 4397 |  71 |                     <button type="button" className="-m-2.5 p-2.5" onClick={() => setSidebarOpen(false)}>
 4398 |  72 |                       <span className="sr-only">Close sidebar</span>
 4399 |  73 |                       <XMarkIcon className="w-6 h-6 text-white" aria-hidden="true" />
 4400 |  74 |                     </button>
 4401 |  75 |                   </div>
 4402 |  76 |                 </Transition.Child>
 4403 |  77 |                 <div className="flex grow flex-col gap-y-5 overflow-y-auto bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 pb-4">
 4404 |  78 |                   <div className="flex items-center h-16 shrink-0">
 4405 |  79 |                     <Link to="/admin">
 4406 |  80 |                       <Logo className="w-auto h-8" />
 4407 |  81 |                     </Link>
 4408 |  82 |                   </div>
 4409 |  83 |                   <nav className="flex flex-col flex-1">
 4410 |  84 |                     <ul role="list" className="flex flex-col flex-1 gap-y-7">
 4411 |  85 |                       <li>
 4412 |  86 |                         <ul role="list" className="-mx-2 space-y-1">
 4413 |  87 |                           {navigation.map((item) => (
 4414 |  88 |                             <li key={item.name}>
 4415 |  89 |                               <Link
 4416 |  90 |                                 to={item.href}
 4417 |  91 |                                 className={classNames(
 4418 |  92 |                                   item.href === location.pathname
 4419 |  93 |                                     ? 'bg-gray-100 text-primary-600'
 4420 |  94 |                                     : 'text-gray-600 hover:text-primary-600 hover:bg-gray-50 dark:text-[rgb(var(--color-dark-text))] dark:hover:bg-[rgb(var(--color-dark-border))]',
 4421 |  95 |                                   'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'
 4422 |  96 |                                 )}
 4423 |  97 |                               >
 4424 |  98 |                                 <item.icon
 4425 |  99 |                                   className={classNames(
 4426 | 100 |                                     item.href === location.pathname
 4427 | 101 |                                       ? 'text-primary-600'
 4428 | 102 |                                       : 'text-gray-400 group-hover:text-primary-600 dark:text-[rgb(var(--color-dark-text-secondary))] dark:group-hover:text-primary-500',
 4429 | 103 |                                     'h-6 w-6 shrink-0'
 4430 | 104 |                                   )}
 4431 | 105 |                                   aria-hidden="true"
 4432 | 106 |                                 />
 4433 | 107 |                                 {item.name}
 4434 | 108 |                               </Link>
 4435 | 109 |                             </li>
 4436 | 110 |                           ))}
 4437 | 111 |                         </ul>
 4438 | 112 |                       </li>
 4439 | 113 |                     </ul>
 4440 | 114 |                   </nav>
 4441 | 115 |                 </div>
 4442 | 116 |               </Dialog.Panel>
 4443 | 117 |             </Transition.Child>
 4444 | 118 |           </div>
 4445 | 119 |         </Dialog>
 4446 | 120 |       </Transition.Root>
 4447 | 121 | 
 4448 | 122 |       {/* Static sidebar for desktop */}
 4449 | 123 |       <div className="hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col">
 4450 | 124 |         <div className="flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 pb-4">
 4451 | 125 |           <div className="flex items-center h-16 shrink-0">
 4452 | 126 |             <Link to="/admin">
 4453 | 127 |               <Logo className="w-auto h-8" />
 4454 | 128 |             </Link>
 4455 | 129 |           </div>
 4456 | 130 |           <nav className="flex flex-col flex-1">
 4457 | 131 |             <ul role="list" className="flex flex-col flex-1 gap-y-7">
 4458 | 132 |               <li>
 4459 | 133 |                 <ul role="list" className="-mx-2 space-y-1">
 4460 | 134 |                   {navigation.map((item) => (
 4461 | 135 |                     <li key={item.name}>
 4462 | 136 |                       <Link
 4463 | 137 |                         to={item.href}
 4464 | 138 |                         className={classNames(
 4465 | 139 |                           item.href === location.pathname
 4466 | 140 |                             ? 'bg-gray-100 text-primary-600'
 4467 | 141 |                             : 'text-gray-600 hover:text-primary-600 hover:bg-gray-50 dark:text-[rgb(var(--color-dark-text))] dark:hover:bg-[rgb(var(--color-dark-border))]',
 4468 | 142 |                           'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'
 4469 | 143 |                         )}
 4470 | 144 |                       >
 4471 | 145 |                         <item.icon
 4472 | 146 |                           className={classNames(
 4473 | 147 |                             item.href === location.pathname
 4474 | 148 |                               ? 'text-primary-600'
 4475 | 149 |                               : 'text-gray-400 group-hover:text-primary-600 dark:text-[rgb(var(--color-dark-text-secondary))] dark:group-hover:text-primary-500',
 4476 | 150 |                             'h-6 w-6 shrink-0'
 4477 | 151 |                           )}
 4478 | 152 |                           aria-hidden="true"
 4479 | 153 |                         />
 4480 | 154 |                         {item.name}
 4481 | 155 |                       </Link>
 4482 | 156 |                     </li>
 4483 | 157 |                   ))}
 4484 | 158 |                 </ul>
 4485 | 159 |               </li>
 4486 | 160 |             </ul>
 4487 | 161 |           </nav>
 4488 | 162 |         </div>
 4489 | 163 |       </div>
 4490 | 164 | 
 4491 | 165 |       <div className="lg:pl-72">
 4492 | 166 |         <div className="sticky top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8">
 4493 | 167 |           <button type="button" className="-m-2.5 p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))] lg:hidden" onClick={() => setSidebarOpen(true)}>
 4494 | 168 |             <span className="sr-only">Open sidebar</span>
 4495 | 169 |             <Bars3Icon className="w-6 h-6" aria-hidden="true" />
 4496 | 170 |           </button>
 4497 | 171 | 
 4498 | 172 |           <div className="flex self-stretch flex-1 gap-x-4 lg:gap-x-6">
 4499 | 173 |             <div className="flex flex-1" />
 4500 | 174 |             <div className="flex items-center gap-x-4 lg:gap-x-6">
 4501 | 175 |               <ThemeToggle />
 4502 | 176 |               <div className="hidden lg:block lg:h-6 lg:w-px lg:bg-gray-200 dark:lg:bg-[rgb(var(--color-dark-border))]" />
 4503 | 177 |               <Menu as="div" className="relative">
 4504 | 178 |                 <Menu.Button className="-m-1.5 flex items-center p-1.5">
 4505 | 179 |                   <span className="sr-only">Open user menu</span>
 4506 | 180 |                   <span className="hidden lg:flex lg:items-center">
 4507 | 181 |                     <span className="flex items-center justify-center w-8 h-8 text-sm font-medium text-white rounded-full bg-primary-600">
 4508 | 182 |                       {user?.name?.split(' ').map(n => n[0]).join('')}
 4509 | 183 |                     </span>
 4510 | 184 |                     <span className="ml-2 text-sm font-semibold leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]" aria-hidden="true">
 4511 | 185 |                       {user?.name}
 4512 | 186 |                     </span>
 4513 | 187 |                   </span>
 4514 | 188 |                 </Menu.Button>
 4515 | 189 |                 <Transition
 4516 | 190 |                   as={Fragment}
 4517 | 191 |                   enter="transition ease-out duration-100"
 4518 | 192 |                   enterFrom="transform opacity-0 scale-95"
 4519 | 193 |                   enterTo="transform opacity-100 scale-100"
 4520 | 194 |                   leave="transition ease-in duration-75"
 4521 | 195 |                   leaveFrom="transform opacity-100 scale-100"
 4522 | 196 |                   leaveTo="transform opacity-0 scale-95"
 4523 | 197 |                 >
 4524 | 198 |                   <Menu.Items className="absolute right-0 z-10 mt-2.5 w-32 origin-top-right rounded-md bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] py-2 shadow-lg ring-1 ring-gray-900/5 dark:ring-[rgb(var(--color-dark-border))] focus:outline-none">
 4525 | 199 |                     <Menu.Item>
 4526 | 200 |                       {({ active }) => (
 4527 | 201 |                         <button
 4528 | 202 |                           onClick={logout}
 4529 | 203 |                           className={classNames(
 4530 | 204 |                             active ? 'bg-gray-50 dark:bg-[rgb(var(--color-dark-border))]' : '',
 4531 | 205 |                             'block w-full px-3 py-1 text-left text-sm leading-6 text-gray-600 dark:text-[rgb(var(--color-dark-text))]'
 4532 | 206 |                           )}
 4533 | 207 |                         >
 4534 | 208 |                           Изход
 4535 | 209 |                         </button>
 4536 | 210 |                       )}
 4537 | 211 |                     </Menu.Item>
 4538 | 212 |                   </Menu.Items>
 4539 | 213 |                 </Transition>
 4540 | 214 |               </Menu>
 4541 | 215 |             </div>
 4542 | 216 |           </div>
 4543 | 217 |         </div>
 4544 | 218 | 
 4545 | 219 |         <main className="py-10">
 4546 | 220 |           <div className="px-4 sm:px-6 lg:px-8">
 4547 | 221 |             <Outlet />
 4548 | 222 |           </div>
 4549 | 223 |         </main>
 4550 | 224 |       </div>
 4551 | 225 |       <Link
 4552 | 226 |         to="/"
 4553 | 227 |         className="fixed z-50 flex items-center p-3 text-white transition-all duration-300 ease-in-out rounded-l-full shadow-lg bottom-24 -right-1 group bg-primary-600 hover:pr-6 hover:right-0 hover:bg-primary-700 hover:shadow-xl hover:translate-x-1"
 4554 | 228 |         title="Към сайта"
 4555 | 229 |       >
 4556 | 230 |         <HomeIcon className="w-6 h-6 transition-transform duration-300 ease-in-out transform group-hover:-rotate-90" aria-hidden="true" />
 4557 | 231 |         <span className="text-sm font-medium max-w-0 group-hover:max-w-[200px] opacity-0 group-hover:opacity-100 transition-all duration-300 ease-in-out whitespace-nowrap overflow-hidden">
 4558 | 232 |           Към сайта
 4559 | 233 |         </span>
 4560 | 234 |       </Link>
 4561 | 235 |     </div>
 4562 | 236 |   );
 4563 | 237 | } 
 4564 | 238 | 
 4565 | 
 4566 | 
 4567 | --------------------------------------------------------------------------------
 4568 | /apps/web/src/components/admin/PropertyForm.tsx:
 4569 | --------------------------------------------------------------------------------
 4570 |   1 | import { useState, useEffect } from 'react';
 4571 |   2 | import type { CreatePropertyData, Property } from '../../types/api';
 4572 |   3 | import { XMarkIcon } from '@heroicons/react/24/outline';
 4573 |   4 | import { useQuery } from '@tanstack/react-query';
 4574 |   5 | import { getRegions, getNeighborhoods, getFeatures } from '../../services/locationService';
 4575 |   6 | import { constructionTypes, furnishingTypes, propertyTypes, locationTypes, categories, currencies } from '../../constants/property';
 4576 |   7 | 
 4577 |   8 | interface PropertyFormProps {
 4578 |   9 |   initialData?: Property;
 4579 |  10 |   onSubmit: (data: CreatePropertyData, images: File[]) => Promise<void>;
 4580 |  11 |   isSubmitting?: boolean;
 4581 |  12 |   onCancel?: () => void;
 4582 |  13 |   submitLabel?: string;
 4583 |  14 | }
 4584 |  15 | 
 4585 |  16 | export default function PropertyForm({
 4586 |  17 |   initialData,
 4587 |  18 |   onSubmit,
 4588 |  19 |   isSubmitting = false,
 4589 |  20 |   onCancel,
 4590 |  21 |   submitLabel = 'Запази'
 4591 |  22 | }: PropertyFormProps) {
 4592 |  23 |   // Prepare initial data by converting Property type to CreatePropertyData type
 4593 |  24 |   const prepareInitialData = (data?: Property): Partial<CreatePropertyData> => {
 4594 |  25 |     if (!data) return {};
 4595 |  26 |     const { id, createdAt, updatedAt, features, ...rest } = data;
 4596 |  27 |     return {
 4597 |  28 |       ...rest,
 4598 |  29 |       features: features?.map(f => f.featureId),
 4599 |  30 |     };
 4600 |  31 |   };
 4601 |  32 | 
 4602 |  33 |   const [data, setData] = useState<CreatePropertyData>({
 4603 |  34 |     title: '',
 4604 |  35 |     description: '',
 4605 |  36 |     price: 0,
 4606 |  37 |     currency: 'BGN',
 4607 |  38 |     area_sqm: 0,
 4608 |  39 |     land_area_sqm: undefined,
 4609 |  40 |     floor: undefined,
 4610 |  41 |     total_floors: undefined,
 4611 |  42 |     construction_type: undefined,
 4612 |  43 |     furnishing: undefined,
 4613 |  44 |     location_type: 'CITY',
 4614 |  45 |     regionId: undefined,
 4615 |  46 |     neighborhoodId: undefined,
 4616 |  47 |     has_regulation: false,
 4617 |  48 |     category: 'SALE',
 4618 |  49 |     type: 'APARTMENT',
 4619 |  50 |     featured: false,
 4620 |  51 |     contact_info: {
 4621 |  52 |       phone: '',
 4622 |  53 |       email: '',
 4623 |  54 |     },
 4624 |  55 |     ...prepareInitialData(initialData),
 4625 |  56 |   });
 4626 |  57 | 
 4627 |  58 |   const [images, setImages] = useState<File[]>([]);
 4628 |  59 |   const [errors, setErrors] = useState<Record<string, string>>({});
 4629 |  60 |   const [selectedFeatures, setSelectedFeatures] = useState<number[]>(
 4630 |  61 |     initialData?.features?.map(f => f.featureId) || []
 4631 |  62 |   );
 4632 |  63 | 
 4633 |  64 |   const { 
 4634 |  65 |     data: regions = [], 
 4635 |  66 |     isLoading: regionsLoading, 
 4636 |  67 |     error: regionsError 
 4637 |  68 |   } = useQuery({
 4638 |  69 |     queryKey: ['regions'],
 4639 |  70 |     queryFn: getRegions,
 4640 |  71 |     retry: 3,
 4641 |  72 |     staleTime: 300000, // 5 minutes
 4642 |  73 |   });
 4643 |  74 | 
 4644 |  75 |   const { 
 4645 |  76 |     data: neighborhoods = [], 
 4646 |  77 |     isLoading: neighborhoodsLoading, 
 4647 |  78 |     error: neighborhoodsError 
 4648 |  79 |   } = useQuery({
 4649 |  80 |     queryKey: ['neighborhoods'],
 4650 |  81 |     queryFn: getNeighborhoods,
 4651 |  82 |     retry: 3,
 4652 |  83 |     staleTime: 300000, // 5 minutes
 4653 |  84 |   });
 4654 |  85 | 
 4655 |  86 |   const { 
 4656 |  87 |     data: features = [], 
 4657 |  88 |     isLoading: featuresLoading, 
 4658 |  89 |     error: featuresError 
 4659 |  90 |   } = useQuery({
 4660 |  91 |     queryKey: ['features'],
 4661 |  92 |     queryFn: getFeatures,
 4662 |  93 |     retry: 3,
 4663 |  94 |     staleTime: 300000, // 5 minutes
 4664 |  95 |   });
 4665 |  96 | 
 4666 |  97 |   useEffect(() => {
 4667 |  98 |     if (regionsError) console.error('Regions error:', regionsError);
 4668 |  99 |     if (neighborhoodsError) console.error('Neighborhoods error:', neighborhoodsError);
 4669 | 100 |     if (featuresError) console.error('Features error:', featuresError);
 4670 | 101 |   }, [regionsError, neighborhoodsError, featuresError]);
 4671 | 102 | 
 4672 | 103 |   const handleSubmit = async (e: React.FormEvent) => {
 4673 | 104 |     e.preventDefault();
 4674 | 105 |     setErrors({});
 4675 | 106 | 
 4676 | 107 |     try {
 4677 | 108 |       await onSubmit({ ...data, features: selectedFeatures }, images);
 4678 | 109 |     } catch (error: any) {
 4679 | 110 |       if (error.response?.data?.errors) {
 4680 | 111 |         setErrors(error.response.data.errors);
 4681 | 112 |       } else {
 4682 | 113 |         setErrors({ general: error.response?.data?.message || 'Възникна грешка при запазването на имота' });
 4683 | 114 |       }
 4684 | 115 |     }
 4685 | 116 |   };
 4686 | 117 | 
 4687 | 118 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
 4688 | 119 |     const { name, value } = e.target;
 4689 | 120 |     if (name.startsWith('contact_info.')) {
 4690 | 121 |       const field = name.split('.')[1];
 4691 | 122 |       setData(prev => ({
 4692 | 123 |         ...prev,
 4693 | 124 |         contact_info: {
 4694 | 125 |           ...prev.contact_info,
 4695 | 126 |           [field]: value,
 4696 | 127 |         },
 4697 | 128 |       }));
 4698 | 129 |     } else if (name === 'has_regulation' || name === 'featured') {
 4699 | 130 |       setData(prev => ({ ...prev, [name]: (e.target as HTMLInputElement).checked }));
 4700 | 131 |     } else {
 4701 | 132 |       setData(prev => ({
 4702 | 133 |         ...prev,
 4703 | 134 |         [name]: value,
 4704 | 135 |       }));
 4705 | 136 |     }
 4706 | 137 |   };
 4707 | 138 | 
 4708 | 139 |   const handleFeatureChange = (featureId: number) => {
 4709 | 140 |     setSelectedFeatures(prev => {
 4710 | 141 |       if (prev.includes(featureId)) {
 4711 | 142 |         return prev.filter(id => id !== featureId);
 4712 | 143 |       }
 4713 | 144 |       return [...prev, featureId];
 4714 | 145 |     });
 4715 | 146 |   };
 4716 | 147 | 
 4717 | 148 |   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
 4718 | 149 |     if (e.target.files) {
 4719 | 150 |       setImages(Array.from(e.target.files));
 4720 | 151 |     }
 4721 | 152 |   };
 4722 | 153 | 
 4723 | 154 |   return (
 4724 | 155 |     <form onSubmit={handleSubmit} className="space-y-6">
 4725 | 156 |       {errors.general && (
 4726 | 157 |         <div className="p-4 text-sm text-red-700 bg-red-100 rounded-lg dark:text-red-200 dark:bg-red-900/50">
 4727 | 158 |           {errors.general}
 4728 | 159 |         </div>
 4729 | 160 |       )}
 4730 | 161 | 
 4731 | 162 |       <div className="space-y-4">
 4732 | 163 |         {/* Basic Info Section */}
 4733 | 164 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 4734 | 165 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Основна информация</h3>
 4735 | 166 |           <div className="grid grid-cols-1 gap-6">
 4736 | 167 |             <div>
 4737 | 168 |               <label htmlFor="title" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4738 | 169 |                 Заглавие
 4739 | 170 |               </label>
 4740 | 171 |               <input
 4741 | 172 |                 type="text"
 4742 | 173 |                 id="title"
 4743 | 174 |                 name="title"
 4744 | 175 |                 value={data.title}
 4745 | 176 |                 onChange={handleChange}
 4746 | 177 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
 4747 | 178 |                   errors.title 
 4748 | 179 |                     ? 'border-red-500 dark:border-red-500' 
 4749 | 180 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
 4750 | 181 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
 4751 | 182 |               />
 4752 | 183 |               {errors.title && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.title}</p>}
 4753 | 184 |             </div>
 4754 | 185 | 
 4755 | 186 |             <div>
 4756 | 187 |               <label htmlFor="description" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4757 | 188 |                 Описание
 4758 | 189 |               </label>
 4759 | 190 |               <textarea
 4760 | 191 |                 id="description"
 4761 | 192 |                 name="description"
 4762 | 193 |                 value={data.description}
 4763 | 194 |                 onChange={handleChange}
 4764 | 195 |                 rows={4}
 4765 | 196 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
 4766 | 197 |                   errors.description 
 4767 | 198 |                     ? 'border-red-500 dark:border-red-500' 
 4768 | 199 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
 4769 | 200 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
 4770 | 201 |               />
 4771 | 202 |               {errors.description && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.description}</p>}
 4772 | 203 |             </div>
 4773 | 204 |           </div>
 4774 | 205 |         </div>
 4775 | 206 | 
 4776 | 207 |         {/* Price & Area Section */}
 4777 | 208 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 4778 | 209 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Цена и площ</h3>
 4779 | 210 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-3">
 4780 | 211 |             <div>
 4781 | 212 |               <label htmlFor="price" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4782 | 213 |                 Цена
 4783 | 214 |               </label>
 4784 | 215 |               <div className="flex mt-1 rounded-md shadow-sm">
 4785 | 216 |                 <input
 4786 | 217 |                   type="number"
 4787 | 218 |                   id="price"
 4788 | 219 |                   name="price"
 4789 | 220 |                   value={data.price}
 4790 | 221 |                   onChange={handleChange}
 4791 | 222 |                   className={`block w-full rounded-l-md shadow-sm sm:text-sm ${
 4792 | 223 |                     errors.price 
 4793 | 224 |                       ? 'border-red-500 dark:border-red-500' 
 4794 | 225 |                       : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
 4795 | 226 |                   } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
 4796 | 227 |                 />
 4797 | 228 |                 <select
 4798 | 229 |                   name="currency"
 4799 | 230 |                   value={data.currency}
 4800 | 231 |                   onChange={handleChange}
 4801 | 232 |                   className="border-l-0 border-gray-300 rounded-r-md dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:ring-primary-500 focus:border-primary-500"
 4802 | 233 |                 >
 4803 | 234 |                   {currencies.map(currency => (
 4804 | 235 |                     <option key={currency.value} value={currency.value}>{currency.label}</option>
 4805 | 236 |                   ))}
 4806 | 237 |                 </select>
 4807 | 238 |               </div>
 4808 | 239 |               {errors.price && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.price}</p>}
 4809 | 240 |             </div>
 4810 | 241 | 
 4811 | 242 |             <div>
 4812 | 243 |               <label htmlFor="area_sqm" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4813 | 244 |                 Площ (кв.м)
 4814 | 245 |               </label>
 4815 | 246 |               <input
 4816 | 247 |                 type="number"
 4817 | 248 |                 id="area_sqm"
 4818 | 249 |                 name="area_sqm"
 4819 | 250 |                 value={data.area_sqm}
 4820 | 251 |                 onChange={handleChange}
 4821 | 252 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
 4822 | 253 |                   errors.area_sqm 
 4823 | 254 |                     ? 'border-red-500 dark:border-red-500' 
 4824 | 255 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
 4825 | 256 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
 4826 | 257 |               />
 4827 | 258 |               {errors.area_sqm && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.area_sqm}</p>}
 4828 | 259 |             </div>
 4829 | 260 | 
 4830 | 261 |             <div>
 4831 | 262 |               <label htmlFor="land_area_sqm" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4832 | 263 |                 Площ на парцела (кв.м)
 4833 | 264 |               </label>
 4834 | 265 |               <input
 4835 | 266 |                 type="number"
 4836 | 267 |                 id="land_area_sqm"
 4837 | 268 |                 name="land_area_sqm"
 4838 | 269 |                 value={data.land_area_sqm || ''}
 4839 | 270 |                 onChange={handleChange}
 4840 | 271 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 4841 | 272 |               />
 4842 | 273 |             </div>
 4843 | 274 |           </div>
 4844 | 275 |         </div>
 4845 | 276 | 
 4846 | 277 |         {/* Location Section */}
 4847 | 278 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 4848 | 279 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Локация</h3>
 4849 | 280 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-3">
 4850 | 281 |             <div>
 4851 | 282 |               <label htmlFor="location_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4852 | 283 |                 Тип локация
 4853 | 284 |               </label>
 4854 | 285 |               <select
 4855 | 286 |                 id="location_type"
 4856 | 287 |                 name="location_type"
 4857 | 288 |                 value={data.location_type}
 4858 | 289 |                 onChange={handleChange}
 4859 | 290 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
 4860 | 291 |                   errors.location_type 
 4861 | 292 |                     ? 'border-red-500 dark:border-red-500' 
 4862 | 293 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
 4863 | 294 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
 4864 | 295 |               >
 4865 | 296 |                 {locationTypes.map(type => (
 4866 | 297 |                   <option key={type.value} value={type.value}>{type.label}</option>
 4867 | 298 |                 ))}
 4868 | 299 |               </select>
 4869 | 300 |               {errors.location_type && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.location_type}</p>}
 4870 | 301 |             </div>
 4871 | 302 | 
 4872 | 303 |             <div>
 4873 | 304 |               <label htmlFor="regionId" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4874 | 305 |                 Регион
 4875 | 306 |               </label>
 4876 | 307 |               <select
 4877 | 308 |                 id="regionId"
 4878 | 309 |                 name="regionId"
 4879 | 310 |                 value={data.regionId || ''}
 4880 | 311 |                 onChange={handleChange}
 4881 | 312 |                 disabled={regionsLoading}
 4882 | 313 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 4883 | 314 |               >
 4884 | 315 |                 <option value="">Изберете</option>
 4885 | 316 |                 {regionsLoading ? (
 4886 | 317 |                   <option disabled>Зареждане...</option>
 4887 | 318 |                 ) : regions?.map(region => (
 4888 | 319 |                   <option key={region.id} value={region.id}>{region.name}</option>
 4889 | 320 |                 ))}
 4890 | 321 |               </select>
 4891 | 322 |             </div>
 4892 | 323 | 
 4893 | 324 |             <div>
 4894 | 325 |               <label htmlFor="neighborhoodId" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4895 | 326 |                 Квартал
 4896 | 327 |               </label>
 4897 | 328 |               <select
 4898 | 329 |                 id="neighborhoodId"
 4899 | 330 |                 name="neighborhoodId"
 4900 | 331 |                 value={data.neighborhoodId || ''}
 4901 | 332 |                 onChange={handleChange}
 4902 | 333 |                 disabled={neighborhoodsLoading}
 4903 | 334 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 4904 | 335 |               >
 4905 | 336 |                 <option value="">Изберете</option>
 4906 | 337 |                 {neighborhoodsLoading ? (
 4907 | 338 |                   <option disabled>Зареждане...</option>
 4908 | 339 |                 ) : neighborhoods?.map(neighborhood => (
 4909 | 340 |                   <option key={neighborhood.id} value={neighborhood.id}>{neighborhood.name}</option>
 4910 | 341 |                 ))}
 4911 | 342 |               </select>
 4912 | 343 |             </div>
 4913 | 344 |           </div>
 4914 | 345 |         </div>
 4915 | 346 | 
 4916 | 347 |         {/* Property Details Section */}
 4917 | 348 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 4918 | 349 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Детайли за имота</h3>
 4919 | 350 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4">
 4920 | 351 |             <div>
 4921 | 352 |               <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4922 | 353 |                 Тип имот
 4923 | 354 |               </label>
 4924 | 355 |               <select
 4925 | 356 |                 id="type"
 4926 | 357 |                 name="type"
 4927 | 358 |                 value={data.type}
 4928 | 359 |                 onChange={handleChange}
 4929 | 360 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 4930 | 361 |               >
 4931 | 362 |                 {propertyTypes.map(type => (
 4932 | 363 |                   <option key={type.value} value={type.value}>{type.label}</option>
 4933 | 364 |                 ))}
 4934 | 365 |               </select>
 4935 | 366 |             </div>
 4936 | 367 | 
 4937 | 368 |             <div>
 4938 | 369 |               <label htmlFor="category" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4939 | 370 |                 Категория
 4940 | 371 |               </label>
 4941 | 372 |               <select
 4942 | 373 |                 id="category"
 4943 | 374 |                 name="category"
 4944 | 375 |                 value={data.category}
 4945 | 376 |                 onChange={handleChange}
 4946 | 377 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 4947 | 378 |               >
 4948 | 379 |                 {categories.map(category => (
 4949 | 380 |                   <option key={category.value} value={category.value}>{category.label}</option>
 4950 | 381 |                 ))}
 4951 | 382 |               </select>
 4952 | 383 |             </div>
 4953 | 384 | 
 4954 | 385 |             <div>
 4955 | 386 |               <label htmlFor="construction_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4956 | 387 |                 Вид строителство
 4957 | 388 |               </label>
 4958 | 389 |               <select
 4959 | 390 |                 id="construction_type"
 4960 | 391 |                 name="construction_type"
 4961 | 392 |                 value={data.construction_type || ''}
 4962 | 393 |                 onChange={handleChange}
 4963 | 394 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 4964 | 395 |               >
 4965 | 396 |                 <option value="">Изберете</option>
 4966 | 397 |                 {constructionTypes.map(type => (
 4967 | 398 |                   <option key={type.value} value={type.value}>{type.label}</option>
 4968 | 399 |                 ))}
 4969 | 400 |               </select>
 4970 | 401 |             </div>
 4971 | 402 | 
 4972 | 403 |             <div>
 4973 | 404 |               <label htmlFor="furnishing" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4974 | 405 |                 Обзавеждане
 4975 | 406 |               </label>
 4976 | 407 |               <select
 4977 | 408 |                 id="furnishing"
 4978 | 409 |                 name="furnishing"
 4979 | 410 |                 value={data.furnishing || ''}
 4980 | 411 |                 onChange={handleChange}
 4981 | 412 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 4982 | 413 |               >
 4983 | 414 |                 <option value="">Изберете</option>
 4984 | 415 |                 {furnishingTypes.map(type => (
 4985 | 416 |                   <option key={type.value} value={type.value}>{type.label}</option>
 4986 | 417 |                 ))}
 4987 | 418 |               </select>
 4988 | 419 |             </div>
 4989 | 420 |           </div>
 4990 | 421 |         </div>
 4991 | 422 | 
 4992 | 423 |         {/* Floor Info & Additional Info */}
 4993 | 424 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 4994 | 425 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Етажност и допълнителна информация</h3>
 4995 | 426 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-4">
 4996 | 427 |             <div>
 4997 | 428 |               <label htmlFor="floor" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 4998 | 429 |                 Етаж
 4999 | 430 |               </label>
 5000 | 431 |               <input
 5001 | 432 |                 type="number"
 5002 | 433 |                 id="floor"
 5003 | 434 |                 name="floor"
 5004 | 435 |                 value={data.floor || ''}
 5005 | 436 |                 onChange={handleChange}
 5006 | 437 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 5007 | 438 |               />
 5008 | 439 |             </div>
 5009 | 440 | 
 5010 | 441 |             <div>
 5011 | 442 |               <label htmlFor="total_floors" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5012 | 443 |                 Общо етажи
 5013 | 444 |               </label>
 5014 | 445 |               <input
 5015 | 446 |                 type="number"
 5016 | 447 |                 id="total_floors"
 5017 | 448 |                 name="total_floors"
 5018 | 449 |                 value={data.total_floors || ''}
 5019 | 450 |                 onChange={handleChange}
 5020 | 451 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 5021 | 452 |               />
 5022 | 453 |             </div>
 5023 | 454 | 
 5024 | 455 |             <div>
 5025 | 456 |               <label htmlFor="has_regulation" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5026 | 457 |                 Има регулация
 5027 | 458 |               </label>
 5028 | 459 |               <select
 5029 | 460 |                 id="has_regulation"
 5030 | 461 |                 name="has_regulation"
 5031 | 462 |                 value={data.has_regulation ? 'yes' : 'no'}
 5032 | 463 |                 onChange={(e) => {
 5033 | 464 |                   setData(prev => ({
 5034 | 465 |                     ...prev,
 5035 | 466 |                     has_regulation: e.target.value === 'yes'
 5036 | 467 |                   }));
 5037 | 468 |                 }}
 5038 | 469 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 5039 | 470 |               >
 5040 | 471 |                 <option value="yes">Да</option>
 5041 | 472 |                 <option value="no">Не</option>
 5042 | 473 |               </select>
 5043 | 474 |             </div>
 5044 | 475 | 
 5045 | 476 |             <div className="flex items-center pt-6">
 5046 | 477 |               <label className="flex items-center">
 5047 | 478 |                 <input
 5048 | 479 |                   type="checkbox"
 5049 | 480 |                   name="featured"
 5050 | 481 |                   checked={data.featured || false}
 5051 | 482 |                   onChange={handleChange}
 5052 | 483 |                   className="w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:border-[rgb(var(--color-dark-border))]"
 5053 | 484 |                 />
 5054 | 485 |                 <span className="ml-2 text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">Препоръчан</span>
 5055 | 486 |               </label>
 5056 | 487 |             </div>
 5057 | 488 |           </div>
 5058 | 489 |         </div>
 5059 | 490 | 
 5060 | 491 |         {/* Contact Info */}
 5061 | 492 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 5062 | 493 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Контактна информация</h3>
 5063 | 494 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-2">
 5064 | 495 |             <div>
 5065 | 496 |               <label htmlFor="contact_info.phone" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5066 | 497 |                 Телефон за контакт
 5067 | 498 |               </label>
 5068 | 499 |               <input
 5069 | 500 |                 type="tel"
 5070 | 501 |                 id="contact_info.phone"
 5071 | 502 |                 name="contact_info.phone"
 5072 | 503 |                 value={data.contact_info.phone}
 5073 | 504 |                 onChange={handleChange}
 5074 | 505 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
 5075 | 506 |                   errors['contact_info.phone'] 
 5076 | 507 |                     ? 'border-red-500 dark:border-red-500' 
 5077 | 508 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
 5078 | 509 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
 5079 | 510 |               />
 5080 | 511 |               {errors['contact_info.phone'] && (
 5081 | 512 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors['contact_info.phone']}</p>
 5082 | 513 |               )}
 5083 | 514 |             </div>
 5084 | 515 | 
 5085 | 516 |             <div>
 5086 | 517 |               <label htmlFor="contact_info.email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5087 | 518 |                 Имейл за контакт
 5088 | 519 |               </label>
 5089 | 520 |               <input
 5090 | 521 |                 type="email"
 5091 | 522 |                 id="contact_info.email"
 5092 | 523 |                 name="contact_info.email"
 5093 | 524 |                 value={data.contact_info.email}
 5094 | 525 |                 onChange={handleChange}
 5095 | 526 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
 5096 | 527 |                   errors['contact_info.email'] 
 5097 | 528 |                     ? 'border-red-500 dark:border-red-500' 
 5098 | 529 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
 5099 | 530 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
 5100 | 531 |               />
 5101 | 532 |               {errors['contact_info.email'] && (
 5102 | 533 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors['contact_info.email']}</p>
 5103 | 534 |               )}
 5104 | 535 |             </div>
 5105 | 536 |           </div>
 5106 | 537 |         </div>
 5107 | 538 | 
 5108 | 539 |         {/* Features Section */}
 5109 | 540 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 5110 | 541 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Характеристики</h3>
 5111 | 542 |           {featuresLoading ? (
 5112 | 543 |             <p className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Зареждане на характеристики...</p>
 5113 | 544 |           ) : (
 5114 | 545 |             <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5">
 5115 | 546 |               {features?.map(feature => (
 5116 | 547 |                 <div key={feature.id} className="flex items-center p-2 rounded-md hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))]">
 5117 | 548 |                   <input
 5118 | 549 |                     type="checkbox"
 5119 | 550 |                     id={`feature-${feature.id}`}
 5120 | 551 |                     checked={selectedFeatures.includes(feature.id)}
 5121 | 552 |                     onChange={(e) => {
 5122 | 553 |                       if (e.target.checked) {
 5123 | 554 |                         setSelectedFeatures(prev => [...prev, feature.id]);
 5124 | 555 |                       } else {
 5125 | 556 |                         setSelectedFeatures(prev => prev.filter(id => id !== feature.id));
 5126 | 557 |                       }
 5127 | 558 |                     }}
 5128 | 559 |                     className="w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:border-[rgb(var(--color-dark-border))]"
 5129 | 560 |                   />
 5130 | 561 |                   <label
 5131 | 562 |                     htmlFor={`feature-${feature.id}`}
 5132 | 563 |                     className="block ml-2 text-sm text-gray-700 cursor-pointer dark:text-[rgb(var(--color-dark-text-secondary))]"
 5133 | 564 |                   >
 5134 | 565 |                     {feature.name}
 5135 | 566 |                   </label>
 5136 | 567 |                 </div>
 5137 | 568 |               ))}
 5138 | 569 |             </div>
 5139 | 570 |           )}
 5140 | 571 |           {featuresError && (
 5141 | 572 |             <p className="mt-1 text-sm text-red-600 dark:text-red-400">Грешка при зареждане на характеристиките</p>
 5142 | 573 |           )}
 5143 | 574 |         </div>
 5144 | 575 | 
 5145 | 576 |         {/* Images Section */}
 5146 | 577 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 5147 | 578 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Изображения</h3>
 5148 | 579 |           {initialData?.images && initialData.images.length > 0 && (
 5149 | 580 |             <div>
 5150 | 581 |               <label className="block mb-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5151 | 582 |                 Текущи изображения
 5152 | 583 |               </label>
 5153 | 584 |               <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4">
 5154 | 585 |                 {initialData.images.map((image) => (
 5155 | 586 |                   <div key={image.id} className="relative group">
 5156 | 587 |                     <img
 5157 | 588 |                       src={image.url}
 5158 | 589 |                       alt={initialData.title}
 5159 | 590 |                       className="object-cover w-full h-32 rounded-lg"
 5160 | 591 |                       onError={(e) => {
 5161 | 592 |                         const target = e.target as HTMLImageElement;
 5162 | 593 |                         target.onerror = null;
 5163 | 594 |                         target.src = '/images/property-placeholder.webp';
 5164 | 595 |                       }}
 5165 | 596 |                     />
 5166 | 597 |                   </div>
 5167 | 598 |                 ))}
 5168 | 599 |               </div>
 5169 | 600 |             </div>
 5170 | 601 |           )}
 5171 | 602 | 
 5172 | 603 |           {/* Image Upload */}
 5173 | 604 |           <div className="mt-6">
 5174 | 605 |             <label className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5175 | 606 |               {initialData?.images?.length ? 'Добави нови изображения' : 'Изображения'}
 5176 | 607 |             </label>
 5177 | 608 |             <div className="flex justify-center px-6 pt-5 pb-6 mt-1 border-2 border-gray-300 border-dashed rounded-md dark:border-gray-600">
 5178 | 609 |               <div className="space-y-1 text-center">
 5179 | 610 |                 <svg
 5180 | 611 |                   className="w-12 h-12 mx-auto text-gray-400"
 5181 | 612 |                   stroke="currentColor"
 5182 | 613 |                   fill="none"
 5183 | 614 |                   viewBox="0 0 48 48"
 5184 | 615 |                   aria-hidden="true"
 5185 | 616 |                 >
 5186 | 617 |                   <path
 5187 | 618 |                     d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
 5188 | 619 |                     strokeWidth={2}
 5189 | 620 |                     strokeLinecap="round"
 5190 | 621 |                     strokeLinejoin="round"
 5191 | 622 |                   />
 5192 | 623 |                 </svg>
 5193 | 624 |                 <div className="flex text-sm text-gray-600 dark:text-gray-400">
 5194 | 625 |                   <label
 5195 | 626 |                     htmlFor="images"
 5196 | 627 |                     className="relative font-medium rounded-md cursor-pointer text-primary-600 hover:text-primary-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500"
 5197 | 628 |                   >
 5198 | 629 |                     <span>Качи файлове</span>
 5199 | 630 |                     <input
 5200 | 631 |                       id="images"
 5201 | 632 |                       name="images"
 5202 | 633 |                       type="file"
 5203 | 634 |                       multiple
 5204 | 635 |                       accept="image/*"
 5205 | 636 |                       onChange={handleImageChange}
 5206 | 637 |                       className="sr-only"
 5207 | 638 |                     />
 5208 | 639 |                   </label>
 5209 | 640 |                   <p className="pl-1">или ги провлачете тук</p>
 5210 | 641 |                 </div>
 5211 | 642 |                 <p className="text-xs text-gray-500 dark:text-gray-400">
 5212 | 643 |                   PNG, JPG, WEBP до 10MB
 5213 | 644 |                 </p>
 5214 | 645 |               </div>
 5215 | 646 |             </div>
 5216 | 647 |             {images.length > 0 && (
 5217 | 648 |               <div className="mt-4">
 5218 | 649 |                 <h4 className="text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">Избрани файлове:</h4>
 5219 | 650 |                 <ul className="mt-2 divide-y divide-gray-200 dark:divide-gray-700">
 5220 | 651 |                   {Array.from(images).map((file, index) => (
 5221 | 652 |                     <li key={index} className="flex items-center justify-between py-2">
 5222 | 653 |                       <span className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">{file.name}</span>
 5223 | 654 |                       <button
 5224 | 655 |                         type="button"
 5225 | 656 |                         onClick={() => setImages(images.filter((_, i) => i !== index))}
 5226 | 657 |                         className="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300"
 5227 | 658 |                       >
 5228 | 659 |                         <XMarkIcon className="w-5 h-5" />
 5229 | 660 |                       </button>
 5230 | 661 |                     </li>
 5231 | 662 |                   ))}
 5232 | 663 |                 </ul>
 5233 | 664 |               </div>
 5234 | 665 |             )}
 5235 | 666 |           </div>
 5236 | 667 |         </div>
 5237 | 668 | 
 5238 | 669 |         <div className="flex justify-end gap-3 sm:col-span-2">
 5239 | 670 |           {onCancel && (
 5240 | 671 |             <button
 5241 | 672 |               type="button"
 5242 | 673 |               onClick={onCancel}
 5243 | 674 |               className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] bg-white dark:bg-[rgb(var(--color-dark-bg))] border border-gray-300 dark:border-[rgb(var(--color-dark-border))] rounded-md shadow-sm hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
 5244 | 675 |             >
 5245 | 676 |               Отказ
 5246 | 677 |             </button>
 5247 | 678 |           )}
 5248 | 679 |           <button
 5249 | 680 |             type="submit"
 5250 | 681 |             disabled={isSubmitting || regionsLoading || neighborhoodsLoading || featuresLoading}
 5251 | 682 |             className="px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
 5252 | 683 |           >
 5253 | 684 |             {isSubmitting ? 'Запазване...' : submitLabel}
 5254 | 685 |           </button>
 5255 | 686 |         </div>
 5256 | 687 |       </div>
 5257 | 688 |     </form>
 5258 | 689 |   );
 5259 | 690 | } 
 5260 | 691 | 
 5261 | 
 5262 | 
 5263 | --------------------------------------------------------------------------------
 5264 | /apps/web/src/components/auth/ProtectedRoute.tsx:
 5265 | --------------------------------------------------------------------------------
 5266 |  1 | import { Navigate, useLocation } from 'react-router-dom';
 5267 |  2 | import { useQuery } from '@tanstack/react-query';
 5268 |  3 | import api from '../../lib/api';
 5269 |  4 | import { useAuth } from '../../contexts/auth';
 5270 |  5 | import LoadingSpinner from '../LoadingSpinner';
 5271 |  6 | 
 5272 |  7 | interface Props {
 5273 |  8 |   children: React.ReactNode;
 5274 |  9 |   requireAdmin?: boolean;
 5275 | 10 | }
 5276 | 11 | 
 5277 | 12 | export default function ProtectedRoute({ children, requireAdmin = true }: Props) {
 5278 | 13 |   const location = useLocation();
 5279 | 14 |   const { user, isLoading: authLoading, setUser } = useAuth();
 5280 | 15 | 
 5281 | 16 |   const { isLoading: queryLoading, isError } = useQuery({
 5282 | 17 |     queryKey: ['auth', 'me'],
 5283 | 18 |     queryFn: async () => {
 5284 | 19 |       const token = localStorage.getItem('token');
 5285 | 20 |       if (!token) {
 5286 | 21 |         console.log('No token found in localStorage');
 5287 | 22 |         throw new Error('No token');
 5288 | 23 |       }
 5289 | 24 |       
 5290 | 25 |       try {
 5291 | 26 |         console.log('Fetching user data...');
 5292 | 27 |         const response = await api.get('/auth/me');
 5293 | 28 |         const userData = response.data.data.user;
 5294 | 29 |         console.log('User data received:', userData);
 5295 | 30 |         setUser(userData);
 5296 | 31 |         return userData;
 5297 | 32 |       } catch (err) {
 5298 | 33 |         console.error('Error in /auth/me request:', err);
 5299 | 34 |         // Clear auth state on error
 5300 | 35 |         localStorage.removeItem('token');
 5301 | 36 |         setUser(null);
 5302 | 37 |         throw err;
 5303 | 38 |       }
 5304 | 39 |     },
 5305 | 40 |     retry: false,
 5306 | 41 |     // Only run the query if we don't have a user already
 5307 | 42 |     enabled: !user && !!localStorage.getItem('token'),
 5308 | 43 |     staleTime: 1000 * 60 * 5, // Cache for 5 minutes
 5309 | 44 |   });
 5310 | 45 | 
 5311 | 46 |   // Show loading state while checking auth
 5312 | 47 |   if (authLoading || queryLoading) {
 5313 | 48 |     return <LoadingSpinner />;
 5314 | 49 |   }
 5315 | 50 | 
 5316 | 51 |   // If no token exists, redirect to login
 5317 | 52 |   if (!localStorage.getItem('token')) {
 5318 | 53 |     return <Navigate to="/admin/login" state={{ from: location }} replace />;
 5319 | 54 |   }
 5320 | 55 | 
 5321 | 56 |   // If we have an error or no user after loading, redirect to login
 5322 | 57 |   if (isError || !user) {
 5323 | 58 |     return <Navigate to="/admin/login" state={{ from: location }} replace />;
 5324 | 59 |   }
 5325 | 60 | 
 5326 | 61 |   // Check admin access if required
 5327 | 62 |   if (requireAdmin && user.role !== 'ADMIN') {
 5328 | 63 |     return <Navigate to="/" replace />;
 5329 | 64 |   }
 5330 | 65 | 
 5331 | 66 |   return <>{children}</>;
 5332 | 67 | } 
 5333 | 68 | 
 5334 | 
 5335 | 
 5336 | --------------------------------------------------------------------------------
 5337 | /apps/web/src/components/layout/Layout.tsx:
 5338 | --------------------------------------------------------------------------------
 5339 |   1 | import { Link, Outlet, useLocation } from 'react-router-dom';
 5340 |   2 | import { Dialog } from '@headlessui/react';
 5341 |   3 | import { Bars3Icon, XMarkIcon, Cog6ToothIcon } from '@heroicons/react/24/outline';
 5342 |   4 | import { useState, useEffect } from 'react';
 5343 |   5 | import ThemeToggle from '../ThemeToggle';
 5344 |   6 | import { useAuth } from '../../contexts/auth';
 5345 |   7 | import { useTheme } from '../../hooks/useTheme';
 5346 |   8 | import Logo from '../Logo';
 5347 |   9 | 
 5348 |  10 | const navigation = [
 5349 |  11 |   { name: 'Начало', href: '/' },
 5350 |  12 |   { name: 'Имоти', href: '/properties' },
 5351 |  13 |   { name: 'За нас', href: '/about' },
 5352 |  14 |   { name: 'Контакти', href: '/contact' },
 5353 |  15 | ];
 5354 |  16 | 
 5355 |  17 | export default function Layout() {
 5356 |  18 |   const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
 5357 |  19 |   const [isScrolled, setIsScrolled] = useState(false);
 5358 |  20 |   const location = useLocation();
 5359 |  21 |   const { isAdmin } = useAuth();
 5360 |  22 |   const { isDark } = useTheme();
 5361 |  23 | 
 5362 |  24 |   useEffect(() => {
 5363 |  25 |     setMobileMenuOpen(false);
 5364 |  26 |   }, [location]);
 5365 |  27 | 
 5366 |  28 |   useEffect(() => {
 5367 |  29 |     const handleScroll = () => {
 5368 |  30 |       setIsScrolled(window.scrollY > 10);
 5369 |  31 |     };
 5370 |  32 | 
 5371 |  33 |     window.addEventListener('scroll', handleScroll);
 5372 |  34 |     return () => window.removeEventListener('scroll', handleScroll);
 5373 |  35 |   }, []);
 5374 |  36 | 
 5375 |  37 |   return (
 5376 |  38 |     <div className="flex flex-col min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 5377 |  39 |       <header className={`sticky top-0 z-50 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))] shadow-sm transition-all duration-300 ${isScrolled ? 'h-16' : 'h-20'}`}>
 5378 |  40 |         <nav className="container flex justify-between items-center h-full transition-all duration-300">
 5379 |  41 |           <div className="flex gap-8 items-center">
 5380 |  42 |             <Link to="/" className="flex items-center">
 5381 |  43 |               <Logo className={`w-auto transition-all duration-300 ${isScrolled ? 'h-12' : 'h-16'}`} />
 5382 |  44 |             </Link>
 5383 |  45 |             <div className="hidden md:flex md:gap-6">
 5384 |  46 |               {navigation.map((item) => (
 5385 |  47 |                 <Link
 5386 |  48 |                   key={item.name}
 5387 |  49 |                   to={item.href}
 5388 |  50 |                   className="text-sm font-semibold leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))] hover:text-primary-600 dark:hover:text-primary-500"
 5389 |  51 |                 >
 5390 |  52 |                   {item.name}
 5391 |  53 |                 </Link>
 5392 |  54 |               ))}
 5393 |  55 |             </div>
 5394 |  56 |           </div>
 5395 |  57 |           <div className="flex items-center gap-4">
 5396 |  58 |             <ThemeToggle />
 5397 |  59 |             <div className="flex md:hidden">
 5398 |  60 |               <button
 5399 |  61 |                 type="button"
 5400 |  62 |                 className="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
 5401 |  63 |                 onClick={() => setMobileMenuOpen(true)}
 5402 |  64 |               >
 5403 |  65 |                 <span className="sr-only">Open main menu</span>
 5404 |  66 |                 <Bars3Icon className="h-6 w-6" aria-hidden="true" />
 5405 |  67 |               </button>
 5406 |  68 |             </div>
 5407 |  69 |           </div>
 5408 |  70 |         </nav>
 5409 |  71 |       </header>
 5410 |  72 | 
 5411 |  73 |       <Dialog as="div" className="md:hidden" open={mobileMenuOpen} onClose={setMobileMenuOpen}>
 5412 |  74 |         <div className="fixed inset-0 z-50" />
 5413 |  75 |         <Dialog.Panel className="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10">
 5414 |  76 |           <div className="flex items-center justify-between">
 5415 |  77 |             <Link to="/" className="flex items-center" onClick={() => setMobileMenuOpen(false)}>
 5416 |  78 |               <Logo className="w-auto h-12" />
 5417 |  79 |             </Link>
 5418 |  80 |             <button
 5419 |  81 |               type="button"
 5420 |  82 |               className="-m-2.5 rounded-md p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
 5421 |  83 |               onClick={() => setMobileMenuOpen(false)}
 5422 |  84 |             >
 5423 |  85 |               <span className="sr-only">Close menu</span>
 5424 |  86 |               <XMarkIcon className="h-6 w-6" aria-hidden="true" />
 5425 |  87 |             </button>
 5426 |  88 |           </div>
 5427 |  89 |           <div className="mt-6 flow-root">
 5428 |  90 |             <div className="-my-6 divide-y divide-gray-500/10">
 5429 |  91 |               <div className="space-y-2 py-6">
 5430 |  92 |                 {navigation.map((item) => (
 5431 |  93 |                   <Link
 5432 |  94 |                     key={item.name}
 5433 |  95 |                     to={item.href}
 5434 |  96 |                     className="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))]"
 5435 |  97 |                     onClick={() => setMobileMenuOpen(false)}
 5436 |  98 |                   >
 5437 |  99 |                     {item.name}
 5438 | 100 |                   </Link>
 5439 | 101 |                 ))}
 5440 | 102 |               </div>
 5441 | 103 |               <div className="py-6">
 5442 | 104 |                 <ThemeToggle />
 5443 | 105 |               </div>
 5444 | 106 |             </div>
 5445 | 107 |           </div>
 5446 | 108 |         </Dialog.Panel>
 5447 | 109 |       </Dialog>
 5448 | 110 | 
 5449 | 111 |       <main className="flex-1">
 5450 | 112 |         <div className="container py-8">
 5451 | 113 |           <Outlet />
 5452 | 114 |         </div>
 5453 | 115 |       </main>
 5454 | 116 | 
 5455 | 117 |       <footer className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))]">
 5456 | 118 |         <div className="container py-8">
 5457 | 119 |           <div className="grid grid-cols-1 gap-8 md:grid-cols-3">
 5458 | 120 |             <div>
 5459 | 121 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Контакти</h3>
 5460 | 122 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5461 | 123 |                 <li>Телефон: +359 82 82 82 82</li>
 5462 | 124 |                 <li>Имейл: office@propertyai.bg</li>
 5463 | 125 |                 <li>Адрес: Русе, България</li>
 5464 | 126 |               </ul>
 5465 | 127 |             </div>
 5466 | 128 |             <div>
 5467 | 129 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
 5468 | 130 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5469 | 131 |                 <li>Понеделник - Петък: 9:00 - 18:00</li>
 5470 | 132 |                 <li>Събота: 10:00 - 14:00</li>
 5471 | 133 |                 <li>Неделя: Затворено</li>
 5472 | 134 |               </ul>
 5473 | 135 |             </div>
 5474 | 136 |             <div>
 5475 | 137 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Последвайте ни</h3>
 5476 | 138 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5477 | 139 |                 <li>
 5478 | 140 |                   <a href="#" className="hover:text-gray-900 dark:hover:text-[rgb(var(--color-dark-text))]">
 5479 | 141 |                     Facebook
 5480 | 142 |                   </a>
 5481 | 143 |                 </li>
 5482 | 144 |                 <li>
 5483 | 145 |                   <a href="#" className="hover:text-gray-900 dark:hover:text-[rgb(var(--color-dark-text))]">
 5484 | 146 |                     Instagram
 5485 | 147 |                   </a>
 5486 | 148 |                 </li>
 5487 | 149 |               </ul>
 5488 | 150 |             </div>
 5489 | 151 |           </div>
 5490 | 152 |           <div className="pt-8 mt-8 text-sm text-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))]">
 5491 | 153 |             © {new Date().getFullYear()} Property AI. All rights reserved.
 5492 | 154 |           </div>
 5493 | 155 |         </div>
 5494 | 156 |       </footer>
 5495 | 157 |       {isAdmin && (
 5496 | 158 |         <Link
 5497 | 159 |           to="/admin"
 5498 | 160 |           className="fixed bottom-24 -right-1 group flex items-center p-3 bg-primary-600 text-white shadow-lg transition-all duration-300 ease-in-out z-50 rounded-l-full hover:pr-6 hover:right-0 hover:bg-primary-700 hover:shadow-xl hover:translate-x-1"
 5499 | 161 |           title="Admin Panel"
 5500 | 162 |         >
 5501 | 163 |           <Cog6ToothIcon className="h-6 w-6 transform transition-transform duration-300 ease-in-out group-hover:rotate-90" aria-hidden="true" />
 5502 | 164 |           <span className="text-sm font-medium max-w-0 group-hover:max-w-[200px] opacity-0 group-hover:opacity-100 transition-all duration-300 ease-in-out whitespace-nowrap overflow-hidden">
 5503 | 165 |             Admin Panel
 5504 | 166 |           </span>
 5505 | 167 |         </Link>
 5506 | 168 |       )}
 5507 | 169 |     </div>
 5508 | 170 |   );
 5509 | 171 | } 
 5510 | 172 | 
 5511 | 
 5512 | 
 5513 | --------------------------------------------------------------------------------
 5514 | /apps/web/src/components/maps/GoogleMap.tsx:
 5515 | --------------------------------------------------------------------------------
 5516 |  1 | import { useCallback, useMemo } from 'react';
 5517 |  2 | import { GoogleMap as GoogleMapComponent, useLoadScript, Marker } from '@react-google-maps/api';
 5518 |  3 | 
 5519 |  4 | interface GoogleMapProps {
 5520 |  5 |   center: {
 5521 |  6 |     lat: number;
 5522 |  7 |     lng: number;
 5523 |  8 |   };
 5524 |  9 |   zoom?: number;
 5525 | 10 | }
 5526 | 11 | 
 5527 | 12 | const containerStyle = {
 5528 | 13 |   width: '100%',
 5529 | 14 |   height: '100%',
 5530 | 15 |   borderRadius: '0.5rem'
 5531 | 16 | };
 5532 | 17 | 
 5533 | 18 | export default function GoogleMap({ center, zoom = 15 }: GoogleMapProps) {
 5534 | 19 |   const { isLoaded, loadError } = useLoadScript({
 5535 | 20 |     googleMapsApiKey: import.meta.env.VITE_GOOGLE_MAPS_API_KEY || '',
 5536 | 21 |   });
 5537 | 22 | 
 5538 | 23 |   const options = useMemo(() => ({
 5539 | 24 |     disableDefaultUI: false,
 5540 | 25 |     clickableIcons: true,
 5541 | 26 |     scrollwheel: true,
 5542 | 27 |   }), []);
 5543 | 28 | 
 5544 | 29 |   const onLoad = useCallback((map: google.maps.Map) => {
 5545 | 30 |     const bounds = new window.google.maps.LatLngBounds(center);
 5546 | 31 |     map.fitBounds(bounds);
 5547 | 32 |   }, [center]);
 5548 | 33 | 
 5549 | 34 |   if (loadError) {
 5550 | 35 |     return (
 5551 | 36 |       <div className="flex items-center justify-center w-full h-full text-red-600 dark:text-red-500">
 5552 | 37 |         Error loading maps
 5553 | 38 |       </div>
 5554 | 39 |     );
 5555 | 40 |   }
 5556 | 41 | 
 5557 | 42 |   if (!isLoaded) {
 5558 | 43 |     return (
 5559 | 44 |       <div className="flex items-center justify-center w-full h-full text-gray-600 dark:text-gray-400">
 5560 | 45 |         Loading maps...
 5561 | 46 |       </div>
 5562 | 47 |     );
 5563 | 48 |   }
 5564 | 49 | 
 5565 | 50 |   return (
 5566 | 51 |     <GoogleMapComponent
 5567 | 52 |       mapContainerStyle={containerStyle}
 5568 | 53 |       center={center}
 5569 | 54 |       zoom={zoom}
 5570 | 55 |       options={options}
 5571 | 56 |       onLoad={onLoad}
 5572 | 57 |     >
 5573 | 58 |       <Marker position={center} />
 5574 | 59 |     </GoogleMapComponent>
 5575 | 60 |   );
 5576 | 61 | } 
 5577 | 62 | 
 5578 | 
 5579 | 
 5580 | --------------------------------------------------------------------------------
 5581 | /apps/web/src/components/properties/PropertyCard.tsx:
 5582 | --------------------------------------------------------------------------------
 5583 |  1 | import { Link } from 'react-router-dom';
 5584 |  2 | import { propertyTypeLabels, locationTypeLabels, categoryLabels } from '../../constants/property';
 5585 |  3 | 
 5586 |  4 | export interface PropertyCardProps {
 5587 |  5 |   id: string;
 5588 |  6 |   title: string;
 5589 |  7 |   description: string;
 5590 |  8 |   price: number;
 5591 |  9 |   currency: string;
 5592 | 10 |   area_sqm: number;
 5593 | 11 |   type: string;
 5594 | 12 |   category: string;
 5595 | 13 |   location_type: 'CITY' | 'REGION';
 5596 | 14 |   images?: Array<{ url: string }>;
 5597 | 15 |   features?: Array<{ featureId: number; name: string }>;
 5598 | 16 |   floor?: number;
 5599 | 17 |   total_floors?: number;
 5600 | 18 |   construction_type?: string;
 5601 | 19 |   furnishing?: string;
 5602 | 20 |   has_regulation?: boolean;
 5603 | 21 |   land_area_sqm?: number;
 5604 | 22 | }
 5605 | 23 | 
 5606 | 24 | export default function PropertyCard({
 5607 | 25 |   id,
 5608 | 26 |   title,
 5609 | 27 |   description,
 5610 | 28 |   price,
 5611 | 29 |   currency,
 5612 | 30 |   area_sqm,
 5613 | 31 |   type,
 5614 | 32 |   category,
 5615 | 33 |   location_type,
 5616 | 34 |   images,
 5617 | 35 | }: PropertyCardProps) {
 5618 | 36 |   const formattedPrice = new Intl.NumberFormat('bg-BG', {
 5619 | 37 |     style: 'currency',
 5620 | 38 |     currency: currency || 'BGN',
 5621 | 39 |     maximumFractionDigits: 0,
 5622 | 40 |   }).format(price);
 5623 | 41 | 
 5624 | 42 |   return (
 5625 | 43 |     <Link
 5626 | 44 |       to={`/properties/${id}`}
 5627 | 45 |       className="flex flex-col overflow-hidden transition-all bg-white rounded-lg shadow-lg hover:shadow-xl dark:shadow-[rgb(var(--color-dark-bg))] dark:bg-[rgb(var(--color-dark-bg-secondary))] group"
 5628 | 46 |     >
 5629 | 47 |       <div className="relative flex-shrink-0 h-48 overflow-hidden">
 5630 | 48 |         <img
 5631 | 49 |           src={images?.[0]?.url || '/images/property-placeholder.webp'}
 5632 | 50 |           alt={title}
 5633 | 51 |           className="object-cover w-full h-full transition-transform duration-300 ease-in-out group-hover:scale-110"
 5634 | 52 |           onError={(e) => {
 5635 | 53 |             const target = e.target as HTMLImageElement;
 5636 | 54 |             target.onerror = null;
 5637 | 55 |             target.src = '/images/property-placeholder.webp';
 5638 | 56 |           }}
 5639 | 57 |         />
 5640 | 58 |       </div>
 5641 | 59 |       <div className="z-10 mr-3 -mt-3 text-right">
 5642 | 60 |         <span className="inline-flex px-3 py-1 text-sm font-medium text-white bg-red-600 rounded-md shadow-sm">
 5643 | 61 |           {categoryLabels[category] || category}
 5644 | 62 |         </span>
 5645 | 63 |       </div>
 5646 | 64 |       <div className="flex flex-col flex-1 p-4">
 5647 | 65 |         <div className="flex-1">
 5648 | 66 |           <h3 className="text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 5649 | 67 |             {title}
 5650 | 68 |           </h3>
 5651 | 69 |         </div>
 5652 | 70 |         <div className="mt-4">
 5653 | 71 |           <div className="flex items-center justify-between">
 5654 | 72 |             <span className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 5655 | 73 |               {formattedPrice}
 5656 | 74 |             </span>
 5657 | 75 |             <span className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5658 | 76 |               {area_sqm} м²
 5659 | 77 |             </span>
 5660 | 78 |           </div>
 5661 | 79 |           <div className="flex items-center justify-between mt-2 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 5662 | 80 |             <span>{propertyTypeLabels[type] || type}</span>
 5663 | 81 |             <span>{locationTypeLabels[location_type] || location_type}</span>
 5664 | 82 |           </div>
 5665 | 83 |         </div>
 5666 | 84 |       </div>
 5667 | 85 |     </Link>
 5668 | 86 |   );
 5669 | 87 | } 
 5670 | 88 | 
 5671 | 
 5672 | 
 5673 | --------------------------------------------------------------------------------
 5674 | /apps/web/src/components/properties/PropertyCardSkeleton.tsx:
 5675 | --------------------------------------------------------------------------------
 5676 |  1 | import React from 'react';
 5677 |  2 | 
 5678 |  3 | export default function PropertyCardSkeleton() {
 5679 |  4 |   return (
 5680 |  5 |     <div className="flex flex-col overflow-hidden bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-lg">
 5681 |  6 |       <div className="relative flex-shrink-0 h-48">
 5682 |  7 |         <div className="absolute inset-0 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] animate-pulse" />
 5683 |  8 |       </div>
 5684 |  9 |       <div className="flex flex-col flex-1 p-4">
 5685 | 10 |         <div className="flex-1">
 5686 | 11 |           <div className="h-6 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-3/4 animate-pulse" />
 5687 | 12 |         </div>
 5688 | 13 |         <div className="mt-4">
 5689 | 14 |           <div className="flex items-center justify-between">
 5690 | 15 |             <div className="h-5 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/3 animate-pulse" />
 5691 | 16 |             <div className="h-5 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
 5692 | 17 |           </div>
 5693 | 18 |           <div className="flex items-center justify-between mt-2">
 5694 | 19 |             <div className="h-4 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
 5695 | 20 |             <div className="h-4 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
 5696 | 21 |           </div>
 5697 | 22 |         </div>
 5698 | 23 |       </div>
 5699 | 24 |     </div>
 5700 | 25 |   );
 5701 | 26 | } 
 5702 | 27 | 
 5703 | 
 5704 | 
 5705 | --------------------------------------------------------------------------------
 5706 | /apps/web/src/constants/property.ts:
 5707 | --------------------------------------------------------------------------------
 5708 |  1 | export const constructionTypes = [
 5709 |  2 |   { value: 'BRICK', label: 'Тухла' },
 5710 |  3 |   { value: 'EPK', label: 'ЕПК' },
 5711 |  4 |   { value: 'PK', label: 'ПК' },
 5712 |  5 |   { value: 'PANEL', label: 'Панел' },
 5713 |  6 |   { value: 'WOOD_FLOOR', label: 'Дървен гредоред' },
 5714 |  7 | ] as const;
 5715 |  8 | 
 5716 |  9 | export const furnishingTypes = [
 5717 | 10 |   { value: 'FURNISHED', label: 'Обзаведен' },
 5718 | 11 |   { value: 'PARTIALLY_FURNISHED', label: 'Частично обзаведен' },
 5719 | 12 |   { value: 'UNFURNISHED', label: 'Необзаведен' },
 5720 | 13 | ] as const;
 5721 | 14 | 
 5722 | 15 | export const propertyTypes = [
 5723 | 16 |   { value: 'APARTMENT', label: 'Апартамент' },
 5724 | 17 |   { value: 'HOUSE', label: 'Къща' },
 5725 | 18 |   { value: 'PLOT', label: 'Парцел' },
 5726 | 19 |   { value: 'COMMERCIAL', label: 'Търговски имот' },
 5727 | 20 |   { value: 'INDUSTRIAL', label: 'Индустриален имот' },
 5728 | 21 | ] as const;
 5729 | 22 | 
 5730 | 23 | export const locationTypes = [
 5731 | 24 |   { value: 'CITY', label: 'Град' },
 5732 | 25 |   { value: 'REGION', label: 'Регион' },
 5733 | 26 | ] as const;
 5734 | 27 | 
 5735 | 28 | export const categories = [
 5736 | 29 |   { value: 'SALE', label: 'Продажба' },
 5737 | 30 |   { value: 'RENT', label: 'Наем' },
 5738 | 31 | ] as const;
 5739 | 32 | 
 5740 | 33 | export const currencies = [
 5741 | 34 |   { value: 'BGN', label: 'лв.' },
 5742 | 35 |   { value: 'EUR', label: '€' },
 5743 | 36 | ] as const;
 5744 | 37 | 
 5745 | 38 | // Label mappings for direct access
 5746 | 39 | export const propertyTypeLabels: Record<string, string> = Object.fromEntries(
 5747 | 40 |   propertyTypes.map(type => [type.value, type.label])
 5748 | 41 | );
 5749 | 42 | 
 5750 | 43 | export const locationTypeLabels: Record<string, string> = Object.fromEntries(
 5751 | 44 |   locationTypes.map(type => [type.value, type.label])
 5752 | 45 | );
 5753 | 46 | 
 5754 | 47 | export const categoryLabels: Record<string, string> = Object.fromEntries(
 5755 | 48 |   categories.map(category => [category.value, category.label])
 5756 | 49 | );
 5757 | 50 | 
 5758 | 51 | export const constructionTypeLabels: Record<string, string> = Object.fromEntries(
 5759 | 52 |   constructionTypes.map(type => [type.value, type.label])
 5760 | 53 | );
 5761 | 54 | 
 5762 | 55 | export const furnishingTypeLabels: Record<string, string> = Object.fromEntries(
 5763 | 56 |   furnishingTypes.map(type => [type.value, type.label])
 5764 | 57 | );
 5765 | 58 | 
 5766 | 59 | export const currencyLabels: Record<string, string> = Object.fromEntries(
 5767 | 60 |   currencies.map(currency => [currency.value, currency.label])
 5768 | 61 | ); 
 5769 | 62 | 
 5770 | 
 5771 | 
 5772 | --------------------------------------------------------------------------------
 5773 | /apps/web/src/contexts/ThemeContext.tsx:
 5774 | --------------------------------------------------------------------------------
 5775 |  1 | import { createContext, useContext, useEffect, useState } from 'react';
 5776 |  2 | 
 5777 |  3 | type Theme = 'light' | 'dark' | 'gray';
 5778 |  4 | 
 5779 |  5 | interface ThemeContextType {
 5780 |  6 |   theme: Theme;
 5781 |  7 |   setTheme: (theme: Theme) => void;
 5782 |  8 |   toggleTheme: () => void;
 5783 |  9 | }
 5784 | 10 | 
 5785 | 11 | const ThemeContext = createContext<ThemeContextType | undefined>(undefined);
 5786 | 12 | 
 5787 | 13 | export function ThemeProvider({ children }: { children: React.ReactNode }) {
 5788 | 14 |   const [theme, setTheme] = useState<Theme>(() => {
 5789 | 15 |     const savedTheme = localStorage.getItem('theme');
 5790 | 16 |     if (savedTheme === 'light' || savedTheme === 'dark' || savedTheme === 'gray') {
 5791 | 17 |       return savedTheme as Theme;
 5792 | 18 |     }
 5793 | 19 |     if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
 5794 | 20 |       return 'dark';
 5795 | 21 |     }
 5796 | 22 |     return 'light';
 5797 | 23 |   });
 5798 | 24 | 
 5799 | 25 |   useEffect(() => {
 5800 | 26 |     localStorage.setItem('theme', theme);
 5801 | 27 |     const root = document.documentElement;
 5802 | 28 |     root.classList.remove('light', 'dark', 'gray');
 5803 | 29 |     
 5804 | 30 |     if (theme === 'gray') {
 5805 | 31 |       root.classList.add('dark', 'gray');
 5806 | 32 |     } else {
 5807 | 33 |       root.classList.add(theme);
 5808 | 34 |     }
 5809 | 35 |   }, [theme]);
 5810 | 36 | 
 5811 | 37 |   useEffect(() => {
 5812 | 38 |     const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
 5813 | 39 |     const handleChange = (e: MediaQueryListEvent) => {
 5814 | 40 |       setTheme(e.matches ? 'dark' : 'light');
 5815 | 41 |     };
 5816 | 42 |     mediaQuery.addEventListener('change', handleChange);
 5817 | 43 |     return () => mediaQuery.removeEventListener('change', handleChange);
 5818 | 44 |   }, []);
 5819 | 45 | 
 5820 | 46 |   const toggleTheme = () => {
 5821 | 47 |     setTheme((prevTheme) => {
 5822 | 48 |       switch (prevTheme) {
 5823 | 49 |         case 'light':
 5824 | 50 |           return 'dark';
 5825 | 51 |         case 'dark':
 5826 | 52 |           return 'gray';
 5827 | 53 |         case 'gray':
 5828 | 54 |           return 'light';
 5829 | 55 |         default:
 5830 | 56 |           return 'light';
 5831 | 57 |       }
 5832 | 58 |     });
 5833 | 59 |   };
 5834 | 60 | 
 5835 | 61 |   return (
 5836 | 62 |     <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>
 5837 | 63 |       {children}
 5838 | 64 |     </ThemeContext.Provider>
 5839 | 65 |   );
 5840 | 66 | }
 5841 | 67 | 
 5842 | 68 | export function useTheme() {
 5843 | 69 |   const context = useContext(ThemeContext);
 5844 | 70 |   if (context === undefined) {
 5845 | 71 |     throw new Error('useTheme must be used within a ThemeProvider');
 5846 | 72 |   }
 5847 | 73 |   return {
 5848 | 74 |     ...context,
 5849 | 75 |     isDark: context.theme === 'dark' || context.theme === 'gray'
 5850 | 76 |   };
 5851 | 77 | } 
 5852 | 78 | 
 5853 | 
 5854 | 
 5855 | --------------------------------------------------------------------------------
 5856 | /apps/web/src/contexts/auth.tsx:
 5857 | --------------------------------------------------------------------------------
 5858 |   1 | import { createContext, useContext, useState, useEffect, ReactNode } from 'react';
 5859 |   2 | import { useNavigate } from 'react-router-dom';
 5860 |   3 | import type { User } from '../types/api';
 5861 |   4 | import { getCurrentUser, login as loginApi, register as registerApi, logout as logoutApi } from '../services/auth';
 5862 |   5 | import type { LoginData, RegisterData } from '../services/auth';
 5863 |   6 | 
 5864 |   7 | interface AuthContextType {
 5865 |   8 |   user: User | null;
 5866 |   9 |   isLoading: boolean;
 5867 |  10 |   isAuthenticated: boolean;
 5868 |  11 |   isAdmin: boolean;
 5869 |  12 |   login: (data: LoginData) => Promise<void>;
 5870 |  13 |   register: (data: RegisterData) => Promise<void>;
 5871 |  14 |   logout: () => void;
 5872 |  15 |   setUser: (user: User | null) => void;
 5873 |  16 | }
 5874 |  17 | 
 5875 |  18 | const AuthContext = createContext<AuthContextType | null>(null);
 5876 |  19 | 
 5877 |  20 | export const AuthProvider = ({ children }: { children: ReactNode }) => {
 5878 |  21 |   const navigate = useNavigate();
 5879 |  22 |   const [user, setUser] = useState<User | null>(null);
 5880 |  23 |   const [isLoading, setIsLoading] = useState(true);
 5881 |  24 | 
 5882 |  25 |   // Initial auth check
 5883 |  26 |   useEffect(() => {
 5884 |  27 |     const token = localStorage.getItem('token');
 5885 |  28 |     if (!token) {
 5886 |  29 |       setIsLoading(false);
 5887 |  30 |       return;
 5888 |  31 |     }
 5889 |  32 | 
 5890 |  33 |     const verifyAuth = async () => {
 5891 |  34 |       try {
 5892 |  35 |         console.log('Verifying authentication...');
 5893 |  36 |         const userData = await getCurrentUser();
 5894 |  37 |         console.log('User data received:', userData);
 5895 |  38 |         setUser(userData);
 5896 |  39 |         // If we're on the login page and verification succeeds, redirect to admin
 5897 |  40 |         if (window.location.pathname === '/admin/login') {
 5898 |  41 |           navigate('/admin');
 5899 |  42 |         }
 5900 |  43 |       } catch (error) {
 5901 |  44 |         console.error('Auth verification failed:', error);
 5902 |  45 |         // Clear both token and user on auth error
 5903 |  46 |         localStorage.removeItem('token');
 5904 |  47 |         setUser(null);
 5905 |  48 |         // Redirect to login if we're on an admin page
 5906 |  49 |         if (window.location.pathname.startsWith('/admin')) {
 5907 |  50 |           navigate('/admin/login');
 5908 |  51 |         }
 5909 |  52 |       } finally {
 5910 |  53 |         setIsLoading(false);
 5911 |  54 |       }
 5912 |  55 |     };
 5913 |  56 | 
 5914 |  57 |     verifyAuth();
 5915 |  58 |   }, [navigate]);
 5916 |  59 | 
 5917 |  60 |   const login = async (data: LoginData) => {
 5918 |  61 |     try {
 5919 |  62 |       console.log('Logging in...');
 5920 |  63 |       const response = await loginApi(data);
 5921 |  64 |       console.log('Login successful:', response);
 5922 |  65 |       
 5923 |  66 |       // Set token first
 5924 |  67 |       localStorage.setItem('token', response.token);
 5925 |  68 |       // Then update user state
 5926 |  69 |       setUser(response.user);
 5927 |  70 |       navigate('/admin');
 5928 |  71 |     } catch (error) {
 5929 |  72 |       console.error('Login failed:', error);
 5930 |  73 |       // Clear any existing token on login failure
 5931 |  74 |       localStorage.removeItem('token');
 5932 |  75 |       setUser(null);
 5933 |  76 |       throw error;
 5934 |  77 |     }
 5935 |  78 |   };
 5936 |  79 | 
 5937 |  80 |   const register = async (data: RegisterData) => {
 5938 |  81 |     try {
 5939 |  82 |       console.log('Registering...');
 5940 |  83 |       const response = await registerApi(data);
 5941 |  84 |       console.log('Registration successful:', response);
 5942 |  85 |       // Set token first
 5943 |  86 |       localStorage.setItem('token', response.token);
 5944 |  87 |       // Then update user state
 5945 |  88 |       setUser(response.user);
 5946 |  89 |       navigate('/');
 5947 |  90 |     } catch (error) {
 5948 |  91 |       console.error('Registration failed:', error);
 5949 |  92 |       // Clear any existing token on registration failure
 5950 |  93 |       localStorage.removeItem('token');
 5951 |  94 |       setUser(null);
 5952 |  95 |       throw error;
 5953 |  96 |     }
 5954 |  97 |   };
 5955 |  98 | 
 5956 |  99 |   const logout = () => {
 5957 | 100 |     console.log('Logging out...');
 5958 | 101 |     logoutApi();
 5959 | 102 |     // Clear both token and user
 5960 | 103 |     localStorage.removeItem('token');
 5961 | 104 |     setUser(null);
 5962 | 105 |     navigate('/admin/login');
 5963 | 106 |   };
 5964 | 107 | 
 5965 | 108 |   const value = {
 5966 | 109 |     user,
 5967 | 110 |     isLoading,
 5968 | 111 |     isAuthenticated: !!user,
 5969 | 112 |     isAdmin: user?.role === 'ADMIN',
 5970 | 113 |     login,
 5971 | 114 |     register,
 5972 | 115 |     logout,
 5973 | 116 |     setUser,
 5974 | 117 |   };
 5975 | 118 | 
 5976 | 119 |   return (
 5977 | 120 |     <AuthContext.Provider value={value}>
 5978 | 121 |       <div data-testid="auth-provider" data-user={JSON.stringify({ user })}>
 5979 | 122 |         {children}
 5980 | 123 |       </div>
 5981 | 124 |     </AuthContext.Provider>
 5982 | 125 |   );
 5983 | 126 | };
 5984 | 127 | 
 5985 | 128 | export const useAuth = () => {
 5986 | 129 |   const context = useContext(AuthContext);
 5987 | 130 |   if (!context) {
 5988 | 131 |     throw new Error('useAuth must be used within an AuthProvider');
 5989 | 132 |   }
 5990 | 133 |   return context;
 5991 | 134 | }; 
 5992 | 135 | 
 5993 | 
 5994 | 
 5995 | --------------------------------------------------------------------------------
 5996 | /apps/web/src/hooks/useDebounce.ts:
 5997 | --------------------------------------------------------------------------------
 5998 |  1 | import { useState, useEffect } from 'react';
 5999 |  2 | 
 6000 |  3 | export function useDebounce<T>(value: T, delay: number): T {
 6001 |  4 |   const [debouncedValue, setDebouncedValue] = useState<T>(value);
 6002 |  5 | 
 6003 |  6 |   useEffect(() => {
 6004 |  7 |     const timer = setTimeout(() => {
 6005 |  8 |       setDebouncedValue(value);
 6006 |  9 |     }, delay);
 6007 | 10 | 
 6008 | 11 |     return () => {
 6009 | 12 |       clearTimeout(timer);
 6010 | 13 |     };
 6011 | 14 |   }, [value, delay]);
 6012 | 15 | 
 6013 | 16 |   return debouncedValue;
 6014 | 17 | } 
 6015 | 18 | 
 6016 | 
 6017 | 
 6018 | --------------------------------------------------------------------------------
 6019 | /apps/web/src/hooks/useTheme.ts:
 6020 | --------------------------------------------------------------------------------
 6021 |  1 | import { useState, useEffect } from 'react';
 6022 |  2 | 
 6023 |  3 | export function useTheme() {
 6024 |  4 |   const [isDark, setIsDark] = useState(() => 
 6025 |  5 |     document.documentElement.classList.contains('dark')
 6026 |  6 |   );
 6027 |  7 | 
 6028 |  8 |   useEffect(() => {
 6029 |  9 |     const observer = new MutationObserver((mutations) => {
 6030 | 10 |       mutations.forEach((mutation) => {
 6031 | 11 |         if (mutation.attributeName === 'class') {
 6032 | 12 |           setIsDark(document.documentElement.classList.contains('dark'));
 6033 | 13 |         }
 6034 | 14 |       });
 6035 | 15 |     });
 6036 | 16 | 
 6037 | 17 |     observer.observe(document.documentElement, {
 6038 | 18 |       attributes: true,
 6039 | 19 |       attributeFilter: ['class'],
 6040 | 20 |     });
 6041 | 21 | 
 6042 | 22 |     return () => observer.disconnect();
 6043 | 23 |   }, []);
 6044 | 24 | 
 6045 | 25 |   return { isDark };
 6046 | 26 | } 
 6047 | 27 | 
 6048 | 
 6049 | 
 6050 | --------------------------------------------------------------------------------
 6051 | /apps/web/src/index.css:
 6052 | --------------------------------------------------------------------------------
 6053 |   1 | @tailwind base;
 6054 |   2 | @tailwind components;
 6055 |   3 | @tailwind utilities;
 6056 |   4 | 
 6057 |   5 | @layer base {
 6058 |   6 |   :root {
 6059 |   7 |     --color-primary-50: 254 242 242;
 6060 |   8 |     --color-primary-100: 254 226 226;
 6061 |   9 |     --color-primary-200: 254 202 202;
 6062 |  10 |     --color-primary-300: 252 165 165;
 6063 |  11 |     --color-primary-400: 248 113 113;
 6064 |  12 |     --color-primary-500: 239 68 68;
 6065 |  13 |     --color-primary-600: 220 38 38;
 6066 |  14 |     --color-primary-700: 185 28 28;
 6067 |  15 |     --color-primary-800: 153 27 27;
 6068 |  16 |     --color-primary-900: 127 29 29;
 6069 |  17 |     --color-primary-950: 69 10 10;
 6070 |  18 | 
 6071 |  19 |     /* Default light theme colors */
 6072 |  20 |     --color-dark-bg: 255 255 255;
 6073 |  21 |     --color-dark-bg-secondary: 249 250 251;
 6074 |  22 |     --color-dark-text: 17 24 39;
 6075 |  23 |     --color-dark-text-secondary: 107 114 128;
 6076 |  24 |     --color-dark-border: 229 231 235;
 6077 |  25 |   }
 6078 |  26 | 
 6079 |  27 |   /* Dark theme - Vercel-like */
 6080 |  28 |   :root.dark:not(.gray) {
 6081 |  29 |     --color-dark-bg: 0 0 0;
 6082 |  30 |     --color-dark-bg-secondary: 17 17 17;
 6083 |  31 |     --color-dark-text: 255 255 255;
 6084 |  32 |     --color-dark-text-secondary: 153 153 153;
 6085 |  33 |     --color-dark-border: 38 38 38;
 6086 |  34 |   }
 6087 |  35 | 
 6088 |  36 |   /* YouTube Dark Theme Colors */
 6089 |  37 |   :root.dark.gray {
 6090 |  38 |     --color-dark-bg: 15 15 15;
 6091 |  39 |     --color-dark-bg-secondary: 33 33 33;
 6092 |  40 |     --color-dark-text: 241 241 241;
 6093 |  41 |     --color-dark-text-secondary: 170 170 170;
 6094 |  42 |     --color-dark-border: 48 48 48;
 6095 |  43 |   }
 6096 |  44 | 
 6097 |  45 |   html {
 6098 |  46 |     @apply antialiased;
 6099 |  47 |   }
 6100 |  48 | 
 6101 |  49 |   body {
 6102 |  50 |     @apply bg-white text-gray-900 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))];
 6103 |  51 |   }
 6104 |  52 | 
 6105 |  53 |   .container {
 6106 |  54 |     @apply px-4 mx-auto max-w-7xl sm:px-6 lg:px-8;
 6107 |  55 |   }
 6108 |  56 | }
 6109 |  57 | 
 6110 |  58 | @layer components {
 6111 |  59 |   .btn {
 6112 |  60 |     @apply inline-flex items-center justify-center px-4 py-2 text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed;
 6113 |  61 |   }
 6114 |  62 | 
 6115 |  63 |   .btn-primary {
 6116 |  64 |     @apply text-white bg-primary-600 hover:bg-primary-700 focus:ring-primary-500;
 6117 |  65 |   }
 6118 |  66 | 
 6119 |  67 |   .btn-secondary {
 6120 |  68 |     @apply text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 focus:ring-primary-500 
 6121 |  69 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 6122 |  70 |            dark:border-[rgb(var(--color-dark-border))] dark:hover:bg-[rgb(var(--color-dark-border))];
 6123 |  71 |   }
 6124 |  72 | 
 6125 |  73 |   .btn-danger {
 6126 |  74 |     @apply text-white bg-red-600 hover:bg-red-700 focus:ring-red-500;
 6127 |  75 |   }
 6128 |  76 | 
 6129 |  77 |   .input {
 6130 |  78 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 6131 |  79 |            placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6 
 6132 |  80 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 6133 |  81 |            dark:ring-[rgb(var(--color-dark-border))] dark:placeholder:text-[rgb(var(--color-dark-text-secondary))];
 6134 |  82 |   }
 6135 |  83 | 
 6136 |  84 |   .select {
 6137 |  85 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 6138 |  86 |            focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:max-w-xs sm:text-sm sm:leading-6 
 6139 |  87 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 6140 |  88 |            dark:ring-[rgb(var(--color-dark-border))];
 6141 |  89 |   }
 6142 |  90 | 
 6143 |  91 |   .textarea {
 6144 |  92 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 6145 |  93 |            placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6 
 6146 |  94 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 6147 |  95 |            dark:ring-[rgb(var(--color-dark-border))] dark:placeholder:text-[rgb(var(--color-dark-text-secondary))];
 6148 |  96 |   }
 6149 |  97 | 
 6150 |  98 |   .checkbox {
 6151 |  99 |     @apply w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-600 
 6152 | 100 |            dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg-secondary))];
 6153 | 101 |   }
 6154 | 102 | 
 6155 | 103 |   .radio {
 6156 | 104 |     @apply w-4 h-4 border-gray-300 text-primary-600 focus:ring-primary-600 
 6157 | 105 |            dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg-secondary))];
 6158 | 106 |   }
 6159 | 107 | 
 6160 | 108 |   .label {
 6161 | 109 |     @apply block text-sm font-medium leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))];
 6162 | 110 |   }
 6163 | 111 | 
 6164 | 112 |   .help-text {
 6165 | 113 |     @apply mt-2 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))];
 6166 | 114 |   }
 6167 | 115 | 
 6168 | 116 |   .error-text {
 6169 | 117 |     @apply mt-2 text-sm text-red-600;
 6170 | 118 |   }
 6171 | 119 | }
 6172 | 120 | 
 6173 | 121 | @layer utilities {
 6174 | 122 |   .scrollbar-hide {
 6175 | 123 |     -ms-overflow-style: none;
 6176 | 124 |     scrollbar-width: none;
 6177 | 125 |   }
 6178 | 126 | 
 6179 | 127 |   .scrollbar-hide::-webkit-scrollbar {
 6180 | 128 |     display: none;
 6181 | 129 |   }
 6182 | 130 | }
 6183 | 131 | 
 6184 | 
 6185 | 
 6186 | --------------------------------------------------------------------------------
 6187 | /apps/web/src/lib/analytics.ts:
 6188 | --------------------------------------------------------------------------------
 6189 |  1 | import { useEffect } from 'react';
 6190 |  2 | import { useLocation } from 'react-router-dom';
 6191 |  3 | 
 6192 |  4 | declare global {
 6193 |  5 |   interface Window {
 6194 |  6 |     gtag: (command: string, ...args: any[]) => void;
 6195 |  7 |     dataLayer: any[];
 6196 |  8 |   }
 6197 |  9 | }
 6198 | 10 | 
 6199 | 11 | export const GA_TRACKING_ID = import.meta.env.VITE_GA_TRACKING_ID;
 6200 | 12 | 
 6201 | 13 | // Initialize Google Analytics
 6202 | 14 | export const initGA = () => {
 6203 | 15 |   // Skip if tracking ID is not configured
 6204 | 16 |   if (!GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
 6205 | 17 |     console.warn('Google Analytics tracking ID not configured');
 6206 | 18 |     return;
 6207 | 19 |   }
 6208 | 20 | 
 6209 | 21 |   const script = document.createElement('script');
 6210 | 22 |   script.async = true;
 6211 | 23 |   script.src = `https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`;
 6212 | 24 |   document.head.appendChild(script);
 6213 | 25 | 
 6214 | 26 |   window.dataLayer = window.dataLayer || [];
 6215 | 27 |   window.gtag = function gtag() {
 6216 | 28 |     window.dataLayer.push(arguments);
 6217 | 29 |   };
 6218 | 30 |   window.gtag('js', new Date());
 6219 | 31 |   window.gtag('config', GA_TRACKING_ID);
 6220 | 32 | };
 6221 | 33 | 
 6222 | 34 | // Track page views
 6223 | 35 | export const pageview = (url: string) => {
 6224 | 36 |   if (!window.gtag || !GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
 6225 | 37 |     return;
 6226 | 38 |   }
 6227 | 39 |   
 6228 | 40 |   window.gtag('config', GA_TRACKING_ID, {
 6229 | 41 |     page_path: url,
 6230 | 42 |   });
 6231 | 43 | };
 6232 | 44 | 
 6233 | 45 | // Track events
 6234 | 46 | export const event = ({ action, category, label, value }: {
 6235 | 47 |   action: string;
 6236 | 48 |   category: string;
 6237 | 49 |   label: string;
 6238 | 50 |   value?: number;
 6239 | 51 | }) => {
 6240 | 52 |   if (!window.gtag || !GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
 6241 | 53 |     return;
 6242 | 54 |   }
 6243 | 55 | 
 6244 | 56 |   window.gtag('event', action, {
 6245 | 57 |     event_category: category,
 6246 | 58 |     event_label: label,
 6247 | 59 |     value: value,
 6248 | 60 |   });
 6249 | 61 | };
 6250 | 62 | 
 6251 | 63 | // Hook to track page views
 6252 | 64 | export const usePageTracking = () => {
 6253 | 65 |   const location = useLocation();
 6254 | 66 | 
 6255 | 67 |   useEffect(() => {
 6256 | 68 |     pageview(location.pathname + location.search);
 6257 | 69 |   }, [location]);
 6258 | 70 | }; 
 6259 | 71 | 
 6260 | 
 6261 | 
 6262 | --------------------------------------------------------------------------------
 6263 | /apps/web/src/lib/api.ts:
 6264 | --------------------------------------------------------------------------------
 6265 |  1 | import axios from 'axios';
 6266 |  2 | 
 6267 |  3 | const api = axios.create({
 6268 |  4 |   baseURL: import.meta.env.VITE_API_URL || 'http://localhost:3001/api',
 6269 |  5 |   headers: {
 6270 |  6 |     'Content-Type': 'application/json',
 6271 |  7 |   },
 6272 |  8 | });
 6273 |  9 | 
 6274 | 10 | // Add a request interceptor to add the auth token
 6275 | 11 | api.interceptors.request.use((config) => {
 6276 | 12 |   const token = localStorage.getItem('token');
 6277 | 13 |   if (token) {
 6278 | 14 |     config.headers.Authorization = `Bearer ${token}`;
 6279 | 15 |   }
 6280 | 16 |   return config;
 6281 | 17 | }, (error) => {
 6282 | 18 |   return Promise.reject(error);
 6283 | 19 | });
 6284 | 20 | 
 6285 | 21 | // Add a response interceptor to handle errors
 6286 | 22 | api.interceptors.response.use(
 6287 | 23 |   (response) => {
 6288 | 24 |     // Return the entire response data
 6289 | 25 |     return response.data;
 6290 | 26 |   },
 6291 | 27 |   (error) => {
 6292 | 28 |     // Handle 401 Unauthorized errors
 6293 | 29 |     if (error.response?.status === 401) {
 6294 | 30 |       // Clear token and redirect to login
 6295 | 31 |       localStorage.removeItem('token');
 6296 | 32 |       
 6297 | 33 |       // Only redirect to login if we're on an admin page
 6298 | 34 |       if (window.location.pathname.startsWith('/admin')) {
 6299 | 35 |         window.location.href = '/admin/login';
 6300 | 36 |       }
 6301 | 37 |       
 6302 | 38 |       return Promise.reject(new Error('Unauthorized - Please log in'));
 6303 | 39 |     }
 6304 | 40 |     
 6305 | 41 |     // Handle network errors
 6306 | 42 |     if (!error.response) {
 6307 | 43 |       return Promise.reject(new Error('Network error - Please check your connection'));
 6308 | 44 |     }
 6309 | 45 |     
 6310 | 46 |     // Handle other API errors
 6311 | 47 |     const errorMessage = error.response.data?.message || 'An error occurred';
 6312 | 48 |     console.error('API Error:', {
 6313 | 49 |       status: error.response.status,
 6314 | 50 |       message: errorMessage,
 6315 | 51 |       path: error.config?.url,
 6316 | 52 |       method: error.config?.method
 6317 | 53 |     });
 6318 | 54 |     
 6319 | 55 |     return Promise.reject(new Error(errorMessage));
 6320 | 56 |   }
 6321 | 57 | );
 6322 | 58 | 
 6323 | 59 | export default api; 
 6324 | 60 | 
 6325 | 
 6326 | 
 6327 | --------------------------------------------------------------------------------
 6328 | /apps/web/src/lib/schemas/property.ts:
 6329 | --------------------------------------------------------------------------------
 6330 |  1 | import { z } from 'zod';
 6331 |  2 | 
 6332 |  3 | export const propertySchema = z.object({
 6333 |  4 |   title: z.string().min(1),
 6334 |  5 |   description: z.string().min(1),
 6335 |  6 |   price: z.coerce.number().min(0),
 6336 |  7 |   currency: z.string().default('BGN'),
 6337 |  8 |   area_sqm: z.coerce.number().min(0),
 6338 |  9 |   land_area_sqm: z.coerce.number().optional(),
 6339 | 10 |   floor: z.coerce.number().optional(),
 6340 | 11 |   total_floors: z.coerce.number().optional(),
 6341 | 12 |   construction_type: z.string().optional(),
 6342 | 13 |   furnishing: z.string().optional(),
 6343 | 14 |   location_type: z.string().default('CITY'),
 6344 | 15 |   regionId: z.coerce.number().optional(),
 6345 | 16 |   neighborhoodId: z.coerce.number().optional(),
 6346 | 17 |   has_regulation: z.boolean().optional(),
 6347 | 18 |   category: z.string().default('SALE'),
 6348 | 19 |   type: z.string().default('APARTMENT'),
 6349 | 20 |   featured: z.boolean().default(false),
 6350 | 21 |   contact_info: z.object({
 6351 | 22 |     phone: z.string().min(1),
 6352 | 23 |     email: z.string().email(),
 6353 | 24 |   }),
 6354 | 25 | });
 6355 | 26 | 
 6356 | 27 | export type PropertyFormData = z.infer<typeof propertySchema>;
 6357 | 28 | 
 6358 | 29 | export const createPropertySchema = propertySchema;
 6359 | 30 | 
 6360 | 31 | export const updatePropertySchema = propertySchema.partial();
 6361 | 32 | 
 6362 | 33 | export const propertySearchSchema = z.object({
 6363 | 34 |   category: z.string().optional(),
 6364 | 35 |   type: z.string().optional(),
 6365 | 36 |   minPrice: z.coerce.number().optional(),
 6366 | 37 |   maxPrice: z.coerce.number().optional(),
 6367 | 38 |   minArea: z.coerce.number().optional(),
 6368 | 39 |   maxArea: z.coerce.number().optional(),
 6369 | 40 |   location: z.string().optional(),
 6370 | 41 |   currency: z.string().optional(),
 6371 | 42 | });
 6372 | 43 | 
 6373 | 44 | export type PropertySearchParams = z.infer<typeof propertySearchSchema>;
 6374 | 45 | 
 6375 | 46 | export const propertyResponseSchema = propertySchema.extend({
 6376 | 47 |   id: z.string(),
 6377 | 48 |   createdAt: z.string().or(z.date()),
 6378 | 49 |   updatedAt: z.string().or(z.date()),
 6379 | 50 |   images: z.array(z.object({
 6380 | 51 |     id: z.string(),
 6381 | 52 |     url: z.string(),
 6382 | 53 |   })),
 6383 | 54 |   contact_info: z.object({
 6384 | 55 |     id: z.string(),
 6385 | 56 |     phone: z.string(),
 6386 | 57 |     email: z.string(),
 6387 | 58 |   }),
 6388 | 59 | });
 6389 | 60 | 
 6390 | 61 | export type PropertyResponse = z.infer<typeof propertyResponseSchema>; 
 6391 | 62 | 
 6392 | 
 6393 | 
 6394 | --------------------------------------------------------------------------------
 6395 | /apps/web/src/lib/types/index.ts:
 6396 | --------------------------------------------------------------------------------
 6397 |  1 | export interface Property {
 6398 |  2 |   id: string;
 6399 |  3 |   title: string;
 6400 |  4 |   price: number;
 6401 |  5 |   currency: string;
 6402 |  6 |   area_sqm: number;
 6403 |  7 |   floor?: string;
 6404 |  8 |   construction_type?: string;
 6405 |  9 |   furnishing?: string;
 6406 | 10 |   location: string;
 6407 | 11 |   category: string;
 6408 | 12 |   description: string;
 6409 | 13 |   images: string[];
 6410 | 14 |   contact_info: {
 6411 | 15 |     phone: string;
 6412 | 16 |     email: string;
 6413 | 17 |   };
 6414 | 18 |   created_at: string;
 6415 | 19 |   updated_at: string;
 6416 | 20 | }
 6417 | 21 | 
 6418 | 22 | export type PropertyType = 
 6419 | 23 |   | 'apartment'
 6420 | 24 |   | 'house'
 6421 | 25 |   | 'office'
 6422 | 26 |   | 'shop'
 6423 | 27 |   | 'land'
 6424 | 28 |   | 'industrial';
 6425 | 29 | 
 6426 | 30 | export type PropertyCategory = 
 6427 | 31 |   | 'rent'
 6428 | 32 |   | 'sale';
 6429 | 33 | 
 6430 | 34 | export interface User {
 6431 | 35 |   id: string;
 6432 | 36 |   email: string;
 6433 | 37 |   role: 'admin' | 'user';
 6434 | 38 |   name: string;
 6435 | 39 |   created_at: string;
 6436 | 40 |   updated_at: string;
 6437 | 41 | } 
 6438 | 42 | 
 6439 | 
 6440 | 
 6441 | --------------------------------------------------------------------------------
 6442 | /apps/web/src/main.tsx:
 6443 | --------------------------------------------------------------------------------
 6444 |  1 | import { StrictMode } from 'react'
 6445 |  2 | import { createRoot } from 'react-dom/client'
 6446 |  3 | import './index.css'
 6447 |  4 | import App from './App.tsx'
 6448 |  5 | 
 6449 |  6 | createRoot(document.getElementById('root')!).render(
 6450 |  7 |   <StrictMode>
 6451 |  8 |     <App />
 6452 |  9 |   </StrictMode>,
 6453 | 10 | )
 6454 | 11 | 
 6455 | 
 6456 | 
 6457 | --------------------------------------------------------------------------------
 6458 | /apps/web/src/pages/About.tsx:
 6459 | --------------------------------------------------------------------------------
 6460 |   1 | export default function About() {
 6461 |   2 |   return (
 6462 |   3 |     <div className="min-h-screen bg-white dark:bg-[rgb(var(--color-dark-bg))]">
 6463 |   4 |       <div className="container mx-auto px-4 py-12">
 6464 |   5 |         <div className="max-w-4xl mx-auto">
 6465 |   6 |           {/* Hero Section with Image */}
 6466 |   7 |           <div className="relative rounded-2xl overflow-hidden mb-12 shadow-xl">
 6467 |   8 |             <img
 6468 |   9 |               src="/images/about-us.jpg"
 6469 |  10 |               alt="Авалон Недвижими Имоти Office"
 6470 |  11 |               className="w-full h-[400px] object-cover"
 6471 |  12 |             />
 6472 |  13 |             <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent" />
 6473 |  14 |             <div className="absolute bottom-0 left-0 right-0 p-8">
 6474 |  15 |               <h1 className="text-4xl font-bold text-white mb-4">
 6475 |  16 |                 Авалон Недвижими Имоти
 6476 |  17 |               </h1>
 6477 |  18 |               <p className="text-xl text-gray-200">
 6478 |  19 |                 Една от водещите агенции за недвижими имоти в София
 6479 |  20 |               </p>
 6480 |  21 |             </div>
 6481 |  22 |           </div>
 6482 |  23 | 
 6483 |  24 |           <div className="prose prose-lg max-w-none dark:prose-invert">
 6484 |  25 |             <p className="text-lg leading-relaxed mb-8 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6485 |  26 |               Нашата мисия е да предоставяме професионални услуги в областта на недвижимите имоти,
 6486 |  27 |               съобразени с индивидуалните нужди на всеки клиент. Ние се стремим да бъдем надежден
 6487 |  28 |               партньор при покупката, продажбата или наемането на имот.
 6488 |  29 |             </p>
 6489 |  30 | 
 6490 |  31 |             <h2 className="text-3xl font-semibold mt-12 mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Нашите услуги</h2>
 6491 |  32 |             <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
 6492 |  33 |               <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 6493 |  34 |                 <ul className="space-y-3">
 6494 |  35 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6495 |  36 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6496 |  37 |                     Продажба на жилищни имоти
 6497 |  38 |                   </li>
 6498 |  39 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6499 |  40 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6500 |  41 |                     Отдаване под наем на жилищни имоти
 6501 |  42 |                   </li>
 6502 |  43 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6503 |  44 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6504 |  45 |                     Продажба и наем на търговски площи
 6505 |  46 |                   </li>
 6506 |  47 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6507 |  48 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6508 |  49 |                     Продажба и наем на офис площи
 6509 |  50 |                   </li>
 6510 |  51 |                 </ul>
 6511 |  52 |               </div>
 6512 |  53 |               <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 6513 |  54 |                 <ul className="space-y-3">
 6514 |  55 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6515 |  56 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6516 |  57 |                     Продажба на парцели и терени
 6517 |  58 |                   </li>
 6518 |  59 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6519 |  60 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6520 |  61 |                     Консултации при сделки с недвижими имоти
 6521 |  62 |                   </li>
 6522 |  63 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6523 |  64 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6524 |  65 |                     Съдействие при ипотечно кредитиране
 6525 |  66 |                   </li>
 6526 |  67 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6527 |  68 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6528 |  69 |                     Правни консултации
 6529 |  70 |                   </li>
 6530 |  71 |                 </ul>
 6531 |  72 |               </div>
 6532 |  73 |             </div>
 6533 |  74 | 
 6534 |  75 |             <h2 className="text-3xl font-semibold mt-12 mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Информационни системи</h2>
 6535 |  76 |             <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 6536 |  77 |               <p className="mb-4 text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6537 |  78 |                 Ние използваме съвременни информационни системи за управление на нашите имоти и клиенти:
 6538 |  79 |               </p>
 6539 |  80 |               <ul className="space-y-4">
 6540 |  81 |                 <li>
 6541 |  82 |                   <a
 6542 |  83 |                     href="https://avalon.bg"
 6543 |  84 |                     target="_blank"
 6544 |  85 |                     rel="noopener noreferrer"
 6545 |  86 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
 6546 |  87 |                   >
 6547 |  88 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6548 |  89 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">www.avalon.bg - Официален уебсайт на Авалон Недвижими Имоти</span>
 6549 |  90 |                   </a>
 6550 |  91 |                 </li>
 6551 |  92 |                 <li>
 6552 |  93 |                   <a
 6553 |  94 |                     href="https://naemi.avalon.bg"
 6554 |  95 |                     target="_blank"
 6555 |  96 |                     rel="noopener noreferrer"
 6556 |  97 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
 6557 |  98 |                   >
 6558 |  99 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6559 | 100 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">naemi.avalon.bg - Специализиран портал за наеми</span>
 6560 | 101 |                   </a>
 6561 | 102 |                 </li>
 6562 | 103 |                 <li>
 6563 | 104 |                   <a
 6564 | 105 |                     href="https://prodajbi.avalon.bg"
 6565 | 106 |                     target="_blank"
 6566 | 107 |                     rel="noopener noreferrer"
 6567 | 108 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
 6568 | 109 |                   >
 6569 | 110 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 6570 | 111 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">prodajbi.avalon.bg - Специализиран портал за продажби</span>
 6571 | 112 |                   </a>
 6572 | 113 |                 </li>
 6573 | 114 |               </ul>
 6574 | 115 |             </div>
 6575 | 116 | 
 6576 | 117 |             <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-8 rounded-lg mt-12">
 6577 | 118 |               <h2 className="text-3xl font-semibold mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Контакти</h2>
 6578 | 119 |               <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
 6579 | 120 |                 <div className="space-y-4">
 6580 | 121 |                   <div>
 6581 | 122 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Адрес</h3>
 6582 | 123 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">ул. "Цар Асен" 95, София</p>
 6583 | 124 |                   </div>
 6584 | 125 |                   <div>
 6585 | 126 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Телефони</h3>
 6586 | 127 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">+359 888 123 456</p>
 6587 | 128 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">+359 2 123 4567</p>
 6588 | 129 |                   </div>
 6589 | 130 |                 </div>
 6590 | 131 |                 <div className="space-y-4">
 6591 | 132 |                   <div>
 6592 | 133 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Имейл</h3>
 6593 | 134 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">office@avalon.bg</p>
 6594 | 135 |                   </div>
 6595 | 136 |                   <div>
 6596 | 137 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
 6597 | 138 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Понеделник - Петък: 9:00 - 18:00</p>
 6598 | 139 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Събота: 10:00 - 14:00</p>
 6599 | 140 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Неделя: Почивен ден</p>
 6600 | 141 |                   </div>
 6601 | 142 |                 </div>
 6602 | 143 |               </div>
 6603 | 144 |             </div>
 6604 | 145 |           </div>
 6605 | 146 |         </div>
 6606 | 147 |       </div>
 6607 | 148 |     </div>
 6608 | 149 |   );
 6609 | 150 | } 
 6610 | 151 | 
 6611 | 
 6612 | 
 6613 | --------------------------------------------------------------------------------
 6614 | /apps/web/src/pages/Contact.tsx:
 6615 | --------------------------------------------------------------------------------
 6616 |   1 | import { useState } from 'react';
 6617 |   2 | import { useMutation } from '@tanstack/react-query';
 6618 |   3 | import { submitContactForm } from '../services/contact';
 6619 |   4 | import { event } from '../lib/analytics';
 6620 |   5 | 
 6621 |   6 | export default function Contact() {
 6622 |   7 |   const [formData, setFormData] = useState({
 6623 |   8 |     name: '',
 6624 |   9 |     email: '',
 6625 |  10 |     message: '',
 6626 |  11 |   });
 6627 |  12 | 
 6628 |  13 |   const [errors, setErrors] = useState<{
 6629 |  14 |     name?: string;
 6630 |  15 |     email?: string;
 6631 |  16 |     message?: string;
 6632 |  17 |     general?: string;
 6633 |  18 |   }>({});
 6634 |  19 | 
 6635 |  20 |   const [success, setSuccess] = useState(false);
 6636 |  21 | 
 6637 |  22 |   const mutation = useMutation({
 6638 |  23 |     mutationFn: submitContactForm,
 6639 |  24 |     onSuccess: () => {
 6640 |  25 |       setSuccess(true);
 6641 |  26 |       setFormData({ name: '', email: '', message: '' });
 6642 |  27 |       event({
 6643 |  28 |         action: 'contact_form_submit',
 6644 |  29 |         category: 'Contact',
 6645 |  30 |         label: 'Success',
 6646 |  31 |         value: 1
 6647 |  32 |       });
 6648 |  33 |     },
 6649 |  34 |     onError: (error: any) => {
 6650 |  35 |       if (error.response?.data?.errors) {
 6651 |  36 |         setErrors(error.response.data.errors);
 6652 |  37 |       } else {
 6653 |  38 |         setErrors({ general: 'Възникна грешка. Моля, опитайте отново.' });
 6654 |  39 |       }
 6655 |  40 |       event({
 6656 |  41 |         action: 'contact_form_error',
 6657 |  42 |         category: 'Contact',
 6658 |  43 |         label: error.response?.data?.message || 'Unknown error'
 6659 |  44 |       });
 6660 |  45 |     },
 6661 |  46 |   });
 6662 |  47 | 
 6663 |  48 |   const handleSubmit = async (e: React.FormEvent) => {
 6664 |  49 |     e.preventDefault();
 6665 |  50 |     setErrors({});
 6666 |  51 |     setSuccess(false);
 6667 |  52 |     mutation.mutate(formData);
 6668 |  53 |   };
 6669 |  54 | 
 6670 |  55 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
 6671 |  56 |     const { name, value } = e.target;
 6672 |  57 |     setFormData(prev => ({ ...prev, [name]: value }));
 6673 |  58 |     if (errors[name as keyof typeof errors]) {
 6674 |  59 |       setErrors(prev => ({ ...prev, [name]: '' }));
 6675 |  60 |     }
 6676 |  61 |   };
 6677 |  62 | 
 6678 |  63 |   return (
 6679 |  64 |     <div className="min-h-screen bg-white dark:bg-[rgb(var(--color-dark-bg))]">
 6680 |  65 |       <div className="container mx-auto px-4 py-12">
 6681 |  66 |         <div className="max-w-6xl mx-auto space-y-12">
 6682 |  67 |           {/* Header Section with Office Image */}
 6683 |  68 |           <div className="relative h-[300px] rounded-xl overflow-hidden shadow-xl">
 6684 |  69 |             <img
 6685 |  70 |               src="/images/contact.jpg"
 6686 |  71 |               alt="Авалон Недвижими Имоти Office Entrance"
 6687 |  72 |               className="w-full h-full object-cover"
 6688 |  73 |             />
 6689 |  74 |             <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent" />
 6690 |  75 |             <div className="absolute bottom-0 left-0 right-0 p-8">
 6691 |  76 |               <h1 className="text-4xl font-bold text-white mb-2">
 6692 |  77 |                 Свържете се с нас
 6693 |  78 |               </h1>
 6694 |  79 |               <p className="text-xl text-gray-200">
 6695 |  80 |                 Посетете нашия офис или се свържете с нас онлайн
 6696 |  81 |               </p>
 6697 |  82 |             </div>
 6698 |  83 |           </div>
 6699 |  84 | 
 6700 |  85 |           {/* Google Maps Embed */}
 6701 |  86 |           <div className="w-full h-[400px] rounded-xl overflow-hidden shadow-xl border-4 border-white dark:border-[rgb(var(--color-dark-border))]">
 6702 |  87 |             <iframe
 6703 |  88 |               src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2932.8747368506897!2d23.321409776882714!3d42.69580097116491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40aa8682cb317bf5%3A0x9cfae3249632c7f4!2sul.%20%22Tsar%20Asen%22%2095%2C%201463%20Sofia%20Center%2C%20Sofia!5e0!3m2!1sen!2sbg!4v1709305169089!5m2!1sen!2sbg"
 6704 |  89 |               width="100%"
 6705 |  90 |               height="100%"
 6706 |  91 |               style={{ border: 0 }}
 6707 |  92 |               allowFullScreen
 6708 |  93 |               loading="lazy"
 6709 |  94 |               referrerPolicy="no-referrer-when-downgrade"
 6710 |  95 |               title="Office Location"
 6711 |  96 |               className="rounded-lg"
 6712 |  97 |             />
 6713 |  98 |           </div>
 6714 |  99 | 
 6715 | 100 |           <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
 6716 | 101 |             {/* Contact Form */}
 6717 | 102 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-xl shadow-xl p-8 transform transition-all duration-300 hover:shadow-2xl">
 6718 | 103 |               <h2 className="text-2xl font-semibold mb-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 6719 | 104 |                 Свържете се с нас
 6720 | 105 |               </h2>
 6721 | 106 |               <form onSubmit={handleSubmit} className="space-y-5">
 6722 | 107 |                 <div>
 6723 | 108 |                   <label htmlFor="name" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6724 | 109 |                     Име
 6725 | 110 |                   </label>
 6726 | 111 |                   <input
 6727 | 112 |                     type="text"
 6728 | 113 |                     id="name"
 6729 | 114 |                     name="name"
 6730 | 115 |                     value={formData.name}
 6731 | 116 |                     onChange={handleChange}
 6732 | 117 |                     className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm bg-white dark:bg-[rgb(var(--color-dark-bg))] text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
 6733 | 118 |                   />
 6734 | 119 |                   {errors.name && (
 6735 | 120 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.name}</p>
 6736 | 121 |                   )}
 6737 | 122 |                 </div>
 6738 | 123 | 
 6739 | 124 |                 <div>
 6740 | 125 |                   <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6741 | 126 |                     Имейл
 6742 | 127 |                   </label>
 6743 | 128 |                   <input
 6744 | 129 |                     type="email"
 6745 | 130 |                     id="email"
 6746 | 131 |                     name="email"
 6747 | 132 |                     value={formData.email}
 6748 | 133 |                     onChange={handleChange}
 6749 | 134 |                     className={`mt-1 block w-full rounded-lg shadow-sm sm:text-sm transition-colors duration-200
 6750 | 135 |                       ${errors.email 
 6751 | 136 |                         ? 'border-red-500 focus:border-red-500 focus:ring-red-500' 
 6752 | 137 |                         : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:ring-primary-500'
 6753 | 138 |                       } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))]`}
 6754 | 139 |                   />
 6755 | 140 |                   {errors.email && (
 6756 | 141 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.email}</p>
 6757 | 142 |                   )}
 6758 | 143 |                 </div>
 6759 | 144 | 
 6760 | 145 |                 <div>
 6761 | 146 |                   <label htmlFor="message" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6762 | 147 |                     Съобщение
 6763 | 148 |                   </label>
 6764 | 149 |                   <textarea
 6765 | 150 |                     id="message"
 6766 | 151 |                     name="message"
 6767 | 152 |                     rows={4}
 6768 | 153 |                     value={formData.message}
 6769 | 154 |                     onChange={handleChange}
 6770 | 155 |                     className={`mt-1 block w-full rounded-lg shadow-sm sm:text-sm transition-colors duration-200
 6771 | 156 |                       ${errors.message 
 6772 | 157 |                         ? 'border-red-500 focus:border-red-500 focus:ring-red-500' 
 6773 | 158 |                         : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:ring-primary-500'
 6774 | 159 |                       } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))]`}
 6775 | 160 |                   />
 6776 | 161 |                   {errors.message && (
 6777 | 162 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.message}</p>
 6778 | 163 |                   )}
 6779 | 164 |                 </div>
 6780 | 165 | 
 6781 | 166 |                 {errors.general && (
 6782 | 167 |                   <p className="text-sm text-red-600 dark:text-red-400">{errors.general}</p>
 6783 | 168 |                 )}
 6784 | 169 | 
 6785 | 170 |                 {success && (
 6786 | 171 |                   <div className="p-4 bg-green-50 dark:bg-green-900/30 rounded-lg border border-green-200 dark:border-green-800">
 6787 | 172 |                     <p className="text-sm text-green-700 dark:text-green-300">
 6788 | 173 |                       Благодарим ви! Ще се свържем с вас възможно най-скоро.
 6789 | 174 |                     </p>
 6790 | 175 |                   </div>
 6791 | 176 |                 )}
 6792 | 177 | 
 6793 | 178 |                 <button
 6794 | 179 |                   type="submit"
 6795 | 180 |                   disabled={mutation.isPending}
 6796 | 181 |                   className="w-full px-4 py-3 text-sm font-medium text-white bg-primary-600 rounded-lg hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transition-all duration-200 transform hover:-translate-y-0.5"
 6797 | 182 |                 >
 6798 | 183 |                   {mutation.isPending ? 'Изпращане...' : 'Изпрати'}
 6799 | 184 |                 </button>
 6800 | 185 |               </form>
 6801 | 186 |             </div>
 6802 | 187 | 
 6803 | 188 |             {/* Contact Information */}
 6804 | 189 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-xl shadow-xl p-8 transform transition-all duration-300 hover:shadow-2xl">
 6805 | 190 |               <h2 className="text-2xl font-semibold mb-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 6806 | 191 |                 Информация за контакт
 6807 | 192 |               </h2>
 6808 | 193 |               <div className="space-y-6">
 6809 | 194 |                 <div>
 6810 | 195 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Адрес</h3>
 6811 | 196 |                   <p className="mt-2 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6812 | 197 |                     ул. "Цар Асен" 95<br />
 6813 | 198 |                     София 1000<br />
 6814 | 199 |                     България
 6815 | 200 |                   </p>
 6816 | 201 |                 </div>
 6817 | 202 | 
 6818 | 203 |                 <div>
 6819 | 204 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Телефони</h3>
 6820 | 205 |                   <div className="mt-2 space-y-2">
 6821 | 206 |                     <a 
 6822 | 207 |                       href="tel:+35921234567"
 6823 | 208 |                       className="block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
 6824 | 209 |                     >
 6825 | 210 |                       +359 2 123 4567
 6826 | 211 |                     </a>
 6827 | 212 |                     <a 
 6828 | 213 |                       href="tel:+359888123456"
 6829 | 214 |                       className="block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
 6830 | 215 |                     >
 6831 | 216 |                       +359 888 123 456
 6832 | 217 |                     </a>
 6833 | 218 |                   </div>
 6834 | 219 |                 </div>
 6835 | 220 | 
 6836 | 221 |                 <div>
 6837 | 222 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имейл</h3>
 6838 | 223 |                   <a 
 6839 | 224 |                     href="mailto:office@avalon.bg"
 6840 | 225 |                     className="mt-2 block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
 6841 | 226 |                   >
 6842 | 227 |                     office@avalon.bg
 6843 | 228 |                   </a>
 6844 | 229 |                 </div>
 6845 | 230 | 
 6846 | 231 |                 <div>
 6847 | 232 |                   <h3 className="text-lg font-medium text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
 6848 | 233 |                   <div className="mt-2 space-y-2">
 6849 | 234 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6850 | 235 |                       Понеделник - Петък: 9:00 - 18:00
 6851 | 236 |                     </p>
 6852 | 237 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6853 | 238 |                       Събота: 10:00 - 14:00
 6854 | 239 |                     </p>
 6855 | 240 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 6856 | 241 |                       Неделя: Затворено
 6857 | 242 |                     </p>
 6858 | 243 |                   </div>
 6859 | 244 |                 </div>
 6860 | 245 |               </div>
 6861 | 246 |             </div>
 6862 | 247 |           </div>
 6863 | 248 |         </div>
 6864 | 249 |       </div>
 6865 | 250 |     </div>
 6866 | 251 |   );
 6867 | 252 | } 
 6868 | 253 | 
 6869 | 
 6870 | 
 6871 | --------------------------------------------------------------------------------
 6872 | /apps/web/src/pages/Home.tsx:
 6873 | --------------------------------------------------------------------------------
 6874 |   1 | import { useState, useEffect } from 'react';
 6875 |   2 | import { Link } from 'react-router-dom';
 6876 |   3 | import { MagnifyingGlassIcon } from '@heroicons/react/24/outline';
 6877 |   4 | import { getFeaturedProperties } from '../services/propertyService';
 6878 |   5 | import PropertyCard, { PropertyCardProps } from '../components/properties/PropertyCard';
 6879 |   6 | 
 6880 |   7 | const propertyTypes = [
 6881 |   8 |   'Всички типове',
 6882 |   9 |   'Апартамент',
 6883 |  10 |   'Къща',
 6884 |  11 |   'Парцел',
 6885 |  12 |   'Търговски имот',
 6886 |  13 |   'Индустриален имот'
 6887 |  14 | ];
 6888 |  15 | 
 6889 |  16 | const regions = [
 6890 |  17 |   'Всички райони',
 6891 |  18 |   'Русе център',
 6892 |  19 |   'Здравец',
 6893 |  20 |   'Дружба',
 6894 |  21 |   'Възраждане',
 6895 |  22 |   'Чародейка',
 6896 |  23 |   'Ялта',
 6897 |  24 |   'Родина',
 6898 |  25 |   'Цветница',
 6899 |  26 |   'Централна градска част',
 6900 |  27 | ];
 6901 |  28 | 
 6902 |  29 | export default function Home() {
 6903 |  30 |   const [selectedType, setSelectedType] = useState('Всички типове');
 6904 |  31 |   const [selectedRegion, setSelectedRegion] = useState('Всички райони');
 6905 |  32 |   const [featuredProperties, setFeaturedProperties] = useState<PropertyCardProps[]>([]);
 6906 |  33 |   const [isLoading, setIsLoading] = useState(true);
 6907 |  34 |   const [error, setError] = useState<string | null>(null);
 6908 |  35 | 
 6909 |  36 |   useEffect(() => {
 6910 |  37 |     const loadFeaturedProperties = async () => {
 6911 |  38 |       try {
 6912 |  39 |         const properties = await getFeaturedProperties();
 6913 |  40 |         setFeaturedProperties(properties);
 6914 |  41 |       } catch (err) {
 6915 |  42 |         setError('Failed to load featured properties');
 6916 |  43 |         console.error(err);
 6917 |  44 |       } finally {
 6918 |  45 |         setIsLoading(false);
 6919 |  46 |       }
 6920 |  47 |     };
 6921 |  48 | 
 6922 |  49 |     loadFeaturedProperties();
 6923 |  50 |   }, []);
 6924 |  51 | 
 6925 |  52 |   const handleSearch = () => {
 6926 |  53 |     const params = new URLSearchParams();
 6927 |  54 |     if (selectedType !== 'Всички типове') params.append('type', selectedType);
 6928 |  55 |     if (selectedRegion !== 'Всички райони') params.append('region', selectedRegion);
 6929 |  56 |     window.location.href = `/properties?${params.toString()}`;
 6930 |  57 |   };
 6931 |  58 | 
 6932 |  59 |   return (
 6933 |  60 |     <div className="flex flex-col">
 6934 |  61 |       {/* Hero Section with Search Overlay */}
 6935 |  62 |       <div className="relative">
 6936 |  63 |         {/* Hero Background */}
 6937 |  64 |         <div className="relative h-[50vh] min-h-[500px] max-h-[600px] bg-gray-900">
 6938 |  65 |           <img
 6939 |  66 |             src="/images/homepage-hero.webp"
 6940 |  67 |             alt="Luxury Real Estate"
 6941 |  68 |             className="object-cover object-center absolute inset-0 w-full h-full opacity-60"
 6942 |  69 |             loading="eager"
 6943 |  70 |             fetchPriority="high"
 6944 |  71 |           />
 6945 |  72 |           <div className="absolute inset-0 bg-gradient-to-b from-gray-900/30 via-gray-900/50 to-gray-900/80" />
 6946 |  73 |           
 6947 |  74 |           {/* Hero Content */}
 6948 |  75 |           <div className="relative h-full flex flex-col justify-center">
 6949 |  76 |             <div className="px-4 mx-auto max-w-7xl sm:px-6 lg:px-8 text-center">
 6950 |  77 |               <h1 className="text-3xl font-bold tracking-tight text-white sm:text-4xl lg:text-5xl">
 6951 |  78 |                 Намерете своя перфектен дом
 6952 |  79 |               </h1>
 6953 |  80 |               <p className="mx-auto mt-4 max-w-lg text-lg text-gray-100 sm:max-w-3xl">
 6954 |  81 |                 Авалон Недвижими Имоти - Вашият надежден партньор в света на недвижимите имоти от 2008 година.
 6955 |  82 |               </p>
 6956 |  83 |             </div>
 6957 |  84 |           </div>
 6958 |  85 |         </div>
 6959 |  86 | 
 6960 |  87 |         {/* Search Box Overlay */}
 6961 |  88 |         <div className="absolute inset-x-0 bottom-0 z-10 transform translate-y-1/2">
 6962 |  89 |           <div className="px-4 mx-auto max-w-4xl sm:px-6 lg:px-8">
 6963 |  90 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-xl backdrop-blur-sm">
 6964 |  91 |               <div className="p-6">
 6965 |  92 |                 <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
 6966 |  93 |                   <div>
 6967 |  94 |                     <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6968 |  95 |                       Тип имот
 6969 |  96 |                     </label>
 6970 |  97 |                     <select
 6971 |  98 |                       id="type"
 6972 |  99 |                       value={selectedType}
 6973 | 100 |                       onChange={(e) => setSelectedType(e.target.value)}
 6974 | 101 |                       className="block py-2 pr-10 pl-3 mt-1 w-full text-base rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:outline-none focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 6975 | 102 |                     >
 6976 | 103 |                       {propertyTypes.map((type) => (
 6977 | 104 |                         <option key={type} value={type}>
 6978 | 105 |                           {type}
 6979 | 106 |                         </option>
 6980 | 107 |                       ))}
 6981 | 108 |                     </select>
 6982 | 109 |                   </div>
 6983 | 110 |                   <div>
 6984 | 111 |                     <label htmlFor="region" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 6985 | 112 |                       Район
 6986 | 113 |                     </label>
 6987 | 114 |                     <select
 6988 | 115 |                       id="region"
 6989 | 116 |                       value={selectedRegion}
 6990 | 117 |                       onChange={(e) => setSelectedRegion(e.target.value)}
 6991 | 118 |                       className="block py-2 pr-10 pl-3 mt-1 w-full text-base rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:outline-none focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 6992 | 119 |                     >
 6993 | 120 |                       {regions.map((region) => (
 6994 | 121 |                         <option key={region} value={region}>
 6995 | 122 |                           {region}
 6996 | 123 |                         </option>
 6997 | 124 |                       ))}
 6998 | 125 |                     </select>
 6999 | 126 |                   </div>
 7000 | 127 |                 </div>
 7001 | 128 |                 <div className="mt-6">
 7002 | 129 |                   <button
 7003 | 130 |                     onClick={handleSearch}
 7004 | 131 |                     className="px-4 py-3 w-full text-sm font-semibold text-white bg-primary-600 rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
 7005 | 132 |                   >
 7006 | 133 |                     <div className="flex justify-center items-center">
 7007 | 134 |                       <MagnifyingGlassIcon className="w-5 h-5" />
 7008 | 135 |                       <span className="ml-2">Търсене</span>
 7009 | 136 |                     </div>
 7010 | 137 |                   </button>
 7011 | 138 |                 </div>
 7012 | 139 |               </div>
 7013 | 140 |             </div>
 7014 | 141 |           </div>
 7015 | 142 |         </div>
 7016 | 143 |       </div>
 7017 | 144 | 
 7018 | 145 |       {/* Featured Properties Section */}
 7019 | 146 |       <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 7020 | 147 |         <div className="px-4 pt-32 pb-16 mx-auto max-w-7xl sm:px-6 lg:px-8">
 7021 | 148 |           <h2 className="text-3xl font-bold text-center text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 7022 | 149 |             Топ Оферти
 7023 | 150 |           </h2>
 7024 | 151 |           <div className="grid gap-8 mt-12 sm:grid-cols-2 lg:grid-cols-3">
 7025 | 152 |             {isLoading ? (
 7026 | 153 |               // Loading skeletons
 7027 | 154 |               [...Array(3)].map((_, index) => (
 7028 | 155 |                 <div key={index} className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-lg animate-pulse">
 7029 | 156 |                   <div className="bg-gray-200 aspect-w-16 aspect-h-9 dark:bg-[rgb(var(--color-dark-border))]" />
 7030 | 157 |                   <div className="p-4">
 7031 | 158 |                     <div className="w-3/4 h-4 bg-gray-200 rounded dark:bg-[rgb(var(--color-dark-border))]" />
 7032 | 159 |                     <div className="mt-4 w-1/2 h-4 bg-gray-200 rounded dark:bg-[rgb(var(--color-dark-border))]" />
 7033 | 160 |                   </div>
 7034 | 161 |                 </div>
 7035 | 162 |               ))
 7036 | 163 |             ) : error ? (
 7037 | 164 |               <div className="col-span-full p-4 bg-red-50 dark:bg-red-900/30 rounded-lg">
 7038 | 165 |                 <p className="text-sm text-center text-red-700 dark:text-red-300">{error}</p>
 7039 | 166 |               </div>
 7040 | 167 |             ) : featuredProperties.length > 0 ? (
 7041 | 168 |               featuredProperties.map((property) => (
 7042 | 169 |                 <PropertyCard key={property.id} {...property} />
 7043 | 170 |               ))
 7044 | 171 |             ) : (
 7045 | 172 |               <div className="col-span-full text-center text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7046 | 173 |                 Няма намерени оферти
 7047 | 174 |               </div>
 7048 | 175 |             )}
 7049 | 176 |           </div>
 7050 | 177 |           {featuredProperties.length > 0 && (
 7051 | 178 |             <div className="mt-12 text-center">
 7052 | 179 |               <Link
 7053 | 180 |                 to="/properties"
 7054 | 181 |                 className="inline-flex items-center px-6 py-3 text-base font-semibold text-white bg-primary-600 rounded-md shadow-sm hover:bg-primary-700"
 7055 | 182 |               >
 7056 | 183 |                 Разгледайте всички имоти
 7057 | 184 |               </Link>
 7058 | 185 |             </div>
 7059 | 186 |           )}
 7060 | 187 |         </div>
 7061 | 188 |       </div>
 7062 | 189 |     </div>
 7063 | 190 |   );
 7064 | 191 | } 
 7065 | 192 | 
 7066 | 193 | 
 7067 | 
 7068 | 
 7069 | --------------------------------------------------------------------------------
 7070 | /apps/web/src/pages/NotFound.tsx:
 7071 | --------------------------------------------------------------------------------
 7072 |  1 | import { Link } from 'react-router-dom';
 7073 |  2 | 
 7074 |  3 | export default function NotFound() {
 7075 |  4 |   return (
 7076 |  5 |     <div className="min-h-screen flex flex-col items-center justify-center px-4">
 7077 |  6 |       <div className="text-center">
 7078 |  7 |         <p className="text-6xl font-bold text-primary-600 mb-4">404</p>
 7079 |  8 |         <h1 className="text-3xl font-semibold text-gray-900 mb-4">
 7080 |  9 |           Страницата не е намерена
 7081 | 10 |         </h1>
 7082 | 11 |         <p className="text-lg text-gray-600 mb-8">
 7083 | 12 |           Страницата, която търсите, не съществува или е била преместена.
 7084 | 13 |         </p>
 7085 | 14 |         <div className="space-x-4">
 7086 | 15 |           <Link
 7087 | 16 |             to="/"
 7088 | 17 |             className="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
 7089 | 18 |           >
 7090 | 19 |             Към началната страница
 7091 | 20 |           </Link>
 7092 | 21 |           <Link
 7093 | 22 |             to="/contact"
 7094 | 23 |             className="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
 7095 | 24 |           >
 7096 | 25 |             Свържете се с нас
 7097 | 26 |           </Link>
 7098 | 27 |         </div>
 7099 | 28 |       </div>
 7100 | 29 |     </div>
 7101 | 30 |   );
 7102 | 31 | } 
 7103 | 32 | 
 7104 | 
 7105 | 
 7106 | --------------------------------------------------------------------------------
 7107 | /apps/web/src/pages/Properties.tsx:
 7108 | --------------------------------------------------------------------------------
 7109 |   1 | import { useState, useEffect } from 'react';
 7110 |   2 | import { useSearchParams } from 'react-router-dom';
 7111 |   3 | import { ChevronLeftIcon, ChevronRightIcon, FunnelIcon } from '@heroicons/react/24/outline';
 7112 |   4 | import { CSSTransition, TransitionGroup } from 'react-transition-group';
 7113 |   5 | import PropertyCard, { PropertyCardProps } from '../components/properties/PropertyCard';
 7114 |   6 | import PropertyCardSkeleton from '../components/properties/PropertyCardSkeleton';
 7115 |   7 | import { getProperties, PropertyFilters } from '../services/propertyService';
 7116 |   8 | import { propertyTypeLabels, locationTypeLabels, categoryLabels, locationTypes } from '../constants/property';
 7117 |   9 | 
 7118 |  10 | declare module 'react-transition-group';
 7119 |  11 | 
 7120 |  12 | type LocationType = 'CITY' | 'REGION';
 7121 |  13 | 
 7122 |  14 | const regions = [
 7123 |  15 |   'Всички райони',
 7124 |  16 |   'Русе център',
 7125 |  17 |   'Здравец',
 7126 |  18 |   'Дружба',
 7127 |  19 |   'Възраждане',
 7128 |  20 |   'Чародейка',
 7129 |  21 |   'Ялта',
 7130 |  22 |   'Родина',
 7131 |  23 |   'Цветница',
 7132 |  24 |   'Централна градска част',
 7133 |  25 | ];
 7134 |  26 | 
 7135 |  27 | export default function Properties() {
 7136 |  28 |   const [searchParams, setSearchParams] = useSearchParams();
 7137 |  29 |   const [properties, setProperties] = useState<PropertyCardProps[]>([]);
 7138 |  30 |   const [isLoading, setIsLoading] = useState(true);
 7139 |  31 |   const [error, setError] = useState<string | null>(null);
 7140 |  32 |   const [totalPages, setTotalPages] = useState(1);
 7141 |  33 |   const [showFilters, setShowFilters] = useState(false);
 7142 |  34 | 
 7143 |  35 |   // Get current filters from URL
 7144 |  36 |   const currentPage = Number(searchParams.get('page')) || 1;
 7145 |  37 |   const currentType = searchParams.get('type') || '';
 7146 |  38 |   const currentRegion = searchParams.get('region') || '';
 7147 |  39 |   const currentCategory = searchParams.get('category') as 'RENT' | 'SALE' | undefined;
 7148 |  40 |   const currentMinPrice = searchParams.get('minPrice') ? Number(searchParams.get('minPrice')) : undefined;
 7149 |  41 |   const currentMaxPrice = searchParams.get('maxPrice') ? Number(searchParams.get('maxPrice')) : undefined;
 7150 |  42 |   const currentLocationType = searchParams.get('location_type') || '';
 7151 |  43 | 
 7152 |  44 |   useEffect(() => {
 7153 |  45 |     const loadProperties = async () => {
 7154 |  46 |       setIsLoading(true);
 7155 |  47 |       setError(null);
 7156 |  48 | 
 7157 |  49 |       try {
 7158 |  50 |         const filters: PropertyFilters = {
 7159 |  51 |           type: currentType || undefined,
 7160 |  52 |           region: currentRegion || undefined,
 7161 |  53 |           category: currentCategory,
 7162 |  54 |           minPrice: currentMinPrice,
 7163 |  55 |           maxPrice: currentMaxPrice,
 7164 |  56 |           location_type: currentLocationType,
 7165 |  57 |         };
 7166 |  58 | 
 7167 |  59 |         const response = await getProperties(filters, currentPage);
 7168 |  60 |         if (response && response.properties) {
 7169 |  61 |           setProperties(response.properties);
 7170 |  62 |           setTotalPages(Math.ceil(response.total / response.pageSize));
 7171 |  63 |         } else {
 7172 |  64 |           setProperties([]);
 7173 |  65 |           setTotalPages(1);
 7174 |  66 |           setError('No properties found');
 7175 |  67 |         }
 7176 |  68 |       } catch (err) {
 7177 |  69 |         setError('Failed to load properties');
 7178 |  70 |         setProperties([]);
 7179 |  71 |         setTotalPages(1);
 7180 |  72 |         console.error(err);
 7181 |  73 |       } finally {
 7182 |  74 |         setIsLoading(false);
 7183 |  75 |       }
 7184 |  76 |     };
 7185 |  77 | 
 7186 |  78 |     loadProperties();
 7187 |  79 |   }, [currentPage, currentType, currentRegion, currentCategory, currentMinPrice, currentMaxPrice, currentLocationType]);
 7188 |  80 | 
 7189 |  81 |   const handleFilterChange = (filters: Partial<PropertyFilters>) => {
 7190 |  82 |     const newParams = new URLSearchParams(searchParams);
 7191 |  83 |     
 7192 |  84 |     // Reset page when filters change
 7193 |  85 |     newParams.set('page', '1');
 7194 |  86 |     
 7195 |  87 |     // Update filter params
 7196 |  88 |     Object.entries(filters).forEach(([key, value]) => {
 7197 |  89 |       if (value) {
 7198 |  90 |         newParams.set(key, value.toString());
 7199 |  91 |       } else {
 7200 |  92 |         newParams.delete(key);
 7201 |  93 |       }
 7202 |  94 |     });
 7203 |  95 | 
 7204 |  96 |     setSearchParams(newParams);
 7205 |  97 |   };
 7206 |  98 | 
 7207 |  99 |   const handlePageChange = (page: number) => {
 7208 | 100 |     const newParams = new URLSearchParams(searchParams);
 7209 | 101 |     newParams.set('page', page.toString());
 7210 | 102 |     setSearchParams(newParams);
 7211 | 103 |   };
 7212 | 104 | 
 7213 | 105 |   return (
 7214 | 106 |     <div className="min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 7215 | 107 |       <div className="py-8 mx-auto">
 7216 | 108 |         <div className="flex flex-col gap-8 lg:flex-row">
 7217 | 109 |           {/* Filters */}
 7218 | 110 |           <div className="w-full lg:w-1/5">
 7219 | 111 |             <div className="sticky top-24 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-sm">
 7220 | 112 |               <h2 className="text-lg font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))] p-4 border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))]">Филтри</h2>
 7221 | 113 |               <div className="p-4 space-y-4">
 7222 | 114 |                 <div>
 7223 | 115 |                   <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7224 | 116 |                     Тип имот
 7225 | 117 |                   </label>
 7226 | 118 |                   <select
 7227 | 119 |                     id="type"
 7228 | 120 |                     value={currentType}
 7229 | 121 |                     onChange={(e) => handleFilterChange({ type: e.target.value })}
 7230 | 122 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
 7231 | 123 |                   >
 7232 | 124 |                     <option value="">Всички</option>
 7233 | 125 |                     {Object.entries(propertyTypeLabels).map(([value, label]) => (
 7234 | 126 |                       <option key={value} value={value}>
 7235 | 127 |                         {label}
 7236 | 128 |                       </option>
 7237 | 129 |                     ))}
 7238 | 130 |                   </select>
 7239 | 131 |                 </div>
 7240 | 132 | 
 7241 | 133 |                 <div>
 7242 | 134 |                   <label htmlFor="category" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7243 | 135 |                     Категория
 7244 | 136 |                   </label>
 7245 | 137 |                   <select
 7246 | 138 |                     id="category"
 7247 | 139 |                     value={currentCategory || ''}
 7248 | 140 |                     onChange={(e) => handleFilterChange({ category: e.target.value as 'RENT' | 'SALE' | undefined })}
 7249 | 141 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
 7250 | 142 |                   >
 7251 | 143 |                     <option value="">Всички</option>
 7252 | 144 |                     {Object.entries(categoryLabels).map(([value, label]) => (
 7253 | 145 |                       <option key={value} value={value}>
 7254 | 146 |                         {label}
 7255 | 147 |                       </option>
 7256 | 148 |                     ))}
 7257 | 149 |                   </select>
 7258 | 150 |                 </div>
 7259 | 151 | 
 7260 | 152 |                 <div>
 7261 | 153 |                   <label htmlFor="location_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7262 | 154 |                     Локация
 7263 | 155 |                   </label>
 7264 | 156 |                   <select
 7265 | 157 |                     id="location_type"
 7266 | 158 |                     value={currentLocationType}
 7267 | 159 |                     onChange={(e) => {
 7268 | 160 |                       const value = e.target.value;
 7269 | 161 |                       handleFilterChange({ 
 7270 | 162 |                         location_type: value === '' ? undefined : value as 'CITY' | 'REGION'
 7271 | 163 |                       });
 7272 | 164 |                     }}
 7273 | 165 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
 7274 | 166 |                   >
 7275 | 167 |                     <option value="">Всички</option>
 7276 | 168 |                     {locationTypes.map(({ value, label }) => (
 7277 | 169 |                       <option key={value} value={value}>
 7278 | 170 |                         {label}
 7279 | 171 |                       </option>
 7280 | 172 |                     ))}
 7281 | 173 |                   </select>
 7282 | 174 |                 </div>
 7283 | 175 | 
 7284 | 176 |                 <div>
 7285 | 177 |                   <label htmlFor="minPrice" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7286 | 178 |                     Минимална цена
 7287 | 179 |                   </label>
 7288 | 180 |                   <input
 7289 | 181 |                     type="number"
 7290 | 182 |                     id="minPrice"
 7291 | 183 |                     value={currentMinPrice || ''}
 7292 | 184 |                     onChange={(e) => handleFilterChange({ minPrice: e.target.value ? Number(e.target.value) : undefined })}
 7293 | 185 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
 7294 | 186 |                   />
 7295 | 187 |                 </div>
 7296 | 188 | 
 7297 | 189 |                 <div>
 7298 | 190 |                   <label htmlFor="maxPrice" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7299 | 191 |                     Максимална цена
 7300 | 192 |                   </label>
 7301 | 193 |                   <input
 7302 | 194 |                     type="number"
 7303 | 195 |                     id="maxPrice"
 7304 | 196 |                     value={currentMaxPrice || ''}
 7305 | 197 |                     onChange={(e) => handleFilterChange({ maxPrice: e.target.value ? Number(e.target.value) : undefined })}
 7306 | 198 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
 7307 | 199 |                   />
 7308 | 200 |                 </div>
 7309 | 201 |               </div>
 7310 | 202 |             </div>
 7311 | 203 |           </div>
 7312 | 204 | 
 7313 | 205 |           {/* Properties Grid */}
 7314 | 206 |           <div className="w-full lg:w-4/5">
 7315 | 207 |             <div className="grid grid-cols-1 gap-8 sm:grid-cols-2 xl:grid-cols-3">
 7316 | 208 |               {isLoading ? (
 7317 | 209 |                 Array.from({ length: 6 }).map((_, index) => (
 7318 | 210 |                   <PropertyCardSkeleton key={index} />
 7319 | 211 |                 ))
 7320 | 212 |               ) : properties?.length ? (
 7321 | 213 |                 properties.map((property) => (
 7322 | 214 |                   <PropertyCard key={property.id} {...property} />
 7323 | 215 |                 ))
 7324 | 216 |               ) : (
 7325 | 217 |                 <div className="py-12 text-center col-span-full">
 7326 | 218 |                   <p className="text-lg text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7327 | 219 |                     Няма намерени имоти
 7328 | 220 |                   </p>
 7329 | 221 |                 </div>
 7330 | 222 |               )}
 7331 | 223 |             </div>
 7332 | 224 | 
 7333 | 225 |             {/* Pagination */}
 7334 | 226 |             {totalPages > 1 && (
 7335 | 227 |               <div className="mt-8 flex items-center justify-between border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))] pt-4">
 7336 | 228 |                 <div className="flex justify-between flex-1 sm:hidden">
 7337 | 229 |                   <button
 7338 | 230 |                     onClick={() => handlePageChange(currentPage - 1)}
 7339 | 231 |                     disabled={currentPage === 1}
 7340 | 232 |                     className="btn btn-secondary"
 7341 | 233 |                   >
 7342 | 234 |                     Предишна
 7343 | 235 |                   </button>
 7344 | 236 |                   <button
 7345 | 237 |                     onClick={() => handlePageChange(currentPage + 1)}
 7346 | 238 |                     disabled={currentPage === totalPages}
 7347 | 239 |                     className="btn btn-secondary"
 7348 | 240 |                   >
 7349 | 241 |                     Следваща
 7350 | 242 |                   </button>
 7351 | 243 |                 </div>
 7352 | 244 |                 <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
 7353 | 245 |                   <div>
 7354 | 246 |                     <p className="text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7355 | 247 |                       Страница <span className="font-medium">{currentPage}</span> от{' '}
 7356 | 248 |                       <span className="font-medium">{totalPages}</span>
 7357 | 249 |                     </p>
 7358 | 250 |                   </div>
 7359 | 251 |                   <div>
 7360 | 252 |                     <nav className="inline-flex -space-x-px rounded-md shadow-sm isolate" aria-label="Pagination">
 7361 | 253 |                       <button
 7362 | 254 |                         onClick={() => handlePageChange(currentPage - 1)}
 7363 | 255 |                         disabled={currentPage === 1}
 7364 | 256 |                         className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:z-20 focus:outline-offset-0 disabled:opacity-50"
 7365 | 257 |                       >
 7366 | 258 |                         <span className="sr-only">Предишна</span>
 7367 | 259 |                         <ChevronLeftIcon className="w-5 h-5" aria-hidden="true" />
 7368 | 260 |                       </button>
 7369 | 261 |                       <button
 7370 | 262 |                         onClick={() => handlePageChange(currentPage + 1)}
 7371 | 263 |                         disabled={currentPage === totalPages}
 7372 | 264 |                         className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:z-20 focus:outline-offset-0 disabled:opacity-50"
 7373 | 265 |                       >
 7374 | 266 |                         <span className="sr-only">Следваща</span>
 7375 | 267 |                         <ChevronRightIcon className="w-5 h-5" aria-hidden="true" />
 7376 | 268 |                       </button>
 7377 | 269 |                     </nav>
 7378 | 270 |                   </div>
 7379 | 271 |                 </div>
 7380 | 272 |               </div>
 7381 | 273 |             )}
 7382 | 274 |           </div>
 7383 | 275 |         </div>
 7384 | 276 |       </div>
 7385 | 277 |     </div>
 7386 | 278 |   );
 7387 | 279 | } 
 7388 | 280 | 
 7389 | 
 7390 | 
 7391 | --------------------------------------------------------------------------------
 7392 | /apps/web/src/pages/PropertyDetails.tsx:
 7393 | --------------------------------------------------------------------------------
 7394 |   1 | import { useState, useEffect } from 'react';
 7395 |   2 | import { useParams, Link, useNavigate } from 'react-router-dom';
 7396 |   3 | import { 
 7397 |   4 |   BuildingOfficeIcon, 
 7398 |   5 |   HomeIcon, 
 7399 |   6 |   MapPinIcon,
 7400 |   7 |   PhoneIcon,
 7401 |   8 |   EnvelopeIcon,
 7402 |   9 |   ArrowLeftIcon,
 7403 |  10 |   ChevronLeftIcon,
 7404 |  11 |   ChevronRightIcon,
 7405 |  12 |   XMarkIcon,
 7406 |  13 | } from '@heroicons/react/24/outline';
 7407 |  14 | import { getPropertyById } from '../services/propertyService';
 7408 |  15 | import { PropertyCardProps } from '../components/properties/PropertyCard';
 7409 |  16 | import GoogleMap from '../components/maps/GoogleMap';
 7410 |  17 | import { useQuery } from '@tanstack/react-query';
 7411 |  18 | import { propertyTypeLabels, locationTypeLabels, categoryLabels } from '../constants/property';
 7412 |  19 | 
 7413 |  20 | interface PropertyImage {
 7414 |  21 |   url: string;
 7415 |  22 | }
 7416 |  23 | 
 7417 |  24 | interface Feature {
 7418 |  25 |   featureId: number;
 7419 |  26 |   name: string;
 7420 |  27 | }
 7421 |  28 | 
 7422 |  29 | interface Property extends PropertyCardProps {
 7423 |  30 |   images?: PropertyImage[];
 7424 |  31 |   features?: Feature[];
 7425 |  32 |   floor?: number;
 7426 |  33 |   total_floors?: number;
 7427 |  34 |   construction_type?: string;
 7428 |  35 |   furnishing?: string;
 7429 |  36 |   has_regulation?: boolean;
 7430 |  37 |   land_area_sqm?: number;
 7431 |  38 | }
 7432 |  39 | 
 7433 |  40 | function formatPrice(price: number) {
 7434 |  41 |   return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
 7435 |  42 | }
 7436 |  43 | 
 7437 |  44 | export default function PropertyDetails() {
 7438 |  45 |   const { id } = useParams();
 7439 |  46 |   const navigate = useNavigate();
 7440 |  47 |   const [showContactForm, setShowContactForm] = useState(false);
 7441 |  48 |   const [activeImage, setActiveImage] = useState(0);
 7442 |  49 |   const [showFullscreen, setShowFullscreen] = useState(false);
 7443 |  50 |   const [formData, setFormData] = useState({
 7444 |  51 |     name: '',
 7445 |  52 |     email: '',
 7446 |  53 |     phone: '',
 7447 |  54 |     message: '',
 7448 |  55 |   });
 7449 |  56 | 
 7450 |  57 |   // Validate ID and navigate if invalid
 7451 |  58 |   useEffect(() => {
 7452 |  59 |     if (!id) {
 7453 |  60 |       navigate('/404');
 7454 |  61 |     }
 7455 |  62 |   }, [id, navigate]);
 7456 |  63 | 
 7457 |  64 |   // Only proceed with the query if we have a valid ID
 7458 |  65 |   const { data: property, isLoading, error } = useQuery({
 7459 |  66 |     queryKey: ['property', id],
 7460 |  67 |     queryFn: () => getPropertyById(id!),
 7461 |  68 |     enabled: !!id, // Only run query if ID exists
 7462 |  69 |   });
 7463 |  70 | 
 7464 |  71 |   const handleContactSubmit = async (e: React.FormEvent) => {
 7465 |  72 |     e.preventDefault();
 7466 |  73 |     // TODO: Implement contact form submission
 7467 |  74 |     console.log('Contact form submitted:', formData);
 7468 |  75 |     setShowContactForm(false);
 7469 |  76 |   };
 7470 |  77 | 
 7471 |  78 |   const handleImageClick = (index: number) => {
 7472 |  79 |     setActiveImage(index);
 7473 |  80 |     setShowFullscreen(true);
 7474 |  81 |   };
 7475 |  82 | 
 7476 |  83 |   const handleFullscreenClose = (e: React.MouseEvent) => {
 7477 |  84 |     // Only close if clicking the backdrop, not the image
 7478 |  85 |     if (e.target === e.currentTarget) {
 7479 |  86 |       setShowFullscreen(false);
 7480 |  87 |     }
 7481 |  88 |   };
 7482 |  89 | 
 7483 |  90 |   const handleKeyDown = (e: KeyboardEvent) => {
 7484 |  91 |     if (!showFullscreen || !property?.images) return;
 7485 |  92 |     
 7486 |  93 |     if (e.key === 'Escape') {
 7487 |  94 |       setShowFullscreen(false);
 7488 |  95 |     } else if (e.key === 'ArrowLeft') {
 7489 |  96 |       setActiveImage((prev) => (prev === 0 ? property.images.length - 1 : prev - 1));
 7490 |  97 |     } else if (e.key === 'ArrowRight') {
 7491 |  98 |       setActiveImage((prev) => (prev === property.images.length - 1 ? 0 : prev + 1));
 7492 |  99 |     }
 7493 | 100 |   };
 7494 | 101 | 
 7495 | 102 |   useEffect(() => {
 7496 | 103 |     window.addEventListener('keydown', handleKeyDown);
 7497 | 104 |     return () => window.removeEventListener('keydown', handleKeyDown);
 7498 | 105 |   }, [showFullscreen, property]);
 7499 | 106 | 
 7500 | 107 |   if (isLoading) {
 7501 | 108 |     return (
 7502 | 109 |       <div className="flex justify-center items-center min-h-screen">
 7503 | 110 |         <div className="w-12 h-12 rounded-full border-t-2 border-b-2 animate-spin border-primary-600"></div>
 7504 | 111 |       </div>
 7505 | 112 |     );
 7506 | 113 |   }
 7507 | 114 | 
 7508 | 115 |   if (error) {
 7509 | 116 |     return (
 7510 | 117 |       <div className="flex flex-col justify-center items-center min-h-screen">
 7511 | 118 |         <h2 className="mb-4 text-2xl font-semibold text-gray-900">Failed to load property details</h2>
 7512 | 119 |         <button 
 7513 | 120 |           onClick={() => navigate(-1)}
 7514 | 121 |           className="px-4 py-2 text-white rounded bg-primary-600 hover:bg-primary-700"
 7515 | 122 |         >
 7516 | 123 |           Go Back
 7517 | 124 |         </button>
 7518 | 125 |       </div>
 7519 | 126 |     );
 7520 | 127 |   }
 7521 | 128 | 
 7522 | 129 |   if (!property) {
 7523 | 130 |     return (
 7524 | 131 |       <div className="flex flex-col justify-center items-center min-h-screen">
 7525 | 132 |         <h2 className="mb-4 text-2xl font-semibold text-gray-900">Property not found</h2>
 7526 | 133 |         <Link 
 7527 | 134 |           to="/properties"
 7528 | 135 |           className="px-4 py-2 text-white rounded bg-primary-600 hover:bg-primary-700"
 7529 | 136 |         >
 7530 | 137 |           View All Properties
 7531 | 138 |         </Link>
 7532 | 139 |       </div>
 7533 | 140 |     );
 7534 | 141 |   }
 7535 | 142 | 
 7536 | 143 |   return (
 7537 | 144 |     <div className="min-h-full bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 7538 | 145 |       <div className="px-4 py-8 mx-auto max-w-7xl sm:px-6 lg:px-8">
 7539 | 146 |         {/* Back button */}
 7540 | 147 |         <Link
 7541 | 148 |           to="/properties"
 7542 | 149 |           className="inline-flex items-center mb-6 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
 7543 | 150 |         >
 7544 | 151 |           <ArrowLeftIcon className="mr-2 w-5 h-5" />
 7545 | 152 |           Обратно към всички имоти
 7546 | 153 |         </Link>
 7547 | 154 | 
 7548 | 155 |         {/* Property Title */}
 7549 | 156 |         <h1 className="mb-6 text-3xl font-bold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 7550 | 157 |           {property.title}
 7551 | 158 |         </h1>
 7552 | 159 | 
 7553 | 160 |         {/* Property Description */}
 7554 | 161 |         <div className="mb-8">
 7555 | 162 |           <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-pre-wrap">
 7556 | 163 |             {property.description}
 7557 | 164 |           </p>
 7558 | 165 |         </div>
 7559 | 166 | 
 7560 | 167 |         <div className="grid grid-cols-1 gap-8 lg:grid-cols-3">
 7561 | 168 |           <div className="lg:col-span-2">
 7562 | 169 |             {/* Image Gallery */}
 7563 | 170 |             <div className="space-y-4">
 7564 | 171 |             <div className="overflow-hidden relative w-full rounded-lg" onClick={() => setShowFullscreen(true)}>
 7565 | 172 |                 <img
 7566 | 173 |                   src={property.images?.[activeImage]?.url || '/images/property-placeholder.webp'}
 7567 | 174 |                   alt={property.title}
 7568 | 175 |                   className="object-cover w-full h-auto rounded-lg cursor-pointer"
 7569 | 176 |                   onError={(e) => {
 7570 | 177 |                     const target = e.target as HTMLImageElement;
 7571 | 178 |                     target.onerror = null;
 7572 | 179 |                     target.src = '/images/property-placeholder.webp';
 7573 | 180 |                   }}
 7574 | 181 |                 />
 7575 | 182 |                 {property.images && property.images.length > 1 && (
 7576 | 183 |                   <>
 7577 | 184 |                     <button
 7578 | 185 |                       onClick={(e) => {
 7579 | 186 |                         e.stopPropagation();
 7580 | 187 |                         setActiveImage((prev) => (prev === 0 ? (property.images?.length || 1) - 1 : prev - 1));
 7581 | 188 |                       }}
 7582 | 189 |                       className="absolute left-2 top-1/2 p-2 text-white rounded-full transition-colors -translate-y-1/2 bg-black/50 hover:bg-black/75"
 7583 | 190 |                     >
 7584 | 191 |                       <ChevronLeftIcon className="w-6 h-6" />
 7585 | 192 |                     </button>
 7586 | 193 |                     <button
 7587 | 194 |                       onClick={(e) => {
 7588 | 195 |                         e.stopPropagation();
 7589 | 196 |                         setActiveImage((prev) => (prev === (property.images?.length || 1) - 1 ? 0 : prev + 1));
 7590 | 197 |                       }}
 7591 | 198 |                       className="absolute right-2 top-1/2 p-2 text-white rounded-full transition-colors -translate-y-1/2 bg-black/50 hover:bg-black/75"
 7592 | 199 |                     >
 7593 | 200 |                       <ChevronRightIcon className="w-6 h-6" />
 7594 | 201 |                     </button>
 7595 | 202 |                     <div className="absolute bottom-4 left-1/2 px-3 py-1 text-sm text-white rounded-full -translate-x-1/2 bg-black/50">
 7596 | 203 |                       {activeImage + 1} / {property.images.length}
 7597 | 204 |                     </div>
 7598 | 205 |                   </>
 7599 | 206 |                 )}
 7600 | 207 |               </div>
 7601 | 208 |               {property.images && property.images.length > 1 && (
 7602 | 209 |                 <div className="grid grid-cols-6 gap-2">
 7603 | 210 |                   {property.images.map((img: PropertyImage, index: number) => (
 7604 | 211 |                     <button
 7605 | 212 |                       key={index}
 7606 | 213 |                       onClick={() => handleImageClick(index)}
 7607 | 214 |                       className={`relative aspect-w-16 aspect-h-9 overflow-hidden rounded-lg transition-all ${
 7608 | 215 |                         index === activeImage ? 'ring-2 ring-primary-600 opacity-100' : 'opacity-60 hover:opacity-100'
 7609 | 216 |                       }`}
 7610 | 217 |                     >
 7611 | 218 |                       <img
 7612 | 219 |                         src={img.url}
 7613 | 220 |                         alt={`Property view ${index + 1}`}
 7614 | 221 |                         className="object-cover w-full h-full"
 7615 | 222 |                         onError={(e) => {
 7616 | 223 |                           const target = e.target as HTMLImageElement;
 7617 | 224 |                           target.onerror = null;
 7618 | 225 |                           target.src = '/images/property-placeholder.webp';
 7619 | 226 |                         }}
 7620 | 227 |                       />
 7621 | 228 |                     </button>
 7622 | 229 |                   ))}
 7623 | 230 |                 </div>
 7624 | 231 |               )}
 7625 | 232 |             </div>
 7626 | 233 | 
 7627 | 234 |             {/* Property Details */}
 7628 | 235 |             <div className="mt-8 p-6 bg-white rounded-lg shadow dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 7629 | 236 |               <h2 className="mb-4 text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Детайли за имота</h2>
 7630 | 237 |               <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
 7631 | 238 |                 <div>
 7632 | 239 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Тип имот</h3>
 7633 | 240 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 7634 | 241 |                     {propertyTypeLabels[property.type] || property.type}
 7635 | 242 |                   </p>
 7636 | 243 |                 </div>
 7637 | 244 |                 <div>
 7638 | 245 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Категория</h3>
 7639 | 246 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 7640 | 247 |                     {categoryLabels[property.category] || property.category}
 7641 | 248 |                   </p>
 7642 | 249 |                 </div>
 7643 | 250 |                 <div>
 7644 | 251 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Тип локация</h3>
 7645 | 252 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 7646 | 253 |                     {locationTypeLabels[property.location_type] || property.location_type}
 7647 | 254 |                   </p>
 7648 | 255 |                 </div>
 7649 | 256 |                 <div>
 7650 | 257 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Площ</h3>
 7651 | 258 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.area_sqm} м²</p>
 7652 | 259 |                 </div>
 7653 | 260 |                 {property.land_area_sqm && (
 7654 | 261 |                   <div>
 7655 | 262 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Площ на парцела</h3>
 7656 | 263 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.land_area_sqm} м²</p>
 7657 | 264 |                   </div>
 7658 | 265 |                 )}
 7659 | 266 |                 {property.floor && (
 7660 | 267 |                   <div>
 7661 | 268 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Етаж</h3>
 7662 | 269 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.floor} от {property.total_floors || '?'}</p>
 7663 | 270 |                   </div>
 7664 | 271 |                 )}
 7665 | 272 |                 {property.construction_type && (
 7666 | 273 |                   <div>
 7667 | 274 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Строителство</h3>
 7668 | 275 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.construction_type}</p>
 7669 | 276 |                   </div>
 7670 | 277 |                 )}
 7671 | 278 |                 {property.furnishing && (
 7672 | 279 |                   <div>
 7673 | 280 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Обзавеждане</h3>
 7674 | 281 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.furnishing}</p>
 7675 | 282 |                   </div>
 7676 | 283 |                 )}
 7677 | 284 |                 {property.has_regulation !== undefined && (
 7678 | 285 |                   <div>
 7679 | 286 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Регулация</h3>
 7680 | 287 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.has_regulation ? 'Да' : 'Не'}</p>
 7681 | 288 |                   </div>
 7682 | 289 |                 )}
 7683 | 290 |                 {property.features && property.features.length > 0 && (
 7684 | 291 |                   <div className="sm:col-span-2">
 7685 | 292 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Характеристики</h3>
 7686 | 293 |                     <div className="mt-1 flex flex-wrap gap-2">
 7687 | 294 |                       {property.features.map((feature: Feature) => (
 7688 | 295 |                         <span 
 7689 | 296 |                           key={feature.featureId} 
 7690 | 297 |                           className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200"
 7691 | 298 |                         >
 7692 | 299 |                           {feature.name}
 7693 | 300 |                         </span>
 7694 | 301 |                       ))}
 7695 | 302 |                     </div>
 7696 | 303 |                   </div>
 7697 | 304 |                 )}
 7698 | 305 |               </div>
 7699 | 306 |             </div>
 7700 | 307 |           </div>
 7701 | 308 | 
 7702 | 309 |           {/* Sidebar */}
 7703 | 310 |           <div className="space-y-6">
 7704 | 311 |             {/* Price Card */}
 7705 | 312 |             <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 7706 | 313 |               <div className="mb-4 text-3xl font-bold text-primary-600">
 7707 | 314 |                 {formatPrice(property.price)}
 7708 | 315 |                 <span className="ml-1 text-xl">{property.currency}</span>
 7709 | 316 |               </div>
 7710 | 317 |               <div className="space-y-4">
 7711 | 318 |                 <button
 7712 | 319 |                   onClick={() => setShowContactForm(true)}
 7713 | 320 |                   className="px-4 py-2 w-full text-white bg-primary-600 rounded-md transition-colors hover:bg-primary-700"
 7714 | 321 |                 >
 7715 | 322 |                   Изпратете запитване
 7716 | 323 |                 </button>
 7717 | 324 |                 <div className="space-y-2">
 7718 | 325 |                   <a
 7719 | 326 |                     href="tel:082519851"
 7720 | 327 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
 7721 | 328 |                   >
 7722 | 329 |                     <PhoneIcon className="w-5 h-5" />
 7723 | 330 |                     082/51-98-51
 7724 | 331 |                   </a>
 7725 | 332 |                   <a
 7726 | 333 |                     href="tel:0895606165"
 7727 | 334 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
 7728 | 335 |                   >
 7729 | 336 |                     <PhoneIcon className="w-5 h-5" />
 7730 | 337 |                     0895606165
 7731 | 338 |                   </a>
 7732 | 339 |                   <a
 7733 | 340 |                     href="mailto:avalon_ds@abv.bg"
 7734 | 341 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
 7735 | 342 |                   >
 7736 | 343 |                     <EnvelopeIcon className="w-5 h-5" />
 7737 | 344 |                     avalon_ds@abv.bg
 7738 | 345 |                   </a>
 7739 | 346 |                 </div>
 7740 | 347 |               </div>
 7741 | 348 |             </div>
 7742 | 349 | 
 7743 | 350 |             {/* Location Map */}
 7744 | 351 |             <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 7745 | 352 |               <h3 className="mb-4 text-lg font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 7746 | 353 |                 Локация
 7747 | 354 |               </h3>
 7748 | 355 |               <div className="h-[300px] bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded-lg overflow-hidden">
 7749 | 356 |                 <GoogleMap
 7750 | 357 |                   center={{
 7751 | 358 |                     lat: 43.849699,
 7752 | 359 |                     lng: 25.954861,
 7753 | 360 |                   }}
 7754 | 361 |                 />
 7755 | 362 |               </div>
 7756 | 363 |             </div>
 7757 | 364 |           </div>
 7758 | 365 |         </div>
 7759 | 366 | 
 7760 | 367 |         {/* Contact Form Modal */}
 7761 | 368 |         {showContactForm && (
 7762 | 369 |           <div className="flex fixed inset-0 z-50 justify-center items-center p-4 bg-black bg-opacity-50">
 7763 | 370 |             <div className="p-6 w-full max-w-md bg-white rounded-lg dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 7764 | 371 |               <h3 className="mb-4 text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 7765 | 372 |                 Изпратете запитване
 7766 | 373 |               </h3>
 7767 | 374 |               <form onSubmit={handleContactSubmit} className="space-y-4">
 7768 | 375 |                 <div>
 7769 | 376 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7770 | 377 |                     Име
 7771 | 378 |                   </label>
 7772 | 379 |                   <input
 7773 | 380 |                     type="text"
 7774 | 381 |                     required
 7775 | 382 |                     value={formData.name}
 7776 | 383 |                     onChange={(e) => setFormData({ ...formData, name: e.target.value })}
 7777 | 384 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 7778 | 385 |                   />
 7779 | 386 |                 </div>
 7780 | 387 |                 <div>
 7781 | 388 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7782 | 389 |                     Имейл
 7783 | 390 |                   </label>
 7784 | 391 |                   <input
 7785 | 392 |                     type="email"
 7786 | 393 |                     required
 7787 | 394 |                     value={formData.email}
 7788 | 395 |                     onChange={(e) => setFormData({ ...formData, email: e.target.value })}
 7789 | 396 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 7790 | 397 |                   />
 7791 | 398 |                 </div>
 7792 | 399 |                 <div>
 7793 | 400 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7794 | 401 |                     Телефон
 7795 | 402 |                   </label>
 7796 | 403 |                   <input
 7797 | 404 |                     type="tel"
 7798 | 405 |                     required
 7799 | 406 |                     value={formData.phone}
 7800 | 407 |                     onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
 7801 | 408 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 7802 | 409 |                   />
 7803 | 410 |                 </div>
 7804 | 411 |                 <div>
 7805 | 412 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 7806 | 413 |                     Съобщение
 7807 | 414 |                   </label>
 7808 | 415 |                   <textarea
 7809 | 416 |                     required
 7810 | 417 |                     rows={4}
 7811 | 418 |                     value={formData.message}
 7812 | 419 |                     onChange={(e) => setFormData({ ...formData, message: e.target.value })}
 7813 | 420 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 7814 | 421 |                   />
 7815 | 422 |                 </div>
 7816 | 423 |                 <div className="flex gap-4 justify-end">
 7817 | 424 |                   <button
 7818 | 425 |                     type="button"
 7819 | 426 |                     onClick={() => setShowContactForm(false)}
 7820 | 427 |                     className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
 7821 | 428 |                   >
 7822 | 429 |                     Отказ
 7823 | 430 |                   </button>
 7824 | 431 |                   <button
 7825 | 432 |                     type="submit"
 7826 | 433 |                     className="px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
 7827 | 434 |                   >
 7828 | 435 |                     Изпрати
 7829 | 436 |                   </button>
 7830 | 437 |                 </div>
 7831 | 438 |               </form>
 7832 | 439 |             </div>
 7833 | 440 |           </div>
 7834 | 441 |         )}
 7835 | 442 | 
 7836 | 443 |         {/* Fullscreen Image Modal */}
 7837 | 444 |         {showFullscreen && property.images && (
 7838 | 445 |           <div 
 7839 | 446 |             className="flex fixed inset-0 z-50 justify-center items-center bg-black/90"
 7840 | 447 |             onClick={handleFullscreenClose}
 7841 | 448 |           >
 7842 | 449 |             <div className="flex relative justify-center items-center w-full h-full">
 7843 | 450 |               {/* Close button */}
 7844 | 451 |               <button
 7845 | 452 |                 onClick={() => setShowFullscreen(false)}
 7846 | 453 |                 className="absolute top-4 right-4 z-50 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
 7847 | 454 |               >
 7848 | 455 |                 <XMarkIcon className="w-6 h-6" />
 7849 | 456 |               </button>
 7850 | 457 | 
 7851 | 458 |               {/* Main Image */}
 7852 | 459 |               <div className="flex relative justify-center items-center p-4 w-full h-full">
 7853 | 460 |                 <img
 7854 | 461 |                   src={property.images[activeImage]?.url || '/images/property-placeholder.webp'}
 7855 | 462 |                   alt={`Property view ${activeImage + 1}`}
 7856 | 463 |                   className="object-contain max-w-full max-h-full"
 7857 | 464 |                   onError={(e) => {
 7858 | 465 |                     const target = e.target as HTMLImageElement;
 7859 | 466 |                     target.onerror = null;
 7860 | 467 |                     target.src = '/images/property-placeholder.webp';
 7861 | 468 |                   }}
 7862 | 469 |                 />
 7863 | 470 | 
 7864 | 471 |                 {property.images.length > 1 && (
 7865 | 472 |                   <>
 7866 | 473 |                     {/* Previous Button */}
 7867 | 474 |                     <button
 7868 | 475 |                       onClick={(e) => {
 7869 | 476 |                         e.stopPropagation();
 7870 | 477 |                         setActiveImage((prev) => (prev === 0 ? property.images!.length - 1 : prev - 1));
 7871 | 478 |                       }}
 7872 | 479 |                       className="absolute left-4 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
 7873 | 480 |                     >
 7874 | 481 |                       <ChevronLeftIcon className="w-8 h-8" />
 7875 | 482 |                     </button>
 7876 | 483 | 
 7877 | 484 |                     {/* Next Button */}
 7878 | 485 |                     <button
 7879 | 486 |                       onClick={(e) => {
 7880 | 487 |                         e.stopPropagation();
 7881 | 488 |                         setActiveImage((prev) => (prev === property.images!.length - 1 ? 0 : prev + 1));
 7882 | 489 |                       }}
 7883 | 490 |                       className="absolute right-4 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
 7884 | 491 |                     >
 7885 | 492 |                       <ChevronRightIcon className="w-8 h-8" />
 7886 | 493 |                     </button>
 7887 | 494 | 
 7888 | 495 |                     {/* Image Counter */}
 7889 | 496 |                     <div className="absolute bottom-4 left-1/2 px-4 py-2 text-white rounded-full -translate-x-1/2 bg-black/50">
 7890 | 497 |                       {activeImage + 1} / {property.images.length}
 7891 | 498 |                     </div>
 7892 | 499 |                   </>
 7893 | 500 |                 )}
 7894 | 501 |               </div>
 7895 | 502 | 
 7896 | 503 |               {/* Thumbnails */}
 7897 | 504 |               <div className="absolute right-0 bottom-0 left-0 p-4">
 7898 | 505 |                 <div className="flex overflow-x-auto gap-2 justify-center pb-2">
 7899 | 506 |                   {property.images.map((img: PropertyImage, index: number) => (
 7900 | 507 |                     <button
 7901 | 508 |                       key={index}
 7902 | 509 |                       onClick={(e) => {
 7903 | 510 |                         e.stopPropagation();
 7904 | 511 |                         setActiveImage(index);
 7905 | 512 |                       }}
 7906 | 513 |                       className={`relative flex-shrink-0 w-20 h-20 rounded-lg overflow-hidden transition-all ${
 7907 | 514 |                         index === activeImage ? 'ring-2 ring-white opacity-100' : 'opacity-50 hover:opacity-100'
 7908 | 515 |                       }`}
 7909 | 516 |                     >
 7910 | 517 |                       <img
 7911 | 518 |                         src={img.url}
 7912 | 519 |                         alt={`Thumbnail ${index + 1}`}
 7913 | 520 |                         className="object-cover w-full h-full"
 7914 | 521 |                         onError={(e) => {
 7915 | 522 |                           const target = e.target as HTMLImageElement;
 7916 | 523 |                           target.onerror = null;
 7917 | 524 |                           target.src = '/images/property-placeholder.webp';
 7918 | 525 |                         }}
 7919 | 526 |                       />
 7920 | 527 |                     </button>
 7921 | 528 |                   ))}
 7922 | 529 |                 </div>
 7923 | 530 |               </div>
 7924 | 531 |             </div>
 7925 | 532 |           </div>
 7926 | 533 |         )}
 7927 | 534 |       </div>
 7928 | 535 |     </div>
 7929 | 536 |   );
 7930 | 537 | } 
 7931 | 538 | 
 7932 | 
 7933 | 
 7934 | --------------------------------------------------------------------------------
 7935 | /apps/web/src/pages/admin/Dashboard.tsx:
 7936 | --------------------------------------------------------------------------------
 7937 |   1 | import { useQuery } from '@tanstack/react-query';
 7938 |   2 | import { Link } from 'react-router-dom';
 7939 |   3 | import {
 7940 |   4 |   HomeIcon,
 7941 |   5 |   ChatBubbleLeftRightIcon,
 7942 |   6 |   UsersIcon,
 7943 |   7 | } from '@heroicons/react/24/outline';
 7944 |   8 | import api from '../../lib/api';
 7945 |   9 | import type { ApiResponse } from '../../types/api';
 7946 |  10 | 
 7947 |  11 | interface Stats {
 7948 |  12 |   properties: number;
 7949 |  13 |   messages: number;
 7950 |  14 |   users: number;
 7951 |  15 | }
 7952 |  16 | 
 7953 |  17 | export default function Dashboard() {
 7954 |  18 |   const { data: stats, isLoading, error } = useQuery<Stats>({
 7955 |  19 |     queryKey: ['admin', 'stats'],
 7956 |  20 |     queryFn: async () => {
 7957 |  21 |       const response = await api.get<Stats>('/admin/stats');
 7958 |  22 |       console.log('Stats:', response.data);
 7959 |  23 |       return response.data;
 7960 |  24 |     }
 7961 |  25 |   });
 7962 |  26 | 
 7963 |  27 |   const cards = [
 7964 |  28 |     {
 7965 |  29 |       name: 'Имоти',
 7966 |  30 |       value: stats?.properties || 0,
 7967 |  31 |       icon: HomeIcon,
 7968 |  32 |       to: '/admin/properties',
 7969 |  33 |       color: 'bg-red-500',
 7970 |  34 |     },
 7971 |  35 |     {
 7972 |  36 |       name: 'Съобщения',
 7973 |  37 |       value: stats?.messages || 0,
 7974 |  38 |       icon: ChatBubbleLeftRightIcon,
 7975 |  39 |       to: '/admin/messages',
 7976 |  40 |       color: 'bg-blue-500',
 7977 |  41 |     },
 7978 |  42 |     {
 7979 |  43 |       name: 'Потребители',
 7980 |  44 |       value: stats?.users || 0,
 7981 |  45 |       icon: UsersIcon,
 7982 |  46 |       to: '/admin/users',
 7983 |  47 |       color: 'bg-green-500',
 7984 |  48 |     },
 7985 |  49 |   ];
 7986 |  50 | 
 7987 |  51 |   if (isLoading) {
 7988 |  52 |     return (
 7989 |  53 |       <div className="min-h-screen flex items-center justify-center">
 7990 |  54 |         <div className="animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-red-600" />
 7991 |  55 |       </div>
 7992 |  56 |     );
 7993 |  57 |   }
 7994 |  58 | 
 7995 |  59 |   return (
 7996 |  60 |     <div className="p-6">
 7997 |  61 |       <h1 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Табло</h1>
 7998 |  62 | 
 7999 |  63 |       <div className="mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
 8000 |  64 |         {cards.map((card) => (
 8001 |  65 |           <Link
 8002 |  66 |             key={card.name}
 8003 |  67 |             to={card.to}
 8004 |  68 |             className="relative overflow-hidden rounded-lg bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-5 shadow sm:px-6 hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] transition-colors duration-200"
 8005 |  69 |           >
 8006 |  70 |             <dt>
 8007 |  71 |               <div className={`absolute rounded-md p-3 ${card.color}`}>
 8008 |  72 |                 <card.icon className="h-6 w-6 text-white" aria-hidden="true" />
 8009 |  73 |               </div>
 8010 |  74 |               <p className="ml-16 truncate text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8011 |  75 |                 {card.name}
 8012 |  76 |               </p>
 8013 |  77 |             </dt>
 8014 |  78 |             <dd className="ml-16 flex items-baseline">
 8015 |  79 |               <p className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{card.value}</p>
 8016 |  80 |             </dd>
 8017 |  81 |           </Link>
 8018 |  82 |         ))}
 8019 |  83 |       </div>
 8020 |  84 | 
 8021 |  85 |       {/* Recent Activity */}
 8022 |  86 |       <div className="mt-8">
 8023 |  87 |         <h2 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Последна активност</h2>
 8024 |  88 |         <div className="mt-4 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow overflow-hidden sm:rounded-md">
 8025 |  89 |           <ul className="divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))]">
 8026 |  90 |             {/* Add recent activity items here */}
 8027 |  91 |             <li className="px-4 py-4 sm:px-6">
 8028 |  92 |               <div className="flex items-center justify-between">
 8029 |  93 |                 <p className="text-sm font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))] truncate">
 8030 |  94 |                   Скоро ще бъде добавена информация за последната активност
 8031 |  95 |                 </p>
 8032 |  96 |               </div>
 8033 |  97 |             </li>
 8034 |  98 |           </ul>
 8035 |  99 |         </div>
 8036 | 100 |       </div>
 8037 | 101 |     </div>
 8038 | 102 |   );
 8039 | 103 | } 
 8040 | 104 | 
 8041 | 
 8042 | 
 8043 | --------------------------------------------------------------------------------
 8044 | /apps/web/src/pages/admin/EditProperty.tsx:
 8045 | --------------------------------------------------------------------------------
 8046 |   1 | import { useNavigate, useParams, Link } from 'react-router-dom';
 8047 |   2 | import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
 8048 |   3 | import { getProperty, updateProperty } from '../../services/properties';
 8049 |   4 | import PropertyForm from '../../components/admin/PropertyForm';
 8050 |   5 | import type { CreatePropertyData } from '../../types/api';
 8051 |   6 | import LoadingSpinner from '../../components/LoadingSpinner';
 8052 |   7 | import { ArrowLeftIcon } from '@heroicons/react/24/outline';
 8053 |   8 | 
 8054 |   9 | export default function EditProperty() {
 8055 |  10 |   const { id } = useParams<{ id: string }>();
 8056 |  11 |   const navigate = useNavigate();
 8057 |  12 |   const queryClient = useQueryClient();
 8058 |  13 | 
 8059 |  14 |   const { data: property, isLoading } = useQuery({
 8060 |  15 |     queryKey: ['property', id],
 8061 |  16 |     queryFn: () => getProperty(id!),
 8062 |  17 |     enabled: !!id,
 8063 |  18 |   });
 8064 |  19 | 
 8065 |  20 |   const { mutate, isPending } = useMutation({
 8066 |  21 |     mutationFn: async ({ data, images }: { data: CreatePropertyData; images: File[] }) => {
 8067 |  22 |       const formData = new FormData();
 8068 |  23 |       
 8069 |  24 |       // Append property data
 8070 |  25 |       Object.entries(data).forEach(([key, value]) => {
 8071 |  26 |         if (key === 'contact_info') {
 8072 |  27 |           formData.append(key, JSON.stringify(value));
 8073 |  28 |         } else if (value !== undefined && value !== null) {
 8074 |  29 |           formData.append(key, String(value));
 8075 |  30 |         }
 8076 |  31 |       });
 8077 |  32 | 
 8078 |  33 |       // Append images
 8079 |  34 |       images.forEach((file) => {
 8080 |  35 |         formData.append('image', file);
 8081 |  36 |       });
 8082 |  37 | 
 8083 |  38 |       return updateProperty(id!, formData);
 8084 |  39 |     },
 8085 |  40 |     onSuccess: () => {
 8086 |  41 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
 8087 |  42 |       queryClient.invalidateQueries({ queryKey: ['property', id] });
 8088 |  43 |       navigate('/admin/properties');
 8089 |  44 |     },
 8090 |  45 |   });
 8091 |  46 | 
 8092 |  47 |   const handleSubmit = async (data: CreatePropertyData, images: File[]) => {
 8093 |  48 |     mutate({ data, images });
 8094 |  49 |   };
 8095 |  50 | 
 8096 |  51 |   if (isLoading) {
 8097 |  52 |     return (
 8098 |  53 |       <div className="flex justify-center items-center h-96">
 8099 |  54 |         <LoadingSpinner />
 8100 |  55 |       </div>
 8101 |  56 |     );
 8102 |  57 |   }
 8103 |  58 | 
 8104 |  59 |   if (!property) {
 8105 |  60 |     return (
 8106 |  61 |       <div className="text-center py-12">
 8107 |  62 |         <h2 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имотът не е намерен</h2>
 8108 |  63 |         <p className="mt-2 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Този имот не съществува или е бил изтрит</p>
 8109 |  64 |         <button
 8110 |  65 |           onClick={() => navigate('/admin/properties')}
 8111 |  66 |           className="mt-4 px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
 8112 |  67 |         >
 8113 |  68 |           Към списъка с имоти
 8114 |  69 |         </button>
 8115 |  70 |       </div>
 8116 |  71 |     );
 8117 |  72 |   }
 8118 |  73 | 
 8119 |  74 |   return (
 8120 |  75 |     <div className="container mx-auto px-4 py-8">
 8121 |  76 |       <div className="mb-8">
 8122 |  77 |         <Link
 8123 |  78 |           to="/admin/properties"
 8124 |  79 |           className="inline-flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900 dark:text-[rgb(var(--color-dark-text-secondary))] dark:hover:text-[rgb(var(--color-dark-text))]"
 8125 |  80 |         >
 8126 |  81 |           <ArrowLeftIcon className="w-4 h-4" />
 8127 |  82 |           Назад
 8128 |  83 |         </Link>
 8129 |  84 |         <h1 className="mt-2 text-2xl font-bold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Редактиране на имот</h1>
 8130 |  85 |         <div className="flex items-center mt-2">
 8131 |  86 |           <p className="text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8132 |  87 |             Редактирайте информацията за имота
 8133 |  88 |           </p>
 8134 |  89 |           <Link
 8135 |  90 |             to={`/properties/${id}`}
 8136 |  91 |             target="_blank"
 8137 |  92 |             className="ml-4 inline-flex items-center px-3 py-1 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] bg-gray-100 dark:bg-[rgb(var(--color-dark-border))] rounded-md hover:bg-gray-200 dark:hover:bg-[rgb(var(--color-dark-bg))] transition-colors"
 8138 |  93 |           >
 8139 |  94 |             <span>Преглед на имота</span>
 8140 |  95 |             <svg xmlns="http://www.w3.org/2000/svg" className="ml-1.5 w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 8141 |  96 |               <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
 8142 |  97 |             </svg>
 8143 |  98 |           </Link>
 8144 |  99 |         </div>
 8145 | 100 |       </div>
 8146 | 101 | 
 8147 | 102 |       <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-md rounded-lg p-6">
 8148 | 103 |         <PropertyForm
 8149 | 104 |           initialData={property}
 8150 | 105 |           onSubmit={handleSubmit}
 8151 | 106 |           isSubmitting={isPending}
 8152 | 107 |           onCancel={() => navigate('/admin/properties')}
 8153 | 108 |           submitLabel="Запази промените"
 8154 | 109 |         />
 8155 | 110 |       </div>
 8156 | 111 |     </div>
 8157 | 112 |   );
 8158 | 113 | } 
 8159 | 114 | 
 8160 | 
 8161 | 
 8162 | --------------------------------------------------------------------------------
 8163 | /apps/web/src/pages/admin/Login.tsx:
 8164 | --------------------------------------------------------------------------------
 8165 |   1 | import { useState } from 'react';
 8166 |   2 | import { useMutation } from '@tanstack/react-query';
 8167 |   3 | import { useNavigate, useLocation } from 'react-router-dom';
 8168 |   4 | import { z } from 'zod';
 8169 |   5 | import { login as loginApi } from '../../services/auth';
 8170 |   6 | import { useAuth } from '../../contexts/auth';
 8171 |   7 | import type { AuthResponse } from '../../types/api';
 8172 |   8 | 
 8173 |   9 | const loginSchema = z.object({
 8174 |  10 |   email: z.string().email('Невалиден имейл адрес'),
 8175 |  11 |   password: z.string().min(6, 'Паролата трябва да е поне 6 символа'),
 8176 |  12 | });
 8177 |  13 | 
 8178 |  14 | type LoginForm = z.infer<typeof loginSchema>;
 8179 |  15 | 
 8180 |  16 | export default function Login() {
 8181 |  17 |   const navigate = useNavigate();
 8182 |  18 |   const location = useLocation();
 8183 |  19 |   const { setUser } = useAuth();
 8184 |  20 |   const from = (location.state as { from?: { pathname: string } })?.from?.pathname || '/admin';
 8185 |  21 | 
 8186 |  22 |   const [formData, setFormData] = useState<LoginForm>({
 8187 |  23 |     email: '',
 8188 |  24 |     password: '',
 8189 |  25 |   });
 8190 |  26 | 
 8191 |  27 |   const [errors, setErrors] = useState<Partial<LoginForm>>({});
 8192 |  28 | 
 8193 |  29 |   const { mutate, isPending } = useMutation<AuthResponse, Error, LoginForm>({
 8194 |  30 |     mutationFn: loginApi,
 8195 |  31 |     onSuccess: (data) => {
 8196 |  32 |       console.log('Mutation success response:', data);
 8197 |  33 |       localStorage.setItem('token', data.token);
 8198 |  34 |       setUser({
 8199 |  35 |         ...data.user,
 8200 |  36 |         role: data.user.role.toUpperCase() as 'ADMIN' | 'USER'
 8201 |  37 |       });
 8202 |  38 |       navigate(from);
 8203 |  39 |     },
 8204 |  40 |     onError: (error) => {
 8205 |  41 |       console.error('Login error:', error);
 8206 |  42 |       setErrors({
 8207 |  43 |         email: 'Невалиден имейл или парола',
 8208 |  44 |         password: 'Невалиден имейл или парола',
 8209 |  45 |       });
 8210 |  46 |     },
 8211 |  47 |   });
 8212 |  48 | 
 8213 |  49 |   const handleSubmit = async (e: React.FormEvent) => {
 8214 |  50 |     e.preventDefault();
 8215 |  51 |     setErrors({});
 8216 |  52 | 
 8217 |  53 |     try {
 8218 |  54 |       const validatedData = loginSchema.parse(formData);
 8219 |  55 |       mutate(validatedData);
 8220 |  56 |     } catch (err) {
 8221 |  57 |       if (err instanceof z.ZodError) {
 8222 |  58 |         const fieldErrors: Partial<LoginForm> = {};
 8223 |  59 |         err.errors.forEach((error) => {
 8224 |  60 |           if (error.path[0]) {
 8225 |  61 |             fieldErrors[error.path[0] as keyof LoginForm] = error.message;
 8226 |  62 |           }
 8227 |  63 |         });
 8228 |  64 |         setErrors(fieldErrors);
 8229 |  65 |       }
 8230 |  66 |     }
 8231 |  67 |   };
 8232 |  68 | 
 8233 |  69 |   return (
 8234 |  70 |     <div className="flex items-center justify-center min-h-screen px-4 py-12 bg-white dark:bg-[rgb(var(--color-dark-bg))] sm:px-6 lg:px-8">
 8235 |  71 |       <div className="w-full max-w-md space-y-8">
 8236 |  72 |         <div>
 8237 |  73 |           <h2 className="mt-6 text-3xl font-bold text-center text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8238 |  74 |             Вход в администрацията
 8239 |  75 |           </h2>
 8240 |  76 |         </div>
 8241 |  77 |         <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
 8242 |  78 |           <div className="-space-y-px rounded-md shadow-sm">
 8243 |  79 |             <div>
 8244 |  80 |               <label htmlFor="email" className="sr-only">
 8245 |  81 |                 Имейл
 8246 |  82 |               </label>
 8247 |  83 |               <input
 8248 |  84 |                 id="email"
 8249 |  85 |                 name="email"
 8250 |  86 |                 type="email"
 8251 |  87 |                 autoComplete="email"
 8252 |  88 |                 required
 8253 |  89 |                 value={formData.email}
 8254 |  90 |                 onChange={(e) => setFormData({ ...formData, email: e.target.value })}
 8255 |  91 |                 className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${
 8256 |  92 |                   errors.email
 8257 |  93 |                     ? 'border-red-300 dark:border-red-500 focus:ring-red-500 focus:border-red-500'
 8258 |  94 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:ring-primary-500 focus:border-primary-500'
 8259 |  95 |                 } placeholder-gray-500 dark:placeholder-[rgb(var(--color-dark-text-secondary))] text-gray-900 dark:text-[rgb(var(--color-dark-text))] dark:bg-[rgb(var(--color-dark-bg))] rounded-t-md focus:outline-none focus:z-10 sm:text-sm`}
 8260 |  96 |                 placeholder="Имейл адрес"
 8261 |  97 |               />
 8262 |  98 |               {errors.email && (
 8263 |  99 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.email}</p>
 8264 | 100 |               )}
 8265 | 101 |             </div>
 8266 | 102 |             <div>
 8267 | 103 |               <label htmlFor="password" className="sr-only">
 8268 | 104 |                 Парола
 8269 | 105 |               </label>
 8270 | 106 |               <input
 8271 | 107 |                 id="password"
 8272 | 108 |                 name="password"
 8273 | 109 |                 type="password"
 8274 | 110 |                 autoComplete="current-password"
 8275 | 111 |                 required
 8276 | 112 |                 value={formData.password}
 8277 | 113 |                 onChange={(e) => setFormData({ ...formData, password: e.target.value })}
 8278 | 114 |                 className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${
 8279 | 115 |                   errors.password
 8280 | 116 |                     ? 'border-red-300 dark:border-red-500 focus:ring-red-500 focus:border-red-500'
 8281 | 117 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:ring-primary-500 focus:border-primary-500'
 8282 | 118 |                 } placeholder-gray-500 dark:placeholder-[rgb(var(--color-dark-text-secondary))] text-gray-900 dark:text-[rgb(var(--color-dark-text))] dark:bg-[rgb(var(--color-dark-bg))] rounded-b-md focus:outline-none focus:z-10 sm:text-sm`}
 8283 | 119 |                 placeholder="Парола"
 8284 | 120 |               />
 8285 | 121 |               {errors.password && (
 8286 | 122 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.password}</p>
 8287 | 123 |               )}
 8288 | 124 |             </div>
 8289 | 125 |           </div>
 8290 | 126 | 
 8291 | 127 |           <div>
 8292 | 128 |             <button
 8293 | 129 |               type="submit"
 8294 | 130 |               disabled={isPending}
 8295 | 131 |               className="relative flex justify-center w-full px-3 py-2 text-sm font-semibold text-white rounded-md group bg-primary-600 hover:bg-primary-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600 disabled:opacity-50 dark:focus-visible:outline-offset-[rgb(var(--color-dark-bg))]"
 8296 | 132 |             >
 8297 | 133 |               {isPending ? 'Влизане...' : 'Вход'}
 8298 | 134 |             </button>
 8299 | 135 |           </div>
 8300 | 136 |         </form>
 8301 | 137 |       </div>
 8302 | 138 |     </div>
 8303 | 139 |   );
 8304 | 140 | } 
 8305 | 141 | 
 8306 | 
 8307 | 
 8308 | --------------------------------------------------------------------------------
 8309 | /apps/web/src/pages/admin/Messages.tsx:
 8310 | --------------------------------------------------------------------------------
 8311 |   1 | import { useState } from 'react';
 8312 |   2 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
 8313 |   3 | import { CheckIcon, TrashIcon } from '@heroicons/react/24/outline';
 8314 |   4 | import { getMessages, markMessageAsRead, deleteMessage } from '../../services/messages';
 8315 |   5 | import { event } from '../../lib/analytics';
 8316 |   6 | import type { ContactMessage } from '@prisma/client';
 8317 |   7 | 
 8318 |   8 | export default function Messages() {
 8319 |   9 |   const [page, setPage] = useState(1);
 8320 |  10 |   const limit = 10;
 8321 |  11 | 
 8322 |  12 |   const queryClient = useQueryClient();
 8323 |  13 | 
 8324 |  14 |   const { data, isLoading, error } = useQuery({
 8325 |  15 |     queryKey: ['messages', page],
 8326 |  16 |     queryFn: () => getMessages(page, limit),
 8327 |  17 |   });
 8328 |  18 | 
 8329 |  19 |   const markAsReadMutation = useMutation({
 8330 |  20 |     mutationFn: markMessageAsRead,
 8331 |  21 |     onSuccess: () => {
 8332 |  22 |       queryClient.invalidateQueries({ queryKey: ['messages'] });
 8333 |  23 |       
 8334 |  24 |       // Track successful message mark as read
 8335 |  25 |       event({
 8336 |  26 |         action: 'message_mark_read',
 8337 |  27 |         category: 'Admin',
 8338 |  28 |         label: 'Success'
 8339 |  29 |       });
 8340 |  30 |     },
 8341 |  31 |     onError: (error: any) => {
 8342 |  32 |       // Track message mark as read error
 8343 |  33 |       event({
 8344 |  34 |         action: 'message_mark_read_error',
 8345 |  35 |         category: 'Admin',
 8346 |  36 |         label: error.response?.data?.message || 'Unknown error'
 8347 |  37 |       });
 8348 |  38 |     }
 8349 |  39 |   });
 8350 |  40 | 
 8351 |  41 |   const deleteMutation = useMutation({
 8352 |  42 |     mutationFn: deleteMessage,
 8353 |  43 |     onSuccess: () => {
 8354 |  44 |       queryClient.invalidateQueries({ queryKey: ['messages'] });
 8355 |  45 |       
 8356 |  46 |       // Track successful message deletion
 8357 |  47 |       event({
 8358 |  48 |         action: 'message_delete',
 8359 |  49 |         category: 'Admin',
 8360 |  50 |         label: 'Success'
 8361 |  51 |       });
 8362 |  52 |     },
 8363 |  53 |     onError: (error: any) => {
 8364 |  54 |       // Track message deletion error
 8365 |  55 |       event({
 8366 |  56 |         action: 'message_delete_error',
 8367 |  57 |         category: 'Admin',
 8368 |  58 |         label: error.response?.data?.message || 'Unknown error'
 8369 |  59 |       });
 8370 |  60 |     }
 8371 |  61 |   });
 8372 |  62 | 
 8373 |  63 |   const handleMarkAsRead = async (id: string) => {
 8374 |  64 |     markAsReadMutation.mutate(id);
 8375 |  65 |   };
 8376 |  66 | 
 8377 |  67 |   const handleDelete = async (id: string) => {
 8378 |  68 |     if (window.confirm('Сигурни ли сте, че искате да изтриете това съобщение?')) {
 8379 |  69 |       deleteMutation.mutate(id);
 8380 |  70 |     }
 8381 |  71 |   };
 8382 |  72 | 
 8383 |  73 |   if (isLoading) {
 8384 |  74 |     return (
 8385 |  75 |       <div className="flex justify-center items-center h-64">
 8386 |  76 |         <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
 8387 |  77 |       </div>
 8388 |  78 |     );
 8389 |  79 |   }
 8390 |  80 | 
 8391 |  81 |   if (error) {
 8392 |  82 |     return (
 8393 |  83 |       <div className="text-center text-red-600 p-4">
 8394 |  84 |         Възникна грешка при зареждането на съобщенията
 8395 |  85 |       </div>
 8396 |  86 |     );
 8397 |  87 |   }
 8398 |  88 | 
 8399 |  89 |   return (
 8400 |  90 |     <div className="px-4 sm:px-6 lg:px-8">
 8401 |  91 |       <div className="sm:flex sm:items-center">
 8402 |  92 |         <div className="sm:flex-auto">
 8403 |  93 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Съобщения</h1>
 8404 |  94 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 8405 |  95 |             Списък с всички съобщения от контактната форма
 8406 |  96 |           </p>
 8407 |  97 |         </div>
 8408 |  98 |       </div>
 8409 |  99 | 
 8410 | 100 |       <div className="mt-8 flex flex-col">
 8411 | 101 |         <div className="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
 8412 | 102 |           <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
 8413 | 103 |             <div className="overflow-hidden shadow ring-1 ring-black/5 dark:ring-[rgb(var(--color-dark-border))] md:rounded-lg">
 8414 | 104 |               <table className="min-w-full divide-y divide-gray-300 dark:divide-[rgb(var(--color-dark-border))]">
 8415 | 105 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 8416 | 106 |                   <tr>
 8417 | 107 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8418 | 108 |                       Име
 8419 | 109 |                     </th>
 8420 | 110 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8421 | 111 |                       Имейл
 8422 | 112 |                     </th>
 8423 | 113 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8424 | 114 |                       Съобщение
 8425 | 115 |                     </th>
 8426 | 116 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8427 | 117 |                       Дата
 8428 | 118 |                     </th>
 8429 | 119 |                     <th scope="col" className="relative py-3.5 pl-3 pr-4 sm:pr-6">
 8430 | 120 |                       <span className="sr-only">Действия</span>
 8431 | 121 |                     </th>
 8432 | 122 |                   </tr>
 8433 | 123 |                 </thead>
 8434 | 124 |                 <tbody className="bg-white divide-y divide-gray-200 dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:divide-[rgb(var(--color-dark-border))]">
 8435 | 125 |                   {data?.items.map((message: ContactMessage) => (
 8436 | 126 |                     <tr key={message.id} className={message.isRead ? 'bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]' : 'bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))]'}>
 8437 | 127 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8438 | 128 |                         {message.name}
 8439 | 129 |                       </td>
 8440 | 130 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8441 | 131 |                         {message.email}
 8442 | 132 |                       </td>
 8443 | 133 |                       <td className="px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8444 | 134 |                         {message.message}
 8445 | 135 |                       </td>
 8446 | 136 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8447 | 137 |                         {new Date(message.createdAt).toLocaleDateString('bg-BG', {
 8448 | 138 |                           year: 'numeric',
 8449 | 139 |                           month: 'long',
 8450 | 140 |                           day: 'numeric',
 8451 | 141 |                           hour: '2-digit',
 8452 | 142 |                           minute: '2-digit'
 8453 | 143 |                         })}
 8454 | 144 |                       </td>
 8455 | 145 |                       <td className="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
 8456 | 146 |                         <button
 8457 | 147 |                           onClick={() => handleMarkAsRead(message.id)}
 8458 | 148 |                           className={`${
 8459 | 149 |                             message.isRead 
 8460 | 150 |                               ? 'text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))]' 
 8461 | 151 |                               : 'text-primary-600 dark:text-primary-500 hover:text-primary-700 dark:hover:text-primary-400'
 8462 | 152 |                           }`}
 8463 | 153 |                         >
 8464 | 154 |                           {message.isRead ? 'Прочетено' : 'Маркирай като прочетено'}
 8465 | 155 |                         </button>
 8466 | 156 |                       </td>
 8467 | 157 |                     </tr>
 8468 | 158 |                   ))}
 8469 | 159 |                 </tbody>
 8470 | 160 |               </table>
 8471 | 161 |             </div>
 8472 | 162 |           </div>
 8473 | 163 |         </div>
 8474 | 164 |       </div>
 8475 | 165 | 
 8476 | 166 |       <div className="mt-4 flex items-center justify-between">
 8477 | 167 |         <div className="flex flex-1 justify-between sm:hidden">
 8478 | 168 |           <button
 8479 | 169 |             onClick={() => setPage(p => Math.max(1, p - 1))}
 8480 | 170 |             disabled={page === 1}
 8481 | 171 |             className="relative inline-flex items-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50"
 8482 | 172 |           >
 8483 | 173 |             Предишна
 8484 | 174 |           </button>
 8485 | 175 |           <button
 8486 | 176 |             onClick={() => setPage(p => p + 1)}
 8487 | 177 |             disabled={!data?.hasNextPage}
 8488 | 178 |             className="relative ml-3 inline-flex items-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50"
 8489 | 179 |           >
 8490 | 180 |             Следваща
 8491 | 181 |           </button>
 8492 | 182 |         </div>
 8493 | 183 |         <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
 8494 | 184 |           <div>
 8495 | 185 |             <p className="text-sm text-gray-700 dark:text-gray-300">
 8496 | 186 |               Показване на <span className="font-medium">{((page - 1) * limit) + 1}</span> до{' '}
 8497 | 187 |               <span className="font-medium">
 8498 | 188 |                 {Math.min(page * limit, data?.total || 0)}
 8499 | 189 |               </span>{' '}
 8500 | 190 |               от <span className="font-medium">{data?.total}</span> резултата
 8501 | 191 |             </p>
 8502 | 192 |           </div>
 8503 | 193 |           <div>
 8504 | 194 |             <nav className="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
 8505 | 195 |               <button
 8506 | 196 |                 onClick={() => setPage(p => Math.max(1, p - 1))}
 8507 | 197 |                 disabled={page === 1}
 8508 | 198 |                 className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 focus:z-20 focus:outline-offset-0 disabled:opacity-50"
 8509 | 199 |               >
 8510 | 200 |                 <span className="sr-only">Предишна</span>
 8511 | 201 |                 <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
 8512 | 202 |                   <path fillRule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clipRule="evenodd" />
 8513 | 203 |                 </svg>
 8514 | 204 |               </button>
 8515 | 205 |               <button
 8516 | 206 |                 onClick={() => setPage(p => p + 1)}
 8517 | 207 |                 disabled={!data?.hasNextPage}
 8518 | 208 |                 className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 focus:z-20 focus:outline-offset-0 disabled:opacity-50"
 8519 | 209 |               >
 8520 | 210 |                 <span className="sr-only">Следваща</span>
 8521 | 211 |                 <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
 8522 | 212 |                   <path fillRule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clipRule="evenodd" />
 8523 | 213 |                 </svg>
 8524 | 214 |               </button>
 8525 | 215 |             </nav>
 8526 | 216 |           </div>
 8527 | 217 |         </div>
 8528 | 218 |       </div>
 8529 | 219 |     </div>
 8530 | 220 |   );
 8531 | 221 | } 
 8532 | 222 | 
 8533 | 
 8534 | 
 8535 | --------------------------------------------------------------------------------
 8536 | /apps/web/src/pages/admin/NewProperty.tsx:
 8537 | --------------------------------------------------------------------------------
 8538 |  1 | import { useNavigate } from 'react-router-dom';
 8539 |  2 | import { useMutation, useQueryClient } from '@tanstack/react-query';
 8540 |  3 | import { createProperty } from '../../services/properties';
 8541 |  4 | import PropertyForm from '../../components/admin/PropertyForm';
 8542 |  5 | import type { CreatePropertyData } from '../../types/api';
 8543 |  6 | import { XCircleIcon } from '@heroicons/react/24/outline';
 8544 |  7 | import { event } from '../../lib/analytics';
 8545 |  8 | 
 8546 |  9 | export default function NewProperty() {
 8547 | 10 |   const navigate = useNavigate();
 8548 | 11 |   const queryClient = useQueryClient();
 8549 | 12 | 
 8550 | 13 |   const { mutate, isPending, error } = useMutation({
 8551 | 14 |     mutationFn: async ({ data, images }: { data: CreatePropertyData; images: File[] }) => {
 8552 | 15 |       const formData = new FormData();
 8553 | 16 |       formData.append('data', JSON.stringify(data));
 8554 | 17 |       images.forEach((image) => {
 8555 | 18 |         formData.append('images', image);
 8556 | 19 |       });
 8557 | 20 |       return createProperty(formData);
 8558 | 21 |     },
 8559 | 22 |     onSuccess: () => {
 8560 | 23 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
 8561 | 24 |       navigate('/admin/properties');
 8562 | 25 |       
 8563 | 26 |       event({
 8564 | 27 |         action: 'property_create',
 8565 | 28 |         category: 'Admin',
 8566 | 29 |         label: 'Success'
 8567 | 30 |       });
 8568 | 31 |     },
 8569 | 32 |     onError: (error: any) => {
 8570 | 33 |       event({
 8571 | 34 |         action: 'property_create_error',
 8572 | 35 |         category: 'Admin',
 8573 | 36 |         label: error.message || 'Unknown error'
 8574 | 37 |       });
 8575 | 38 |     }
 8576 | 39 |   });
 8577 | 40 | 
 8578 | 41 |   const handleSubmit = async (data: CreatePropertyData, images: File[]) => {
 8579 | 42 |     mutate({ data, images });
 8580 | 43 |   };
 8581 | 44 | 
 8582 | 45 |   return (
 8583 | 46 |     <div className="px-4 py-6 sm:px-6 lg:px-8">
 8584 | 47 |       <div className="sm:flex sm:items-center">
 8585 | 48 |         <div className="sm:flex-auto">
 8586 | 49 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Нов имот</h1>
 8587 | 50 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 8588 | 51 |             Добавете нов имот в системата
 8589 | 52 |           </p>
 8590 | 53 |         </div>
 8591 | 54 |       </div>
 8592 | 55 | 
 8593 | 56 |       <div className="mt-8">
 8594 | 57 |         <div>
 8595 | 58 |           <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow sm:rounded-md">
 8596 | 59 |             <div className="px-4 py-5 sm:p-6">
 8597 | 60 |               {error && (
 8598 | 61 |                 <div className="mb-4 p-4 rounded-md bg-red-50 dark:bg-red-900/50">
 8599 | 62 |                   <div className="flex">
 8600 | 63 |                     <div className="flex-shrink-0">
 8601 | 64 |                       <XCircleIcon className="h-5 w-5 text-red-400" aria-hidden="true" />
 8602 | 65 |                     </div>
 8603 | 66 |                     <div className="ml-3">
 8604 | 67 |                       <h3 className="text-sm font-medium text-red-800 dark:text-[rgb(var(--color-dark-text))]">
 8605 | 68 |                         Възникна грешка при създаването на имота
 8606 | 69 |                       </h3>
 8607 | 70 |                       <div className="mt-2 text-sm text-red-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8608 | 71 |                         {error instanceof Error ? error.message : 'Unknown error'}
 8609 | 72 |                       </div>
 8610 | 73 |                     </div>
 8611 | 74 |                   </div>
 8612 | 75 |                 </div>
 8613 | 76 |               )}
 8614 | 77 | 
 8615 | 78 |               <PropertyForm
 8616 | 79 |                 onSubmit={handleSubmit}
 8617 | 80 |                 isSubmitting={isPending}
 8618 | 81 |                 submitLabel="Създай"
 8619 | 82 |                 onCancel={() => navigate('/admin/properties')}
 8620 | 83 |               />
 8621 | 84 |             </div>
 8622 | 85 |           </div>
 8623 | 86 |         </div>
 8624 | 87 |       </div>
 8625 | 88 |     </div>
 8626 | 89 |   );
 8627 | 90 | } 
 8628 | 91 | 
 8629 | 
 8630 | 
 8631 | --------------------------------------------------------------------------------
 8632 | /apps/web/src/pages/admin/NewUser.tsx:
 8633 | --------------------------------------------------------------------------------
 8634 |   1 | import { useState } from 'react';
 8635 |   2 | import { useNavigate } from 'react-router-dom';
 8636 |   3 | import { useMutation, useQueryClient } from '@tanstack/react-query';
 8637 |   4 | import { createUser } from '../../services/users';
 8638 |   5 | import type { CreateUserData } from '../../types/api';
 8639 |   6 | import { event } from '../../lib/analytics';
 8640 |   7 | import { XCircleIcon } from '@heroicons/react/24/outline';
 8641 |   8 | 
 8642 |   9 | type UserFormProps = {
 8643 |  10 |   onSubmit: (data: CreateUserData) => void;
 8644 |  11 |   isSubmitting: boolean;
 8645 |  12 |   submitLabel: string;
 8646 |  13 |   onCancel: () => void;
 8647 |  14 | };
 8648 |  15 | 
 8649 |  16 | function UserForm({ onSubmit, isSubmitting, submitLabel, onCancel }: UserFormProps) {
 8650 |  17 |   const [formData, setFormData] = useState<CreateUserData>({
 8651 |  18 |     name: '',
 8652 |  19 |     email: '',
 8653 |  20 |     password: '',
 8654 |  21 |     role: 'USER'
 8655 |  22 |   });
 8656 |  23 |   const [errors, setErrors] = useState<Record<string, string>>({});
 8657 |  24 | 
 8658 |  25 |   const handleSubmit = (e: React.FormEvent) => {
 8659 |  26 |     e.preventDefault();
 8660 |  27 |     onSubmit(formData);
 8661 |  28 |   };
 8662 |  29 | 
 8663 |  30 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
 8664 |  31 |     const { name, value } = e.target;
 8665 |  32 |     setFormData(prev => ({ ...prev, [name]: value }));
 8666 |  33 |     if (errors[name]) {
 8667 |  34 |       setErrors(prev => ({ ...prev, [name]: '' }));
 8668 |  35 |     }
 8669 |  36 |   };
 8670 |  37 | 
 8671 |  38 |   return (
 8672 |  39 |     <form className="space-y-6" onSubmit={handleSubmit}>
 8673 |  40 |       <div>
 8674 |  41 |         <label htmlFor="name" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8675 |  42 |           Име
 8676 |  43 |         </label>
 8677 |  44 |         <input
 8678 |  45 |           type="text"
 8679 |  46 |           id="name"
 8680 |  47 |           name="name"
 8681 |  48 |           value={formData.name}
 8682 |  49 |           onChange={handleChange}
 8683 |  50 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 8684 |  51 |           required
 8685 |  52 |         />
 8686 |  53 |       </div>
 8687 |  54 | 
 8688 |  55 |       <div>
 8689 |  56 |         <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8690 |  57 |           Имейл
 8691 |  58 |         </label>
 8692 |  59 |         <input
 8693 |  60 |           type="email"
 8694 |  61 |           id="email"
 8695 |  62 |           name="email"
 8696 |  63 |           value={formData.email}
 8697 |  64 |           onChange={handleChange}
 8698 |  65 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 8699 |  66 |           required
 8700 |  67 |         />
 8701 |  68 |       </div>
 8702 |  69 | 
 8703 |  70 |       <div>
 8704 |  71 |         <label htmlFor="password" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8705 |  72 |           Парола
 8706 |  73 |         </label>
 8707 |  74 |         <input
 8708 |  75 |           type="password"
 8709 |  76 |           id="password"
 8710 |  77 |           name="password"
 8711 |  78 |           value={formData.password}
 8712 |  79 |           onChange={handleChange}
 8713 |  80 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 8714 |  81 |           required
 8715 |  82 |         />
 8716 |  83 |       </div>
 8717 |  84 | 
 8718 |  85 |       <div>
 8719 |  86 |         <label htmlFor="role" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8720 |  87 |           Роля
 8721 |  88 |         </label>
 8722 |  89 |         <select
 8723 |  90 |           id="role"
 8724 |  91 |           name="role"
 8725 |  92 |           value={formData.role}
 8726 |  93 |           onChange={handleChange}
 8727 |  94 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 8728 |  95 |           required
 8729 |  96 |         >
 8730 |  97 |           <option value="USER">Потребител</option>
 8731 |  98 |           <option value="ADMIN">Администратор</option>
 8732 |  99 |         </select>
 8733 | 100 |       </div>
 8734 | 101 | 
 8735 | 102 |       <div className="flex justify-end space-x-3">
 8736 | 103 |         <button
 8737 | 104 |           type="button"
 8738 | 105 |           onClick={onCancel}
 8739 | 106 |           className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] bg-white dark:bg-[rgb(var(--color-dark-bg))] border border-gray-300 dark:border-[rgb(var(--color-dark-border))] rounded-md shadow-sm hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
 8740 | 107 |         >
 8741 | 108 |           Отказ
 8742 | 109 |         </button>
 8743 | 110 |         <button
 8744 | 111 |           type="submit"
 8745 | 112 |           disabled={isSubmitting}
 8746 | 113 |           className="px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50"
 8747 | 114 |         >
 8748 | 115 |           {submitLabel}
 8749 | 116 |         </button>
 8750 | 117 |       </div>
 8751 | 118 |     </form>
 8752 | 119 |   );
 8753 | 120 | }
 8754 | 121 | 
 8755 | 122 | export default function NewUser() {
 8756 | 123 |   const navigate = useNavigate();
 8757 | 124 |   const queryClient = useQueryClient();
 8758 | 125 | 
 8759 | 126 |   const { mutate, isPending, error } = useMutation({
 8760 | 127 |     mutationFn: (data: CreateUserData) => createUser({ ...data, updatedAt: new Date() }),
 8761 | 128 |     onSuccess: () => {
 8762 | 129 |       queryClient.invalidateQueries({ queryKey: ['users'] });
 8763 | 130 |       navigate('/admin/users');
 8764 | 131 |       
 8765 | 132 |       event({
 8766 | 133 |         action: 'user_create',
 8767 | 134 |         category: 'Admin',
 8768 | 135 |         label: 'Success'
 8769 | 136 |       });
 8770 | 137 |     },
 8771 | 138 |     onError: (error: any) => {
 8772 | 139 |       event({
 8773 | 140 |         action: 'user_create_error',
 8774 | 141 |         category: 'Admin',
 8775 | 142 |         label: error.message || 'Unknown error'
 8776 | 143 |       });
 8777 | 144 |     }
 8778 | 145 |   });
 8779 | 146 | 
 8780 | 147 |   const handleSubmit = async (data: CreateUserData) => {
 8781 | 148 |     mutate(data);
 8782 | 149 |   };
 8783 | 150 | 
 8784 | 151 |   return (
 8785 | 152 |     <div className="px-4 py-6 sm:px-6 lg:px-8">
 8786 | 153 |       <div className="sm:flex sm:items-center">
 8787 | 154 |         <div className="sm:flex-auto">
 8788 | 155 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Нов потребител</h1>
 8789 | 156 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 8790 | 157 |             Добавете нов потребител в системата
 8791 | 158 |           </p>
 8792 | 159 |         </div>
 8793 | 160 |       </div>
 8794 | 161 | 
 8795 | 162 |       <div className="mt-8">
 8796 | 163 |         <div className="md:grid md:grid-cols-3 md:gap-6">
 8797 | 164 |           <div className="md:col-span-1">
 8798 | 165 |             <div className="px-4 sm:px-0">
 8799 | 166 |               <h3 className="text-lg font-medium leading-6 text-gray-900 dark:text-gray-100">Информация за потребителя</h3>
 8800 | 167 |               <p className="mt-1 text-sm text-gray-600 dark:text-gray-400">
 8801 | 168 |                 Попълнете информацията за потребителя. Всички полета са задължителни.
 8802 | 169 |               </p>
 8803 | 170 |             </div>
 8804 | 171 |           </div>
 8805 | 172 |           <div className="mt-5 md:col-span-2 md:mt-0">
 8806 | 173 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow sm:rounded-md">
 8807 | 174 |               <div className="px-4 py-5 sm:p-6">
 8808 | 175 |                 {error && (
 8809 | 176 |                   <div className="mb-4 p-4 rounded-md bg-red-50 dark:bg-red-900/50">
 8810 | 177 |                     <div className="flex">
 8811 | 178 |                       <div className="flex-shrink-0">
 8812 | 179 |                         <XCircleIcon className="h-5 w-5 text-red-400" aria-hidden="true" />
 8813 | 180 |                       </div>
 8814 | 181 |                       <div className="ml-3">
 8815 | 182 |                         <h3 className="text-sm font-medium text-red-800 dark:text-red-200">
 8816 | 183 |                           Възникна грешка при създаването на потребителя
 8817 | 184 |                         </h3>
 8818 | 185 |                         <div className="mt-2 text-sm text-red-700 dark:text-red-300">
 8819 | 186 |                           {error instanceof Error ? error.message : 'Unknown error'}
 8820 | 187 |                         </div>
 8821 | 188 |                       </div>
 8822 | 189 |                     </div>
 8823 | 190 |                   </div>
 8824 | 191 |                 )}
 8825 | 192 | 
 8826 | 193 |                 <UserForm
 8827 | 194 |                   onSubmit={handleSubmit}
 8828 | 195 |                   isSubmitting={isPending}
 8829 | 196 |                   submitLabel="Създай"
 8830 | 197 |                   onCancel={() => navigate('/admin/users')}
 8831 | 198 |                 />
 8832 | 199 |               </div>
 8833 | 200 |             </div>
 8834 | 201 |           </div>
 8835 | 202 |         </div>
 8836 | 203 |       </div>
 8837 | 204 |     </div>
 8838 | 205 |   );
 8839 | 206 | } 
 8840 | 207 | 
 8841 | 
 8842 | 
 8843 | --------------------------------------------------------------------------------
 8844 | /apps/web/src/pages/admin/Properties.tsx:
 8845 | --------------------------------------------------------------------------------
 8846 |   1 | import { useState, useEffect, useMemo } from 'react';
 8847 |   2 | import { Link } from 'react-router-dom';
 8848 |   3 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
 8849 |   4 | import { PencilIcon, TrashIcon, PlusIcon, ArrowLeftIcon, MagnifyingGlassIcon, ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';
 8850 |   5 | import { getProperties, deleteProperty, type Property, type PropertyFilters } from '../../services/propertyService';
 8851 |   6 | import { event } from '../../lib/analytics';
 8852 |   7 | import LoadingSpinner from '../../components/LoadingSpinner';
 8853 |   8 | import { propertyTypeLabels, locationTypeLabels, categoryLabels, currencyLabels } from '../../constants/property';
 8854 |   9 | import { useDebounce } from '../../hooks/useDebounce';
 8855 |  10 | 
 8856 |  11 | function formatPrice(price: number) {
 8857 |  12 |   return new Intl.NumberFormat('bg-BG', {
 8858 |  13 |     maximumFractionDigits: 0,
 8859 |  14 |   }).format(price);
 8860 |  15 | }
 8861 |  16 | 
 8862 |  17 | export default function Properties() {
 8863 |  18 |   const [currentPage, setCurrentPage] = useState(1);
 8864 |  19 |   const [searchQuery, setSearchQuery] = useState('');
 8865 |  20 |   const debouncedSearch = useDebounce(searchQuery, 300);
 8866 |  21 |   const queryClient = useQueryClient();
 8867 |  22 | 
 8868 |  23 |   const filters = useMemo(() => ({
 8869 |  24 |     search: debouncedSearch,
 8870 |  25 |   }), [debouncedSearch]);
 8871 |  26 | 
 8872 |  27 |   const { data, isLoading, error, refetch } = useQuery({
 8873 |  28 |     queryKey: ['properties', currentPage, debouncedSearch],
 8874 |  29 |     queryFn: () => getProperties(filters, currentPage),
 8875 |  30 |   });
 8876 |  31 | 
 8877 |  32 |   const properties = data?.properties || [];
 8878 |  33 |   const totalPages = data?.pages || 1;
 8879 |  34 | 
 8880 |  35 |   const deleteMutation = useMutation({
 8881 |  36 |     mutationFn: deleteProperty,
 8882 |  37 |     onSuccess: () => {
 8883 |  38 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
 8884 |  39 |     },
 8885 |  40 |   });
 8886 |  41 | 
 8887 |  42 |   const handleDelete = async (id: string) => {
 8888 |  43 |     if (window.confirm('Сигурни ли сте, че искате да изтриете този имот?')) {
 8889 |  44 |       try {
 8890 |  45 |         await deleteMutation.mutateAsync(id);
 8891 |  46 |       } catch (error) {
 8892 |  47 |         console.error('Failed to delete property:', error);
 8893 |  48 |         alert('Възникна грешка при изтриването на имота');
 8894 |  49 |       }
 8895 |  50 |     }
 8896 |  51 |   };
 8897 |  52 | 
 8898 |  53 |   return (
 8899 |  54 |     <div className="py-6">
 8900 |  55 |       <div className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
 8901 |  56 |         <div className="flex justify-between items-center mb-6">
 8902 |  57 |           <h1 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имоти</h1>
 8903 |  58 |           <Link
 8904 |  59 |             to="/admin/properties/new"
 8905 |  60 |             className="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
 8906 |  61 |           >
 8907 |  62 |             <PlusIcon className="w-5 h-5 mr-2" />
 8908 |  63 |             Добави имот
 8909 |  64 |           </Link>
 8910 |  65 |         </div>
 8911 |  66 | 
 8912 |  67 |         <div className="mb-6">
 8913 |  68 |           <div className="relative">
 8914 |  69 |             <input
 8915 |  70 |               type="text"
 8916 |  71 |               value={searchQuery}
 8917 |  72 |               onChange={(e) => setSearchQuery(e.target.value)}
 8918 |  73 |               placeholder="Търси по заглавие..."
 8919 |  74 |               className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 8920 |  75 |             />
 8921 |  76 |             <div className="absolute inset-y-0 right-0 flex items-center pr-3">
 8922 |  77 |               <MagnifyingGlassIcon className="w-5 h-5 text-gray-400" />
 8923 |  78 |             </div>
 8924 |  79 |           </div>
 8925 |  80 |         </div>
 8926 |  81 | 
 8927 |  82 |         {isLoading ? (
 8928 |  83 |           <div className="flex justify-center items-center min-h-[400px]">
 8929 |  84 |             <LoadingSpinner />
 8930 |  85 |           </div>
 8931 |  86 |         ) : error ? (
 8932 |  87 |           <div className="flex flex-col items-center justify-center min-h-[400px] p-4">
 8933 |  88 |             <p className="mb-4 text-center text-red-600">
 8934 |  89 |               {error instanceof Error ? error.message : 'Възникна грешка при зареждането на имотите'}
 8935 |  90 |             </p>
 8936 |  91 |             <button
 8937 |  92 |               onClick={() => refetch()}
 8938 |  93 |               className="px-4 py-2 text-white bg-red-600 rounded transition-colors hover:bg-red-700"
 8939 |  94 |             >
 8940 |  95 |               Опитайте отново
 8941 |  96 |             </button>
 8942 |  97 |           </div>
 8943 |  98 |         ) : properties.length === 0 ? (
 8944 |  99 |           <div className="p-8 text-center">
 8945 | 100 |             <h3 className="mb-4 text-lg font-medium text-gray-900">Няма намерени имоти</h3>
 8946 | 101 |             <Link
 8947 | 102 |               to="/admin/properties/new"
 8948 | 103 |               className="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md border border-transparent shadow-sm hover:bg-red-700"
 8949 | 104 |             >
 8950 | 105 |               <PlusIcon className="mr-2 -ml-1 w-5 h-5" aria-hidden="true" />
 8951 | 106 |               Добави нов имот
 8952 | 107 |             </Link>
 8953 | 108 |           </div>
 8954 | 109 |         ) : (
 8955 | 110 |           <div className="overflow-hidden bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-sm sm:rounded-lg">
 8956 | 111 |             <div className="overflow-x-auto">
 8957 | 112 |               <table className="min-w-full divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))]">
 8958 | 113 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 8959 | 114 |                   <tr>
 8960 | 115 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8961 | 116 |                       Снимка
 8962 | 117 |                     </th>
 8963 | 118 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8964 | 119 |                       Заглавие
 8965 | 120 |                     </th>
 8966 | 121 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8967 | 122 |                       Тип
 8968 | 123 |                     </th>
 8969 | 124 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8970 | 125 |                       Локация
 8971 | 126 |                     </th>
 8972 | 127 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 8973 | 128 |                       Цена
 8974 | 129 |                     </th>
 8975 | 130 |                     <th className="relative py-3.5 pl-3 pr-4 sm:pr-6">
 8976 | 131 |                       <span className="sr-only">Действия</span>
 8977 | 132 |                     </th>
 8978 | 133 |                   </tr>
 8979 | 134 |                 </thead>
 8980 | 135 |                 <tbody className="divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 8981 | 136 |                   {properties.map((property) => (
 8982 | 137 |                     <tr key={property.id}>
 8983 | 138 |                       <td className="whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6">
 8984 | 139 |                         <div className="h-10 w-10 flex-shrink-0">
 8985 | 140 |                           <img
 8986 | 141 |                             src={property.images?.[0]?.url || '/images/property-placeholder.webp'}
 8987 | 142 |                             alt=""
 8988 | 143 |                             className="h-10 w-10 rounded-full object-cover"
 8989 | 144 |                             onError={(e) => {
 8990 | 145 |                               const target = e.target as HTMLImageElement;
 8991 | 146 |                               target.onerror = null;
 8992 | 147 |                               target.src = '/images/property-placeholder.webp';
 8993 | 148 |                             }}
 8994 | 149 |                           />
 8995 | 150 |                         </div>
 8996 | 151 |                       </td>
 8997 | 152 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 8998 | 153 |                         <Link
 8999 | 154 |                           to={`/admin/properties/${property.id}/edit`}
 9000 | 155 |                           className="hover:text-primary-600 dark:hover:text-primary-500"
 9001 | 156 |                         >
 9002 | 157 |                           {property.title}
 9003 | 158 |                         </Link>
 9004 | 159 |                       </td>
 9005 | 160 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 9006 | 161 |                         {propertyTypeLabels[property.type]}
 9007 | 162 |                       </td>
 9008 | 163 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 9009 | 164 |                         {property.region?.name || property.neighborhood?.name}
 9010 | 165 |                       </td>
 9011 | 166 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 9012 | 167 |                         {formatPrice(property.price)} {currencyLabels[property.currency]}
 9013 | 168 |                       </td>
 9014 | 169 |                       <td className="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
 9015 | 170 |                         <div className="flex items-center justify-end gap-2">
 9016 | 171 |                           <Link
 9017 | 172 |                             to={`/admin/properties/${property.id}/edit`}
 9018 | 173 |                             className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
 9019 | 174 |                           >
 9020 | 175 |                             <PencilIcon className="h-5 w-5" aria-hidden="true" />
 9021 | 176 |                           </Link>
 9022 | 177 |                           <button
 9023 | 178 |                             onClick={() => handleDelete(property.id)}
 9024 | 179 |                             className="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300"
 9025 | 180 |                           >
 9026 | 181 |                             <TrashIcon className="h-5 w-5" aria-hidden="true" />
 9027 | 182 |                           </button>
 9028 | 183 |                         </div>
 9029 | 184 |                       </td>
 9030 | 185 |                     </tr>
 9031 | 186 |                   ))}
 9032 | 187 |                 </tbody>
 9033 | 188 |               </table>
 9034 | 189 |             </div>
 9035 | 190 |           </div>
 9036 | 191 |         )}
 9037 | 192 | 
 9038 | 193 |         {totalPages > 1 && (
 9039 | 194 |           <div className="mt-4 flex items-center justify-between border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))] pt-4">
 9040 | 195 |             <div className="flex flex-1 justify-between sm:hidden">
 9041 | 196 |               <button
 9042 | 197 |                 onClick={() => setCurrentPage(currentPage - 1)}
 9043 | 198 |                 disabled={currentPage === 1}
 9044 | 199 |                 className="relative inline-flex items-center rounded-md border border-gray-300 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))]"
 9045 | 200 |               >
 9046 | 201 |                 Предишна
 9047 | 202 |               </button>
 9048 | 203 |               <button
 9049 | 204 |                 onClick={() => setCurrentPage(currentPage + 1)}
 9050 | 205 |                 disabled={currentPage === totalPages}
 9051 | 206 |                 className="relative ml-3 inline-flex items-center rounded-md border border-gray-300 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))]"
 9052 | 207 |               >
 9053 | 208 |                 Следваща
 9054 | 209 |               </button>
 9055 | 210 |             </div>
 9056 | 211 |             <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
 9057 | 212 |               <div>
 9058 | 213 |                 <p className="text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 9059 | 214 |                   Показване на страница <span className="font-medium">{currentPage}</span> от{' '}
 9060 | 215 |                   <span className="font-medium">{totalPages}</span>
 9061 | 216 |                 </p>
 9062 | 217 |               </div>
 9063 | 218 |               <div>
 9064 | 219 |                 <nav className="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
 9065 | 220 |                   <button
 9066 | 221 |                     onClick={() => setCurrentPage(currentPage - 1)}
 9067 | 222 |                     disabled={currentPage === 1}
 9068 | 223 |                     className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))] ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))] focus:z-20 focus:outline-offset-0"
 9069 | 224 |                   >
 9070 | 225 |                     <span className="sr-only">Предишна</span>
 9071 | 226 |                     <ChevronLeftIcon className="h-5 w-5" aria-hidden="true" />
 9072 | 227 |                   </button>
 9073 | 228 |                   <button
 9074 | 229 |                     onClick={() => setCurrentPage(currentPage + 1)}
 9075 | 230 |                     disabled={currentPage === totalPages}
 9076 | 231 |                     className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))] ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))] focus:z-20 focus:outline-offset-0"
 9077 | 232 |                   >
 9078 | 233 |                     <span className="sr-only">Следваща</span>
 9079 | 234 |                     <ChevronRightIcon className="h-5 w-5" aria-hidden="true" />
 9080 | 235 |                   </button>
 9081 | 236 |                 </nav>
 9082 | 237 |               </div>
 9083 | 238 |             </div>
 9084 | 239 |           </div>
 9085 | 240 |         )}
 9086 | 241 |       </div>
 9087 | 242 |     </div>
 9088 | 243 |   );
 9089 | 244 | } 
 9090 | 245 | 
 9091 | 
 9092 | 
 9093 | --------------------------------------------------------------------------------
 9094 | /apps/web/src/pages/admin/Users.tsx:
 9095 | --------------------------------------------------------------------------------
 9096 |   1 | import { useState } from 'react';
 9097 |   2 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
 9098 |   3 | import { PlusIcon } from '@heroicons/react/24/outline';
 9099 |   4 | import { Link } from 'react-router-dom';
 9100 |   5 | import { getUsers, deleteUser } from '../../services/users';
 9101 |   6 | import { event } from '../../lib/analytics';
 9102 |   7 | import type { User } from '@prisma/client';
 9103 |   8 | import { PencilIcon, TrashIcon } from '@heroicons/react/24/outline';
 9104 |   9 | 
 9105 |  10 | export default function Users() {
 9106 |  11 |   const [page, setPage] = useState(1);
 9107 |  12 |   const limit = 10;
 9108 |  13 | 
 9109 |  14 |   const queryClient = useQueryClient();
 9110 |  15 | 
 9111 |  16 |   const { data, isLoading, isError, error } = useQuery({
 9112 |  17 |     queryKey: ['users', page],
 9113 |  18 |     queryFn: () => getUsers(page, limit),
 9114 |  19 |     // Add staleTime to prevent unnecessary refetches
 9115 |  20 |     staleTime: 1000 * 60 * 5, // 5 minutes
 9116 |  21 |   });
 9117 |  22 | 
 9118 |  23 |   const deleteMutation = useMutation({
 9119 |  24 |     mutationFn: deleteUser,
 9120 |  25 |     onSuccess: () => {
 9121 |  26 |       event({
 9122 |  27 |         action: 'delete_user',
 9123 |  28 |         category: 'users',
 9124 |  29 |         label: 'User deleted successfully'
 9125 |  30 |       });
 9126 |  31 |       queryClient.invalidateQueries({ queryKey: ['users'] });
 9127 |  32 |     },
 9128 |  33 |     onError: (error) => {
 9129 |  34 |       event({
 9130 |  35 |         action: 'delete_user_error',
 9131 |  36 |         category: 'users',
 9132 |  37 |         label: error instanceof Error ? error.message : 'Unknown error'
 9133 |  38 |       });
 9134 |  39 |     },
 9135 |  40 |   });
 9136 |  41 | 
 9137 |  42 |   const handleDelete = async (id: string) => {
 9138 |  43 |     if (window.confirm('Сигурни ли сте, че искате да изтриете този потребител?')) {
 9139 |  44 |       deleteMutation.mutate(id);
 9140 |  45 |     }
 9141 |  46 |   };
 9142 |  47 | 
 9143 |  48 |   const handleNewUserClick = () => {
 9144 |  49 |     event({
 9145 |  50 |       action: 'user_create_click',
 9146 |  51 |       category: 'Admin',
 9147 |  52 |       label: 'New User Button Click'
 9148 |  53 |     });
 9149 |  54 |   };
 9150 |  55 | 
 9151 |  56 |   // Show loading state
 9152 |  57 |   if (isLoading || !data) {
 9153 |  58 |     return (
 9154 |  59 |       <div className="px-4 sm:px-6 lg:px-8">
 9155 |  60 |         <div className="sm:flex sm:items-center">
 9156 |  61 |           <div className="sm:flex-auto">
 9157 |  62 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 9158 |  63 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 9159 |  64 |               Списък с всички потребители в системата
 9160 |  65 |             </p>
 9161 |  66 |           </div>
 9162 |  67 |         </div>
 9163 |  68 |         <div className="p-4 text-center text-gray-600 dark:text-gray-400">
 9164 |  69 |           Зареждане на потребители...
 9165 |  70 |         </div>
 9166 |  71 |       </div>
 9167 |  72 |     );
 9168 |  73 |   }
 9169 |  74 | 
 9170 |  75 |   // Show error state
 9171 |  76 |   if (isError) {
 9172 |  77 |     return (
 9173 |  78 |       <div className="px-4 sm:px-6 lg:px-8">
 9174 |  79 |         <div className="sm:flex sm:items-center">
 9175 |  80 |           <div className="sm:flex-auto">
 9176 |  81 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 9177 |  82 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 9178 |  83 |               Списък с всички потребители в системата
 9179 |  84 |             </p>
 9180 |  85 |           </div>
 9181 |  86 |         </div>
 9182 |  87 |         <div className="p-4 text-center text-red-600 dark:text-red-400">
 9183 |  88 |           Възникна грешка при зареждането на потребителите: {error instanceof Error ? error.message : 'Unknown error'}
 9184 |  89 |         </div>
 9185 |  90 |       </div>
 9186 |  91 |     );
 9187 |  92 |   }
 9188 |  93 | 
 9189 |  94 |   // Show empty state
 9190 |  95 |   if (!data?.data?.users?.length) {
 9191 |  96 |     return (
 9192 |  97 |       <div className="px-4 sm:px-6 lg:px-8">
 9193 |  98 |         <div className="sm:flex sm:items-center">
 9194 |  99 |           <div className="sm:flex-auto">
 9195 | 100 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 9196 | 101 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 9197 | 102 |               Списък с всички потребители в системата
 9198 | 103 |             </p>
 9199 | 104 |           </div>
 9200 | 105 |           <div className="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
 9201 | 106 |             <Link
 9202 | 107 |               to="new"
 9203 | 108 |               onClick={handleNewUserClick}
 9204 | 109 |               className="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:w-auto"
 9205 | 110 |             >
 9206 | 111 |               <PlusIcon className="w-5 h-5 mr-2 -ml-1" aria-hidden="true" />
 9207 | 112 |               Нов потребител
 9208 | 113 |             </Link>
 9209 | 114 |           </div>
 9210 | 115 |         </div>
 9211 | 116 |         <div className="p-4 text-center text-gray-600 dark:text-gray-400">
 9212 | 117 |           Няма намерени потребители
 9213 | 118 |         </div>
 9214 | 119 |       </div>
 9215 | 120 |     );
 9216 | 121 |   }
 9217 | 122 | 
 9218 | 123 |   // Show users table
 9219 | 124 |   return (
 9220 | 125 |     <div className="px-4 sm:px-6 lg:px-8">
 9221 | 126 |       <div className="sm:flex sm:items-center">
 9222 | 127 |         <div className="sm:flex-auto">
 9223 | 128 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 9224 | 129 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 9225 | 130 |             Списък с всички потребители в системата
 9226 | 131 |           </p>
 9227 | 132 |         </div>
 9228 | 133 |         <div className="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
 9229 | 134 |           <Link
 9230 | 135 |             to="new"
 9231 | 136 |             onClick={handleNewUserClick}
 9232 | 137 |             className="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:w-auto"
 9233 | 138 |           >
 9234 | 139 |             <PlusIcon className="w-5 h-5 mr-2 -ml-1" aria-hidden="true" />
 9235 | 140 |             Нов потребител
 9236 | 141 |           </Link>
 9237 | 142 |         </div>
 9238 | 143 |       </div>
 9239 | 144 | 
 9240 | 145 |       <div className="flex flex-col mt-8">
 9241 | 146 |         <div className="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
 9242 | 147 |           <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
 9243 | 148 |             <div className="overflow-hidden shadow ring-1 ring-black/5 dark:ring-[rgb(var(--color-dark-border))] md:rounded-lg">
 9244 | 149 |               <table className="min-w-full divide-y divide-gray-300 dark:divide-[rgb(var(--color-dark-border))]">
 9245 | 150 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 9246 | 151 |                   <tr>
 9247 | 152 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 9248 | 153 |                       Име
 9249 | 154 |                     </th>
 9250 | 155 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 9251 | 156 |                       Имейл
 9252 | 157 |                     </th>
 9253 | 158 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 9254 | 159 |                       Роля
 9255 | 160 |                     </th>
 9256 | 161 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 9257 | 162 |                       Дата на регистрация
 9258 | 163 |                     </th>
 9259 | 164 |                     <th scope="col" className="relative py-3.5 pl-3 pr-4 sm:pr-6">
 9260 | 165 |                       <span className="sr-only">Действия</span>
 9261 | 166 |                     </th>
 9262 | 167 |                   </tr>
 9263 | 168 |                 </thead>
 9264 | 169 |                 <tbody className="bg-white divide-y divide-gray-200 dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:divide-[rgb(var(--color-dark-border))]">
 9265 | 170 |                   {data?.data?.users.map((user: User) => (
 9266 | 171 |                     <tr key={user.id}>
 9267 | 172 |                       <td className="px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))] whitespace-nowrap">
 9268 | 173 |                         {user.name}
 9269 | 174 |                       </td>
 9270 | 175 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
 9271 | 176 |                         {user.email}
 9272 | 177 |                       </td>
 9273 | 178 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
 9274 | 179 |                         {user.role === 'ADMIN' ? 'Администратор' : 'Потребител'}
 9275 | 180 |                       </td>
 9276 | 181 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
 9277 | 182 |                         {new Date(user.createdAt).toLocaleDateString('bg-BG')}
 9278 | 183 |                       </td>
 9279 | 184 |                       <td className="relative py-4 pl-3 pr-4 text-sm font-medium text-right whitespace-nowrap sm:pr-6">
 9280 | 185 |                         <div className="flex items-center justify-end gap-2">
 9281 | 186 |                           <Link
 9282 | 187 |                             to={`/admin/users/${user.id}/edit`}
 9283 | 188 |                             className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
 9284 | 189 |                           >
 9285 | 190 |                             <PencilIcon className="w-5 h-5" aria-hidden="true" />
 9286 | 191 |                           </Link>
 9287 | 192 |                           <button
 9288 | 193 |                             onClick={() => handleDelete(user.id)}
 9289 | 194 |                             className="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300"
 9290 | 195 |                           >
 9291 | 196 |                             <TrashIcon className="w-5 h-5" aria-hidden="true" />
 9292 | 197 |                           </button>
 9293 | 198 |                         </div>
 9294 | 199 |                       </td>
 9295 | 200 |                     </tr>
 9296 | 201 |                   ))}
 9297 | 202 |                 </tbody>
 9298 | 203 |               </table>
 9299 | 204 |             </div>
 9300 | 205 |           </div>
 9301 | 206 |         </div>
 9302 | 207 |       </div>
 9303 | 208 |     </div>
 9304 | 209 |   );
 9305 | 210 | } 
 9306 | 211 | 
 9307 | 
 9308 | 
 9309 | --------------------------------------------------------------------------------
 9310 | /apps/web/src/pages/admin/__tests__/Login.test.tsx:
 9311 | --------------------------------------------------------------------------------
 9312 |   1 | import { render, screen, fireEvent, waitFor, act } from '@testing-library/react';
 9313 |   2 | import { vi, describe, it, expect, beforeEach, afterEach } from 'vitest';
 9314 |   3 | import { BrowserRouter } from 'react-router-dom';
 9315 |   4 | import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
 9316 |   5 | import Login from '../Login';
 9317 |   6 | import { AuthProvider } from '../../../contexts/auth';
 9318 |   7 | import type { User } from '../../../types/api';
 9319 |   8 | 
 9320 |   9 | // Mock the auth service
 9321 |  10 | vi.mock('../../../services/auth', () => ({
 9322 |  11 |   login: vi.fn(),
 9323 |  12 |   getCurrentUser: vi.fn(),
 9324 |  13 | }));
 9325 |  14 | 
 9326 |  15 | // Mock the useNavigate hook
 9327 |  16 | const mockNavigate = vi.fn();
 9328 |  17 | vi.mock('react-router-dom', async () => {
 9329 |  18 |   const actual = await vi.importActual('react-router-dom');
 9330 |  19 |   return {
 9331 |  20 |     ...actual,
 9332 |  21 |     useNavigate: () => mockNavigate,
 9333 |  22 |   };
 9334 |  23 | });
 9335 |  24 | 
 9336 |  25 | const mockUserData: User = {
 9337 |  26 |   id: 'test-id',
 9338 |  27 |   email: 'admin@avalon.bg',
 9339 |  28 |   name: 'Admin',
 9340 |  29 |   role: 'ADMIN',
 9341 |  30 |   createdAt: '2025-01-13T20:16:21.392Z',
 9342 |  31 | };
 9343 |  32 | 
 9344 |  33 | const mockToken = 'mock-jwt-token';
 9345 |  34 | 
 9346 |  35 | // Mock localStorage
 9347 |  36 | const mockStorage: { [key: string]: string } = {};
 9348 |  37 | const mockLocalStorage = {
 9349 |  38 |   getItem: vi.fn((key: string) => {
 9350 |  39 |     console.log('Getting from localStorage:', key, mockStorage[key]);
 9351 |  40 |     return mockStorage[key] || null;
 9352 |  41 |   }),
 9353 |  42 |   setItem: vi.fn((key: string, value: string) => {
 9354 |  43 |     console.log('Setting in localStorage:', key, value);
 9355 |  44 |     mockStorage[key] = value;
 9356 |  45 |   }),
 9357 |  46 |   removeItem: vi.fn((key: string) => {
 9358 |  47 |     console.log('Removing from localStorage:', key);
 9359 |  48 |     delete mockStorage[key];
 9360 |  49 |   }),
 9361 |  50 |   clear: vi.fn(() => {
 9362 |  51 |     console.log('Clearing localStorage');
 9363 |  52 |     Object.keys(mockStorage).forEach(key => delete mockStorage[key]);
 9364 |  53 |   }),
 9365 |  54 |   length: 0,
 9366 |  55 |   key: vi.fn(),
 9367 |  56 | };
 9368 |  57 | Object.defineProperty(window, 'localStorage', {
 9369 |  58 |   value: mockLocalStorage,
 9370 |  59 | });
 9371 |  60 | 
 9372 |  61 | describe('Login Component', () => {
 9373 |  62 |   let queryClient: QueryClient;
 9374 |  63 | 
 9375 |  64 |   beforeEach(() => {
 9376 |  65 |     queryClient = new QueryClient({
 9377 |  66 |       defaultOptions: {
 9378 |  67 |         queries: {
 9379 |  68 |           retry: false,
 9380 |  69 |         },
 9381 |  70 |       },
 9382 |  71 |     });
 9383 |  72 |     // Clear localStorage and reset user state before each test
 9384 |  73 |     mockLocalStorage.clear();
 9385 |  74 |     // Reset all mocks
 9386 |  75 |     vi.clearAllMocks();
 9387 |  76 |     console.log('Test setup complete - localStorage cleared');
 9388 |  77 |   });
 9389 |  78 | 
 9390 |  79 |   afterEach(() => {
 9391 |  80 |     mockLocalStorage.clear();
 9392 |  81 |     vi.clearAllMocks();
 9393 |  82 |     console.log('Test cleanup complete');
 9394 |  83 |   });
 9395 |  84 | 
 9396 |  85 |   const renderLogin = async () => {
 9397 |  86 |     console.log('Rendering Login component');
 9398 |  87 |     let component: ReturnType<typeof render>;
 9399 |  88 |     await act(async () => {
 9400 |  89 |       component = render(
 9401 |  90 |         <BrowserRouter>
 9402 |  91 |           <QueryClientProvider client={queryClient}>
 9403 |  92 |             <AuthProvider>
 9404 |  93 |               <Login />
 9405 |  94 |             </AuthProvider>
 9406 |  95 |           </QueryClientProvider>
 9407 |  96 |         </BrowserRouter>
 9408 |  97 |       );
 9409 |  98 |     });
 9410 |  99 |     return component!;
 9411 | 100 |   };
 9412 | 101 | 
 9413 | 102 |   it('should successfully log in and persist user data', async () => {
 9414 | 103 |     const { login } = await import('../../../services/auth');
 9415 | 104 |     console.log('Setting up login test');
 9416 | 105 |     
 9417 | 106 |     // Mock successful login response
 9418 | 107 |     (login as any).mockResolvedValueOnce({
 9419 | 108 |       user: mockUserData,
 9420 | 109 |       token: mockToken,
 9421 | 110 |     });
 9422 | 111 | 
 9423 | 112 |     await renderLogin();
 9424 | 113 | 
 9425 | 114 |     // Fill in the login form
 9426 | 115 |     const emailInput = screen.getByLabelText(/имейл/i);
 9427 | 116 |     const passwordInput = screen.getByLabelText(/парола/i);
 9428 | 117 |     const submitButton = screen.getByRole('button', { name: /вход/i });
 9429 | 118 | 
 9430 | 119 |     fireEvent.change(emailInput, { target: { value: 'admin@avalon.bg' } });
 9431 | 120 |     fireEvent.change(passwordInput, { target: { value: 'password123' } });
 9432 | 121 |     console.log('Submitting login form');
 9433 | 122 |     
 9434 | 123 |     await act(async () => {
 9435 | 124 |       fireEvent.submit(submitButton);
 9436 | 125 |     });
 9437 | 126 | 
 9438 | 127 |     // Wait for the login to complete and check all effects
 9439 | 128 |     await waitFor(() => {
 9440 | 129 |       expect(login).toHaveBeenCalledWith({
 9441 | 130 |         email: 'admin@avalon.bg',
 9442 | 131 |         password: 'password123',
 9443 | 132 |       });
 9444 | 133 |       expect(mockLocalStorage.setItem).toHaveBeenCalledWith('token', mockToken);
 9445 | 134 |       expect(mockNavigate).toHaveBeenCalledWith('/admin');
 9446 | 135 |     });
 9447 | 136 |     console.log('Login test complete');
 9448 | 137 |   });
 9449 | 138 | 
 9450 | 139 |   it('should persist login state after page refresh', async () => {
 9451 | 140 |     const { getCurrentUser } = await import('../../../services/auth');
 9452 | 141 |     console.log('Setting up persistence test');
 9453 | 142 |     
 9454 | 143 |     // Set up initial auth state with token
 9455 | 144 |     mockStorage['token'] = mockToken;
 9456 | 145 |     
 9457 | 146 |     // Set window.location.pathname to /admin/login
 9458 | 147 |     window.location.pathname = '/admin/login';
 9459 | 148 |     
 9460 | 149 |     // Mock getCurrentUser to return user data in the format expected by the auth context
 9461 | 150 |     (getCurrentUser as any).mockImplementation(async () => {
 9462 | 151 |       console.log('getCurrentUser called with token:', mockStorage['token']);
 9463 | 152 |       if (!mockStorage['token']) {
 9464 | 153 |         throw new Error('No token found');
 9465 | 154 |       }
 9466 | 155 |       // Return the user data directly as the auth context expects
 9467 | 156 |       return mockUserData;
 9468 | 157 |     });
 9469 | 158 |     
 9470 | 159 |     console.log('Initial state set:', { token: mockToken, user: mockUserData });
 9471 | 160 | 
 9472 | 161 |     // Render component which should trigger getCurrentUser
 9473 | 162 |     const { container } = await renderLogin();
 9474 | 163 | 
 9475 | 164 |     // Wait for getCurrentUser to be called and return data
 9476 | 165 |     await waitFor(() => {
 9477 | 166 |       expect(getCurrentUser).toHaveBeenCalled();
 9478 | 167 |     });
 9479 | 168 | 
 9480 | 169 |     // Wait for user state to be updated and navigation to occur
 9481 | 170 |     await waitFor(() => {
 9482 | 171 |       const authProvider = container.querySelector('[data-testid="auth-provider"]');
 9483 | 172 |       expect(authProvider).toHaveAttribute('data-user', JSON.stringify({ user: mockUserData }));
 9484 | 173 |       expect(mockNavigate).toHaveBeenCalledWith('/admin');
 9485 | 174 |     }, { timeout: 3000 });
 9486 | 175 | 
 9487 | 176 |     // Verify token remains in localStorage
 9488 | 177 |     expect(mockStorage['token']).toBe(mockToken);
 9489 | 178 |     
 9490 | 179 |     console.log('Persistence test complete');
 9491 | 180 |   });
 9492 | 181 | 
 9493 | 182 |   it('should handle login failure', async () => {
 9494 | 183 |     const { login } = await import('../../../services/auth');
 9495 | 184 |     console.log('Setting up failure test');
 9496 | 185 |     
 9497 | 186 |     // Mock login failure
 9498 | 187 |     (login as any).mockRejectedValueOnce(new Error('Invalid credentials'));
 9499 | 188 | 
 9500 | 189 |     await renderLogin();
 9501 | 190 | 
 9502 | 191 |     // Fill in the login form
 9503 | 192 |     const emailInput = screen.getByLabelText(/имейл/i);
 9504 | 193 |     const passwordInput = screen.getByLabelText(/парола/i);
 9505 | 194 |     const submitButton = screen.getByRole('button', { name: /вход/i });
 9506 | 195 | 
 9507 | 196 |     fireEvent.change(emailInput, { target: { value: 'wrong@email.com' } });
 9508 | 197 |     fireEvent.change(passwordInput, { target: { value: 'wrongpass' } });
 9509 | 198 |     console.log('Submitting invalid credentials');
 9510 | 199 |     
 9511 | 200 |     await act(async () => {
 9512 | 201 |       fireEvent.submit(submitButton);
 9513 | 202 |     });
 9514 | 203 | 
 9515 | 204 |     // Wait for error messages to appear
 9516 | 205 |     await waitFor(() => {
 9517 | 206 |       const errorMessages = screen.getAllByText(/невалиден имейл или парола/i);
 9518 | 207 |       expect(errorMessages).toHaveLength(2);
 9519 | 208 |       expect(mockNavigate).not.toHaveBeenCalled();
 9520 | 209 |       expect(mockLocalStorage.getItem('token')).toBeNull();
 9521 | 210 |     });
 9522 | 211 |     console.log('Failure test complete');
 9523 | 212 |   });
 9524 | 213 | 
 9525 | 214 |   it('should validate form inputs before submission', async () => {
 9526 | 215 |     const { login } = await import('../../../services/auth');
 9527 | 216 |     console.log('Setting up validation test');
 9528 | 217 |     await renderLogin();
 9529 | 218 | 
 9530 | 219 |     const submitButton = screen.getByRole('button', { name: /вход/i });
 9531 | 220 | 
 9532 | 221 |     // Try to submit empty form
 9533 | 222 |     console.log('Submitting empty form');
 9534 | 223 |     await act(async () => {
 9535 | 224 |       fireEvent.submit(submitButton);
 9536 | 225 |     });
 9537 | 226 | 
 9538 | 227 |     // Check for validation messages
 9539 | 228 |     const emailInput = screen.getByLabelText(/имейл/i);
 9540 | 229 |     fireEvent.change(emailInput, { target: { value: 'invalid-email' } });
 9541 | 230 |     console.log('Entered invalid email');
 9542 | 231 |     
 9543 | 232 |     await waitFor(() => {
 9544 | 233 |       expect(screen.getByText('Невалиден имейл адрес')).toBeInTheDocument();
 9545 | 234 |       expect(login).not.toHaveBeenCalled();
 9546 | 235 |     });
 9547 | 236 |     console.log('Validation test complete');
 9548 | 237 |   });
 9549 | 238 | }); 
 9550 | 239 | 
 9551 | 
 9552 | 
 9553 | --------------------------------------------------------------------------------
 9554 | /apps/web/src/services/auth.ts:
 9555 | --------------------------------------------------------------------------------
 9556 |  1 | import api from '../lib/api';
 9557 |  2 | import type { ApiResponse, AuthResponse, User } from '../types/api';
 9558 |  3 | 
 9559 |  4 | export interface LoginData {
 9560 |  5 |   email: string;
 9561 |  6 |   password: string;
 9562 |  7 | }
 9563 |  8 | 
 9564 |  9 | export interface RegisterData {
 9565 | 10 |   name: string;
 9566 | 11 |   email: string;
 9567 | 12 |   password: string;
 9568 | 13 | }
 9569 | 14 | 
 9570 | 15 | export const login = async (data: LoginData): Promise<AuthResponse> => {
 9571 | 16 |   const response = await api.post<{ user: User; token: string }>('/auth/login', data);
 9572 | 17 |   console.log('Raw API Response:', response);
 9573 | 18 |   console.log('Response data:', response.data);
 9574 | 19 |   return response.data;
 9575 | 20 | };
 9576 | 21 | 
 9577 | 22 | export const register = async (data: RegisterData): Promise<AuthResponse> => {
 9578 | 23 |   const response = await api.post<ApiResponse<AuthResponse>>('/auth/register', data);
 9579 | 24 |   return response.data.data;
 9580 | 25 | };
 9581 | 26 | 
 9582 | 27 | export const getCurrentUser = async (): Promise<User> => {
 9583 | 28 |   try {
 9584 | 29 |     const response = await api.get<{ user: User }>('/auth/me');
 9585 | 30 |     console.log('Get current user response:', response);
 9586 | 31 |     return response.data.user;
 9587 | 32 |   } catch (error) {
 9588 | 33 |     console.error('Failed to get current user:', error);
 9589 | 34 |     throw error;
 9590 | 35 |   }
 9591 | 36 | };
 9592 | 37 | 
 9593 | 38 | export const logout = () => {
 9594 | 39 |   localStorage.removeItem('token');
 9595 | 40 |   window.location.href = '/admin/login';
 9596 | 41 | }; 
 9597 | 42 | 
 9598 | 
 9599 | 
 9600 | --------------------------------------------------------------------------------
 9601 | /apps/web/src/services/contact.ts:
 9602 | --------------------------------------------------------------------------------
 9603 |  1 | import api from '../lib/api';
 9604 |  2 | import type { ApiResponse, ContactMessage, PaginatedResponse } from '../types/api';
 9605 |  3 | 
 9606 |  4 | export interface ContactFormData {
 9607 |  5 |   name: string;
 9608 |  6 |   email: string;
 9609 |  7 |   message: string;
 9610 |  8 | }
 9611 |  9 | 
 9612 | 10 | export interface MessageFilters {
 9613 | 11 |   page?: number;
 9614 | 12 |   limit?: number;
 9615 | 13 | }
 9616 | 14 | 
 9617 | 15 | export const submitContactForm = async (data: ContactFormData): Promise<ContactMessage> => {
 9618 | 16 |   const response = await api.post<ApiResponse<{ message: ContactMessage }>>('/contact', data);
 9619 | 17 |   return response.data.data.message;
 9620 | 18 | };
 9621 | 19 | 
 9622 | 20 | export const getMessages = async (filters: MessageFilters = {}): Promise<PaginatedResponse<ContactMessage>> => {
 9623 | 21 |   const params = new URLSearchParams();
 9624 | 22 |   if (filters.page) params.append('page', filters.page.toString());
 9625 | 23 |   if (filters.limit) params.append('limit', filters.limit.toString());
 9626 | 24 | 
 9627 | 25 |   const response = await api.get<ApiResponse<PaginatedResponse<ContactMessage>>>(`/contact/messages?${params}`);
 9628 | 26 |   return response.data.data;
 9629 | 27 | };
 9630 | 28 | 
 9631 | 29 | export const markMessageAsRead = async (id: string): Promise<ContactMessage> => {
 9632 | 30 |   const response = await api.patch<ApiResponse<{ message: ContactMessage }>>(`/contact/messages/${id}/read`);
 9633 | 31 |   return response.data.data.message;
 9634 | 32 | };
 9635 | 33 | 
 9636 | 34 | export const deleteMessage = async (id: string): Promise<void> => {
 9637 | 35 |   await api.delete<ApiResponse<null>>(`/contact/messages/${id}`);
 9638 | 36 | }; 
 9639 | 37 | 
 9640 | 
 9641 | 
 9642 | --------------------------------------------------------------------------------
 9643 | /apps/web/src/services/locationService.ts:
 9644 | --------------------------------------------------------------------------------
 9645 |  1 | import { ApiResponse } from '../types/api';
 9646 |  2 | import api from '../lib/api';
 9647 |  3 | 
 9648 |  4 | export interface Region {
 9649 |  5 |   id: number;
 9650 |  6 |   name: string;
 9651 |  7 | }
 9652 |  8 | 
 9653 |  9 | export interface Neighborhood {
 9654 | 10 |   id: number;
 9655 | 11 |   name: string;
 9656 | 12 | }
 9657 | 13 | 
 9658 | 14 | export interface Feature {
 9659 | 15 |   id: number;
 9660 | 16 |   name: string;
 9661 | 17 |   type: 'INFRASTRUCTURE' | 'BUILDING';
 9662 | 18 | }
 9663 | 19 | 
 9664 | 20 | type RegionsData = {
 9665 | 21 |   regions: Region[];
 9666 | 22 | }
 9667 | 23 | 
 9668 | 24 | type NeighborhoodsData = {
 9669 | 25 |   neighborhoods: Neighborhood[];
 9670 | 26 | }
 9671 | 27 | 
 9672 | 28 | type FeaturesData = {
 9673 | 29 |   features: Feature[];
 9674 | 30 | }
 9675 | 31 | 
 9676 | 32 | export async function getRegions(): Promise<Region[]> {
 9677 | 33 |   try {
 9678 | 34 |     const { data } = await api.get<RegionsData>('/locations/regions');
 9679 | 35 |     return data.regions;
 9680 | 36 |   } catch (error) {
 9681 | 37 |     console.error('Error fetching regions:', error);
 9682 | 38 |     return [];
 9683 | 39 |   }
 9684 | 40 | }
 9685 | 41 | 
 9686 | 42 | export async function getNeighborhoods(): Promise<Neighborhood[]> {
 9687 | 43 |   try {
 9688 | 44 |     const { data } = await api.get<NeighborhoodsData>('/locations/neighborhoods');
 9689 | 45 |     return data.neighborhoods;
 9690 | 46 |   } catch (error) {
 9691 | 47 |     console.error('Error fetching neighborhoods:', error);
 9692 | 48 |     return [];
 9693 | 49 |   }
 9694 | 50 | }
 9695 | 51 | 
 9696 | 52 | export async function getFeatures(): Promise<Feature[]> {
 9697 | 53 |   try {
 9698 | 54 |     const { data } = await api.get<FeaturesData>('/locations/features');
 9699 | 55 |     return data.features;
 9700 | 56 |   } catch (error) {
 9701 | 57 |     console.error('Error fetching features:', error);
 9702 | 58 |     return [];
 9703 | 59 |   }
 9704 | 60 | } 
 9705 | 61 | 
 9706 | 
 9707 | 
 9708 | --------------------------------------------------------------------------------
 9709 | /apps/web/src/services/messages.ts:
 9710 | --------------------------------------------------------------------------------
 9711 |  1 | import api from '../lib/api';
 9712 |  2 | import type { ContactMessage } from '@prisma/client';
 9713 |  3 | 
 9714 |  4 | interface MessagesResponse {
 9715 |  5 |   success: boolean;
 9716 |  6 |   data: {
 9717 |  7 |     items: ContactMessage[];
 9718 |  8 |     total: number;
 9719 |  9 |     page: number;
 9720 | 10 |     pages: number;
 9721 | 11 |     hasNextPage: boolean;
 9722 | 12 |   };
 9723 | 13 | }
 9724 | 14 | 
 9725 | 15 | interface MessageResponse {
 9726 | 16 |   success: boolean;
 9727 | 17 |   data: {
 9728 | 18 |     message: ContactMessage;
 9729 | 19 |   };
 9730 | 20 | }
 9731 | 21 | 
 9732 | 22 | interface DeleteMessageResponse {
 9733 | 23 |   success: boolean;
 9734 | 24 |   data: null;
 9735 | 25 | }
 9736 | 26 | 
 9737 | 27 | export async function getMessages(page = 1, limit = 10) {
 9738 | 28 |   const response = await api.get<MessagesResponse>(`/contact/messages?page=${page}&limit=${limit}`);
 9739 | 29 |   return response.data;
 9740 | 30 | }
 9741 | 31 | 
 9742 | 32 | export async function markMessageAsRead(id: string) {
 9743 | 33 |   const response = await api.patch<MessageResponse>(`/contact/messages/${id}/read`);
 9744 | 34 |   return response.data;
 9745 | 35 | }
 9746 | 36 | 
 9747 | 37 | export async function deleteMessage(id: string) {
 9748 | 38 |   const response = await api.delete<DeleteMessageResponse>(`/contact/messages/${id}`);
 9749 | 39 |   return response.data;
 9750 | 40 | } 
 9751 | 41 | 
 9752 | 
 9753 | 
 9754 | --------------------------------------------------------------------------------
 9755 | /apps/web/src/services/properties.ts:
 9756 | --------------------------------------------------------------------------------
 9757 |  1 | import api from '../lib/api';
 9758 |  2 | import type { Property, CreatePropertyData } from '../types/api';
 9759 |  3 | 
 9760 |  4 | interface PropertiesResponse {
 9761 |  5 |   properties: Property[];
 9762 |  6 |   total: number;
 9763 |  7 |   page: number;
 9764 |  8 |   pages: number;
 9765 |  9 | }
 9766 | 10 | 
 9767 | 11 | interface PropertyResponse {
 9768 | 12 |   property: Property;
 9769 | 13 | }
 9770 | 14 | 
 9771 | 15 | export async function getProperties(page: number, limit: number): Promise<PropertiesResponse> {
 9772 | 16 |   const response = await api.get<PropertiesResponse>(`/admin/properties?page=${page}&limit=${limit}`);
 9773 | 17 |   return response.data;
 9774 | 18 | }
 9775 | 19 | 
 9776 | 20 | export async function getProperty(id: string): Promise<Property> {
 9777 | 21 |   const response = await api.get<PropertyResponse>(`/admin/properties/${id}`);
 9778 | 22 |   return response.data.property;
 9779 | 23 | }
 9780 | 24 | 
 9781 | 25 | export async function createProperty(data: FormData): Promise<Property> {
 9782 | 26 |   const response = await api.post<PropertyResponse>('/admin/properties', data, {
 9783 | 27 |     headers: {
 9784 | 28 |       'Content-Type': 'multipart/form-data',
 9785 | 29 |     },
 9786 | 30 |   });
 9787 | 31 |   return response.data.property;
 9788 | 32 | }
 9789 | 33 | 
 9790 | 34 | export async function updateProperty(id: string, data: FormData): Promise<Property> {
 9791 | 35 |   const response = await api.patch<PropertyResponse>(`/admin/properties/${id}`, data, {
 9792 | 36 |     headers: {
 9793 | 37 |       'Content-Type': 'multipart/form-data',
 9794 | 38 |     },
 9795 | 39 |   });
 9796 | 40 |   return response.data.property;
 9797 | 41 | }
 9798 | 42 | 
 9799 | 43 | export async function deleteProperty(id: string): Promise<void> {
 9800 | 44 |   await api.delete(`/admin/properties/${id}`);
 9801 | 45 | } 
 9802 | 46 | 
 9803 | 
 9804 | 
 9805 | --------------------------------------------------------------------------------
 9806 | /apps/web/src/services/propertyService.ts:
 9807 | --------------------------------------------------------------------------------
 9808 |   1 | import { PropertyCardProps } from '../components/properties/PropertyCard';
 9809 |   2 | 
 9810 |   3 | const API_URL = import.meta.env.VITE_API_URL;
 9811 |   4 | 
 9812 |   5 | export interface PropertyFilters {
 9813 |   6 |   type?: string;
 9814 |   7 |   location_type?: 'CITY' | 'REGION';
 9815 |   8 |   region?: string;
 9816 |   9 |   minPrice?: number;
 9817 |  10 |   maxPrice?: number;
 9818 |  11 |   category?: 'RENT' | 'SALE';
 9819 |  12 |   search?: string;
 9820 |  13 | }
 9821 |  14 | 
 9822 |  15 | export interface PropertyResponse {
 9823 |  16 |   properties: Property[];
 9824 |  17 |   total: number;
 9825 |  18 |   page: number;
 9826 |  19 |   pages: number;
 9827 |  20 |   pageSize: number;
 9828 |  21 | }
 9829 |  22 | 
 9830 |  23 | interface PropertyImage {
 9831 |  24 |   url: string;
 9832 |  25 | }
 9833 |  26 | 
 9834 |  27 | export interface Property {
 9835 |  28 |   id: string;
 9836 |  29 |   title: string;
 9837 |  30 |   description: string;
 9838 |  31 |   price: number;
 9839 |  32 |   currency: 'BGN' | 'EUR' | 'USD';
 9840 |  33 |   area_sqm: number;
 9841 |  34 |   floor?: number;
 9842 |  35 |   construction_type?: string;
 9843 |  36 |   furnishing?: string;
 9844 |  37 |   location_type: 'CITY' | 'REGION';
 9845 |  38 |   category: 'SALE' | 'RENT';
 9846 |  39 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
 9847 |  40 |   images?: Array<{ id: string; url: string }>;
 9848 |  41 |   contact_info: {
 9849 |  42 |     id: string;
 9850 |  43 |     phone: string;
 9851 |  44 |     email: string;
 9852 |  45 |   };
 9853 |  46 |   region?: {
 9854 |  47 |     id: number;
 9855 |  48 |     name: string;
 9856 |  49 |   };
 9857 |  50 |   neighborhood?: {
 9858 |  51 |     id: number;
 9859 |  52 |     name: string;
 9860 |  53 |   };
 9861 |  54 |   createdAt: string;
 9862 |  55 |   updatedAt: string;
 9863 |  56 | }
 9864 |  57 | 
 9865 |  58 | export async function getProperties(
 9866 |  59 |   filters: PropertyFilters = {},
 9867 |  60 |   page = 1,
 9868 |  61 |   pageSize = 9
 9869 |  62 | ): Promise<PropertyResponse> {
 9870 |  63 |   const params = new URLSearchParams();
 9871 |  64 |   
 9872 |  65 |   // Add filters to query params
 9873 |  66 |   if (filters.type) params.append('type', filters.type);
 9874 |  67 |   if (filters.region) params.append('region', filters.region);
 9875 |  68 |   if (filters.minPrice) params.append('minPrice', filters.minPrice.toString());
 9876 |  69 |   if (filters.maxPrice) params.append('maxPrice', filters.maxPrice.toString());
 9877 |  70 |   if (filters.category) params.append('category', filters.category);
 9878 |  71 |   if (filters.location_type) params.append('location_type', filters.location_type);
 9879 |  72 |   if (filters.search) params.append('search', filters.search);
 9880 |  73 |   
 9881 |  74 |   // Add pagination params
 9882 |  75 |   params.append('page', page.toString());
 9883 |  76 |   params.append('pageSize', pageSize.toString());
 9884 |  77 | 
 9885 |  78 |   try {
 9886 |  79 |     const response = await fetch(`${API_URL}/properties?${params.toString()}`);
 9887 |  80 |     if (!response.ok) {
 9888 |  81 |       throw new Error('Failed to fetch properties');
 9889 |  82 |     }
 9890 |  83 |     const data = await response.json();
 9891 |  84 |     return {
 9892 |  85 |       properties: data.data?.properties || [],
 9893 |  86 |       total: data.data?.total || 0,
 9894 |  87 |       page: data.data?.page || 1,
 9895 |  88 |       pages: data.data?.pages || 1,
 9896 |  89 |       pageSize: data.data?.pageSize || pageSize
 9897 |  90 |     };
 9898 |  91 |   } catch (error) {
 9899 |  92 |     console.error('Error fetching properties:', error);
 9900 |  93 |     throw error;
 9901 |  94 |   }
 9902 |  95 | }
 9903 |  96 | 
 9904 |  97 | export async function getFeaturedProperties(): Promise<PropertyCardProps[]> {
 9905 |  98 |   try {
 9906 |  99 |     const response = await fetch(`${API_URL}/properties/featured`);
 9907 | 100 |     if (!response.ok) {
 9908 | 101 |       throw new Error('Failed to fetch featured properties');
 9909 | 102 |     }
 9910 | 103 |     const data = await response.json();
 9911 | 104 |     return data.data.properties;
 9912 | 105 |   } catch (error) {
 9913 | 106 |     console.error('Error fetching featured properties:', error);
 9914 | 107 |     throw error;
 9915 | 108 |   }
 9916 | 109 | }
 9917 | 110 | 
 9918 | 111 | export async function getPropertyById(id: string): Promise<Property> {
 9919 | 112 |   if (!id) {
 9920 | 113 |     throw new Error('Invalid property ID');
 9921 | 114 |   }
 9922 | 115 | 
 9923 | 116 |   try {
 9924 | 117 |     const response = await fetch(`${API_URL}/properties/${id}`);
 9925 | 118 |     const data = await response.json();
 9926 | 119 | 
 9927 | 120 |     if (!response.ok) {
 9928 | 121 |       throw new Error(data.message || 'Failed to fetch property');
 9929 | 122 |     }
 9930 | 123 | 
 9931 | 124 |     if (data.status === 'error') {
 9932 | 125 |       throw new Error(data.message);
 9933 | 126 |     }
 9934 | 127 | 
 9935 | 128 |     if (!data.data?.property) {
 9936 | 129 |       throw new Error('Property not found');
 9937 | 130 |     }
 9938 | 131 | 
 9939 | 132 |     return data.data.property;
 9940 | 133 |   } catch (error) {
 9941 | 134 |     console.error('Failed to fetch property:', error);
 9942 | 135 |     throw error instanceof Error ? error : new Error('Failed to fetch property details');
 9943 | 136 |   }
 9944 | 137 | }
 9945 | 138 | 
 9946 | 139 | export async function deleteProperty(id: string): Promise<void> {
 9947 | 140 |   if (!id) {
 9948 | 141 |     throw new Error('Invalid property ID');
 9949 | 142 |   }
 9950 | 143 | 
 9951 | 144 |   try {
 9952 | 145 |     const response = await fetch(`${API_URL}/properties/${id}`, {
 9953 | 146 |       method: 'DELETE',
 9954 | 147 |       headers: {
 9955 | 148 |         'Content-Type': 'application/json',
 9956 | 149 |       },
 9957 | 150 |     });
 9958 | 151 | 
 9959 | 152 |     if (!response.ok) {
 9960 | 153 |       const data = await response.json();
 9961 | 154 |       throw new Error(data.message || 'Failed to delete property');
 9962 | 155 |     }
 9963 | 156 |   } catch (error) {
 9964 | 157 |     console.error('Failed to delete property:', error);
 9965 | 158 |     throw error instanceof Error ? error : new Error('Failed to delete property');
 9966 | 159 |   }
 9967 | 160 | } 
 9968 | 161 | 
 9969 | 
 9970 | 
 9971 | --------------------------------------------------------------------------------
 9972 | /apps/web/src/services/users.ts:
 9973 | --------------------------------------------------------------------------------
 9974 |  1 | import api from '../lib/api';
 9975 |  2 | import type { User } from '@prisma/client';
 9976 |  3 | 
 9977 |  4 | // The shape of data returned by the API
 9978 |  5 | interface UsersResponse {
 9979 |  6 |   users: User[];
 9980 |  7 |   total: number;
 9981 |  8 |   page: number;
 9982 |  9 |   pages: number;
 9983 | 10 | }
 9984 | 11 | 
 9985 | 12 | interface UserResponse {
 9986 | 13 |   user: User;
 9987 | 14 | }
 9988 | 15 | 
 9989 | 16 | export async function getUsers(page: number, limit: number) {
 9990 | 17 |   // The axios interceptor transforms response to be the data property from the API response
 9991 | 18 |   return api.get<UsersResponse>(`/admin/users?page=${page}&limit=${limit}`);
 9992 | 19 | }
 9993 | 20 | 
 9994 | 21 | export async function getUser(id: string): Promise<User> {
 9995 | 22 |   const response = await api.get<UserResponse>(`/admin/users/${id}`);
 9996 | 23 |   return response.user;
 9997 | 24 | }
 9998 | 25 | 
 9999 | 26 | export async function createUser(data: Omit<User, 'id' | 'createdAt'>): Promise<User> {
10000 | 27 |   const response = await api.post<UserResponse>('/admin/users', data);
10001 | 28 |   return response.user;
10002 | 29 | }
10003 | 30 | 
10004 | 31 | export async function updateUser(id: string, data: Partial<Omit<User, 'id' | 'createdAt'>>): Promise<User> {
10005 | 32 |   const response = await api.patch<UserResponse>(`/admin/users/${id}`, data);
10006 | 33 |   return response.user;
10007 | 34 | }
10008 | 35 | 
10009 | 36 | export async function deleteUser(id: string): Promise<void> {
10010 | 37 |   await api.delete(`/admin/users/${id}`);
10011 | 38 | } 
10012 | 39 | 
10013 | 
10014 | 
10015 | --------------------------------------------------------------------------------
10016 | /apps/web/src/test/setup.ts:
10017 | --------------------------------------------------------------------------------
10018 |  1 | import '@testing-library/jest-dom';
10019 |  2 | import { vi } from 'vitest';
10020 |  3 | 
10021 |  4 | // Mock localStorage
10022 |  5 | const localStorageMock = {
10023 |  6 |   getItem: vi.fn(),
10024 |  7 |   setItem: vi.fn(),
10025 |  8 |   removeItem: vi.fn(),
10026 |  9 |   clear: vi.fn(),
10027 | 10 |   length: 0,
10028 | 11 |   key: vi.fn(),
10029 | 12 | } as Storage;
10030 | 13 | 
10031 | 14 | global.localStorage = localStorageMock;
10032 | 15 | 
10033 | 16 | // Mock window.location
10034 | 17 | Object.defineProperty(window, 'location', {
10035 | 18 |   value: {
10036 | 19 |     href: '',
10037 | 20 |     assign: vi.fn(),
10038 | 21 |     replace: vi.fn(),
10039 | 22 |     reload: vi.fn(),
10040 | 23 |     toString: vi.fn(),
10041 | 24 |   },
10042 | 25 |   writable: true,
10043 | 26 | }); 
10044 | 27 | 
10045 | 
10046 | 
10047 | --------------------------------------------------------------------------------
10048 | /apps/web/src/types/api.ts:
10049 | --------------------------------------------------------------------------------
10050 |   1 | export interface ApiResponse<T> {
10051 |   2 |   status: 'success' | 'error';
10052 |   3 |   data: T;
10053 |   4 | }
10054 |   5 | 
10055 |   6 | export interface User {
10056 |   7 |   id: string;
10057 |   8 |   name: string;
10058 |   9 |   email: string;
10059 |  10 |   role: 'ADMIN' | 'USER';
10060 |  11 |   createdAt: string;
10061 |  12 | }
10062 |  13 | 
10063 |  14 | export interface AuthResponse {
10064 |  15 |   user: User;
10065 |  16 |   token: string;
10066 |  17 | }
10067 |  18 | 
10068 |  19 | export interface Property {
10069 |  20 |   id: string;
10070 |  21 |   title: string;
10071 |  22 |   description: string;
10072 |  23 |   price: number;
10073 |  24 |   currency: 'BGN' | 'EUR' | 'USD';
10074 |  25 |   area_sqm: number;
10075 |  26 |   land_area_sqm?: number;
10076 |  27 |   floor?: number;
10077 |  28 |   total_floors?: number;
10078 |  29 |   construction_type?: string;
10079 |  30 |   furnishing?: string;
10080 |  31 |   location_type: 'CITY' | 'REGION';
10081 |  32 |   regionId?: number;
10082 |  33 |   neighborhoodId?: number;
10083 |  34 |   has_regulation?: boolean;
10084 |  35 |   category: 'SALE' | 'RENT';
10085 |  36 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
10086 |  37 |   featured?: boolean;
10087 |  38 |   features: { featureId: number }[];
10088 |  39 |   images: Image[];
10089 |  40 |   contact_info: ContactInfo;
10090 |  41 |   createdAt: string;
10091 |  42 |   updatedAt: string;
10092 |  43 | }
10093 |  44 | 
10094 |  45 | export interface CreatePropertyData {
10095 |  46 |   title: string;
10096 |  47 |   description: string;
10097 |  48 |   price: number;
10098 |  49 |   currency: 'BGN' | 'EUR' | 'USD';
10099 |  50 |   area_sqm: number;
10100 |  51 |   land_area_sqm?: number;
10101 |  52 |   floor?: number;
10102 |  53 |   total_floors?: number;
10103 |  54 |   construction_type?: string;
10104 |  55 |   furnishing?: string;
10105 |  56 |   location_type: 'CITY' | 'REGION';
10106 |  57 |   regionId?: number;
10107 |  58 |   neighborhoodId?: number;
10108 |  59 |   has_regulation?: boolean;
10109 |  60 |   category: 'SALE' | 'RENT';
10110 |  61 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
10111 |  62 |   featured?: boolean;
10112 |  63 |   features?: number[];
10113 |  64 |   contact_info: {
10114 |  65 |     phone: string;
10115 |  66 |     email: string;
10116 |  67 |   };
10117 |  68 | }
10118 |  69 | 
10119 |  70 | export interface Image {
10120 |  71 |   id: string;
10121 |  72 |   url: string;
10122 |  73 |   propertyId: string;
10123 |  74 |   createdAt: string;
10124 |  75 |   updatedAt: string;
10125 |  76 | }
10126 |  77 | 
10127 |  78 | export interface ContactInfo {
10128 |  79 |   id: string;
10129 |  80 |   phone: string;
10130 |  81 |   email: string;
10131 |  82 |   propertyId: string;
10132 |  83 | }
10133 |  84 | 
10134 |  85 | export interface ContactMessage {
10135 |  86 |   id: string;
10136 |  87 |   name: string;
10137 |  88 |   email: string;
10138 |  89 |   message: string;
10139 |  90 |   isRead: boolean;
10140 |  91 |   createdAt: string;
10141 |  92 |   updatedAt: string;
10142 |  93 | }
10143 |  94 | 
10144 |  95 | export interface PaginatedResponse<T> {
10145 |  96 |   properties: T[];
10146 |  97 |   total: number;
10147 |  98 |   page: number;
10148 |  99 |   pages: number;
10149 | 100 | }
10150 | 101 | 
10151 | 102 | export interface ContactFormData {
10152 | 103 |   name: string;
10153 | 104 |   email: string;
10154 | 105 |   message: string;
10155 | 106 | }
10156 | 107 | 
10157 | 108 | export interface CreateUserData {
10158 | 109 |   name: string;
10159 | 110 |   email: string;
10160 | 111 |   password: string;
10161 | 112 |   role: 'ADMIN' | 'USER';
10162 | 113 | }
10163 | 114 | 
10164 | 115 | export interface PropertyFormData {
10165 | 116 |   title: string;
10166 | 117 |   description: string;
10167 | 118 |   price: number;
10168 | 119 |   currency: 'BGN' | 'EUR' | 'USD';
10169 | 120 |   area_sqm: number;
10170 | 121 |   floor?: number;
10171 | 122 |   construction_type?: string;
10172 | 123 |   furnishing?: string;
10173 | 124 |   location_type: 'CITY' | 'REGION';
10174 | 125 |   category: 'SALE' | 'RENT';
10175 | 126 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
10176 | 127 |   contact_info: {
10177 | 128 |     phone: string;
10178 | 129 |     email: string;
10179 | 130 |   };
10180 | 131 |   images?: File[];
10181 | 132 | } 
10182 | 133 | 
10183 | 
10184 | 
10185 | --------------------------------------------------------------------------------
10186 | /apps/web/src/vite-env.d.ts:
10187 | --------------------------------------------------------------------------------
10188 | 1 | /// <reference types="vite/client" />
10189 | 2 | 
10190 | 
10191 | 
10192 | --------------------------------------------------------------------------------
10193 | /apps/web/tailwind.config.js:
10194 | --------------------------------------------------------------------------------
10195 |  1 | /** @type {import('tailwindcss').Config} */
10196 |  2 | export default {
10197 |  3 |   content: [
10198 |  4 |     "./index.html",
10199 |  5 |     "./src/**/*.{js,ts,jsx,tsx}",
10200 |  6 |     "./src/components/**/*.{js,ts,jsx,tsx}",
10201 |  7 |     "./src/pages/**/*.{js,ts,jsx,tsx}",
10202 |  8 |     "./src/layout/**/*.{js,ts,jsx,tsx}"
10203 |  9 |   ],
10204 | 10 |   darkMode: "class",
10205 | 11 |   theme: {
10206 | 12 |     extend: {
10207 | 13 |       colors: {
10208 | 14 |         primary: {
10209 | 15 |           50: "rgb(var(--color-primary-50) / <alpha-value>)",
10210 | 16 |           100: "rgb(var(--color-primary-100) / <alpha-value>)",
10211 | 17 |           200: "rgb(var(--color-primary-200) / <alpha-value>)",
10212 | 18 |           300: "rgb(var(--color-primary-300) / <alpha-value>)",
10213 | 19 |           400: "rgb(var(--color-primary-400) / <alpha-value>)",
10214 | 20 |           500: "rgb(var(--color-primary-500) / <alpha-value>)",
10215 | 21 |           600: "rgb(var(--color-primary-600) / <alpha-value>)",
10216 | 22 |           700: "rgb(var(--color-primary-700) / <alpha-value>)",
10217 | 23 |           800: "rgb(var(--color-primary-800) / <alpha-value>)",
10218 | 24 |           900: "rgb(var(--color-primary-900) / <alpha-value>)",
10219 | 25 |           950: "rgb(var(--color-primary-950) / <alpha-value>)"
10220 | 26 |         }
10221 | 27 |       },
10222 | 28 |       fontFamily: {
10223 | 29 |         sans: ["Inter var", "system-ui", "sans-serif"]
10224 | 30 |       }
10225 | 31 |     }
10226 | 32 |   },
10227 | 33 |   plugins: [require("@tailwindcss/forms"), require("@tailwindcss/aspect-ratio")]
10228 | 34 | };
10229 | 35 | 
10230 | 
10231 | 
10232 | --------------------------------------------------------------------------------
10233 | /apps/web/tsconfig.app.json:
10234 | --------------------------------------------------------------------------------
10235 |  1 | {
10236 |  2 |   "compilerOptions": {
10237 |  3 |     "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
10238 |  4 |     "target": "ES2020",
10239 |  5 |     "useDefineForClassFields": true,
10240 |  6 |     "lib": ["ES2020", "DOM", "DOM.Iterable"],
10241 |  7 |     "module": "ESNext",
10242 |  8 |     "skipLibCheck": true,
10243 |  9 | 
10244 | 10 |     /* Bundler mode */
10245 | 11 |     "moduleResolution": "bundler",
10246 | 12 |     "allowImportingTsExtensions": true,
10247 | 13 |     "isolatedModules": true,
10248 | 14 |     "moduleDetection": "force",
10249 | 15 |     "noEmit": true,
10250 | 16 |     "jsx": "react-jsx",
10251 | 17 | 
10252 | 18 |     /* Linting */
10253 | 19 |     "strict": true,
10254 | 20 |     "noUnusedLocals": true,
10255 | 21 |     "noUnusedParameters": true,
10256 | 22 |     "noFallthroughCasesInSwitch": true,
10257 | 23 |     "noUncheckedSideEffectImports": true
10258 | 24 |   },
10259 | 25 |   "include": ["src"]
10260 | 26 | }
10261 | 27 | 
10262 | 
10263 | 
10264 | --------------------------------------------------------------------------------
10265 | /apps/web/tsconfig.json:
10266 | --------------------------------------------------------------------------------
10267 | 1 | {
10268 | 2 |   "files": [],
10269 | 3 |   "references": [
10270 | 4 |     { "path": "./tsconfig.app.json" },
10271 | 5 |     { "path": "./tsconfig.node.json" }
10272 | 6 |   ]
10273 | 7 | }
10274 | 8 | 
10275 | 
10276 | 
10277 | --------------------------------------------------------------------------------
10278 | /apps/web/tsconfig.node.json:
10279 | --------------------------------------------------------------------------------
10280 |  1 | {
10281 |  2 |   "compilerOptions": {
10282 |  3 |     "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
10283 |  4 |     "target": "ES2022",
10284 |  5 |     "lib": ["ES2023"],
10285 |  6 |     "module": "ESNext",
10286 |  7 |     "skipLibCheck": true,
10287 |  8 | 
10288 |  9 |     /* Bundler mode */
10289 | 10 |     "moduleResolution": "bundler",
10290 | 11 |     "allowImportingTsExtensions": true,
10291 | 12 |     "isolatedModules": true,
10292 | 13 |     "moduleDetection": "force",
10293 | 14 |     "noEmit": true,
10294 | 15 | 
10295 | 16 |     /* Linting */
10296 | 17 |     "strict": true,
10297 | 18 |     "noUnusedLocals": true,
10298 | 19 |     "noUnusedParameters": true,
10299 | 20 |     "noFallthroughCasesInSwitch": true,
10300 | 21 |     "noUncheckedSideEffectImports": true
10301 | 22 |   },
10302 | 23 |   "include": ["vite.config.ts"]
10303 | 24 | }
10304 | 25 | 
10305 | 
10306 | 
10307 | --------------------------------------------------------------------------------
10308 | /apps/web/vite.config.ts:
10309 | --------------------------------------------------------------------------------
10310 |  1 | import { defineConfig } from 'vite'
10311 |  2 | import react from '@vitejs/plugin-react-swc'
10312 |  3 | import path from 'path'
10313 |  4 | 
10314 |  5 | // https://vitejs.dev/config/
10315 |  6 | export default defineConfig({
10316 |  7 |   plugins: [react()],
10317 |  8 |   css: {
10318 |  9 |     postcss: './postcss.config.js',
10319 | 10 |   },
10320 | 11 |   resolve: {
10321 | 12 |     alias: {
10322 | 13 |       '@': path.resolve(__dirname, './src'),
10323 | 14 |     },
10324 | 15 |   },
10325 | 16 | })
10326 | 17 | 
10327 | 
10328 | 
10329 | --------------------------------------------------------------------------------
10330 | /apps/web/vitest.config.ts:
10331 | --------------------------------------------------------------------------------
10332 |  1 | /// <reference types="vitest" />
10333 |  2 | /// <reference types="vite/client" />
10334 |  3 | 
10335 |  4 | import { defineConfig } from 'vitest/config';
10336 |  5 | import react from '@vitejs/plugin-react';
10337 |  6 | 
10338 |  7 | export default defineConfig({
10339 |  8 |   plugins: [react()],
10340 |  9 |   test: {
10341 | 10 |     globals: true,
10342 | 11 |     environment: 'happy-dom',
10343 | 12 |     setupFiles: ['./src/test/setup.ts'],
10344 | 13 |     include: ['**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
10345 | 14 |     coverage: {
10346 | 15 |       provider: 'v8',
10347 | 16 |       reporter: ['text', 'json', 'html'],
10348 | 17 |     },
10349 | 18 |   },
10350 | 19 | }); 
10351 | 20 | 
10352 | 
10353 | 
10354 | --------------------------------------------------------------------------------
10355 | /package.json:
10356 | --------------------------------------------------------------------------------
10357 |  1 | {
10358 |  2 |   "name": "avalon-real-estate",
10359 |  3 |   "version": "1.0.0",
10360 |  4 |   "private": true,
10361 |  5 |   "scripts": {
10362 |  6 |     "dev": "turbo run dev",
10363 |  7 |     "build": "turbo run build",
10364 |  8 |     "lint": "turbo run lint",
10365 |  9 |     "format": "prettier --write \"**/*.{ts,tsx,md}\""
10366 | 10 |   },
10367 | 11 |   "devDependencies": {
10368 | 12 |     "@typescript-eslint/eslint-plugin": "^6.19.0",
10369 | 13 |     "@typescript-eslint/parser": "^6.19.0",
10370 | 14 |     "eslint": "^8.56.0",
10371 | 15 |     "eslint-config-prettier": "^9.1.0",
10372 | 16 |     "prettier": "^3.2.4",
10373 | 17 |     "turbo": "^1.11.3",
10374 | 18 |     "typescript": "^5.3.3"
10375 | 19 |   },
10376 | 20 |   "engines": {
10377 | 21 |     "node": ">=18.0.0"
10378 | 22 |   },
10379 | 23 |   "packageManager": "pnpm@8.14.1"
10380 | 24 | }
10381 | 25 | 
10382 | 
10383 | 
10384 | --------------------------------------------------------------------------------
10385 | /packages/shared-types/package.json:
10386 | --------------------------------------------------------------------------------
10387 |  1 | {
10388 |  2 |   "name": "@avalon/shared-types",
10389 |  3 |   "version": "1.0.0",
10390 |  4 |   "private": true,
10391 |  5 |   "type": "module",
10392 |  6 |   "main": "./dist/index.js",
10393 |  7 |   "module": "./dist/index.js",
10394 |  8 |   "types": "./dist/index.d.ts",
10395 |  9 |   "scripts": {
10396 | 10 |     "build": "tsup",
10397 | 11 |     "dev": "tsup --watch",
10398 | 12 |     "clean": "rm -rf dist"
10399 | 13 |   },
10400 | 14 |   "devDependencies": {
10401 | 15 |     "tsup": "^8.0.0",
10402 | 16 |     "typescript": "^5.4.2"
10403 | 17 |   }
10404 | 18 | }
10405 | 19 | 
10406 | 
10407 | 
10408 | --------------------------------------------------------------------------------
10409 | /packages/shared-types/src/admin/index.ts:
10410 | --------------------------------------------------------------------------------
10411 | 1 | export interface AdminStatsResponse {
10412 | 2 |   properties: number;
10413 | 3 |   messages: number;
10414 | 4 |   users: number;
10415 | 5 | } 
10416 | 6 | 
10417 | 
10418 | 
10419 | --------------------------------------------------------------------------------
10420 | /packages/shared-types/src/auth/index.ts:
10421 | --------------------------------------------------------------------------------
10422 |  1 | import type { User } from '../user';
10423 |  2 | 
10424 |  3 | export interface RegisterInput {
10425 |  4 |   name: string;
10426 |  5 |   email: string;
10427 |  6 |   password: string;
10428 |  7 |   passwordConfirm: string;
10429 |  8 | }
10430 |  9 | 
10431 | 10 | export interface LoginInput {
10432 | 11 |   email: string;
10433 | 12 |   password: string;
10434 | 13 | }
10435 | 14 | 
10436 | 15 | export interface AuthResponse {
10437 | 16 |   user: User;
10438 | 17 |   token: string;
10439 | 18 | }
10440 | 19 | 
10441 | 20 | export interface MeResponse {
10442 | 21 |   user: User;
10443 | 22 | } 
10444 | 23 | 
10445 | 
10446 | 
10447 | --------------------------------------------------------------------------------
10448 | /packages/shared-types/src/common/api.ts:
10449 | --------------------------------------------------------------------------------
10450 |  1 | /**
10451 |  2 |  * Standard API success response
10452 |  3 |  */
10453 |  4 | export interface ApiSuccessResponse<T> {
10454 |  5 |   status: 'success';
10455 |  6 |   data: T;
10456 |  7 | }
10457 |  8 | 
10458 |  9 | /**
10459 | 10 |  * Standard API error response
10460 | 11 |  */
10461 | 12 | export interface ApiErrorResponse {
10462 | 13 |   status: 'error';
10463 | 14 |   message: string;
10464 | 15 |   code?: string;
10465 | 16 |   errors?: Record<string, string[]>;
10466 | 17 | }
10467 | 18 | 
10468 | 19 | /**
10469 | 20 |  * Union type for all API responses
10470 | 21 |  */
10471 | 22 | export type ApiResponse<T> = ApiSuccessResponse<T> | ApiErrorResponse;
10472 | 23 | 
10473 | 24 | /**
10474 | 25 |  * Common error codes
10475 | 26 |  */
10476 | 27 | export enum ApiErrorCode {
10477 | 28 |   VALIDATION_ERROR = 'VALIDATION_ERROR',
10478 | 29 |   NOT_FOUND = 'NOT_FOUND',
10479 | 30 |   UNAUTHORIZED = 'UNAUTHORIZED',
10480 | 31 |   FORBIDDEN = 'FORBIDDEN',
10481 | 32 |   INTERNAL_ERROR = 'INTERNAL_ERROR'
10482 | 33 | } 
10483 | 34 | 
10484 | 
10485 | 
10486 | --------------------------------------------------------------------------------
10487 | /packages/shared-types/src/common/pagination.ts:
10488 | --------------------------------------------------------------------------------
10489 |  1 | /**
10490 |  2 |  * Common pagination parameters for requests
10491 |  3 |  */
10492 |  4 | export interface PaginationParams {
10493 |  5 |   page?: number;
10494 |  6 |   pageSize?: number;
10495 |  7 | }
10496 |  8 | 
10497 |  9 | /**
10498 | 10 |  * Common pagination metadata for responses
10499 | 11 |  */
10500 | 12 | export interface PaginationMeta {
10501 | 13 |   total: number;
10502 | 14 |   page: number;
10503 | 15 |   pageSize: number;
10504 | 16 |   totalPages: number;
10505 | 17 |   hasNextPage: boolean;
10506 | 18 |   hasPreviousPage: boolean;
10507 | 19 | }
10508 | 20 | 
10509 | 21 | /**
10510 | 22 |  * Base interface for paginated responses
10511 | 23 |  */
10512 | 24 | export interface PaginatedResponse<T> {
10513 | 25 |   data: T[];
10514 | 26 |   meta: PaginationMeta;
10515 | 27 | } 
10516 | 28 | 
10517 | 
10518 | 
10519 | --------------------------------------------------------------------------------
10520 | /packages/shared-types/src/contact/index.ts:
10521 | --------------------------------------------------------------------------------
10522 |  1 | import { PaginationParams, PaginatedResponse } from '../common/pagination';
10523 |  2 | 
10524 |  3 | /**
10525 |  4 |  * Contact message
10526 |  5 |  */
10527 |  6 | export interface ContactMessage {
10528 |  7 |   id: string;
10529 |  8 |   name: string;
10530 |  9 |   email: string;
10531 | 10 |   message: string;
10532 | 11 |   isRead: boolean;
10533 | 12 |   createdAt: string;
10534 | 13 |   updatedAt: string;
10535 | 14 | }
10536 | 15 | 
10537 | 16 | /**
10538 | 17 |  * Contact message creation input
10539 | 18 |  */
10540 | 19 | export interface CreateContactMessageInput {
10541 | 20 |   name: string;
10542 | 21 |   email: string;
10543 | 22 |   message: string;
10544 | 23 | }
10545 | 24 | 
10546 | 25 | /**
10547 | 26 |  * Contact message response
10548 | 27 |  */
10549 | 28 | export interface ContactMessageResponse {
10550 | 29 |   message: ContactMessage;
10551 | 30 | }
10552 | 31 | 
10553 | 32 | /**
10554 | 33 |  * Contact messages list response
10555 | 34 |  */
10556 | 35 | export interface ContactMessagesResponse extends PaginatedResponse<ContactMessage> {} 
10557 | 36 | 
10558 | 
10559 | 
10560 | --------------------------------------------------------------------------------
10561 | /packages/shared-types/src/index.ts:
10562 | --------------------------------------------------------------------------------
10563 |  1 | // Common exports
10564 |  2 | export * from './common/api';
10565 |  3 | export * from './common/pagination';
10566 |  4 | 
10567 |  5 | // Property exports
10568 |  6 | export * from './property/enums';
10569 |  7 | export * from './property/base';
10570 |  8 | export * from './property/requests';
10571 |  9 | export * from './property/responses';
10572 | 10 | 
10573 | 11 | // Contact exports
10574 | 12 | export * from './contact';
10575 | 13 | 
10576 | 14 | // Location exports
10577 | 15 | export * from './location';
10578 | 16 | 
10579 | 17 | // User exports
10580 | 18 | export {
10581 | 19 |   UserRole,
10582 | 20 |   User,
10583 | 21 |   CreateUserInput,
10584 | 22 |   UpdateUserInput,
10585 | 23 |   UserResponse,
10586 | 24 |   UsersResponse
10587 | 25 | } from './user';
10588 | 26 | 
10589 | 27 | // Admin exports
10590 | 28 | export * from './admin';
10591 | 29 | 
10592 | 30 | // Auth exports
10593 | 31 | export {
10594 | 32 |   RegisterInput,
10595 | 33 |   LoginInput,
10596 | 34 |   AuthResponse,
10597 | 35 |   MeResponse
10598 | 36 | } from './auth'; 
10599 | 37 | 
10600 | 
10601 | 
10602 | --------------------------------------------------------------------------------
10603 | /packages/shared-types/src/location/index.ts:
10604 | --------------------------------------------------------------------------------
10605 |  1 | import { PaginatedResponse } from '../common/pagination';
10606 |  2 | 
10607 |  3 | /**
10608 |  4 |  * Feature type
10609 |  5 |  */
10610 |  6 | export enum FeatureType {
10611 |  7 |   INFRASTRUCTURE = 'INFRASTRUCTURE',
10612 |  8 |   BUILDING = 'BUILDING'
10613 |  9 | }
10614 | 10 | 
10615 | 11 | /**
10616 | 12 |  * Base location interface
10617 | 13 |  */
10618 | 14 | export interface Location {
10619 | 15 |   id: number;
10620 | 16 |   name: string;
10621 | 17 |   createdAt: string;
10622 | 18 |   updatedAt: string;
10623 | 19 | }
10624 | 20 | 
10625 | 21 | /**
10626 | 22 |  * Region interface
10627 | 23 |  */
10628 | 24 | export interface Region extends Location {}
10629 | 25 | 
10630 | 26 | /**
10631 | 27 |  * Neighborhood interface
10632 | 28 |  */
10633 | 29 | export interface Neighborhood extends Location {}
10634 | 30 | 
10635 | 31 | /**
10636 | 32 |  * Feature interface
10637 | 33 |  */
10638 | 34 | export interface Feature {
10639 | 35 |   id: number;
10640 | 36 |   name: string;
10641 | 37 |   type: FeatureType;
10642 | 38 |   createdAt: string;
10643 | 39 |   updatedAt: string;
10644 | 40 | }
10645 | 41 | 
10646 | 42 | /**
10647 | 43 |  * Location creation input
10648 | 44 |  */
10649 | 45 | export interface CreateLocationInput {
10650 | 46 |   name: string;
10651 | 47 | }
10652 | 48 | 
10653 | 49 | /**
10654 | 50 |  * Feature creation input
10655 | 51 |  */
10656 | 52 | export interface CreateFeatureInput {
10657 | 53 |   name: string;
10658 | 54 |   type: FeatureType;
10659 | 55 | }
10660 | 56 | 
10661 | 57 | /**
10662 | 58 |  * Region response
10663 | 59 |  */
10664 | 60 | export interface RegionResponse {
10665 | 61 |   region: Region;
10666 | 62 | }
10667 | 63 | 
10668 | 64 | /**
10669 | 65 |  * Regions list response
10670 | 66 |  */
10671 | 67 | export interface RegionsResponse {
10672 | 68 |   regions: Region[];
10673 | 69 | }
10674 | 70 | 
10675 | 71 | /**
10676 | 72 |  * Neighborhood response
10677 | 73 |  */
10678 | 74 | export interface NeighborhoodResponse {
10679 | 75 |   neighborhood: Neighborhood;
10680 | 76 | }
10681 | 77 | 
10682 | 78 | /**
10683 | 79 |  * Neighborhoods list response
10684 | 80 |  */
10685 | 81 | export interface NeighborhoodsResponse {
10686 | 82 |   neighborhoods: Neighborhood[];
10687 | 83 | }
10688 | 84 | 
10689 | 85 | /**
10690 | 86 |  * Feature response
10691 | 87 |  */
10692 | 88 | export interface FeatureResponse {
10693 | 89 |   feature: Feature;
10694 | 90 | }
10695 | 91 | 
10696 | 92 | /**
10697 | 93 |  * Features list response
10698 | 94 |  */
10699 | 95 | export interface FeaturesResponse {
10700 | 96 |   features: Feature[];
10701 | 97 | } 
10702 | 98 | 
10703 | 
10704 | 
10705 | --------------------------------------------------------------------------------
10706 | /packages/shared-types/src/property/base.ts:
10707 | --------------------------------------------------------------------------------
10708 |  1 | import { 
10709 |  2 |   PropertyType, 
10710 |  3 |   PropertyCategory, 
10711 |  4 |   LocationType, 
10712 |  5 |   Currency, 
10713 |  6 |   ConstructionType, 
10714 |  7 |   FurnishingType 
10715 |  8 | } from './enums';
10716 |  9 | 
10717 | 10 | export interface ContactInfo {
10718 | 11 |   id: string;
10719 | 12 |   phone: string;
10720 | 13 |   email: string;
10721 | 14 |   createdAt: string;
10722 | 15 |   updatedAt: string;
10723 | 16 | }
10724 | 17 | 
10725 | 18 | export interface Image {
10726 | 19 |   id: string;
10727 | 20 |   url: string;
10728 | 21 |   createdAt: string;
10729 | 22 |   updatedAt: string;
10730 | 23 | }
10731 | 24 | 
10732 | 25 | export interface Property {
10733 | 26 |   id: string;
10734 | 27 |   title: string;
10735 | 28 |   description: string;
10736 | 29 |   price: number;
10737 | 30 |   currency: Currency;
10738 | 31 |   area_sqm: number;
10739 | 32 |   floor?: number;
10740 | 33 |   construction_type?: ConstructionType;
10741 | 34 |   furnishing?: FurnishingType;
10742 | 35 |   location_type: LocationType;
10743 | 36 |   category: PropertyCategory;
10744 | 37 |   type: PropertyType;
10745 | 38 |   featured?: boolean;
10746 | 39 |   contact_info?: ContactInfo;
10747 | 40 |   images?: Image[];
10748 | 41 |   createdAt: string;
10749 | 42 |   updatedAt: string;
10750 | 43 | }
10751 | 44 | 
10752 | 45 | export interface CreatePropertyInput {
10753 | 46 |   title: string;
10754 | 47 |   description: string;
10755 | 48 |   price: number;
10756 | 49 |   currency: Currency;
10757 | 50 |   area_sqm: number;
10758 | 51 |   floor?: number;
10759 | 52 |   construction_type?: ConstructionType;
10760 | 53 |   furnishing?: FurnishingType;
10761 | 54 |   location_type?: LocationType;
10762 | 55 |   category?: PropertyCategory;
10763 | 56 |   type?: PropertyType;
10764 | 57 |   featured?: boolean;
10765 | 58 |   contact_info?: {
10766 | 59 |     phone: string;
10767 | 60 |     email: string;
10768 | 61 |   };
10769 | 62 | }
10770 | 63 | 
10771 | 64 | export interface UpdatePropertyInput extends Partial<CreatePropertyInput> {} 
10772 | 65 | 
10773 | 
10774 | 
10775 | --------------------------------------------------------------------------------
10776 | /packages/shared-types/src/property/enums.ts:
10777 | --------------------------------------------------------------------------------
10778 |  1 | /**
10779 |  2 |  * Type of property
10780 |  3 |  */
10781 |  4 | export enum PropertyType {
10782 |  5 |   APARTMENT = 'APARTMENT',
10783 |  6 |   HOUSE = 'HOUSE',
10784 |  7 |   VILLA = 'VILLA',
10785 |  8 |   OFFICE = 'OFFICE',
10786 |  9 |   SHOP = 'SHOP',
10787 | 10 |   WAREHOUSE = 'WAREHOUSE',
10788 | 11 |   LAND = 'LAND'
10789 | 12 | }
10790 | 13 | 
10791 | 14 | /**
10792 | 15 |  * Category of property listing
10793 | 16 |  */
10794 | 17 | export enum PropertyCategory {
10795 | 18 |   SALE = 'SALE',
10796 | 19 |   RENT = 'RENT'
10797 | 20 | }
10798 | 21 | 
10799 | 22 | /**
10800 | 23 |  * Type of location
10801 | 24 |  */
10802 | 25 | export enum LocationType {
10803 | 26 |   CITY = 'CITY',
10804 | 27 |   SUBURB = 'SUBURB',
10805 | 28 |   VILLAGE = 'VILLAGE',
10806 | 29 |   SEASIDE = 'SEASIDE',
10807 | 30 |   MOUNTAIN = 'MOUNTAIN'
10808 | 31 | }
10809 | 32 | 
10810 | 33 | /**
10811 | 34 |  * Supported currencies
10812 | 35 |  */
10813 | 36 | export enum Currency {
10814 | 37 |   EUR = 'EUR',
10815 | 38 |   USD = 'USD',
10816 | 39 |   BGN = 'BGN'
10817 | 40 | }
10818 | 41 | 
10819 | 42 | /**
10820 | 43 |  * Construction types
10821 | 44 |  */
10822 | 45 | export enum ConstructionType {
10823 | 46 |   BRICK = 'BRICK',
10824 | 47 |   PANEL = 'PANEL',
10825 | 48 |   EPK = 'EPK',
10826 | 49 |   CONCRETE = 'CONCRETE',
10827 | 50 |   STEEL = 'STEEL',
10828 | 51 |   WOOD = 'WOOD'
10829 | 52 | }
10830 | 53 | 
10831 | 54 | /**
10832 | 55 |  * Furnishing status
10833 | 56 |  */
10834 | 57 | export enum FurnishingType {
10835 | 58 |   UNFURNISHED = 'UNFURNISHED',
10836 | 59 |   SEMI_FURNISHED = 'SEMI_FURNISHED',
10837 | 60 |   FULLY_FURNISHED = 'FULLY_FURNISHED'
10838 | 61 | } 
10839 | 62 | 
10840 | 
10841 | 
10842 | --------------------------------------------------------------------------------
10843 | /packages/shared-types/src/property/requests.ts:
10844 | --------------------------------------------------------------------------------
10845 |  1 | import { 
10846 |  2 |   PropertyType, 
10847 |  3 |   PropertyCategory, 
10848 |  4 |   LocationType, 
10849 |  5 |   ConstructionType, 
10850 |  6 |   FurnishingType 
10851 |  7 | } from './enums';
10852 |  8 | 
10853 |  9 | export interface GetPropertiesParams {
10854 | 10 |   page?: string;
10855 | 11 |   limit?: string;
10856 | 12 |   min_price?: string;
10857 | 13 |   max_price?: string;
10858 | 14 |   min_area?: string;
10859 | 15 |   max_area?: string;
10860 | 16 |   type?: PropertyType;
10861 | 17 |   category?: PropertyCategory;
10862 | 18 |   location_type?: LocationType;
10863 | 19 |   construction_type?: ConstructionType;
10864 | 20 |   furnishing?: FurnishingType;
10865 | 21 |   featured?: string;
10866 | 22 | } 
10867 | 23 | 
10868 | 
10869 | 
10870 | --------------------------------------------------------------------------------
10871 | /packages/shared-types/src/property/responses.ts:
10872 | --------------------------------------------------------------------------------
10873 |  1 | import { PaginatedResponse } from '../common/pagination';
10874 |  2 | import { Property } from './base';
10875 |  3 | 
10876 |  4 | /**
10877 |  5 |  * Response for a single property
10878 |  6 |  */
10879 |  7 | export interface PropertyResponse {
10880 |  8 |   property: Property;
10881 |  9 | }
10882 | 10 | 
10883 | 11 | /**
10884 | 12 |  * Response for multiple properties
10885 | 13 |  */
10886 | 14 | export interface PropertiesResponse extends PaginatedResponse<Property> {} 
10887 | 15 | 
10888 | 
10889 | 
10890 | --------------------------------------------------------------------------------
10891 | /packages/shared-types/src/user/index.ts:
10892 | --------------------------------------------------------------------------------
10893 |  1 | import { PaginatedResponse } from '../common/pagination';
10894 |  2 | 
10895 |  3 | export enum UserRole {
10896 |  4 |   ADMIN = 'ADMIN',
10897 |  5 |   USER = 'USER'
10898 |  6 | }
10899 |  7 | 
10900 |  8 | export interface User {
10901 |  9 |   id: string;
10902 | 10 |   name: string;
10903 | 11 |   email: string;
10904 | 12 |   role: UserRole;
10905 | 13 |   createdAt: string;
10906 | 14 | }
10907 | 15 | 
10908 | 16 | export interface CreateUserInput {
10909 | 17 |   name: string;
10910 | 18 |   email: string;
10911 | 19 |   password: string;
10912 | 20 |   role?: UserRole;
10913 | 21 | }
10914 | 22 | 
10915 | 23 | export interface UpdateUserInput extends Partial<CreateUserInput> {}
10916 | 24 | 
10917 | 25 | export interface UserResponse {
10918 | 26 |   user: User;
10919 | 27 | }
10920 | 28 | 
10921 | 29 | export interface UsersResponse {
10922 | 30 |   users: User[];
10923 | 31 |   meta: {
10924 | 32 |     total: number;
10925 | 33 |     page: number;
10926 | 34 |     pageSize: number;
10927 | 35 |     totalPages: number;
10928 | 36 |     hasNextPage: boolean;
10929 | 37 |     hasPreviousPage: boolean;
10930 | 38 |   };
10931 | 39 | } 
10932 | 40 | 
10933 | 
10934 | 
10935 | --------------------------------------------------------------------------------
10936 | /packages/shared-types/tsconfig.json:
10937 | --------------------------------------------------------------------------------
10938 |  1 | {
10939 |  2 |   "compilerOptions": {
10940 |  3 |     "target": "ES2020",
10941 |  4 |     "module": "ESNext",
10942 |  5 |     "moduleResolution": "Bundler",
10943 |  6 |     "esModuleInterop": true,
10944 |  7 |     "strict": true,
10945 |  8 |     "skipLibCheck": true,
10946 |  9 |     "forceConsistentCasingInFileNames": true,
10947 | 10 |     "declaration": true,
10948 | 11 |     "outDir": "dist",
10949 | 12 |     "rootDir": "src"
10950 | 13 |   },
10951 | 14 |   "include": ["src/**/*"],
10952 | 15 |   "exclude": ["node_modules", "dist"]
10953 | 16 | }
10954 | 17 | 
10955 | 
10956 | 
10957 | --------------------------------------------------------------------------------
10958 | /packages/shared-types/tsup.config.ts:
10959 | --------------------------------------------------------------------------------
10960 |  1 | import { defineConfig } from 'tsup'
10961 |  2 | 
10962 |  3 | export default defineConfig({
10963 |  4 |   entry: ['src/index.ts'],
10964 |  5 |   format: ['esm'],
10965 |  6 |   dts: true,
10966 |  7 |   splitting: false,
10967 |  8 |   sourcemap: true,
10968 |  9 |   clean: true,
10969 | 10 |   treeshake: true
10970 | 11 | }) 
10971 | 12 | 
10972 | 
10973 | 
10974 | --------------------------------------------------------------------------------
10975 | /pnpm-lock.yaml:
10976 | --------------------------------------------------------------------------------
10977 |    1 | lockfileVersion: '9.0'
10978 |    2 | 
10979 |    3 | settings:
10980 |    4 |   autoInstallPeers: true
10981 |    5 |   excludeLinksFromLockfile: false
10982 |    6 | 
10983 |    7 | importers:
10984 |    8 | 
10985 |    9 |   .:
10986 |   10 |     devDependencies:
10987 |   11 |       '@typescript-eslint/eslint-plugin':
10988 |   12 |         specifier: ^6.19.0
10989 |   13 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
10990 |   14 |       '@typescript-eslint/parser':
10991 |   15 |         specifier: ^6.19.0
10992 |   16 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
10993 |   17 |       eslint:
10994 |   18 |         specifier: ^8.56.0
10995 |   19 |         version: 8.57.1
10996 |   20 |       eslint-config-prettier:
10997 |   21 |         specifier: ^9.1.0
10998 |   22 |         version: 9.1.0(eslint@8.57.1)
10999 |   23 |       prettier:
11000 |   24 |         specifier: ^3.2.4
11001 |   25 |         version: 3.4.2
11002 |   26 |       turbo:
11003 |   27 |         specifier: ^1.11.3
11004 |   28 |         version: 1.13.4
11005 |   29 |       typescript:
11006 |   30 |         specifier: ^5.3.3
11007 |   31 |         version: 5.7.3
11008 |   32 | 
11009 |   33 |   apps/api:
11010 |   34 |     dependencies:
11011 |   35 |       '@avalon/shared-types':
11012 |   36 |         specifier: workspace:*
11013 |   37 |         version: link:../../packages/shared-types
11014 |   38 |       '@prisma/client':
11015 |   39 |         specifier: ^5.22.0
11016 |   40 |         version: 5.22.0(prisma@5.22.0)
11017 |   41 |       '@types/nodemailer':
11018 |   42 |         specifier: ^6.4.17
11019 |   43 |         version: 6.4.17
11020 |   44 |       bcryptjs:
11021 |   45 |         specifier: ^2.4.3
11022 |   46 |         version: 2.4.3
11023 |   47 |       cors:
11024 |   48 |         specifier: ^2.8.5
11025 |   49 |         version: 2.8.5
11026 |   50 |       dotenv:
11027 |   51 |         specifier: ^16.4.5
11028 |   52 |         version: 16.4.7
11029 |   53 |       express:
11030 |   54 |         specifier: ^4.18.3
11031 |   55 |         version: 4.21.2
11032 |   56 |       express-rate-limit:
11033 |   57 |         specifier: ^7.5.0
11034 |   58 |         version: 7.5.0(express@4.21.2)
11035 |   59 |       jsonwebtoken:
11036 |   60 |         specifier: ^9.0.2
11037 |   61 |         version: 9.0.2
11038 |   62 |       morgan:
11039 |   63 |         specifier: ^1.10.0
11040 |   64 |         version: 1.10.0
11041 |   65 |       multer:
11042 |   66 |         specifier: ^1.4.5-lts.1
11043 |   67 |         version: 1.4.5-lts.1
11044 |   68 |       nodemailer:
11045 |   69 |         specifier: ^6.9.16
11046 |   70 |         version: 6.9.16
11047 |   71 |       winston:
11048 |   72 |         specifier: ^3.17.0
11049 |   73 |         version: 3.17.0
11050 |   74 |       zod:
11051 |   75 |         specifier: ^3.22.4
11052 |   76 |         version: 3.24.1
11053 |   77 |     devDependencies:
11054 |   78 |       '@jest/globals':
11055 |   79 |         specifier: ^29.7.0
11056 |   80 |         version: 29.7.0
11057 |   81 |       '@jest/types':
11058 |   82 |         specifier: ^29.6.3
11059 |   83 |         version: 29.6.3
11060 |   84 |       '@types/bcryptjs':
11061 |   85 |         specifier: ^2.4.6
11062 |   86 |         version: 2.4.6
11063 |   87 |       '@types/cors':
11064 |   88 |         specifier: ^2.8.17
11065 |   89 |         version: 2.8.17
11066 |   90 |       '@types/express':
11067 |   91 |         specifier: ^4.17.21
11068 |   92 |         version: 4.17.21
11069 |   93 |       '@types/jest':
11070 |   94 |         specifier: ^29.5.14
11071 |   95 |         version: 29.5.14
11072 |   96 |       '@types/jsonwebtoken':
11073 |   97 |         specifier: ^9.0.5
11074 |   98 |         version: 9.0.7
11075 |   99 |       '@types/morgan':
11076 |  100 |         specifier: ^1.9.9
11077 |  101 |         version: 1.9.9
11078 |  102 |       '@types/multer':
11079 |  103 |         specifier: ^1.4.11
11080 |  104 |         version: 1.4.12
11081 |  105 |       '@types/node':
11082 |  106 |         specifier: ^20.17.12
11083 |  107 |         version: 20.17.12
11084 |  108 |       '@types/supertest':
11085 |  109 |         specifier: ^6.0.2
11086 |  110 |         version: 6.0.2
11087 |  111 |       '@typescript-eslint/eslint-plugin':
11088 |  112 |         specifier: ^6.21.0
11089 |  113 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
11090 |  114 |       '@typescript-eslint/parser':
11091 |  115 |         specifier: ^6.21.0
11092 |  116 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
11093 |  117 |       cross-env:
11094 |  118 |         specifier: ^7.0.3
11095 |  119 |         version: 7.0.3
11096 |  120 |       jest:
11097 |  121 |         specifier: ^29.7.0
11098 |  122 |         version: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
11099 |  123 |       prisma:
11100 |  124 |         specifier: ^5.22.0
11101 |  125 |         version: 5.22.0
11102 |  126 |       supertest:
11103 |  127 |         specifier: ^7.0.0
11104 |  128 |         version: 7.0.0
11105 |  129 |       ts-jest:
11106 |  130 |         specifier: ^29.2.5
11107 |  131 |         version: 29.2.5(@babel/core@7.26.0)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.0))(esbuild@0.24.2)(jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))(typescript@5.7.3)
11108 |  132 |       tsup:
11109 |  133 |         specifier: ^8.3.5
11110 |  134 |         version: 8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0)
11111 |  135 |       tsx:
11112 |  136 |         specifier: ^4.7.1
11113 |  137 |         version: 4.19.2
11114 |  138 |       typescript:
11115 |  139 |         specifier: ^5.4.2
11116 |  140 |         version: 5.7.3
11117 |  141 | 
11118 |  142 |   apps/web:
11119 |  143 |     dependencies:
11120 |  144 |       '@headlessui/react':
11121 |  145 |         specifier: ^1.7.17
11122 |  146 |         version: 1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
11123 |  147 |       '@heroicons/react':
11124 |  148 |         specifier: ^2.0.18
11125 |  149 |         version: 2.2.0(react@18.3.1)
11126 |  150 |       '@react-google-maps/api':
11127 |  151 |         specifier: ^2.20.5
11128 |  152 |         version: 2.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
11129 |  153 |       '@tanstack/react-query':
11130 |  154 |         specifier: ^5.64.1
11131 |  155 |         version: 5.64.1(react@18.3.1)
11132 |  156 |       '@tanstack/react-query-devtools':
11133 |  157 |         specifier: ^5.64.1
11134 |  158 |         version: 5.64.1(@tanstack/react-query@5.64.1(react@18.3.1))(react@18.3.1)
11135 |  159 |       axios:
11136 |  160 |         specifier: ^1.6.2
11137 |  161 |         version: 1.7.9
11138 |  162 |       clsx:
11139 |  163 |         specifier: ^2.0.0
11140 |  164 |         version: 2.1.1
11141 |  165 |       react:
11142 |  166 |         specifier: ^18.2.0
11143 |  167 |         version: 18.3.1
11144 |  168 |       react-dom:
11145 |  169 |         specifier: ^18.2.0
11146 |  170 |         version: 18.3.1(react@18.3.1)
11147 |  171 |       react-router-dom:
11148 |  172 |         specifier: ^6.20.1
11149 |  173 |         version: 6.28.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
11150 |  174 |       react-transition-group:
11151 |  175 |         specifier: ^4.4.5
11152 |  176 |         version: 4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
11153 |  177 |       zod:
11154 |  178 |         specifier: ^3.22.4
11155 |  179 |         version: 3.24.1
11156 |  180 |     devDependencies:
11157 |  181 |       '@testing-library/jest-dom':
11158 |  182 |         specifier: ^6.1.5
11159 |  183 |         version: 6.6.3
11160 |  184 |       '@testing-library/react':
11161 |  185 |         specifier: ^14.1.2
11162 |  186 |         version: 14.3.1(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
11163 |  187 |       '@testing-library/user-event':
11164 |  188 |         specifier: ^14.5.1
11165 |  189 |         version: 14.5.2(@testing-library/dom@9.3.4)
11166 |  190 |       '@types/react':
11167 |  191 |         specifier: ^18.2.37
11168 |  192 |         version: 18.3.18
11169 |  193 |       '@types/react-dom':
11170 |  194 |         specifier: ^18.2.15
11171 |  195 |         version: 18.3.5(@types/react@18.3.18)
11172 |  196 |       '@types/react-transition-group':
11173 |  197 |         specifier: ^4.4.12
11174 |  198 |         version: 4.4.12(@types/react@18.3.18)
11175 |  199 |       '@typescript-eslint/eslint-plugin':
11176 |  200 |         specifier: ^6.10.0
11177 |  201 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
11178 |  202 |       '@typescript-eslint/parser':
11179 |  203 |         specifier: ^6.10.0
11180 |  204 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
11181 |  205 |       '@vitejs/plugin-react':
11182 |  206 |         specifier: ^4.2.0
11183 |  207 |         version: 4.3.4(vite@5.4.11(@types/node@20.17.12))
11184 |  208 |       '@vitejs/plugin-react-swc':
11185 |  209 |         specifier: ^3.7.2
11186 |  210 |         version: 3.7.2(vite@5.4.11(@types/node@20.17.12))
11187 |  211 |       '@vitest/coverage-v8':
11188 |  212 |         specifier: ^1.0.4
11189 |  213 |         version: 1.6.0(vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3))
11190 |  214 |       autoprefixer:
11191 |  215 |         specifier: ^10.4.16
11192 |  216 |         version: 10.4.20(postcss@8.4.49)
11193 |  217 |       eslint:
11194 |  218 |         specifier: ^8.53.0
11195 |  219 |         version: 8.57.1
11196 |  220 |       eslint-plugin-react-hooks:
11197 |  221 |         specifier: ^4.6.0
11198 |  222 |         version: 4.6.2(eslint@8.57.1)
11199 |  223 |       eslint-plugin-react-refresh:
11200 |  224 |         specifier: ^0.4.4
11201 |  225 |         version: 0.4.18(eslint@8.57.1)
11202 |  226 |       happy-dom:
11203 |  227 |         specifier: ^12.10.3
11204 |  228 |         version: 12.10.3
11205 |  229 |       postcss:
11206 |  230 |         specifier: ^8.4.32
11207 |  231 |         version: 8.4.49
11208 |  232 |       tailwindcss:
11209 |  233 |         specifier: ^3.3.6
11210 |  234 |         version: 3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
11211 |  235 |       typescript:
11212 |  236 |         specifier: ^5.2.2
11213 |  237 |         version: 5.7.3
11214 |  238 |       vite:
11215 |  239 |         specifier: ^5.0.0
11216 |  240 |         version: 5.4.11(@types/node@20.17.12)
11217 |  241 |       vitest:
11218 |  242 |         specifier: ^1.0.4
11219 |  243 |         version: 1.6.0(@types/node@20.17.12)(happy-dom@12.10.3)
11220 |  244 | 
11221 |  245 |   packages/shared-types:
11222 |  246 |     devDependencies:
11223 |  247 |       tsup:
11224 |  248 |         specifier: ^8.0.0
11225 |  249 |         version: 8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0)
11226 |  250 |       typescript:
11227 |  251 |         specifier: ^5.4.2
11228 |  252 |         version: 5.7.3
11229 |  253 | 
11230 |  254 | packages:
11231 |  255 | 
11232 |  256 |   '@adobe/css-tools@4.4.1':
11233 |  257 |     resolution: {integrity: sha512-12WGKBQzjUAI4ayyF4IAtfw2QR/IDoqk6jTddXDhtYTJF9ASmoE1zst7cVtP0aL/F1jUJL5r+JxKXKEgHNbEUQ==}
11234 |  258 | 
11235 |  259 |   '@alloc/quick-lru@5.2.0':
11236 |  260 |     resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
11237 |  261 |     engines: {node: '>=10'}
11238 |  262 | 
11239 |  263 |   '@ampproject/remapping@2.3.0':
11240 |  264 |     resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
11241 |  265 |     engines: {node: '>=6.0.0'}
11242 |  266 | 
11243 |  267 |   '@babel/code-frame@7.26.2':
11244 |  268 |     resolution: {integrity: sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==}
11245 |  269 |     engines: {node: '>=6.9.0'}
11246 |  270 | 
11247 |  271 |   '@babel/compat-data@7.26.5':
11248 |  272 |     resolution: {integrity: sha512-XvcZi1KWf88RVbF9wn8MN6tYFloU5qX8KjuF3E1PVBmJ9eypXfs4GRiJwLuTZL0iSnJUKn1BFPa5BPZZJyFzPg==}
11249 |  273 |     engines: {node: '>=6.9.0'}
11250 |  274 | 
11251 |  275 |   '@babel/core@7.26.0':
11252 |  276 |     resolution: {integrity: sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==}
11253 |  277 |     engines: {node: '>=6.9.0'}
11254 |  278 | 
11255 |  279 |   '@babel/generator@7.26.5':
11256 |  280 |     resolution: {integrity: sha512-2caSP6fN9I7HOe6nqhtft7V4g7/V/gfDsC3Ag4W7kEzzvRGKqiv0pu0HogPiZ3KaVSoNDhUws6IJjDjpfmYIXw==}
11257 |  281 |     engines: {node: '>=6.9.0'}
11258 |  282 | 
11259 |  283 |   '@babel/helper-compilation-targets@7.26.5':
11260 |  284 |     resolution: {integrity: sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==}
11261 |  285 |     engines: {node: '>=6.9.0'}
11262 |  286 | 
11263 |  287 |   '@babel/helper-module-imports@7.25.9':
11264 |  288 |     resolution: {integrity: sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==}
11265 |  289 |     engines: {node: '>=6.9.0'}
11266 |  290 | 
11267 |  291 |   '@babel/helper-module-transforms@7.26.0':
11268 |  292 |     resolution: {integrity: sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==}
11269 |  293 |     engines: {node: '>=6.9.0'}
11270 |  294 |     peerDependencies:
11271 |  295 |       '@babel/core': ^7.0.0
11272 |  296 | 
11273 |  297 |   '@babel/helper-plugin-utils@7.26.5':
11274 |  298 |     resolution: {integrity: sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==}
11275 |  299 |     engines: {node: '>=6.9.0'}
11276 |  300 | 
11277 |  301 |   '@babel/helper-string-parser@7.25.9':
11278 |  302 |     resolution: {integrity: sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==}
11279 |  303 |     engines: {node: '>=6.9.0'}
11280 |  304 | 
11281 |  305 |   '@babel/helper-validator-identifier@7.25.9':
11282 |  306 |     resolution: {integrity: sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==}
11283 |  307 |     engines: {node: '>=6.9.0'}
11284 |  308 | 
11285 |  309 |   '@babel/helper-validator-option@7.25.9':
11286 |  310 |     resolution: {integrity: sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==}
11287 |  311 |     engines: {node: '>=6.9.0'}
11288 |  312 | 
11289 |  313 |   '@babel/helpers@7.26.0':
11290 |  314 |     resolution: {integrity: sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==}
11291 |  315 |     engines: {node: '>=6.9.0'}
11292 |  316 | 
11293 |  317 |   '@babel/parser@7.26.5':
11294 |  318 |     resolution: {integrity: sha512-SRJ4jYmXRqV1/Xc+TIVG84WjHBXKlxO9sHQnA2Pf12QQEAp1LOh6kDzNHXcUnbH1QI0FDoPPVOt+vyUDucxpaw==}
11295 |  319 |     engines: {node: '>=6.0.0'}
11296 |  320 |     hasBin: true
11297 |  321 | 
11298 |  322 |   '@babel/plugin-syntax-async-generators@7.8.4':
11299 |  323 |     resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}
11300 |  324 |     peerDependencies:
11301 |  325 |       '@babel/core': ^7.0.0-0
11302 |  326 | 
11303 |  327 |   '@babel/plugin-syntax-bigint@7.8.3':
11304 |  328 |     resolution: {integrity: sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==}
11305 |  329 |     peerDependencies:
11306 |  330 |       '@babel/core': ^7.0.0-0
11307 |  331 | 
11308 |  332 |   '@babel/plugin-syntax-class-properties@7.12.13':
11309 |  333 |     resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}
11310 |  334 |     peerDependencies:
11311 |  335 |       '@babel/core': ^7.0.0-0
11312 |  336 | 
11313 |  337 |   '@babel/plugin-syntax-class-static-block@7.14.5':
11314 |  338 |     resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}
11315 |  339 |     engines: {node: '>=6.9.0'}
11316 |  340 |     peerDependencies:
11317 |  341 |       '@babel/core': ^7.0.0-0
11318 |  342 | 
11319 |  343 |   '@babel/plugin-syntax-import-attributes@7.26.0':
11320 |  344 |     resolution: {integrity: sha512-e2dttdsJ1ZTpi3B9UYGLw41hifAubg19AtCu/2I/F1QNVclOBr1dYpTdmdyZ84Xiz43BS/tCUkMAZNLv12Pi+A==}
11321 |  345 |     engines: {node: '>=6.9.0'}
11322 |  346 |     peerDependencies:
11323 |  347 |       '@babel/core': ^7.0.0-0
11324 |  348 | 
11325 |  349 |   '@babel/plugin-syntax-import-meta@7.10.4':
11326 |  350 |     resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}
11327 |  351 |     peerDependencies:
11328 |  352 |       '@babel/core': ^7.0.0-0
11329 |  353 | 
11330 |  354 |   '@babel/plugin-syntax-json-strings@7.8.3':
11331 |  355 |     resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}
11332 |  356 |     peerDependencies:
11333 |  357 |       '@babel/core': ^7.0.0-0
11334 |  358 | 
11335 |  359 |   '@babel/plugin-syntax-jsx@7.25.9':
11336 |  360 |     resolution: {integrity: sha512-ld6oezHQMZsZfp6pWtbjaNDF2tiiCYYDqQszHt5VV437lewP9aSi2Of99CK0D0XB21k7FLgnLcmQKyKzynfeAA==}
11337 |  361 |     engines: {node: '>=6.9.0'}
11338 |  362 |     peerDependencies:
11339 |  363 |       '@babel/core': ^7.0.0-0
11340 |  364 | 
11341 |  365 |   '@babel/plugin-syntax-logical-assignment-operators@7.10.4':
11342 |  366 |     resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}
11343 |  367 |     peerDependencies:
11344 |  368 |       '@babel/core': ^7.0.0-0
11345 |  369 | 
11346 |  370 |   '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3':
11347 |  371 |     resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}
11348 |  372 |     peerDependencies:
11349 |  373 |       '@babel/core': ^7.0.0-0
11350 |  374 | 
11351 |  375 |   '@babel/plugin-syntax-numeric-separator@7.10.4':
11352 |  376 |     resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}
11353 |  377 |     peerDependencies:
11354 |  378 |       '@babel/core': ^7.0.0-0
11355 |  379 | 
11356 |  380 |   '@babel/plugin-syntax-object-rest-spread@7.8.3':
11357 |  381 |     resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}
11358 |  382 |     peerDependencies:
11359 |  383 |       '@babel/core': ^7.0.0-0
11360 |  384 | 
11361 |  385 |   '@babel/plugin-syntax-optional-catch-binding@7.8.3':
11362 |  386 |     resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}
11363 |  387 |     peerDependencies:
11364 |  388 |       '@babel/core': ^7.0.0-0
11365 |  389 | 
11366 |  390 |   '@babel/plugin-syntax-optional-chaining@7.8.3':
11367 |  391 |     resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}
11368 |  392 |     peerDependencies:
11369 |  393 |       '@babel/core': ^7.0.0-0
11370 |  394 | 
11371 |  395 |   '@babel/plugin-syntax-private-property-in-object@7.14.5':
11372 |  396 |     resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}
11373 |  397 |     engines: {node: '>=6.9.0'}
11374 |  398 |     peerDependencies:
11375 |  399 |       '@babel/core': ^7.0.0-0
11376 |  400 | 
11377 |  401 |   '@babel/plugin-syntax-top-level-await@7.14.5':
11378 |  402 |     resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}
11379 |  403 |     engines: {node: '>=6.9.0'}
11380 |  404 |     peerDependencies:
11381 |  405 |       '@babel/core': ^7.0.0-0
11382 |  406 | 
11383 |  407 |   '@babel/plugin-syntax-typescript@7.25.9':
11384 |  408 |     resolution: {integrity: sha512-hjMgRy5hb8uJJjUcdWunWVcoi9bGpJp8p5Ol1229PoN6aytsLwNMgmdftO23wnCLMfVmTwZDWMPNq/D1SY60JQ==}
11385 |  409 |     engines: {node: '>=6.9.0'}
11386 |  410 |     peerDependencies:
11387 |  411 |       '@babel/core': ^7.0.0-0
11388 |  412 | 
11389 |  413 |   '@babel/plugin-transform-react-jsx-self@7.25.9':
11390 |  414 |     resolution: {integrity: sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==}
11391 |  415 |     engines: {node: '>=6.9.0'}
11392 |  416 |     peerDependencies:
11393 |  417 |       '@babel/core': ^7.0.0-0
11394 |  418 | 
11395 |  419 |   '@babel/plugin-transform-react-jsx-source@7.25.9':
11396 |  420 |     resolution: {integrity: sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==}
11397 |  421 |     engines: {node: '>=6.9.0'}
11398 |  422 |     peerDependencies:
11399 |  423 |       '@babel/core': ^7.0.0-0
11400 |  424 | 
11401 |  425 |   '@babel/runtime@7.26.0':
11402 |  426 |     resolution: {integrity: sha512-FDSOghenHTiToteC/QRlv2q3DhPZ/oOXTBoirfWNx1Cx3TMVcGWQtMMmQcSvb/JjpNeGzx8Pq/b4fKEJuWm1sw==}
11403 |  427 |     engines: {node: '>=6.9.0'}
11404 |  428 | 
11405 |  429 |   '@babel/template@7.25.9':
11406 |  430 |     resolution: {integrity: sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==}
11407 |  431 |     engines: {node: '>=6.9.0'}
11408 |  432 | 
11409 |  433 |   '@babel/traverse@7.26.5':
11410 |  434 |     resolution: {integrity: sha512-rkOSPOw+AXbgtwUga3U4u8RpoK9FEFWBNAlTpcnkLFjL5CT+oyHNuUUC/xx6XefEJ16r38r8Bc/lfp6rYuHeJQ==}
11411 |  435 |     engines: {node: '>=6.9.0'}
11412 |  436 | 
11413 |  437 |   '@babel/types@7.26.5':
11414 |  438 |     resolution: {integrity: sha512-L6mZmwFDK6Cjh1nRCLXpa6no13ZIioJDz7mdkzHv399pThrTa/k0nUlNaenOeh2kWu/iaOQYElEpKPUswUa9Vg==}
11415 |  439 |     engines: {node: '>=6.9.0'}
11416 |  440 | 
11417 |  441 |   '@bcoe/v8-coverage@0.2.3':
11418 |  442 |     resolution: {integrity: sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==}
11419 |  443 | 
11420 |  444 |   '@colors/colors@1.6.0':
11421 |  445 |     resolution: {integrity: sha512-Ir+AOibqzrIsL6ajt3Rz3LskB7OiMVHqltZmspbW/TJuTVuyOMirVqAkjfY6JISiLHgyNqicAC8AyHHGzNd/dA==}
11422 |  446 |     engines: {node: '>=0.1.90'}
11423 |  447 | 
11424 |  448 |   '@cspotcode/source-map-support@0.8.1':
11425 |  449 |     resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}
11426 |  450 |     engines: {node: '>=12'}
11427 |  451 | 
11428 |  452 |   '@dabh/diagnostics@2.0.3':
11429 |  453 |     resolution: {integrity: sha512-hrlQOIi7hAfzsMqlGSFyVucrx38O+j6wiGOf//H2ecvIEqYN4ADBSS2iLMh5UFyDunCNniUIPk/q3riFv45xRA==}
11430 |  454 | 
11431 |  455 |   '@esbuild/aix-ppc64@0.21.5':
11432 |  456 |     resolution: {integrity: sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==}
11433 |  457 |     engines: {node: '>=12'}
11434 |  458 |     cpu: [ppc64]
11435 |  459 |     os: [aix]
11436 |  460 | 
11437 |  461 |   '@esbuild/aix-ppc64@0.23.1':
11438 |  462 |     resolution: {integrity: sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==}
11439 |  463 |     engines: {node: '>=18'}
11440 |  464 |     cpu: [ppc64]
11441 |  465 |     os: [aix]
11442 |  466 | 
11443 |  467 |   '@esbuild/aix-ppc64@0.24.2':
11444 |  468 |     resolution: {integrity: sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==}
11445 |  469 |     engines: {node: '>=18'}
11446 |  470 |     cpu: [ppc64]
11447 |  471 |     os: [aix]
11448 |  472 | 
11449 |  473 |   '@esbuild/android-arm64@0.21.5':
11450 |  474 |     resolution: {integrity: sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==}
11451 |  475 |     engines: {node: '>=12'}
11452 |  476 |     cpu: [arm64]
11453 |  477 |     os: [android]
11454 |  478 | 
11455 |  479 |   '@esbuild/android-arm64@0.23.1':
11456 |  480 |     resolution: {integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==}
11457 |  481 |     engines: {node: '>=18'}
11458 |  482 |     cpu: [arm64]
11459 |  483 |     os: [android]
11460 |  484 | 
11461 |  485 |   '@esbuild/android-arm64@0.24.2':
11462 |  486 |     resolution: {integrity: sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==}
11463 |  487 |     engines: {node: '>=18'}
11464 |  488 |     cpu: [arm64]
11465 |  489 |     os: [android]
11466 |  490 | 
11467 |  491 |   '@esbuild/android-arm@0.21.5':
11468 |  492 |     resolution: {integrity: sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==}
11469 |  493 |     engines: {node: '>=12'}
11470 |  494 |     cpu: [arm]
11471 |  495 |     os: [android]
11472 |  496 | 
11473 |  497 |   '@esbuild/android-arm@0.23.1':
11474 |  498 |     resolution: {integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==}
11475 |  499 |     engines: {node: '>=18'}
11476 |  500 |     cpu: [arm]
11477 |  501 |     os: [android]
11478 |  502 | 
11479 |  503 |   '@esbuild/android-arm@0.24.2':
11480 |  504 |     resolution: {integrity: sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==}
11481 |  505 |     engines: {node: '>=18'}
11482 |  506 |     cpu: [arm]
11483 |  507 |     os: [android]
11484 |  508 | 
11485 |  509 |   '@esbuild/android-x64@0.21.5':
11486 |  510 |     resolution: {integrity: sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==}
11487 |  511 |     engines: {node: '>=12'}
11488 |  512 |     cpu: [x64]
11489 |  513 |     os: [android]
11490 |  514 | 
11491 |  515 |   '@esbuild/android-x64@0.23.1':
11492 |  516 |     resolution: {integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==}
11493 |  517 |     engines: {node: '>=18'}
11494 |  518 |     cpu: [x64]
11495 |  519 |     os: [android]
11496 |  520 | 
11497 |  521 |   '@esbuild/android-x64@0.24.2':
11498 |  522 |     resolution: {integrity: sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==}
11499 |  523 |     engines: {node: '>=18'}
11500 |  524 |     cpu: [x64]
11501 |  525 |     os: [android]
11502 |  526 | 
11503 |  527 |   '@esbuild/darwin-arm64@0.21.5':
11504 |  528 |     resolution: {integrity: sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==}
11505 |  529 |     engines: {node: '>=12'}
11506 |  530 |     cpu: [arm64]
11507 |  531 |     os: [darwin]
11508 |  532 | 
11509 |  533 |   '@esbuild/darwin-arm64@0.23.1':
11510 |  534 |     resolution: {integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==}
11511 |  535 |     engines: {node: '>=18'}
11512 |  536 |     cpu: [arm64]
11513 |  537 |     os: [darwin]
11514 |  538 | 
11515 |  539 |   '@esbuild/darwin-arm64@0.24.2':
11516 |  540 |     resolution: {integrity: sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==}
11517 |  541 |     engines: {node: '>=18'}
11518 |  542 |     cpu: [arm64]
11519 |  543 |     os: [darwin]
11520 |  544 | 
11521 |  545 |   '@esbuild/darwin-x64@0.21.5':
11522 |  546 |     resolution: {integrity: sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==}
11523 |  547 |     engines: {node: '>=12'}
11524 |  548 |     cpu: [x64]
11525 |  549 |     os: [darwin]
11526 |  550 | 
11527 |  551 |   '@esbuild/darwin-x64@0.23.1':
11528 |  552 |     resolution: {integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==}
11529 |  553 |     engines: {node: '>=18'}
11530 |  554 |     cpu: [x64]
11531 |  555 |     os: [darwin]
11532 |  556 | 
11533 |  557 |   '@esbuild/darwin-x64@0.24.2':
11534 |  558 |     resolution: {integrity: sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==}
11535 |  559 |     engines: {node: '>=18'}
11536 |  560 |     cpu: [x64]
11537 |  561 |     os: [darwin]
11538 |  562 | 
11539 |  563 |   '@esbuild/freebsd-arm64@0.21.5':
11540 |  564 |     resolution: {integrity: sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==}
11541 |  565 |     engines: {node: '>=12'}
11542 |  566 |     cpu: [arm64]
11543 |  567 |     os: [freebsd]
11544 |  568 | 
11545 |  569 |   '@esbuild/freebsd-arm64@0.23.1':
11546 |  570 |     resolution: {integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==}
11547 |  571 |     engines: {node: '>=18'}
11548 |  572 |     cpu: [arm64]
11549 |  573 |     os: [freebsd]
11550 |  574 | 
11551 |  575 |   '@esbuild/freebsd-arm64@0.24.2':
11552 |  576 |     resolution: {integrity: sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==}
11553 |  577 |     engines: {node: '>=18'}
11554 |  578 |     cpu: [arm64]
11555 |  579 |     os: [freebsd]
11556 |  580 | 
11557 |  581 |   '@esbuild/freebsd-x64@0.21.5':
11558 |  582 |     resolution: {integrity: sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==}
11559 |  583 |     engines: {node: '>=12'}
11560 |  584 |     cpu: [x64]
11561 |  585 |     os: [freebsd]
11562 |  586 | 
11563 |  587 |   '@esbuild/freebsd-x64@0.23.1':
11564 |  588 |     resolution: {integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==}
11565 |  589 |     engines: {node: '>=18'}
11566 |  590 |     cpu: [x64]
11567 |  591 |     os: [freebsd]
11568 |  592 | 
11569 |  593 |   '@esbuild/freebsd-x64@0.24.2':
11570 |  594 |     resolution: {integrity: sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==}
11571 |  595 |     engines: {node: '>=18'}
11572 |  596 |     cpu: [x64]
11573 |  597 |     os: [freebsd]
11574 |  598 | 
11575 |  599 |   '@esbuild/linux-arm64@0.21.5':
11576 |  600 |     resolution: {integrity: sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==}
11577 |  601 |     engines: {node: '>=12'}
11578 |  602 |     cpu: [arm64]
11579 |  603 |     os: [linux]
11580 |  604 | 
11581 |  605 |   '@esbuild/linux-arm64@0.23.1':
11582 |  606 |     resolution: {integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==}
11583 |  607 |     engines: {node: '>=18'}
11584 |  608 |     cpu: [arm64]
11585 |  609 |     os: [linux]
11586 |  610 | 
11587 |  611 |   '@esbuild/linux-arm64@0.24.2':
11588 |  612 |     resolution: {integrity: sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==}
11589 |  613 |     engines: {node: '>=18'}
11590 |  614 |     cpu: [arm64]
11591 |  615 |     os: [linux]
11592 |  616 | 
11593 |  617 |   '@esbuild/linux-arm@0.21.5':
11594 |  618 |     resolution: {integrity: sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==}
11595 |  619 |     engines: {node: '>=12'}
11596 |  620 |     cpu: [arm]
11597 |  621 |     os: [linux]
11598 |  622 | 
11599 |  623 |   '@esbuild/linux-arm@0.23.1':
11600 |  624 |     resolution: {integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==}
11601 |  625 |     engines: {node: '>=18'}
11602 |  626 |     cpu: [arm]
11603 |  627 |     os: [linux]
11604 |  628 | 
11605 |  629 |   '@esbuild/linux-arm@0.24.2':
11606 |  630 |     resolution: {integrity: sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==}
11607 |  631 |     engines: {node: '>=18'}
11608 |  632 |     cpu: [arm]
11609 |  633 |     os: [linux]
11610 |  634 | 
11611 |  635 |   '@esbuild/linux-ia32@0.21.5':
11612 |  636 |     resolution: {integrity: sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==}
11613 |  637 |     engines: {node: '>=12'}
11614 |  638 |     cpu: [ia32]
11615 |  639 |     os: [linux]
11616 |  640 | 
11617 |  641 |   '@esbuild/linux-ia32@0.23.1':
11618 |  642 |     resolution: {integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==}
11619 |  643 |     engines: {node: '>=18'}
11620 |  644 |     cpu: [ia32]
11621 |  645 |     os: [linux]
11622 |  646 | 
11623 |  647 |   '@esbuild/linux-ia32@0.24.2':
11624 |  648 |     resolution: {integrity: sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==}
11625 |  649 |     engines: {node: '>=18'}
11626 |  650 |     cpu: [ia32]
11627 |  651 |     os: [linux]
11628 |  652 | 
11629 |  653 |   '@esbuild/linux-loong64@0.21.5':
11630 |  654 |     resolution: {integrity: sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==}
11631 |  655 |     engines: {node: '>=12'}
11632 |  656 |     cpu: [loong64]
11633 |  657 |     os: [linux]
11634 |  658 | 
11635 |  659 |   '@esbuild/linux-loong64@0.23.1':
11636 |  660 |     resolution: {integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==}
11637 |  661 |     engines: {node: '>=18'}
11638 |  662 |     cpu: [loong64]
11639 |  663 |     os: [linux]
11640 |  664 | 
11641 |  665 |   '@esbuild/linux-loong64@0.24.2':
11642 |  666 |     resolution: {integrity: sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==}
11643 |  667 |     engines: {node: '>=18'}
11644 |  668 |     cpu: [loong64]
11645 |  669 |     os: [linux]
11646 |  670 | 
11647 |  671 |   '@esbuild/linux-mips64el@0.21.5':
11648 |  672 |     resolution: {integrity: sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==}
11649 |  673 |     engines: {node: '>=12'}
11650 |  674 |     cpu: [mips64el]
11651 |  675 |     os: [linux]
11652 |  676 | 
11653 |  677 |   '@esbuild/linux-mips64el@0.23.1':
11654 |  678 |     resolution: {integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==}
11655 |  679 |     engines: {node: '>=18'}
11656 |  680 |     cpu: [mips64el]
11657 |  681 |     os: [linux]
11658 |  682 | 
11659 |  683 |   '@esbuild/linux-mips64el@0.24.2':
11660 |  684 |     resolution: {integrity: sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==}
11661 |  685 |     engines: {node: '>=18'}
11662 |  686 |     cpu: [mips64el]
11663 |  687 |     os: [linux]
11664 |  688 | 
11665 |  689 |   '@esbuild/linux-ppc64@0.21.5':
11666 |  690 |     resolution: {integrity: sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==}
11667 |  691 |     engines: {node: '>=12'}
11668 |  692 |     cpu: [ppc64]
11669 |  693 |     os: [linux]
11670 |  694 | 
11671 |  695 |   '@esbuild/linux-ppc64@0.23.1':
11672 |  696 |     resolution: {integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==}
11673 |  697 |     engines: {node: '>=18'}
11674 |  698 |     cpu: [ppc64]
11675 |  699 |     os: [linux]
11676 |  700 | 
11677 |  701 |   '@esbuild/linux-ppc64@0.24.2':
11678 |  702 |     resolution: {integrity: sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==}
11679 |  703 |     engines: {node: '>=18'}
11680 |  704 |     cpu: [ppc64]
11681 |  705 |     os: [linux]
11682 |  706 | 
11683 |  707 |   '@esbuild/linux-riscv64@0.21.5':
11684 |  708 |     resolution: {integrity: sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==}
11685 |  709 |     engines: {node: '>=12'}
11686 |  710 |     cpu: [riscv64]
11687 |  711 |     os: [linux]
11688 |  712 | 
11689 |  713 |   '@esbuild/linux-riscv64@0.23.1':
11690 |  714 |     resolution: {integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==}
11691 |  715 |     engines: {node: '>=18'}
11692 |  716 |     cpu: [riscv64]
11693 |  717 |     os: [linux]
11694 |  718 | 
11695 |  719 |   '@esbuild/linux-riscv64@0.24.2':
11696 |  720 |     resolution: {integrity: sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==}
11697 |  721 |     engines: {node: '>=18'}
11698 |  722 |     cpu: [riscv64]
11699 |  723 |     os: [linux]
11700 |  724 | 
11701 |  725 |   '@esbuild/linux-s390x@0.21.5':
11702 |  726 |     resolution: {integrity: sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==}
11703 |  727 |     engines: {node: '>=12'}
11704 |  728 |     cpu: [s390x]
11705 |  729 |     os: [linux]
11706 |  730 | 
11707 |  731 |   '@esbuild/linux-s390x@0.23.1':
11708 |  732 |     resolution: {integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==}
11709 |  733 |     engines: {node: '>=18'}
11710 |  734 |     cpu: [s390x]
11711 |  735 |     os: [linux]
11712 |  736 | 
11713 |  737 |   '@esbuild/linux-s390x@0.24.2':
11714 |  738 |     resolution: {integrity: sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==}
11715 |  739 |     engines: {node: '>=18'}
11716 |  740 |     cpu: [s390x]
11717 |  741 |     os: [linux]
11718 |  742 | 
11719 |  743 |   '@esbuild/linux-x64@0.21.5':
11720 |  744 |     resolution: {integrity: sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==}
11721 |  745 |     engines: {node: '>=12'}
11722 |  746 |     cpu: [x64]
11723 |  747 |     os: [linux]
11724 |  748 | 
11725 |  749 |   '@esbuild/linux-x64@0.23.1':
11726 |  750 |     resolution: {integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==}
11727 |  751 |     engines: {node: '>=18'}
11728 |  752 |     cpu: [x64]
11729 |  753 |     os: [linux]
11730 |  754 | 
11731 |  755 |   '@esbuild/linux-x64@0.24.2':
11732 |  756 |     resolution: {integrity: sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==}
11733 |  757 |     engines: {node: '>=18'}
11734 |  758 |     cpu: [x64]
11735 |  759 |     os: [linux]
11736 |  760 | 
11737 |  761 |   '@esbuild/netbsd-arm64@0.24.2':
11738 |  762 |     resolution: {integrity: sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==}
11739 |  763 |     engines: {node: '>=18'}
11740 |  764 |     cpu: [arm64]
11741 |  765 |     os: [netbsd]
11742 |  766 | 
11743 |  767 |   '@esbuild/netbsd-x64@0.21.5':
11744 |  768 |     resolution: {integrity: sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==}
11745 |  769 |     engines: {node: '>=12'}
11746 |  770 |     cpu: [x64]
11747 |  771 |     os: [netbsd]
11748 |  772 | 
11749 |  773 |   '@esbuild/netbsd-x64@0.23.1':
11750 |  774 |     resolution: {integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==}
11751 |  775 |     engines: {node: '>=18'}
11752 |  776 |     cpu: [x64]
11753 |  777 |     os: [netbsd]
11754 |  778 | 
11755 |  779 |   '@esbuild/netbsd-x64@0.24.2':
11756 |  780 |     resolution: {integrity: sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==}
11757 |  781 |     engines: {node: '>=18'}
11758 |  782 |     cpu: [x64]
11759 |  783 |     os: [netbsd]
11760 |  784 | 
11761 |  785 |   '@esbuild/openbsd-arm64@0.23.1':
11762 |  786 |     resolution: {integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==}
11763 |  787 |     engines: {node: '>=18'}
11764 |  788 |     cpu: [arm64]
11765 |  789 |     os: [openbsd]
11766 |  790 | 
11767 |  791 |   '@esbuild/openbsd-arm64@0.24.2':
11768 |  792 |     resolution: {integrity: sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==}
11769 |  793 |     engines: {node: '>=18'}
11770 |  794 |     cpu: [arm64]
11771 |  795 |     os: [openbsd]
11772 |  796 | 
11773 |  797 |   '@esbuild/openbsd-x64@0.21.5':
11774 |  798 |     resolution: {integrity: sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==}
11775 |  799 |     engines: {node: '>=12'}
11776 |  800 |     cpu: [x64]
11777 |  801 |     os: [openbsd]
11778 |  802 | 
11779 |  803 |   '@esbuild/openbsd-x64@0.23.1':
11780 |  804 |     resolution: {integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==}
11781 |  805 |     engines: {node: '>=18'}
11782 |  806 |     cpu: [x64]
11783 |  807 |     os: [openbsd]
11784 |  808 | 
11785 |  809 |   '@esbuild/openbsd-x64@0.24.2':
11786 |  810 |     resolution: {integrity: sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==}
11787 |  811 |     engines: {node: '>=18'}
11788 |  812 |     cpu: [x64]
11789 |  813 |     os: [openbsd]
11790 |  814 | 
11791 |  815 |   '@esbuild/sunos-x64@0.21.5':
11792 |  816 |     resolution: {integrity: sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==}
11793 |  817 |     engines: {node: '>=12'}
11794 |  818 |     cpu: [x64]
11795 |  819 |     os: [sunos]
11796 |  820 | 
11797 |  821 |   '@esbuild/sunos-x64@0.23.1':
11798 |  822 |     resolution: {integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==}
11799 |  823 |     engines: {node: '>=18'}
11800 |  824 |     cpu: [x64]
11801 |  825 |     os: [sunos]
11802 |  826 | 
11803 |  827 |   '@esbuild/sunos-x64@0.24.2':
11804 |  828 |     resolution: {integrity: sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==}
11805 |  829 |     engines: {node: '>=18'}
11806 |  830 |     cpu: [x64]
11807 |  831 |     os: [sunos]
11808 |  832 | 
11809 |  833 |   '@esbuild/win32-arm64@0.21.5':
11810 |  834 |     resolution: {integrity: sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==}
11811 |  835 |     engines: {node: '>=12'}
11812 |  836 |     cpu: [arm64]
11813 |  837 |     os: [win32]
11814 |  838 | 
11815 |  839 |   '@esbuild/win32-arm64@0.23.1':
11816 |  840 |     resolution: {integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==}
11817 |  841 |     engines: {node: '>=18'}
11818 |  842 |     cpu: [arm64]
11819 |  843 |     os: [win32]
11820 |  844 | 
11821 |  845 |   '@esbuild/win32-arm64@0.24.2':
11822 |  846 |     resolution: {integrity: sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==}
11823 |  847 |     engines: {node: '>=18'}
11824 |  848 |     cpu: [arm64]
11825 |  849 |     os: [win32]
11826 |  850 | 
11827 |  851 |   '@esbuild/win32-ia32@0.21.5':
11828 |  852 |     resolution: {integrity: sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==}
11829 |  853 |     engines: {node: '>=12'}
11830 |  854 |     cpu: [ia32]
11831 |  855 |     os: [win32]
11832 |  856 | 
11833 |  857 |   '@esbuild/win32-ia32@0.23.1':
11834 |  858 |     resolution: {integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==}
11835 |  859 |     engines: {node: '>=18'}
11836 |  860 |     cpu: [ia32]
11837 |  861 |     os: [win32]
11838 |  862 | 
11839 |  863 |   '@esbuild/win32-ia32@0.24.2':
11840 |  864 |     resolution: {integrity: sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==}
11841 |  865 |     engines: {node: '>=18'}
11842 |  866 |     cpu: [ia32]
11843 |  867 |     os: [win32]
11844 |  868 | 
11845 |  869 |   '@esbuild/win32-x64@0.21.5':
11846 |  870 |     resolution: {integrity: sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==}
11847 |  871 |     engines: {node: '>=12'}
11848 |  872 |     cpu: [x64]
11849 |  873 |     os: [win32]
11850 |  874 | 
11851 |  875 |   '@esbuild/win32-x64@0.23.1':
11852 |  876 |     resolution: {integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==}
11853 |  877 |     engines: {node: '>=18'}
11854 |  878 |     cpu: [x64]
11855 |  879 |     os: [win32]
11856 |  880 | 
11857 |  881 |   '@esbuild/win32-x64@0.24.2':
11858 |  882 |     resolution: {integrity: sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==}
11859 |  883 |     engines: {node: '>=18'}
11860 |  884 |     cpu: [x64]
11861 |  885 |     os: [win32]
11862 |  886 | 
11863 |  887 |   '@eslint-community/eslint-utils@4.4.1':
11864 |  888 |     resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}
11865 |  889 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
11866 |  890 |     peerDependencies:
11867 |  891 |       eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
11868 |  892 | 
11869 |  893 |   '@eslint-community/regexpp@4.12.1':
11870 |  894 |     resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
11871 |  895 |     engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}
11872 |  896 | 
11873 |  897 |   '@eslint/eslintrc@2.1.4':
11874 |  898 |     resolution: {integrity: sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==}
11875 |  899 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
11876 |  900 | 
11877 |  901 |   '@eslint/js@8.57.1':
11878 |  902 |     resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}
11879 |  903 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
11880 |  904 | 
11881 |  905 |   '@googlemaps/js-api-loader@1.16.8':
11882 |  906 |     resolution: {integrity: sha512-CROqqwfKotdO6EBjZO/gQGVTbeDps5V7Mt9+8+5Q+jTg5CRMi3Ii/L9PmV3USROrt2uWxtGzJHORmByxyo9pSQ==}
11883 |  907 | 
11884 |  908 |   '@googlemaps/markerclusterer@2.5.3':
11885 |  909 |     resolution: {integrity: sha512-x7lX0R5yYOoiNectr10wLgCBasNcXFHiADIBdmn7jQllF2B5ENQw5XtZK+hIw4xnV0Df0xhN4LN98XqA5jaiOw==}
11886 |  910 | 
11887 |  911 |   '@headlessui/react@1.7.19':
11888 |  912 |     resolution: {integrity: sha512-Ll+8q3OlMJfJbAKM/+/Y2q6PPYbryqNTXDbryx7SXLIDamkF6iQFbriYHga0dY44PvDhvvBWCx1Xj4U5+G4hOw==}
11889 |  913 |     engines: {node: '>=10'}
11890 |  914 |     peerDependencies:
11891 |  915 |       react: ^16 || ^17 || ^18
11892 |  916 |       react-dom: ^16 || ^17 || ^18
11893 |  917 | 
11894 |  918 |   '@heroicons/react@2.2.0':
11895 |  919 |     resolution: {integrity: sha512-LMcepvRaS9LYHJGsF0zzmgKCUim/X3N/DQKc4jepAXJ7l8QxJ1PmxJzqplF2Z3FE4PqBAIGyJAQ/w4B5dsqbtQ==}
11896 |  920 |     peerDependencies:
11897 |  921 |       react: '>= 16 || ^19.0.0-rc'
11898 |  922 | 
11899 |  923 |   '@humanwhocodes/config-array@0.13.0':
11900 |  924 |     resolution: {integrity: sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==}
11901 |  925 |     engines: {node: '>=10.10.0'}
11902 |  926 |     deprecated: Use @eslint/config-array instead
11903 |  927 | 
11904 |  928 |   '@humanwhocodes/module-importer@1.0.1':
11905 |  929 |     resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
11906 |  930 |     engines: {node: '>=12.22'}
11907 |  931 | 
11908 |  932 |   '@humanwhocodes/object-schema@2.0.3':
11909 |  933 |     resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}
11910 |  934 |     deprecated: Use @eslint/object-schema instead
11911 |  935 | 
11912 |  936 |   '@isaacs/cliui@8.0.2':
11913 |  937 |     resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}
11914 |  938 |     engines: {node: '>=12'}
11915 |  939 | 
11916 |  940 |   '@istanbuljs/load-nyc-config@1.1.0':
11917 |  941 |     resolution: {integrity: sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==}
11918 |  942 |     engines: {node: '>=8'}
11919 |  943 | 
11920 |  944 |   '@istanbuljs/schema@0.1.3':
11921 |  945 |     resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}
11922 |  946 |     engines: {node: '>=8'}
11923 |  947 | 
11924 |  948 |   '@jest/console@29.7.0':
11925 |  949 |     resolution: {integrity: sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==}
11926 |  950 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11927 |  951 | 
11928 |  952 |   '@jest/core@29.7.0':
11929 |  953 |     resolution: {integrity: sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==}
11930 |  954 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11931 |  955 |     peerDependencies:
11932 |  956 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
11933 |  957 |     peerDependenciesMeta:
11934 |  958 |       node-notifier:
11935 |  959 |         optional: true
11936 |  960 | 
11937 |  961 |   '@jest/environment@29.7.0':
11938 |  962 |     resolution: {integrity: sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==}
11939 |  963 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11940 |  964 | 
11941 |  965 |   '@jest/expect-utils@29.7.0':
11942 |  966 |     resolution: {integrity: sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==}
11943 |  967 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11944 |  968 | 
11945 |  969 |   '@jest/expect@29.7.0':
11946 |  970 |     resolution: {integrity: sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==}
11947 |  971 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11948 |  972 | 
11949 |  973 |   '@jest/fake-timers@29.7.0':
11950 |  974 |     resolution: {integrity: sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==}
11951 |  975 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11952 |  976 | 
11953 |  977 |   '@jest/globals@29.7.0':
11954 |  978 |     resolution: {integrity: sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==}
11955 |  979 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11956 |  980 | 
11957 |  981 |   '@jest/reporters@29.7.0':
11958 |  982 |     resolution: {integrity: sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==}
11959 |  983 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11960 |  984 |     peerDependencies:
11961 |  985 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
11962 |  986 |     peerDependenciesMeta:
11963 |  987 |       node-notifier:
11964 |  988 |         optional: true
11965 |  989 | 
11966 |  990 |   '@jest/schemas@29.6.3':
11967 |  991 |     resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}
11968 |  992 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11969 |  993 | 
11970 |  994 |   '@jest/source-map@29.6.3':
11971 |  995 |     resolution: {integrity: sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==}
11972 |  996 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11973 |  997 | 
11974 |  998 |   '@jest/test-result@29.7.0':
11975 |  999 |     resolution: {integrity: sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==}
11976 | 1000 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11977 | 1001 | 
11978 | 1002 |   '@jest/test-sequencer@29.7.0':
11979 | 1003 |     resolution: {integrity: sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==}
11980 | 1004 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11981 | 1005 | 
11982 | 1006 |   '@jest/transform@29.7.0':
11983 | 1007 |     resolution: {integrity: sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==}
11984 | 1008 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11985 | 1009 | 
11986 | 1010 |   '@jest/types@29.6.3':
11987 | 1011 |     resolution: {integrity: sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==}
11988 | 1012 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
11989 | 1013 | 
11990 | 1014 |   '@jridgewell/gen-mapping@0.3.8':
11991 | 1015 |     resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}
11992 | 1016 |     engines: {node: '>=6.0.0'}
11993 | 1017 | 
11994 | 1018 |   '@jridgewell/resolve-uri@3.1.2':
11995 | 1019 |     resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
11996 | 1020 |     engines: {node: '>=6.0.0'}
11997 | 1021 | 
11998 | 1022 |   '@jridgewell/set-array@1.2.1':
11999 | 1023 |     resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
12000 | 1024 |     engines: {node: '>=6.0.0'}
12001 | 1025 | 
12002 | 1026 |   '@jridgewell/sourcemap-codec@1.5.0':
12003 | 1027 |     resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}
12004 | 1028 | 
12005 | 1029 |   '@jridgewell/trace-mapping@0.3.25':
12006 | 1030 |     resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}
12007 | 1031 | 
12008 | 1032 |   '@jridgewell/trace-mapping@0.3.9':
12009 | 1033 |     resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}
12010 | 1034 | 
12011 | 1035 |   '@nodelib/fs.scandir@2.1.5':
12012 | 1036 |     resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
12013 | 1037 |     engines: {node: '>= 8'}
12014 | 1038 | 
12015 | 1039 |   '@nodelib/fs.stat@2.0.5':
12016 | 1040 |     resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
12017 | 1041 |     engines: {node: '>= 8'}
12018 | 1042 | 
12019 | 1043 |   '@nodelib/fs.walk@1.2.8':
12020 | 1044 |     resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
12021 | 1045 |     engines: {node: '>= 8'}
12022 | 1046 | 
12023 | 1047 |   '@pkgjs/parseargs@0.11.0':
12024 | 1048 |     resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}
12025 | 1049 |     engines: {node: '>=14'}
12026 | 1050 | 
12027 | 1051 |   '@prisma/client@5.22.0':
12028 | 1052 |     resolution: {integrity: sha512-M0SVXfyHnQREBKxCgyo7sffrKttwE6R8PMq330MIUF0pTwjUhLbW84pFDlf06B27XyCR++VtjugEnIHdr07SVA==}
12029 | 1053 |     engines: {node: '>=16.13'}
12030 | 1054 |     peerDependencies:
12031 | 1055 |       prisma: '*'
12032 | 1056 |     peerDependenciesMeta:
12033 | 1057 |       prisma:
12034 | 1058 |         optional: true
12035 | 1059 | 
12036 | 1060 |   '@prisma/debug@5.22.0':
12037 | 1061 |     resolution: {integrity: sha512-AUt44v3YJeggO2ZU5BkXI7M4hu9BF2zzH2iF2V5pyXT/lRTyWiElZ7It+bRH1EshoMRxHgpYg4VB6rCM+mG5jQ==}
12038 | 1062 | 
12039 | 1063 |   '@prisma/engines-version@5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2':
12040 | 1064 |     resolution: {integrity: sha512-2PTmxFR2yHW/eB3uqWtcgRcgAbG1rwG9ZriSvQw+nnb7c4uCr3RAcGMb6/zfE88SKlC1Nj2ziUvc96Z379mHgQ==}
12041 | 1065 | 
12042 | 1066 |   '@prisma/engines@5.22.0':
12043 | 1067 |     resolution: {integrity: sha512-UNjfslWhAt06kVL3CjkuYpHAWSO6L4kDCVPegV6itt7nD1kSJavd3vhgAEhjglLJJKEdJ7oIqDJ+yHk6qO8gPA==}
12044 | 1068 | 
12045 | 1069 |   '@prisma/fetch-engine@5.22.0':
12046 | 1070 |     resolution: {integrity: sha512-bkrD/Mc2fSvkQBV5EpoFcZ87AvOgDxbG99488a5cexp5Ccny+UM6MAe/UFkUC0wLYD9+9befNOqGiIJhhq+HbA==}
12047 | 1071 | 
12048 | 1072 |   '@prisma/get-platform@5.22.0':
12049 | 1073 |     resolution: {integrity: sha512-pHhpQdr1UPFpt+zFfnPazhulaZYCUqeIcPpJViYoq9R+D/yw4fjE+CtnsnKzPYm0ddUbeXUzjGVGIRVgPDCk4Q==}
12050 | 1074 | 
12051 | 1075 |   '@react-google-maps/api@2.20.5':
12052 | 1076 |     resolution: {integrity: sha512-Dx3faV4d7JXFSD7SB8ePIt5LOB72mNGHKFp/hIQVaPEsLJlEi4ID+XL6HM3Xw10AzGbr4KS/eQSi3OAaN7YttQ==}
12053 | 1077 |     peerDependencies:
12054 | 1078 |       react: ^16.8 || ^17 || ^18 || ^19
12055 | 1079 |       react-dom: ^16.8 || ^17 || ^18 || ^19
12056 | 1080 | 
12057 | 1081 |   '@react-google-maps/infobox@2.20.0':
12058 | 1082 |     resolution: {integrity: sha512-03PJHjohhaVLkX6+NHhlr8CIlvUxWaXhryqDjyaZ8iIqqix/nV8GFdz9O3m5OsjtxtNho09F/15j14yV0nuyLQ==}
12059 | 1083 | 
12060 | 1084 |   '@react-google-maps/marker-clusterer@2.20.0':
12061 | 1085 |     resolution: {integrity: sha512-tieX9Va5w1yP88vMgfH1pHTacDQ9TgDTjox3tLlisKDXRQWdjw+QeVVghhf5XqqIxXHgPdcGwBvKY6UP+SIvLw==}
12062 | 1086 | 
12063 | 1087 |   '@remix-run/router@1.21.0':
12064 | 1088 |     resolution: {integrity: sha512-xfSkCAchbdG5PnbrKqFWwia4Bi61nH+wm8wLEqfHDyp7Y3dZzgqS2itV8i4gAq9pC2HsTpwyBC6Ds8VHZ96JlA==}
12065 | 1089 |     engines: {node: '>=14.0.0'}
12066 | 1090 | 
12067 | 1091 |   '@rollup/rollup-android-arm-eabi@4.30.1':
12068 | 1092 |     resolution: {integrity: sha512-pSWY+EVt3rJ9fQ3IqlrEUtXh3cGqGtPDH1FQlNZehO2yYxCHEX1SPsz1M//NXwYfbTlcKr9WObLnJX9FsS9K1Q==}
12069 | 1093 |     cpu: [arm]
12070 | 1094 |     os: [android]
12071 | 1095 | 
12072 | 1096 |   '@rollup/rollup-android-arm64@4.30.1':
12073 | 1097 |     resolution: {integrity: sha512-/NA2qXxE3D/BRjOJM8wQblmArQq1YoBVJjrjoTSBS09jgUisq7bqxNHJ8kjCHeV21W/9WDGwJEWSN0KQ2mtD/w==}
12074 | 1098 |     cpu: [arm64]
12075 | 1099 |     os: [android]
12076 | 1100 | 
12077 | 1101 |   '@rollup/rollup-darwin-arm64@4.30.1':
12078 | 1102 |     resolution: {integrity: sha512-r7FQIXD7gB0WJ5mokTUgUWPl0eYIH0wnxqeSAhuIwvnnpjdVB8cRRClyKLQr7lgzjctkbp5KmswWszlwYln03Q==}
12079 | 1103 |     cpu: [arm64]
12080 | 1104 |     os: [darwin]
12081 | 1105 | 
12082 | 1106 |   '@rollup/rollup-darwin-x64@4.30.1':
12083 | 1107 |     resolution: {integrity: sha512-x78BavIwSH6sqfP2xeI1hd1GpHL8J4W2BXcVM/5KYKoAD3nNsfitQhvWSw+TFtQTLZ9OmlF+FEInEHyubut2OA==}
12084 | 1108 |     cpu: [x64]
12085 | 1109 |     os: [darwin]
12086 | 1110 | 
12087 | 1111 |   '@rollup/rollup-freebsd-arm64@4.30.1':
12088 | 1112 |     resolution: {integrity: sha512-HYTlUAjbO1z8ywxsDFWADfTRfTIIy/oUlfIDmlHYmjUP2QRDTzBuWXc9O4CXM+bo9qfiCclmHk1x4ogBjOUpUQ==}
12089 | 1113 |     cpu: [arm64]
12090 | 1114 |     os: [freebsd]
12091 | 1115 | 
12092 | 1116 |   '@rollup/rollup-freebsd-x64@4.30.1':
12093 | 1117 |     resolution: {integrity: sha512-1MEdGqogQLccphhX5myCJqeGNYTNcmTyaic9S7CG3JhwuIByJ7J05vGbZxsizQthP1xpVx7kd3o31eOogfEirw==}
12094 | 1118 |     cpu: [x64]
12095 | 1119 |     os: [freebsd]
12096 | 1120 | 
12097 | 1121 |   '@rollup/rollup-linux-arm-gnueabihf@4.30.1':
12098 | 1122 |     resolution: {integrity: sha512-PaMRNBSqCx7K3Wc9QZkFx5+CX27WFpAMxJNiYGAXfmMIKC7jstlr32UhTgK6T07OtqR+wYlWm9IxzennjnvdJg==}
12099 | 1123 |     cpu: [arm]
12100 | 1124 |     os: [linux]
12101 | 1125 | 
12102 | 1126 |   '@rollup/rollup-linux-arm-musleabihf@4.30.1':
12103 | 1127 |     resolution: {integrity: sha512-B8Rcyj9AV7ZlEFqvB5BubG5iO6ANDsRKlhIxySXcF1axXYUyqwBok+XZPgIYGBgs7LDXfWfifxhw0Ik57T0Yug==}
12104 | 1128 |     cpu: [arm]
12105 | 1129 |     os: [linux]
12106 | 1130 | 
12107 | 1131 |   '@rollup/rollup-linux-arm64-gnu@4.30.1':
12108 | 1132 |     resolution: {integrity: sha512-hqVyueGxAj3cBKrAI4aFHLV+h0Lv5VgWZs9CUGqr1z0fZtlADVV1YPOij6AhcK5An33EXaxnDLmJdQikcn5NEw==}
12109 | 1133 |     cpu: [arm64]
12110 | 1134 |     os: [linux]
12111 | 1135 | 
12112 | 1136 |   '@rollup/rollup-linux-arm64-musl@4.30.1':
12113 | 1137 |     resolution: {integrity: sha512-i4Ab2vnvS1AE1PyOIGp2kXni69gU2DAUVt6FSXeIqUCPIR3ZlheMW3oP2JkukDfu3PsexYRbOiJrY+yVNSk9oA==}
12114 | 1138 |     cpu: [arm64]
12115 | 1139 |     os: [linux]
12116 | 1140 | 
12117 | 1141 |   '@rollup/rollup-linux-loongarch64-gnu@4.30.1':
12118 | 1142 |     resolution: {integrity: sha512-fARcF5g296snX0oLGkVxPmysetwUk2zmHcca+e9ObOovBR++9ZPOhqFUM61UUZ2EYpXVPN1redgqVoBB34nTpQ==}
12119 | 1143 |     cpu: [loong64]
12120 | 1144 |     os: [linux]
12121 | 1145 | 
12122 | 1146 |   '@rollup/rollup-linux-powerpc64le-gnu@4.30.1':
12123 | 1147 |     resolution: {integrity: sha512-GLrZraoO3wVT4uFXh67ElpwQY0DIygxdv0BNW9Hkm3X34wu+BkqrDrkcsIapAY+N2ATEbvak0XQ9gxZtCIA5Rw==}
12124 | 1148 |     cpu: [ppc64]
12125 | 1149 |     os: [linux]
12126 | 1150 | 
12127 | 1151 |   '@rollup/rollup-linux-riscv64-gnu@4.30.1':
12128 | 1152 |     resolution: {integrity: sha512-0WKLaAUUHKBtll0wvOmh6yh3S0wSU9+yas923JIChfxOaaBarmb/lBKPF0w/+jTVozFnOXJeRGZ8NvOxvk/jcw==}
12129 | 1153 |     cpu: [riscv64]
12130 | 1154 |     os: [linux]
12131 | 1155 | 
12132 | 1156 |   '@rollup/rollup-linux-s390x-gnu@4.30.1':
12133 | 1157 |     resolution: {integrity: sha512-GWFs97Ruxo5Bt+cvVTQkOJ6TIx0xJDD/bMAOXWJg8TCSTEK8RnFeOeiFTxKniTc4vMIaWvCplMAFBt9miGxgkA==}
12134 | 1158 |     cpu: [s390x]
12135 | 1159 |     os: [linux]
12136 | 1160 | 
12137 | 1161 |   '@rollup/rollup-linux-x64-gnu@4.30.1':
12138 | 1162 |     resolution: {integrity: sha512-UtgGb7QGgXDIO+tqqJ5oZRGHsDLO8SlpE4MhqpY9Llpzi5rJMvrK6ZGhsRCST2abZdBqIBeXW6WPD5fGK5SDwg==}
12139 | 1163 |     cpu: [x64]
12140 | 1164 |     os: [linux]
12141 | 1165 | 
12142 | 1166 |   '@rollup/rollup-linux-x64-musl@4.30.1':
12143 | 1167 |     resolution: {integrity: sha512-V9U8Ey2UqmQsBT+xTOeMzPzwDzyXmnAoO4edZhL7INkwQcaW1Ckv3WJX3qrrp/VHaDkEWIBWhRwP47r8cdrOow==}
12144 | 1168 |     cpu: [x64]
12145 | 1169 |     os: [linux]
12146 | 1170 | 
12147 | 1171 |   '@rollup/rollup-win32-arm64-msvc@4.30.1':
12148 | 1172 |     resolution: {integrity: sha512-WabtHWiPaFF47W3PkHnjbmWawnX/aE57K47ZDT1BXTS5GgrBUEpvOzq0FI0V/UYzQJgdb8XlhVNH8/fwV8xDjw==}
12149 | 1173 |     cpu: [arm64]
12150 | 1174 |     os: [win32]
12151 | 1175 | 
12152 | 1176 |   '@rollup/rollup-win32-ia32-msvc@4.30.1':
12153 | 1177 |     resolution: {integrity: sha512-pxHAU+Zv39hLUTdQQHUVHf4P+0C47y/ZloorHpzs2SXMRqeAWmGghzAhfOlzFHHwjvgokdFAhC4V+6kC1lRRfw==}
12154 | 1178 |     cpu: [ia32]
12155 | 1179 |     os: [win32]
12156 | 1180 | 
12157 | 1181 |   '@rollup/rollup-win32-x64-msvc@4.30.1':
12158 | 1182 |     resolution: {integrity: sha512-D6qjsXGcvhTjv0kI4fU8tUuBDF/Ueee4SVX79VfNDXZa64TfCW1Slkb6Z7O1p7vflqZjcmOVdZlqf8gvJxc6og==}
12159 | 1183 |     cpu: [x64]
12160 | 1184 |     os: [win32]
12161 | 1185 | 
12162 | 1186 |   '@sinclair/typebox@0.27.8':
12163 | 1187 |     resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}
12164 | 1188 | 
12165 | 1189 |   '@sinonjs/commons@3.0.1':
12166 | 1190 |     resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}
12167 | 1191 | 
12168 | 1192 |   '@sinonjs/fake-timers@10.3.0':
12169 | 1193 |     resolution: {integrity: sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==}
12170 | 1194 | 
12171 | 1195 |   '@swc/core-darwin-arm64@1.10.7':
12172 | 1196 |     resolution: {integrity: sha512-SI0OFg987P6hcyT0Dbng3YRISPS9uhLX1dzW4qRrfqQdb0i75lPJ2YWe9CN47HBazrIA5COuTzrD2Dc0TcVsSQ==}
12173 | 1197 |     engines: {node: '>=10'}
12174 | 1198 |     cpu: [arm64]
12175 | 1199 |     os: [darwin]
12176 | 1200 | 
12177 | 1201 |   '@swc/core-darwin-x64@1.10.7':
12178 | 1202 |     resolution: {integrity: sha512-RFIAmWVicD/l3RzxgHW0R/G1ya/6nyMspE2cAeDcTbjHi0I5qgdhBWd6ieXOaqwEwiCd0Mot1g2VZrLGoBLsjQ==}
12179 | 1203 |     engines: {node: '>=10'}
12180 | 1204 |     cpu: [x64]
12181 | 1205 |     os: [darwin]
12182 | 1206 | 
12183 | 1207 |   '@swc/core-linux-arm-gnueabihf@1.10.7':
12184 | 1208 |     resolution: {integrity: sha512-QP8vz7yELWfop5mM5foN6KkLylVO7ZUgWSF2cA0owwIaziactB2hCPZY5QU690coJouk9KmdFsPWDnaCFUP8tg==}
12185 | 1209 |     engines: {node: '>=10'}
12186 | 1210 |     cpu: [arm]
12187 | 1211 |     os: [linux]
12188 | 1212 | 
12189 | 1213 |   '@swc/core-linux-arm64-gnu@1.10.7':
12190 | 1214 |     resolution: {integrity: sha512-NgUDBGQcOeLNR+EOpmUvSDIP/F7i/OVOKxst4wOvT5FTxhnkWrW+StJGKj+DcUVSK5eWOYboSXr1y+Hlywwokw==}
12191 | 1215 |     engines: {node: '>=10'}
12192 | 1216 |     cpu: [arm64]
12193 | 1217 |     os: [linux]
12194 | 1218 | 
12195 | 1219 |   '@swc/core-linux-arm64-musl@1.10.7':
12196 | 1220 |     resolution: {integrity: sha512-gp5Un3EbeSThBIh6oac5ZArV/CsSmTKj5jNuuUAuEsML3VF9vqPO+25VuxCvsRf/z3py+xOWRaN2HY/rjMeZog==}
12197 | 1221 |     engines: {node: '>=10'}
12198 | 1222 |     cpu: [arm64]
12199 | 1223 |     os: [linux]
12200 | 1224 | 
12201 | 1225 |   '@swc/core-linux-x64-gnu@1.10.7':
12202 | 1226 |     resolution: {integrity: sha512-k/OxLLMl/edYqbZyUNg6/bqEHTXJT15l9WGqsl/2QaIGwWGvles8YjruQYQ9d4h/thSXLT9gd8bExU2D0N+bUA==}
12203 | 1227 |     engines: {node: '>=10'}
12204 | 1228 |     cpu: [x64]
12205 | 1229 |     os: [linux]
12206 | 1230 | 
12207 | 1231 |   '@swc/core-linux-x64-musl@1.10.7':
12208 | 1232 |     resolution: {integrity: sha512-XeDoURdWt/ybYmXLCEE8aSiTOzEn0o3Dx5l9hgt0IZEmTts7HgHHVeRgzGXbR4yDo0MfRuX5nE1dYpTmCz0uyA==}
12209 | 1233 |     engines: {node: '>=10'}
12210 | 1234 |     cpu: [x64]
12211 | 1235 |     os: [linux]
12212 | 1236 | 
12213 | 1237 |   '@swc/core-win32-arm64-msvc@1.10.7':
12214 | 1238 |     resolution: {integrity: sha512-nYAbi/uLS+CU0wFtBx8TquJw2uIMKBnl04LBmiVoFrsIhqSl+0MklaA9FVMGA35NcxSJfcm92Prl2W2LfSnTqQ==}
12215 | 1239 |     engines: {node: '>=10'}
12216 | 1240 |     cpu: [arm64]
12217 | 1241 |     os: [win32]
12218 | 1242 | 
12219 | 1243 |   '@swc/core-win32-ia32-msvc@1.10.7':
12220 | 1244 |     resolution: {integrity: sha512-+aGAbsDsIxeLxw0IzyQLtvtAcI1ctlXVvVcXZMNXIXtTURM876yNrufRo4ngoXB3jnb1MLjIIjgXfFs/eZTUSw==}
12221 | 1245 |     engines: {node: '>=10'}
12222 | 1246 |     cpu: [ia32]
12223 | 1247 |     os: [win32]
12224 | 1248 | 
12225 | 1249 |   '@swc/core-win32-x64-msvc@1.10.7':
12226 | 1250 |     resolution: {integrity: sha512-TBf4clpDBjF/UUnkKrT0/th76/zwvudk5wwobiTFqDywMApHip5O0VpBgZ+4raY2TM8k5+ujoy7bfHb22zu17Q==}
12227 | 1251 |     engines: {node: '>=10'}
12228 | 1252 |     cpu: [x64]
12229 | 1253 |     os: [win32]
12230 | 1254 | 
12231 | 1255 |   '@swc/core@1.10.7':
12232 | 1256 |     resolution: {integrity: sha512-py91kjI1jV5D5W/Q+PurBdGsdU5TFbrzamP7zSCqLdMcHkKi3rQEM5jkQcZr0MXXSJTaayLxS3MWYTBIkzPDrg==}
12233 | 1257 |     engines: {node: '>=10'}
12234 | 1258 |     peerDependencies:
12235 | 1259 |       '@swc/helpers': '*'
12236 | 1260 |     peerDependenciesMeta:
12237 | 1261 |       '@swc/helpers':
12238 | 1262 |         optional: true
12239 | 1263 | 
12240 | 1264 |   '@swc/counter@0.1.3':
12241 | 1265 |     resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}
12242 | 1266 | 
12243 | 1267 |   '@swc/types@0.1.17':
12244 | 1268 |     resolution: {integrity: sha512-V5gRru+aD8YVyCOMAjMpWR1Ui577DD5KSJsHP8RAxopAH22jFz6GZd/qxqjO6MJHQhcsjvjOFXyDhyLQUnMveQ==}
12245 | 1269 | 
12246 | 1270 |   '@tanstack/query-core@5.64.1':
12247 | 1271 |     resolution: {integrity: sha512-978Wx4Wl4UJZbmvU/rkaM9cQtXXrbhK0lsz/UZhYIbyKYA8E4LdomTwyh2GHZ4oU0BKKoDH4YlKk2VscCUgNmg==}
12248 | 1272 | 
12249 | 1273 |   '@tanstack/query-devtools@5.62.16':
12250 | 1274 |     resolution: {integrity: sha512-3ff6UBJr0H3nIhfLSl9911rvKqXf0u4B58jl0uYdDWLqPk9pCvYIbxC35cGxK2+8INl4IaFVUHb/IdgWrNkg3Q==}
12251 | 1275 | 
12252 | 1276 |   '@tanstack/react-query-devtools@5.64.1':
12253 | 1277 |     resolution: {integrity: sha512-8ajcGE3wXYlb4KuJnkFYkJwJKc/qmPNTpQD7YTgLRMBPTGGp1xk7VMzxL87DoXuweO8luplUUblJJ3noVs/luQ==}
12254 | 1278 |     peerDependencies:
12255 | 1279 |       '@tanstack/react-query': ^5.64.1
12256 | 1280 |       react: ^18 || ^19
12257 | 1281 | 
12258 | 1282 |   '@tanstack/react-query@5.64.1':
12259 | 1283 |     resolution: {integrity: sha512-vW5ggHpIO2Yjj44b4sB+Fd3cdnlMJppXRBJkEHvld6FXh3j5dwWJoQo7mGtKI2RbSFyiyu/PhGAy0+Vv5ev9Eg==}
12260 | 1284 |     peerDependencies:
12261 | 1285 |       react: ^18 || ^19
12262 | 1286 | 
12263 | 1287 |   '@tanstack/react-virtual@3.11.2':
12264 | 1288 |     resolution: {integrity: sha512-OuFzMXPF4+xZgx8UzJha0AieuMihhhaWG0tCqpp6tDzlFwOmNBPYMuLOtMJ1Tr4pXLHmgjcWhG6RlknY2oNTdQ==}
12265 | 1289 |     peerDependencies:
12266 | 1290 |       react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
12267 | 1291 |       react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
12268 | 1292 | 
12269 | 1293 |   '@tanstack/virtual-core@3.11.2':
12270 | 1294 |     resolution: {integrity: sha512-vTtpNt7mKCiZ1pwU9hfKPhpdVO2sVzFQsxoVBGtOSHxlrRRzYr8iQ2TlwbAcRYCcEiZ9ECAM8kBzH0v2+VzfKw==}
12271 | 1295 | 
12272 | 1296 |   '@testing-library/dom@9.3.4':
12273 | 1297 |     resolution: {integrity: sha512-FlS4ZWlp97iiNWig0Muq8p+3rVDjRiYE+YKGbAqXOu9nwJFFOdL00kFpz42M+4huzYi86vAK1sOOfyOG45muIQ==}
12274 | 1298 |     engines: {node: '>=14'}
12275 | 1299 | 
12276 | 1300 |   '@testing-library/jest-dom@6.6.3':
12277 | 1301 |     resolution: {integrity: sha512-IteBhl4XqYNkM54f4ejhLRJiZNqcSCoXUOG2CPK7qbD322KjQozM4kHQOfkG2oln9b9HTYqs+Sae8vBATubxxA==}
12278 | 1302 |     engines: {node: '>=14', npm: '>=6', yarn: '>=1'}
12279 | 1303 | 
12280 | 1304 |   '@testing-library/react@14.3.1':
12281 | 1305 |     resolution: {integrity: sha512-H99XjUhWQw0lTgyMN05W3xQG1Nh4lq574D8keFf1dDoNTJgp66VbJozRaczoF+wsiaPJNt/TcnfpLGufGxSrZQ==}
12282 | 1306 |     engines: {node: '>=14'}
12283 | 1307 |     peerDependencies:
12284 | 1308 |       react: ^18.0.0
12285 | 1309 |       react-dom: ^18.0.0
12286 | 1310 | 
12287 | 1311 |   '@testing-library/user-event@14.5.2':
12288 | 1312 |     resolution: {integrity: sha512-YAh82Wh4TIrxYLmfGcixwD18oIjyC1pFQC2Y01F2lzV2HTMiYrI0nze0FD0ocB//CKS/7jIUgae+adPqxK5yCQ==}
12289 | 1313 |     engines: {node: '>=12', npm: '>=6'}
12290 | 1314 |     peerDependencies:
12291 | 1315 |       '@testing-library/dom': '>=7.21.4'
12292 | 1316 | 
12293 | 1317 |   '@tsconfig/node10@1.0.11':
12294 | 1318 |     resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}
12295 | 1319 | 
12296 | 1320 |   '@tsconfig/node12@1.0.11':
12297 | 1321 |     resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}
12298 | 1322 | 
12299 | 1323 |   '@tsconfig/node14@1.0.3':
12300 | 1324 |     resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}
12301 | 1325 | 
12302 | 1326 |   '@tsconfig/node16@1.0.4':
12303 | 1327 |     resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}
12304 | 1328 | 
12305 | 1329 |   '@types/aria-query@5.0.4':
12306 | 1330 |     resolution: {integrity: sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==}
12307 | 1331 | 
12308 | 1332 |   '@types/babel__core@7.20.5':
12309 | 1333 |     resolution: {integrity: sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==}
12310 | 1334 | 
12311 | 1335 |   '@types/babel__generator@7.6.8':
12312 | 1336 |     resolution: {integrity: sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==}
12313 | 1337 | 
12314 | 1338 |   '@types/babel__template@7.4.4':
12315 | 1339 |     resolution: {integrity: sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==}
12316 | 1340 | 
12317 | 1341 |   '@types/babel__traverse@7.20.6':
12318 | 1342 |     resolution: {integrity: sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==}
12319 | 1343 | 
12320 | 1344 |   '@types/bcryptjs@2.4.6':
12321 | 1345 |     resolution: {integrity: sha512-9xlo6R2qDs5uixm0bcIqCeMCE6HiQsIyel9KQySStiyqNl2tnj2mP3DX1Nf56MD6KMenNNlBBsy3LJ7gUEQPXQ==}
12322 | 1346 | 
12323 | 1347 |   '@types/body-parser@1.19.5':
12324 | 1348 |     resolution: {integrity: sha512-fB3Zu92ucau0iQ0JMCFQE7b/dv8Ot07NI3KaZIkIUNXq82k4eBAqUaneXfleGY9JWskeS9y+u0nXMyspcuQrCg==}
12325 | 1349 | 
12326 | 1350 |   '@types/connect@3.4.38':
12327 | 1351 |     resolution: {integrity: sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==}
12328 | 1352 | 
12329 | 1353 |   '@types/cookiejar@2.1.5':
12330 | 1354 |     resolution: {integrity: sha512-he+DHOWReW0nghN24E1WUqM0efK4kI9oTqDm6XmK8ZPe2djZ90BSNdGnIyCLzCPw7/pogPlGbzI2wHGGmi4O/Q==}
12331 | 1355 | 
12332 | 1356 |   '@types/cors@2.8.17':
12333 | 1357 |     resolution: {integrity: sha512-8CGDvrBj1zgo2qE+oS3pOCyYNqCPryMWY2bGfwA0dcfopWGgxs+78df0Rs3rc9THP4JkOhLsAa+15VdpAqkcUA==}
12334 | 1358 | 
12335 | 1359 |   '@types/estree@1.0.6':
12336 | 1360 |     resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}
12337 | 1361 | 
12338 | 1362 |   '@types/express-serve-static-core@4.19.6':
12339 | 1363 |     resolution: {integrity: sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==}
12340 | 1364 | 
12341 | 1365 |   '@types/express@4.17.21':
12342 | 1366 |     resolution: {integrity: sha512-ejlPM315qwLpaQlQDTjPdsUFSc6ZsP4AN6AlWnogPjQ7CVi7PYF3YVz+CY3jE2pwYf7E/7HlDAN0rV2GxTG0HQ==}
12343 | 1367 | 
12344 | 1368 |   '@types/google.maps@3.58.1':
12345 | 1369 |     resolution: {integrity: sha512-X9QTSvGJ0nCfMzYOnaVs/k6/4L+7F5uCS+4iUmkLEls6J9S/Phv+m/i3mDeyc49ZBgwab3EFO1HEoBY7k98EGQ==}
12346 | 1370 | 
12347 | 1371 |   '@types/graceful-fs@4.1.9':
12348 | 1372 |     resolution: {integrity: sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==}
12349 | 1373 | 
12350 | 1374 |   '@types/http-errors@2.0.4':
12351 | 1375 |     resolution: {integrity: sha512-D0CFMMtydbJAegzOyHjtiKPLlvnm3iTZyZRSZoLq2mRhDdmLfIWOCYPfQJ4cu2erKghU++QvjcUjp/5h7hESpA==}
12352 | 1376 | 
12353 | 1377 |   '@types/istanbul-lib-coverage@2.0.6':
12354 | 1378 |     resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}
12355 | 1379 | 
12356 | 1380 |   '@types/istanbul-lib-report@3.0.3':
12357 | 1381 |     resolution: {integrity: sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==}
12358 | 1382 | 
12359 | 1383 |   '@types/istanbul-reports@3.0.4':
12360 | 1384 |     resolution: {integrity: sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==}
12361 | 1385 | 
12362 | 1386 |   '@types/jest@29.5.14':
12363 | 1387 |     resolution: {integrity: sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==}
12364 | 1388 | 
12365 | 1389 |   '@types/json-schema@7.0.15':
12366 | 1390 |     resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
12367 | 1391 | 
12368 | 1392 |   '@types/jsonwebtoken@9.0.7':
12369 | 1393 |     resolution: {integrity: sha512-ugo316mmTYBl2g81zDFnZ7cfxlut3o+/EQdaP7J8QN2kY6lJ22hmQYCK5EHcJHbrW+dkCGSCPgbG8JtYj6qSrg==}
12370 | 1394 | 
12371 | 1395 |   '@types/methods@1.1.4':
12372 | 1396 |     resolution: {integrity: sha512-ymXWVrDiCxTBE3+RIrrP533E70eA+9qu7zdWoHuOmGujkYtzf4HQF96b8nwHLqhuf4ykX61IGRIB38CC6/sImQ==}
12373 | 1397 | 
12374 | 1398 |   '@types/mime@1.3.5':
12375 | 1399 |     resolution: {integrity: sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==}
12376 | 1400 | 
12377 | 1401 |   '@types/morgan@1.9.9':
12378 | 1402 |     resolution: {integrity: sha512-iRYSDKVaC6FkGSpEVVIvrRGw0DfJMiQzIn3qr2G5B3C//AWkulhXgaBd7tS9/J79GWSYMTHGs7PfI5b3Y8m+RQ==}
12379 | 1403 | 
12380 | 1404 |   '@types/multer@1.4.12':
12381 | 1405 |     resolution: {integrity: sha512-pQ2hoqvXiJt2FP9WQVLPRO+AmiIm/ZYkavPlIQnx282u4ZrVdztx0pkh3jjpQt0Kz+YI0YhSG264y08UJKoUQg==}
12382 | 1406 | 
12383 | 1407 |   '@types/node@20.17.12':
12384 | 1408 |     resolution: {integrity: sha512-vo/wmBgMIiEA23A/knMfn/cf37VnuF52nZh5ZoW0GWt4e4sxNquibrMRJ7UQsA06+MBx9r/H1jsI9grYjQCQlw==}
12385 | 1409 | 
12386 | 1410 |   '@types/nodemailer@6.4.17':
12387 | 1411 |     resolution: {integrity: sha512-I9CCaIp6DTldEg7vyUTZi8+9Vo0hi1/T8gv3C89yk1rSAAzoKQ8H8ki/jBYJSFoH/BisgLP8tkZMlQ91CIquww==}
12388 | 1412 | 
12389 | 1413 |   '@types/prop-types@15.7.14':
12390 | 1414 |     resolution: {integrity: sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==}
12391 | 1415 | 
12392 | 1416 |   '@types/qs@6.9.17':
12393 | 1417 |     resolution: {integrity: sha512-rX4/bPcfmvxHDv0XjfJELTTr+iB+tn032nPILqHm5wbthUUUuVtNGGqzhya9XUxjTP8Fpr0qYgSZZKxGY++svQ==}
12394 | 1418 | 
12395 | 1419 |   '@types/range-parser@1.2.7':
12396 | 1420 |     resolution: {integrity: sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==}
12397 | 1421 | 
12398 | 1422 |   '@types/react-dom@18.3.5':
12399 | 1423 |     resolution: {integrity: sha512-P4t6saawp+b/dFrUr2cvkVsfvPguwsxtH6dNIYRllMsefqFzkZk5UIjzyDOv5g1dXIPdG4Sp1yCR4Z6RCUsG/Q==}
12400 | 1424 |     peerDependencies:
12401 | 1425 |       '@types/react': ^18.0.0
12402 | 1426 | 
12403 | 1427 |   '@types/react-transition-group@4.4.12':
12404 | 1428 |     resolution: {integrity: sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==}
12405 | 1429 |     peerDependencies:
12406 | 1430 |       '@types/react': '*'
12407 | 1431 | 
12408 | 1432 |   '@types/react@18.3.18':
12409 | 1433 |     resolution: {integrity: sha512-t4yC+vtgnkYjNSKlFx1jkAhH8LgTo2N/7Qvi83kdEaUtMDiwpbLAktKDaAMlRcJ5eSxZkH74eEGt1ky31d7kfQ==}
12410 | 1434 | 
12411 | 1435 |   '@types/semver@7.5.8':
12412 | 1436 |     resolution: {integrity: sha512-I8EUhyrgfLrcTkzV3TSsGyl1tSuPrEDzr0yd5m90UgNxQkyDXULk3b6MlQqTCpZpNtWe1K0hzclnZkTcLBe2UQ==}
12413 | 1437 | 
12414 | 1438 |   '@types/send@0.17.4':
12415 | 1439 |     resolution: {integrity: sha512-x2EM6TJOybec7c52BX0ZspPodMsQUd5L6PRwOunVyVUhXiBSKf3AezDL8Dgvgt5o0UfKNfuA0eMLr2wLT4AiBA==}
12416 | 1440 | 
12417 | 1441 |   '@types/serve-static@1.15.7':
12418 | 1442 |     resolution: {integrity: sha512-W8Ym+h8nhuRwaKPaDw34QUkwsGi6Rc4yYqvKFo5rm2FUEhCFbzVWrxXUxuKK8TASjWsysJY0nsmNCGhCOIsrOw==}
12419 | 1443 | 
12420 | 1444 |   '@types/stack-utils@2.0.3':
12421 | 1445 |     resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}
12422 | 1446 | 
12423 | 1447 |   '@types/superagent@8.1.9':
12424 | 1448 |     resolution: {integrity: sha512-pTVjI73witn+9ILmoJdajHGW2jkSaOzhiFYF1Rd3EQ94kymLqB9PjD9ISg7WaALC7+dCHT0FGe9T2LktLq/3GQ==}
12425 | 1449 | 
12426 | 1450 |   '@types/supertest@6.0.2':
12427 | 1451 |     resolution: {integrity: sha512-137ypx2lk/wTQbW6An6safu9hXmajAifU/s7szAHLN/FeIm5w7yR0Wkl9fdJMRSHwOn4HLAI0DaB2TOORuhPDg==}
12428 | 1452 | 
12429 | 1453 |   '@types/triple-beam@1.3.5':
12430 | 1454 |     resolution: {integrity: sha512-6WaYesThRMCl19iryMYP7/x2OVgCtbIVflDGFpWnb9irXI3UjYE4AzmYuiUKY1AJstGijoY+MgUszMgRxIYTYw==}
12431 | 1455 | 
12432 | 1456 |   '@types/yargs-parser@21.0.3':
12433 | 1457 |     resolution: {integrity: sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==}
12434 | 1458 | 
12435 | 1459 |   '@types/yargs@17.0.33':
12436 | 1460 |     resolution: {integrity: sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==}
12437 | 1461 | 
12438 | 1462 |   '@typescript-eslint/eslint-plugin@6.21.0':
12439 | 1463 |     resolution: {integrity: sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==}
12440 | 1464 |     engines: {node: ^16.0.0 || >=18.0.0}
12441 | 1465 |     peerDependencies:
12442 | 1466 |       '@typescript-eslint/parser': ^6.0.0 || ^6.0.0-alpha
12443 | 1467 |       eslint: ^7.0.0 || ^8.0.0
12444 | 1468 |       typescript: '*'
12445 | 1469 |     peerDependenciesMeta:
12446 | 1470 |       typescript:
12447 | 1471 |         optional: true
12448 | 1472 | 
12449 | 1473 |   '@typescript-eslint/parser@6.21.0':
12450 | 1474 |     resolution: {integrity: sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==}
12451 | 1475 |     engines: {node: ^16.0.0 || >=18.0.0}
12452 | 1476 |     peerDependencies:
12453 | 1477 |       eslint: ^7.0.0 || ^8.0.0
12454 | 1478 |       typescript: '*'
12455 | 1479 |     peerDependenciesMeta:
12456 | 1480 |       typescript:
12457 | 1481 |         optional: true
12458 | 1482 | 
12459 | 1483 |   '@typescript-eslint/scope-manager@6.21.0':
12460 | 1484 |     resolution: {integrity: sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==}
12461 | 1485 |     engines: {node: ^16.0.0 || >=18.0.0}
12462 | 1486 | 
12463 | 1487 |   '@typescript-eslint/type-utils@6.21.0':
12464 | 1488 |     resolution: {integrity: sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==}
12465 | 1489 |     engines: {node: ^16.0.0 || >=18.0.0}
12466 | 1490 |     peerDependencies:
12467 | 1491 |       eslint: ^7.0.0 || ^8.0.0
12468 | 1492 |       typescript: '*'
12469 | 1493 |     peerDependenciesMeta:
12470 | 1494 |       typescript:
12471 | 1495 |         optional: true
12472 | 1496 | 
12473 | 1497 |   '@typescript-eslint/types@6.21.0':
12474 | 1498 |     resolution: {integrity: sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==}
12475 | 1499 |     engines: {node: ^16.0.0 || >=18.0.0}
12476 | 1500 | 
12477 | 1501 |   '@typescript-eslint/typescript-estree@6.21.0':
12478 | 1502 |     resolution: {integrity: sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==}
12479 | 1503 |     engines: {node: ^16.0.0 || >=18.0.0}
12480 | 1504 |     peerDependencies:
12481 | 1505 |       typescript: '*'
12482 | 1506 |     peerDependenciesMeta:
12483 | 1507 |       typescript:
12484 | 1508 |         optional: true
12485 | 1509 | 
12486 | 1510 |   '@typescript-eslint/utils@6.21.0':
12487 | 1511 |     resolution: {integrity: sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==}
12488 | 1512 |     engines: {node: ^16.0.0 || >=18.0.0}
12489 | 1513 |     peerDependencies:
12490 | 1514 |       eslint: ^7.0.0 || ^8.0.0
12491 | 1515 | 
12492 | 1516 |   '@typescript-eslint/visitor-keys@6.21.0':
12493 | 1517 |     resolution: {integrity: sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==}
12494 | 1518 |     engines: {node: ^16.0.0 || >=18.0.0}
12495 | 1519 | 
12496 | 1520 |   '@ungap/structured-clone@1.2.1':
12497 | 1521 |     resolution: {integrity: sha512-fEzPV3hSkSMltkw152tJKNARhOupqbH96MZWyRjNaYZOMIzbrTeQDG+MTc6Mr2pgzFQzFxAfmhGDNP5QK++2ZA==}
12498 | 1522 | 
12499 | 1523 |   '@vitejs/plugin-react-swc@3.7.2':
12500 | 1524 |     resolution: {integrity: sha512-y0byko2b2tSVVf5Gpng1eEhX1OvPC7x8yns1Fx8jDzlJp4LS6CMkCPfLw47cjyoMrshQDoQw4qcgjsU9VvlCew==}
12501 | 1525 |     peerDependencies:
12502 | 1526 |       vite: ^4 || ^5 || ^6
12503 | 1527 | 
12504 | 1528 |   '@vitejs/plugin-react@4.3.4':
12505 | 1529 |     resolution: {integrity: sha512-SCCPBJtYLdE8PX/7ZQAs1QAZ8Jqwih+0VBLum1EGqmCCQal+MIUqLCzj3ZUy8ufbC0cAM4LRlSTm7IQJwWT4ug==}
12506 | 1530 |     engines: {node: ^14.18.0 || >=16.0.0}
12507 | 1531 |     peerDependencies:
12508 | 1532 |       vite: ^4.2.0 || ^5.0.0 || ^6.0.0
12509 | 1533 | 
12510 | 1534 |   '@vitest/coverage-v8@1.6.0':
12511 | 1535 |     resolution: {integrity: sha512-KvapcbMY/8GYIG0rlwwOKCVNRc0OL20rrhFkg/CHNzncV03TE2XWvO5w9uZYoxNiMEBacAJt3unSOiZ7svePew==}
12512 | 1536 |     peerDependencies:
12513 | 1537 |       vitest: 1.6.0
12514 | 1538 | 
12515 | 1539 |   '@vitest/expect@1.6.0':
12516 | 1540 |     resolution: {integrity: sha512-ixEvFVQjycy/oNgHjqsL6AZCDduC+tflRluaHIzKIsdbzkLn2U/iBnVeJwB6HsIjQBdfMR8Z0tRxKUsvFJEeWQ==}
12517 | 1541 | 
12518 | 1542 |   '@vitest/runner@1.6.0':
12519 | 1543 |     resolution: {integrity: sha512-P4xgwPjwesuBiHisAVz/LSSZtDjOTPYZVmNAnpHHSR6ONrf8eCJOFRvUwdHn30F5M1fxhqtl7QZQUk2dprIXAg==}
12520 | 1544 | 
12521 | 1545 |   '@vitest/snapshot@1.6.0':
12522 | 1546 |     resolution: {integrity: sha512-+Hx43f8Chus+DCmygqqfetcAZrDJwvTj0ymqjQq4CvmpKFSTVteEOBzCusu1x2tt4OJcvBflyHUE0DZSLgEMtQ==}
12523 | 1547 | 
12524 | 1548 |   '@vitest/spy@1.6.0':
12525 | 1549 |     resolution: {integrity: sha512-leUTap6B/cqi/bQkXUu6bQV5TZPx7pmMBKBQiI0rJA8c3pB56ZsaTbREnF7CJfmvAS4V2cXIBAh/3rVwrrCYgw==}
12526 | 1550 | 
12527 | 1551 |   '@vitest/utils@1.6.0':
12528 | 1552 |     resolution: {integrity: sha512-21cPiuGMoMZwiOHa2i4LXkMkMkCGzA+MVFV70jRwHo95dL4x/ts5GZhML1QWuy7yfp3WzK3lRvZi3JnXTYqrBw==}
12529 | 1553 | 
12530 | 1554 |   accepts@1.3.8:
12531 | 1555 |     resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}
12532 | 1556 |     engines: {node: '>= 0.6'}
12533 | 1557 | 
12534 | 1558 |   acorn-jsx@5.3.2:
12535 | 1559 |     resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
12536 | 1560 |     peerDependencies:
12537 | 1561 |       acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
12538 | 1562 | 
12539 | 1563 |   acorn-walk@8.3.4:
12540 | 1564 |     resolution: {integrity: sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==}
12541 | 1565 |     engines: {node: '>=0.4.0'}
12542 | 1566 | 
12543 | 1567 |   acorn@8.14.0:
12544 | 1568 |     resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}
12545 | 1569 |     engines: {node: '>=0.4.0'}
12546 | 1570 |     hasBin: true
12547 | 1571 | 
12548 | 1572 |   ajv@6.12.6:
12549 | 1573 |     resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
12550 | 1574 | 
12551 | 1575 |   ansi-escapes@4.3.2:
12552 | 1576 |     resolution: {integrity: sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==}
12553 | 1577 |     engines: {node: '>=8'}
12554 | 1578 | 
12555 | 1579 |   ansi-regex@5.0.1:
12556 | 1580 |     resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
12557 | 1581 |     engines: {node: '>=8'}
12558 | 1582 | 
12559 | 1583 |   ansi-regex@6.1.0:
12560 | 1584 |     resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}
12561 | 1585 |     engines: {node: '>=12'}
12562 | 1586 | 
12563 | 1587 |   ansi-styles@4.3.0:
12564 | 1588 |     resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
12565 | 1589 |     engines: {node: '>=8'}
12566 | 1590 | 
12567 | 1591 |   ansi-styles@5.2.0:
12568 | 1592 |     resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}
12569 | 1593 |     engines: {node: '>=10'}
12570 | 1594 | 
12571 | 1595 |   ansi-styles@6.2.1:
12572 | 1596 |     resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
12573 | 1597 |     engines: {node: '>=12'}
12574 | 1598 | 
12575 | 1599 |   any-promise@1.3.0:
12576 | 1600 |     resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}
12577 | 1601 | 
12578 | 1602 |   anymatch@3.1.3:
12579 | 1603 |     resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
12580 | 1604 |     engines: {node: '>= 8'}
12581 | 1605 | 
12582 | 1606 |   append-field@1.0.0:
12583 | 1607 |     resolution: {integrity: sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==}
12584 | 1608 | 
12585 | 1609 |   arg@4.1.3:
12586 | 1610 |     resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}
12587 | 1611 | 
12588 | 1612 |   arg@5.0.2:
12589 | 1613 |     resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}
12590 | 1614 | 
12591 | 1615 |   argparse@1.0.10:
12592 | 1616 |     resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}
12593 | 1617 | 
12594 | 1618 |   argparse@2.0.1:
12595 | 1619 |     resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}
12596 | 1620 | 
12597 | 1621 |   aria-query@5.1.3:
12598 | 1622 |     resolution: {integrity: sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==}
12599 | 1623 | 
12600 | 1624 |   aria-query@5.3.2:
12601 | 1625 |     resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}
12602 | 1626 |     engines: {node: '>= 0.4'}
12603 | 1627 | 
12604 | 1628 |   array-buffer-byte-length@1.0.2:
12605 | 1629 |     resolution: {integrity: sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==}
12606 | 1630 |     engines: {node: '>= 0.4'}
12607 | 1631 | 
12608 | 1632 |   array-flatten@1.1.1:
12609 | 1633 |     resolution: {integrity: sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==}
12610 | 1634 | 
12611 | 1635 |   array-union@2.1.0:
12612 | 1636 |     resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}
12613 | 1637 |     engines: {node: '>=8'}
12614 | 1638 | 
12615 | 1639 |   asap@2.0.6:
12616 | 1640 |     resolution: {integrity: sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==}
12617 | 1641 | 
12618 | 1642 |   assertion-error@1.1.0:
12619 | 1643 |     resolution: {integrity: sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==}
12620 | 1644 | 
12621 | 1645 |   async@3.2.6:
12622 | 1646 |     resolution: {integrity: sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==}
12623 | 1647 | 
12624 | 1648 |   asynckit@0.4.0:
12625 | 1649 |     resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}
12626 | 1650 | 
12627 | 1651 |   autoprefixer@10.4.20:
12628 | 1652 |     resolution: {integrity: sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==}
12629 | 1653 |     engines: {node: ^10 || ^12 || >=14}
12630 | 1654 |     hasBin: true
12631 | 1655 |     peerDependencies:
12632 | 1656 |       postcss: ^8.1.0
12633 | 1657 | 
12634 | 1658 |   available-typed-arrays@1.0.7:
12635 | 1659 |     resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
12636 | 1660 |     engines: {node: '>= 0.4'}
12637 | 1661 | 
12638 | 1662 |   axios@1.7.9:
12639 | 1663 |     resolution: {integrity: sha512-LhLcE7Hbiryz8oMDdDptSrWowmB4Bl6RCt6sIJKpRB4XtVf0iEgewX3au/pJqm+Py1kCASkb/FFKjxQaLtxJvw==}
12640 | 1664 | 
12641 | 1665 |   babel-jest@29.7.0:
12642 | 1666 |     resolution: {integrity: sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==}
12643 | 1667 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
12644 | 1668 |     peerDependencies:
12645 | 1669 |       '@babel/core': ^7.8.0
12646 | 1670 | 
12647 | 1671 |   babel-plugin-istanbul@6.1.1:
12648 | 1672 |     resolution: {integrity: sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==}
12649 | 1673 |     engines: {node: '>=8'}
12650 | 1674 | 
12651 | 1675 |   babel-plugin-jest-hoist@29.6.3:
12652 | 1676 |     resolution: {integrity: sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==}
12653 | 1677 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
12654 | 1678 | 
12655 | 1679 |   babel-preset-current-node-syntax@1.1.0:
12656 | 1680 |     resolution: {integrity: sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==}
12657 | 1681 |     peerDependencies:
12658 | 1682 |       '@babel/core': ^7.0.0
12659 | 1683 | 
12660 | 1684 |   babel-preset-jest@29.6.3:
12661 | 1685 |     resolution: {integrity: sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==}
12662 | 1686 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
12663 | 1687 |     peerDependencies:
12664 | 1688 |       '@babel/core': ^7.0.0
12665 | 1689 | 
12666 | 1690 |   balanced-match@1.0.2:
12667 | 1691 |     resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
12668 | 1692 | 
12669 | 1693 |   basic-auth@2.0.1:
12670 | 1694 |     resolution: {integrity: sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==}
12671 | 1695 |     engines: {node: '>= 0.8'}
12672 | 1696 | 
12673 | 1697 |   bcryptjs@2.4.3:
12674 | 1698 |     resolution: {integrity: sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==}
12675 | 1699 | 
12676 | 1700 |   binary-extensions@2.3.0:
12677 | 1701 |     resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
12678 | 1702 |     engines: {node: '>=8'}
12679 | 1703 | 
12680 | 1704 |   body-parser@1.20.3:
12681 | 1705 |     resolution: {integrity: sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==}
12682 | 1706 |     engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}
12683 | 1707 | 
12684 | 1708 |   brace-expansion@1.1.11:
12685 | 1709 |     resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}
12686 | 1710 | 
12687 | 1711 |   brace-expansion@2.0.1:
12688 | 1712 |     resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}
12689 | 1713 | 
12690 | 1714 |   braces@3.0.3:
12691 | 1715 |     resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
12692 | 1716 |     engines: {node: '>=8'}
12693 | 1717 | 
12694 | 1718 |   browserslist@4.24.4:
12695 | 1719 |     resolution: {integrity: sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==}
12696 | 1720 |     engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
12697 | 1721 |     hasBin: true
12698 | 1722 | 
12699 | 1723 |   bs-logger@0.2.6:
12700 | 1724 |     resolution: {integrity: sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==}
12701 | 1725 |     engines: {node: '>= 6'}
12702 | 1726 | 
12703 | 1727 |   bser@2.1.1:
12704 | 1728 |     resolution: {integrity: sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==}
12705 | 1729 | 
12706 | 1730 |   buffer-equal-constant-time@1.0.1:
12707 | 1731 |     resolution: {integrity: sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==}
12708 | 1732 | 
12709 | 1733 |   buffer-from@1.1.2:
12710 | 1734 |     resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}
12711 | 1735 | 
12712 | 1736 |   bundle-require@5.1.0:
12713 | 1737 |     resolution: {integrity: sha512-3WrrOuZiyaaZPWiEt4G3+IffISVC9HYlWueJEBWED4ZH4aIAC2PnkdnuRrR94M+w6yGWn4AglWtJtBI8YqvgoA==}
12714 | 1738 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
12715 | 1739 |     peerDependencies:
12716 | 1740 |       esbuild: '>=0.18'
12717 | 1741 | 
12718 | 1742 |   busboy@1.6.0:
12719 | 1743 |     resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}
12720 | 1744 |     engines: {node: '>=10.16.0'}
12721 | 1745 | 
12722 | 1746 |   bytes@3.1.2:
12723 | 1747 |     resolution: {integrity: sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==}
12724 | 1748 |     engines: {node: '>= 0.8'}
12725 | 1749 | 
12726 | 1750 |   cac@6.7.14:
12727 | 1751 |     resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}
12728 | 1752 |     engines: {node: '>=8'}
12729 | 1753 | 
12730 | 1754 |   call-bind-apply-helpers@1.0.1:
12731 | 1755 |     resolution: {integrity: sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==}
12732 | 1756 |     engines: {node: '>= 0.4'}
12733 | 1757 | 
12734 | 1758 |   call-bind@1.0.8:
12735 | 1759 |     resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}
12736 | 1760 |     engines: {node: '>= 0.4'}
12737 | 1761 | 
12738 | 1762 |   call-bound@1.0.3:
12739 | 1763 |     resolution: {integrity: sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==}
12740 | 1764 |     engines: {node: '>= 0.4'}
12741 | 1765 | 
12742 | 1766 |   callsites@3.1.0:
12743 | 1767 |     resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
12744 | 1768 |     engines: {node: '>=6'}
12745 | 1769 | 
12746 | 1770 |   camelcase-css@2.0.1:
12747 | 1771 |     resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
12748 | 1772 |     engines: {node: '>= 6'}
12749 | 1773 | 
12750 | 1774 |   camelcase@5.3.1:
12751 | 1775 |     resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}
12752 | 1776 |     engines: {node: '>=6'}
12753 | 1777 | 
12754 | 1778 |   camelcase@6.3.0:
12755 | 1779 |     resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}
12756 | 1780 |     engines: {node: '>=10'}
12757 | 1781 | 
12758 | 1782 |   caniuse-lite@1.0.30001692:
12759 | 1783 |     resolution: {integrity: sha512-A95VKan0kdtrsnMubMKxEKUKImOPSuCpYgxSQBo036P5YYgVIcOYJEgt/txJWqObiRQeISNCfef9nvlQ0vbV7A==}
12760 | 1784 | 
12761 | 1785 |   chai@4.5.0:
12762 | 1786 |     resolution: {integrity: sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==}
12763 | 1787 |     engines: {node: '>=4'}
12764 | 1788 | 
12765 | 1789 |   chalk@3.0.0:
12766 | 1790 |     resolution: {integrity: sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==}
12767 | 1791 |     engines: {node: '>=8'}
12768 | 1792 | 
12769 | 1793 |   chalk@4.1.2:
12770 | 1794 |     resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
12771 | 1795 |     engines: {node: '>=10'}
12772 | 1796 | 
12773 | 1797 |   char-regex@1.0.2:
12774 | 1798 |     resolution: {integrity: sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==}
12775 | 1799 |     engines: {node: '>=10'}
12776 | 1800 | 
12777 | 1801 |   check-error@1.0.3:
12778 | 1802 |     resolution: {integrity: sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==}
12779 | 1803 | 
12780 | 1804 |   chokidar@3.6.0:
12781 | 1805 |     resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
12782 | 1806 |     engines: {node: '>= 8.10.0'}
12783 | 1807 | 
12784 | 1808 |   chokidar@4.0.3:
12785 | 1809 |     resolution: {integrity: sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==}
12786 | 1810 |     engines: {node: '>= 14.16.0'}
12787 | 1811 | 
12788 | 1812 |   ci-info@3.9.0:
12789 | 1813 |     resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}
12790 | 1814 |     engines: {node: '>=8'}
12791 | 1815 | 
12792 | 1816 |   cjs-module-lexer@1.4.1:
12793 | 1817 |     resolution: {integrity: sha512-cuSVIHi9/9E/+821Qjdvngor+xpnlwnuwIyZOaLmHBVdXL+gP+I6QQB9VkO7RI77YIcTV+S1W9AreJ5eN63JBA==}
12794 | 1818 | 
12795 | 1819 |   client-only@0.0.1:
12796 | 1820 |     resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}
12797 | 1821 | 
12798 | 1822 |   cliui@8.0.1:
12799 | 1823 |     resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
12800 | 1824 |     engines: {node: '>=12'}
12801 | 1825 | 
12802 | 1826 |   clsx@2.1.1:
12803 | 1827 |     resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}
12804 | 1828 |     engines: {node: '>=6'}
12805 | 1829 | 
12806 | 1830 |   co@4.6.0:
12807 | 1831 |     resolution: {integrity: sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==}
12808 | 1832 |     engines: {iojs: '>= 1.0.0', node: '>= 0.12.0'}
12809 | 1833 | 
12810 | 1834 |   collect-v8-coverage@1.0.2:
12811 | 1835 |     resolution: {integrity: sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==}
12812 | 1836 | 
12813 | 1837 |   color-convert@1.9.3:
12814 | 1838 |     resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}
12815 | 1839 | 
12816 | 1840 |   color-convert@2.0.1:
12817 | 1841 |     resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
12818 | 1842 |     engines: {node: '>=7.0.0'}
12819 | 1843 | 
12820 | 1844 |   color-name@1.1.3:
12821 | 1845 |     resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}
12822 | 1846 | 
12823 | 1847 |   color-name@1.1.4:
12824 | 1848 |     resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}
12825 | 1849 | 
12826 | 1850 |   color-string@1.9.1:
12827 | 1851 |     resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}
12828 | 1852 | 
12829 | 1853 |   color@3.2.1:
12830 | 1854 |     resolution: {integrity: sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==}
12831 | 1855 | 
12832 | 1856 |   colorspace@1.1.4:
12833 | 1857 |     resolution: {integrity: sha512-BgvKJiuVu1igBUF2kEjRCZXol6wiiGbY5ipL/oVPwm0BL9sIpMIzM8IK7vwuxIIzOXMV3Ey5w+vxhm0rR/TN8w==}
12834 | 1858 | 
12835 | 1859 |   combined-stream@1.0.8:
12836 | 1860 |     resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}
12837 | 1861 |     engines: {node: '>= 0.8'}
12838 | 1862 | 
12839 | 1863 |   commander@4.1.1:
12840 | 1864 |     resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}
12841 | 1865 |     engines: {node: '>= 6'}
12842 | 1866 | 
12843 | 1867 |   component-emitter@1.3.1:
12844 | 1868 |     resolution: {integrity: sha512-T0+barUSQRTUQASh8bx02dl+DhF54GtIDY13Y3m9oWTklKbb3Wv974meRpeZ3lp1JpLVECWWNHC4vaG2XHXouQ==}
12845 | 1869 | 
12846 | 1870 |   concat-map@0.0.1:
12847 | 1871 |     resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
12848 | 1872 | 
12849 | 1873 |   concat-stream@1.6.2:
12850 | 1874 |     resolution: {integrity: sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==}
12851 | 1875 |     engines: {'0': node >= 0.8}
12852 | 1876 | 
12853 | 1877 |   confbox@0.1.8:
12854 | 1878 |     resolution: {integrity: sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==}
12855 | 1879 | 
12856 | 1880 |   consola@3.4.0:
12857 | 1881 |     resolution: {integrity: sha512-EiPU8G6dQG0GFHNR8ljnZFki/8a+cQwEQ+7wpxdChl02Q8HXlwEZWD5lqAF8vC2sEC3Tehr8hy7vErz88LHyUA==}
12858 | 1882 |     engines: {node: ^14.18.0 || >=16.10.0}
12859 | 1883 | 
12860 | 1884 |   content-disposition@0.5.4:
12861 | 1885 |     resolution: {integrity: sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==}
12862 | 1886 |     engines: {node: '>= 0.6'}
12863 | 1887 | 
12864 | 1888 |   content-type@1.0.5:
12865 | 1889 |     resolution: {integrity: sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==}
12866 | 1890 |     engines: {node: '>= 0.6'}
12867 | 1891 | 
12868 | 1892 |   convert-source-map@2.0.0:
12869 | 1893 |     resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}
12870 | 1894 | 
12871 | 1895 |   cookie-signature@1.0.6:
12872 | 1896 |     resolution: {integrity: sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==}
12873 | 1897 | 
12874 | 1898 |   cookie@0.7.1:
12875 | 1899 |     resolution: {integrity: sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==}
12876 | 1900 |     engines: {node: '>= 0.6'}
12877 | 1901 | 
12878 | 1902 |   cookiejar@2.1.4:
12879 | 1903 |     resolution: {integrity: sha512-LDx6oHrK+PhzLKJU9j5S7/Y3jM/mUHvD/DeI1WQmJn652iPC5Y4TBzC9l+5OMOXlyTTA+SmVUPm0HQUwpD5Jqw==}
12880 | 1904 | 
12881 | 1905 |   core-util-is@1.0.3:
12882 | 1906 |     resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}
12883 | 1907 | 
12884 | 1908 |   cors@2.8.5:
12885 | 1909 |     resolution: {integrity: sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==}
12886 | 1910 |     engines: {node: '>= 0.10'}
12887 | 1911 | 
12888 | 1912 |   create-jest@29.7.0:
12889 | 1913 |     resolution: {integrity: sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==}
12890 | 1914 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
12891 | 1915 |     hasBin: true
12892 | 1916 | 
12893 | 1917 |   create-require@1.1.1:
12894 | 1918 |     resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}
12895 | 1919 | 
12896 | 1920 |   cross-env@7.0.3:
12897 | 1921 |     resolution: {integrity: sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==}
12898 | 1922 |     engines: {node: '>=10.14', npm: '>=6', yarn: '>=1'}
12899 | 1923 |     hasBin: true
12900 | 1924 | 
12901 | 1925 |   cross-spawn@7.0.6:
12902 | 1926 |     resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
12903 | 1927 |     engines: {node: '>= 8'}
12904 | 1928 | 
12905 | 1929 |   css.escape@1.5.1:
12906 | 1930 |     resolution: {integrity: sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==}
12907 | 1931 | 
12908 | 1932 |   cssesc@3.0.0:
12909 | 1933 |     resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
12910 | 1934 |     engines: {node: '>=4'}
12911 | 1935 |     hasBin: true
12912 | 1936 | 
12913 | 1937 |   csstype@3.1.3:
12914 | 1938 |     resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
12915 | 1939 | 
12916 | 1940 |   debug@2.6.9:
12917 | 1941 |     resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}
12918 | 1942 |     peerDependencies:
12919 | 1943 |       supports-color: '*'
12920 | 1944 |     peerDependenciesMeta:
12921 | 1945 |       supports-color:
12922 | 1946 |         optional: true
12923 | 1947 | 
12924 | 1948 |   debug@4.4.0:
12925 | 1949 |     resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}
12926 | 1950 |     engines: {node: '>=6.0'}
12927 | 1951 |     peerDependencies:
12928 | 1952 |       supports-color: '*'
12929 | 1953 |     peerDependenciesMeta:
12930 | 1954 |       supports-color:
12931 | 1955 |         optional: true
12932 | 1956 | 
12933 | 1957 |   dedent@1.5.3:
12934 | 1958 |     resolution: {integrity: sha512-NHQtfOOW68WD8lgypbLA5oT+Bt0xXJhiYvoR6SmmNXZfpzOGXwdKWmcwG8N7PwVVWV3eF/68nmD9BaJSsTBhyQ==}
12935 | 1959 |     peerDependencies:
12936 | 1960 |       babel-plugin-macros: ^3.1.0
12937 | 1961 |     peerDependenciesMeta:
12938 | 1962 |       babel-plugin-macros:
12939 | 1963 |         optional: true
12940 | 1964 | 
12941 | 1965 |   deep-eql@4.1.4:
12942 | 1966 |     resolution: {integrity: sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==}
12943 | 1967 |     engines: {node: '>=6'}
12944 | 1968 | 
12945 | 1969 |   deep-equal@2.2.3:
12946 | 1970 |     resolution: {integrity: sha512-ZIwpnevOurS8bpT4192sqAowWM76JDKSHYzMLty3BZGSswgq6pBaH3DhCSW5xVAZICZyKdOBPjwww5wfgT/6PA==}
12947 | 1971 |     engines: {node: '>= 0.4'}
12948 | 1972 | 
12949 | 1973 |   deep-is@0.1.4:
12950 | 1974 |     resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
12951 | 1975 | 
12952 | 1976 |   deepmerge@4.3.1:
12953 | 1977 |     resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}
12954 | 1978 |     engines: {node: '>=0.10.0'}
12955 | 1979 | 
12956 | 1980 |   define-data-property@1.1.4:
12957 | 1981 |     resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
12958 | 1982 |     engines: {node: '>= 0.4'}
12959 | 1983 | 
12960 | 1984 |   define-properties@1.2.1:
12961 | 1985 |     resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
12962 | 1986 |     engines: {node: '>= 0.4'}
12963 | 1987 | 
12964 | 1988 |   delayed-stream@1.0.0:
12965 | 1989 |     resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}
12966 | 1990 |     engines: {node: '>=0.4.0'}
12967 | 1991 | 
12968 | 1992 |   depd@2.0.0:
12969 | 1993 |     resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}
12970 | 1994 |     engines: {node: '>= 0.8'}
12971 | 1995 | 
12972 | 1996 |   destroy@1.2.0:
12973 | 1997 |     resolution: {integrity: sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==}
12974 | 1998 |     engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}
12975 | 1999 | 
12976 | 2000 |   detect-newline@3.1.0:
12977 | 2001 |     resolution: {integrity: sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==}
12978 | 2002 |     engines: {node: '>=8'}
12979 | 2003 | 
12980 | 2004 |   dezalgo@1.0.4:
12981 | 2005 |     resolution: {integrity: sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==}
12982 | 2006 | 
12983 | 2007 |   didyoumean@1.2.2:
12984 | 2008 |     resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}
12985 | 2009 | 
12986 | 2010 |   diff-sequences@29.6.3:
12987 | 2011 |     resolution: {integrity: sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==}
12988 | 2012 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
12989 | 2013 | 
12990 | 2014 |   diff@4.0.2:
12991 | 2015 |     resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}
12992 | 2016 |     engines: {node: '>=0.3.1'}
12993 | 2017 | 
12994 | 2018 |   dir-glob@3.0.1:
12995 | 2019 |     resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}
12996 | 2020 |     engines: {node: '>=8'}
12997 | 2021 | 
12998 | 2022 |   dlv@1.1.3:
12999 | 2023 |     resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}
13000 | 2024 | 
13001 | 2025 |   doctrine@3.0.0:
13002 | 2026 |     resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}
13003 | 2027 |     engines: {node: '>=6.0.0'}
13004 | 2028 | 
13005 | 2029 |   dom-accessibility-api@0.5.16:
13006 | 2030 |     resolution: {integrity: sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==}
13007 | 2031 | 
13008 | 2032 |   dom-accessibility-api@0.6.3:
13009 | 2033 |     resolution: {integrity: sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==}
13010 | 2034 | 
13011 | 2035 |   dom-helpers@5.2.1:
13012 | 2036 |     resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}
13013 | 2037 | 
13014 | 2038 |   dotenv@16.4.7:
13015 | 2039 |     resolution: {integrity: sha512-47qPchRCykZC03FhkYAhrvwU4xDBFIj1QPqaarj6mdM/hgUzfPHcpkHJOn3mJAufFeeAxAzeGsr5X0M4k6fLZQ==}
13016 | 2040 |     engines: {node: '>=12'}
13017 | 2041 | 
13018 | 2042 |   dunder-proto@1.0.1:
13019 | 2043 |     resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
13020 | 2044 |     engines: {node: '>= 0.4'}
13021 | 2045 | 
13022 | 2046 |   eastasianwidth@0.2.0:
13023 | 2047 |     resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}
13024 | 2048 | 
13025 | 2049 |   ecdsa-sig-formatter@1.0.11:
13026 | 2050 |     resolution: {integrity: sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==}
13027 | 2051 | 
13028 | 2052 |   ee-first@1.1.1:
13029 | 2053 |     resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}
13030 | 2054 | 
13031 | 2055 |   ejs@3.1.10:
13032 | 2056 |     resolution: {integrity: sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==}
13033 | 2057 |     engines: {node: '>=0.10.0'}
13034 | 2058 |     hasBin: true
13035 | 2059 | 
13036 | 2060 |   electron-to-chromium@1.5.80:
13037 | 2061 |     resolution: {integrity: sha512-LTrKpW0AqIuHwmlVNV+cjFYTnXtM9K37OGhpe0ZI10ScPSxqVSryZHIY3WnCS5NSYbBODRTZyhRMS2h5FAEqAw==}
13038 | 2062 | 
13039 | 2063 |   emittery@0.13.1:
13040 | 2064 |     resolution: {integrity: sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==}
13041 | 2065 |     engines: {node: '>=12'}
13042 | 2066 | 
13043 | 2067 |   emoji-regex@8.0.0:
13044 | 2068 |     resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}
13045 | 2069 | 
13046 | 2070 |   emoji-regex@9.2.2:
13047 | 2071 |     resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}
13048 | 2072 | 
13049 | 2073 |   enabled@2.0.0:
13050 | 2074 |     resolution: {integrity: sha512-AKrN98kuwOzMIdAizXGI86UFBoo26CL21UM763y1h/GMSJ4/OHU9k2YlsmBpyScFo/wbLzWQJBMCW4+IO3/+OQ==}
13051 | 2075 | 
13052 | 2076 |   encodeurl@1.0.2:
13053 | 2077 |     resolution: {integrity: sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==}
13054 | 2078 |     engines: {node: '>= 0.8'}
13055 | 2079 | 
13056 | 2080 |   encodeurl@2.0.0:
13057 | 2081 |     resolution: {integrity: sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==}
13058 | 2082 |     engines: {node: '>= 0.8'}
13059 | 2083 | 
13060 | 2084 |   entities@4.5.0:
13061 | 2085 |     resolution: {integrity: sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==}
13062 | 2086 |     engines: {node: '>=0.12'}
13063 | 2087 | 
13064 | 2088 |   error-ex@1.3.2:
13065 | 2089 |     resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}
13066 | 2090 | 
13067 | 2091 |   es-define-property@1.0.1:
13068 | 2092 |     resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}
13069 | 2093 |     engines: {node: '>= 0.4'}
13070 | 2094 | 
13071 | 2095 |   es-errors@1.3.0:
13072 | 2096 |     resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
13073 | 2097 |     engines: {node: '>= 0.4'}
13074 | 2098 | 
13075 | 2099 |   es-get-iterator@1.1.3:
13076 | 2100 |     resolution: {integrity: sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==}
13077 | 2101 | 
13078 | 2102 |   es-object-atoms@1.0.0:
13079 | 2103 |     resolution: {integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==}
13080 | 2104 |     engines: {node: '>= 0.4'}
13081 | 2105 | 
13082 | 2106 |   esbuild@0.21.5:
13083 | 2107 |     resolution: {integrity: sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==}
13084 | 2108 |     engines: {node: '>=12'}
13085 | 2109 |     hasBin: true
13086 | 2110 | 
13087 | 2111 |   esbuild@0.23.1:
13088 | 2112 |     resolution: {integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==}
13089 | 2113 |     engines: {node: '>=18'}
13090 | 2114 |     hasBin: true
13091 | 2115 | 
13092 | 2116 |   esbuild@0.24.2:
13093 | 2117 |     resolution: {integrity: sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==}
13094 | 2118 |     engines: {node: '>=18'}
13095 | 2119 |     hasBin: true
13096 | 2120 | 
13097 | 2121 |   escalade@3.2.0:
13098 | 2122 |     resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}
13099 | 2123 |     engines: {node: '>=6'}
13100 | 2124 | 
13101 | 2125 |   escape-html@1.0.3:
13102 | 2126 |     resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}
13103 | 2127 | 
13104 | 2128 |   escape-string-regexp@2.0.0:
13105 | 2129 |     resolution: {integrity: sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==}
13106 | 2130 |     engines: {node: '>=8'}
13107 | 2131 | 
13108 | 2132 |   escape-string-regexp@4.0.0:
13109 | 2133 |     resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
13110 | 2134 |     engines: {node: '>=10'}
13111 | 2135 | 
13112 | 2136 |   eslint-config-prettier@9.1.0:
13113 | 2137 |     resolution: {integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==}
13114 | 2138 |     hasBin: true
13115 | 2139 |     peerDependencies:
13116 | 2140 |       eslint: '>=7.0.0'
13117 | 2141 | 
13118 | 2142 |   eslint-plugin-react-hooks@4.6.2:
13119 | 2143 |     resolution: {integrity: sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==}
13120 | 2144 |     engines: {node: '>=10'}
13121 | 2145 |     peerDependencies:
13122 | 2146 |       eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0
13123 | 2147 | 
13124 | 2148 |   eslint-plugin-react-refresh@0.4.18:
13125 | 2149 |     resolution: {integrity: sha512-IRGEoFn3OKalm3hjfolEWGqoF/jPqeEYFp+C8B0WMzwGwBMvlRDQd06kghDhF0C61uJ6WfSDhEZE/sAQjduKgw==}
13126 | 2150 |     peerDependencies:
13127 | 2151 |       eslint: '>=8.40'
13128 | 2152 | 
13129 | 2153 |   eslint-scope@7.2.2:
13130 | 2154 |     resolution: {integrity: sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==}
13131 | 2155 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
13132 | 2156 | 
13133 | 2157 |   eslint-visitor-keys@3.4.3:
13134 | 2158 |     resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
13135 | 2159 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
13136 | 2160 | 
13137 | 2161 |   eslint@8.57.1:
13138 | 2162 |     resolution: {integrity: sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==}
13139 | 2163 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
13140 | 2164 |     deprecated: This version is no longer supported. Please see https://eslint.org/version-support for other options.
13141 | 2165 |     hasBin: true
13142 | 2166 | 
13143 | 2167 |   espree@9.6.1:
13144 | 2168 |     resolution: {integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==}
13145 | 2169 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
13146 | 2170 | 
13147 | 2171 |   esprima@4.0.1:
13148 | 2172 |     resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
13149 | 2173 |     engines: {node: '>=4'}
13150 | 2174 |     hasBin: true
13151 | 2175 | 
13152 | 2176 |   esquery@1.6.0:
13153 | 2177 |     resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
13154 | 2178 |     engines: {node: '>=0.10'}
13155 | 2179 | 
13156 | 2180 |   esrecurse@4.3.0:
13157 | 2181 |     resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
13158 | 2182 |     engines: {node: '>=4.0'}
13159 | 2183 | 
13160 | 2184 |   estraverse@5.3.0:
13161 | 2185 |     resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
13162 | 2186 |     engines: {node: '>=4.0'}
13163 | 2187 | 
13164 | 2188 |   estree-walker@3.0.3:
13165 | 2189 |     resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}
13166 | 2190 | 
13167 | 2191 |   esutils@2.0.3:
13168 | 2192 |     resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
13169 | 2193 |     engines: {node: '>=0.10.0'}
13170 | 2194 | 
13171 | 2195 |   etag@1.8.1:
13172 | 2196 |     resolution: {integrity: sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==}
13173 | 2197 |     engines: {node: '>= 0.6'}
13174 | 2198 | 
13175 | 2199 |   execa@5.1.1:
13176 | 2200 |     resolution: {integrity: sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==}
13177 | 2201 |     engines: {node: '>=10'}
13178 | 2202 | 
13179 | 2203 |   execa@8.0.1:
13180 | 2204 |     resolution: {integrity: sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==}
13181 | 2205 |     engines: {node: '>=16.17'}
13182 | 2206 | 
13183 | 2207 |   exit@0.1.2:
13184 | 2208 |     resolution: {integrity: sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==}
13185 | 2209 |     engines: {node: '>= 0.8.0'}
13186 | 2210 | 
13187 | 2211 |   expect@29.7.0:
13188 | 2212 |     resolution: {integrity: sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==}
13189 | 2213 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13190 | 2214 | 
13191 | 2215 |   express-rate-limit@7.5.0:
13192 | 2216 |     resolution: {integrity: sha512-eB5zbQh5h+VenMPM3fh+nw1YExi5nMr6HUCR62ELSP11huvxm/Uir1H1QEyTkk5QX6A58pX6NmaTMceKZ0Eodg==}
13193 | 2217 |     engines: {node: '>= 16'}
13194 | 2218 |     peerDependencies:
13195 | 2219 |       express: ^4.11 || 5 || ^5.0.0-beta.1
13196 | 2220 | 
13197 | 2221 |   express@4.21.2:
13198 | 2222 |     resolution: {integrity: sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==}
13199 | 2223 |     engines: {node: '>= 0.10.0'}
13200 | 2224 | 
13201 | 2225 |   fast-deep-equal@3.1.3:
13202 | 2226 |     resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
13203 | 2227 | 
13204 | 2228 |   fast-glob@3.3.3:
13205 | 2229 |     resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
13206 | 2230 |     engines: {node: '>=8.6.0'}
13207 | 2231 | 
13208 | 2232 |   fast-json-stable-stringify@2.1.0:
13209 | 2233 |     resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
13210 | 2234 | 
13211 | 2235 |   fast-levenshtein@2.0.6:
13212 | 2236 |     resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
13213 | 2237 | 
13214 | 2238 |   fast-safe-stringify@2.1.1:
13215 | 2239 |     resolution: {integrity: sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==}
13216 | 2240 | 
13217 | 2241 |   fastq@1.18.0:
13218 | 2242 |     resolution: {integrity: sha512-QKHXPW0hD8g4UET03SdOdunzSouc9N4AuHdsX8XNcTsuz+yYFILVNIX4l9yHABMhiEI9Db0JTTIpu0wB+Y1QQw==}
13219 | 2243 | 
13220 | 2244 |   fb-watchman@2.0.2:
13221 | 2245 |     resolution: {integrity: sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==}
13222 | 2246 | 
13223 | 2247 |   fdir@6.4.2:
13224 | 2248 |     resolution: {integrity: sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==}
13225 | 2249 |     peerDependencies:
13226 | 2250 |       picomatch: ^3 || ^4
13227 | 2251 |     peerDependenciesMeta:
13228 | 2252 |       picomatch:
13229 | 2253 |         optional: true
13230 | 2254 | 
13231 | 2255 |   fecha@4.2.3:
13232 | 2256 |     resolution: {integrity: sha512-OP2IUU6HeYKJi3i0z4A19kHMQoLVs4Hc+DPqqxI2h/DPZHTm/vjsfC6P0b4jCMy14XizLBqvndQ+UilD7707Jw==}
13233 | 2257 | 
13234 | 2258 |   file-entry-cache@6.0.1:
13235 | 2259 |     resolution: {integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==}
13236 | 2260 |     engines: {node: ^10.12.0 || >=12.0.0}
13237 | 2261 | 
13238 | 2262 |   filelist@1.0.4:
13239 | 2263 |     resolution: {integrity: sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==}
13240 | 2264 | 
13241 | 2265 |   fill-range@7.1.1:
13242 | 2266 |     resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
13243 | 2267 |     engines: {node: '>=8'}
13244 | 2268 | 
13245 | 2269 |   finalhandler@1.3.1:
13246 | 2270 |     resolution: {integrity: sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==}
13247 | 2271 |     engines: {node: '>= 0.8'}
13248 | 2272 | 
13249 | 2273 |   find-up@4.1.0:
13250 | 2274 |     resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}
13251 | 2275 |     engines: {node: '>=8'}
13252 | 2276 | 
13253 | 2277 |   find-up@5.0.0:
13254 | 2278 |     resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
13255 | 2279 |     engines: {node: '>=10'}
13256 | 2280 | 
13257 | 2281 |   flat-cache@3.2.0:
13258 | 2282 |     resolution: {integrity: sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==}
13259 | 2283 |     engines: {node: ^10.12.0 || >=12.0.0}
13260 | 2284 | 
13261 | 2285 |   flatted@3.3.2:
13262 | 2286 |     resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}
13263 | 2287 | 
13264 | 2288 |   fn.name@1.1.0:
13265 | 2289 |     resolution: {integrity: sha512-GRnmB5gPyJpAhTQdSZTSp9uaPSvl09KoYcMQtsB9rQoOmzs9dH6ffeccH+Z+cv6P68Hu5bC6JjRh4Ah/mHSNRw==}
13266 | 2290 | 
13267 | 2291 |   follow-redirects@1.15.9:
13268 | 2292 |     resolution: {integrity: sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==}
13269 | 2293 |     engines: {node: '>=4.0'}
13270 | 2294 |     peerDependencies:
13271 | 2295 |       debug: '*'
13272 | 2296 |     peerDependenciesMeta:
13273 | 2297 |       debug:
13274 | 2298 |         optional: true
13275 | 2299 | 
13276 | 2300 |   for-each@0.3.3:
13277 | 2301 |     resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}
13278 | 2302 | 
13279 | 2303 |   foreground-child@3.3.0:
13280 | 2304 |     resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}
13281 | 2305 |     engines: {node: '>=14'}
13282 | 2306 | 
13283 | 2307 |   form-data@4.0.1:
13284 | 2308 |     resolution: {integrity: sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==}
13285 | 2309 |     engines: {node: '>= 6'}
13286 | 2310 | 
13287 | 2311 |   formidable@3.5.2:
13288 | 2312 |     resolution: {integrity: sha512-Jqc1btCy3QzRbJaICGwKcBfGWuLADRerLzDqi2NwSt/UkXLsHJw2TVResiaoBufHVHy9aSgClOHCeJsSsFLTbg==}
13289 | 2313 | 
13290 | 2314 |   forwarded@0.2.0:
13291 | 2315 |     resolution: {integrity: sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==}
13292 | 2316 |     engines: {node: '>= 0.6'}
13293 | 2317 | 
13294 | 2318 |   fraction.js@4.3.7:
13295 | 2319 |     resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}
13296 | 2320 | 
13297 | 2321 |   fresh@0.5.2:
13298 | 2322 |     resolution: {integrity: sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==}
13299 | 2323 |     engines: {node: '>= 0.6'}
13300 | 2324 | 
13301 | 2325 |   fs.realpath@1.0.0:
13302 | 2326 |     resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}
13303 | 2327 | 
13304 | 2328 |   fsevents@2.3.3:
13305 | 2329 |     resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
13306 | 2330 |     engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
13307 | 2331 |     os: [darwin]
13308 | 2332 | 
13309 | 2333 |   function-bind@1.1.2:
13310 | 2334 |     resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
13311 | 2335 | 
13312 | 2336 |   functions-have-names@1.2.3:
13313 | 2337 |     resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
13314 | 2338 | 
13315 | 2339 |   gensync@1.0.0-beta.2:
13316 | 2340 |     resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
13317 | 2341 |     engines: {node: '>=6.9.0'}
13318 | 2342 | 
13319 | 2343 |   get-caller-file@2.0.5:
13320 | 2344 |     resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
13321 | 2345 |     engines: {node: 6.* || 8.* || >= 10.*}
13322 | 2346 | 
13323 | 2347 |   get-func-name@2.0.2:
13324 | 2348 |     resolution: {integrity: sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==}
13325 | 2349 | 
13326 | 2350 |   get-intrinsic@1.2.7:
13327 | 2351 |     resolution: {integrity: sha512-VW6Pxhsrk0KAOqs3WEd0klDiF/+V7gQOpAvY1jVU/LHmaD/kQO4523aiJuikX/QAKYiW6x8Jh+RJej1almdtCA==}
13328 | 2352 |     engines: {node: '>= 0.4'}
13329 | 2353 | 
13330 | 2354 |   get-package-type@0.1.0:
13331 | 2355 |     resolution: {integrity: sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==}
13332 | 2356 |     engines: {node: '>=8.0.0'}
13333 | 2357 | 
13334 | 2358 |   get-proto@1.0.1:
13335 | 2359 |     resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}
13336 | 2360 |     engines: {node: '>= 0.4'}
13337 | 2361 | 
13338 | 2362 |   get-stream@6.0.1:
13339 | 2363 |     resolution: {integrity: sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==}
13340 | 2364 |     engines: {node: '>=10'}
13341 | 2365 | 
13342 | 2366 |   get-stream@8.0.1:
13343 | 2367 |     resolution: {integrity: sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==}
13344 | 2368 |     engines: {node: '>=16'}
13345 | 2369 | 
13346 | 2370 |   get-tsconfig@4.8.1:
13347 | 2371 |     resolution: {integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==}
13348 | 2372 | 
13349 | 2373 |   glob-parent@5.1.2:
13350 | 2374 |     resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
13351 | 2375 |     engines: {node: '>= 6'}
13352 | 2376 | 
13353 | 2377 |   glob-parent@6.0.2:
13354 | 2378 |     resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
13355 | 2379 |     engines: {node: '>=10.13.0'}
13356 | 2380 | 
13357 | 2381 |   glob@10.4.5:
13358 | 2382 |     resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}
13359 | 2383 |     hasBin: true
13360 | 2384 | 
13361 | 2385 |   glob@7.2.3:
13362 | 2386 |     resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
13363 | 2387 |     deprecated: Glob versions prior to v9 are no longer supported
13364 | 2388 | 
13365 | 2389 |   globals@11.12.0:
13366 | 2390 |     resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
13367 | 2391 |     engines: {node: '>=4'}
13368 | 2392 | 
13369 | 2393 |   globals@13.24.0:
13370 | 2394 |     resolution: {integrity: sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==}
13371 | 2395 |     engines: {node: '>=8'}
13372 | 2396 | 
13373 | 2397 |   globby@11.1.0:
13374 | 2398 |     resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}
13375 | 2399 |     engines: {node: '>=10'}
13376 | 2400 | 
13377 | 2401 |   gopd@1.2.0:
13378 | 2402 |     resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
13379 | 2403 |     engines: {node: '>= 0.4'}
13380 | 2404 | 
13381 | 2405 |   graceful-fs@4.2.11:
13382 | 2406 |     resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}
13383 | 2407 | 
13384 | 2408 |   graphemer@1.4.0:
13385 | 2409 |     resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}
13386 | 2410 | 
13387 | 2411 |   happy-dom@12.10.3:
13388 | 2412 |     resolution: {integrity: sha512-JzUXOh0wdNGY54oKng5hliuBkq/+aT1V3YpTM+lrN/GoLQTANZsMaIvmHiHe612rauHvPJnDZkZ+5GZR++1Abg==}
13389 | 2413 | 
13390 | 2414 |   has-bigints@1.1.0:
13391 | 2415 |     resolution: {integrity: sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==}
13392 | 2416 |     engines: {node: '>= 0.4'}
13393 | 2417 | 
13394 | 2418 |   has-flag@4.0.0:
13395 | 2419 |     resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
13396 | 2420 |     engines: {node: '>=8'}
13397 | 2421 | 
13398 | 2422 |   has-property-descriptors@1.0.2:
13399 | 2423 |     resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}
13400 | 2424 | 
13401 | 2425 |   has-symbols@1.1.0:
13402 | 2426 |     resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
13403 | 2427 |     engines: {node: '>= 0.4'}
13404 | 2428 | 
13405 | 2429 |   has-tostringtag@1.0.2:
13406 | 2430 |     resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
13407 | 2431 |     engines: {node: '>= 0.4'}
13408 | 2432 | 
13409 | 2433 |   hasown@2.0.2:
13410 | 2434 |     resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
13411 | 2435 |     engines: {node: '>= 0.4'}
13412 | 2436 | 
13413 | 2437 |   hexoid@2.0.0:
13414 | 2438 |     resolution: {integrity: sha512-qlspKUK7IlSQv2o+5I7yhUd7TxlOG2Vr5LTa3ve2XSNVKAL/n/u/7KLvKmFNimomDIKvZFXWHv0T12mv7rT8Aw==}
13415 | 2439 |     engines: {node: '>=8'}
13416 | 2440 | 
13417 | 2441 |   html-escaper@2.0.2:
13418 | 2442 |     resolution: {integrity: sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==}
13419 | 2443 | 
13420 | 2444 |   http-errors@2.0.0:
13421 | 2445 |     resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}
13422 | 2446 |     engines: {node: '>= 0.8'}
13423 | 2447 | 
13424 | 2448 |   human-signals@2.1.0:
13425 | 2449 |     resolution: {integrity: sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==}
13426 | 2450 |     engines: {node: '>=10.17.0'}
13427 | 2451 | 
13428 | 2452 |   human-signals@5.0.0:
13429 | 2453 |     resolution: {integrity: sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==}
13430 | 2454 |     engines: {node: '>=16.17.0'}
13431 | 2455 | 
13432 | 2456 |   iconv-lite@0.4.24:
13433 | 2457 |     resolution: {integrity: sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==}
13434 | 2458 |     engines: {node: '>=0.10.0'}
13435 | 2459 | 
13436 | 2460 |   iconv-lite@0.6.3:
13437 | 2461 |     resolution: {integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==}
13438 | 2462 |     engines: {node: '>=0.10.0'}
13439 | 2463 | 
13440 | 2464 |   ignore@5.3.2:
13441 | 2465 |     resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
13442 | 2466 |     engines: {node: '>= 4'}
13443 | 2467 | 
13444 | 2468 |   import-fresh@3.3.0:
13445 | 2469 |     resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}
13446 | 2470 |     engines: {node: '>=6'}
13447 | 2471 | 
13448 | 2472 |   import-local@3.2.0:
13449 | 2473 |     resolution: {integrity: sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==}
13450 | 2474 |     engines: {node: '>=8'}
13451 | 2475 |     hasBin: true
13452 | 2476 | 
13453 | 2477 |   imurmurhash@0.1.4:
13454 | 2478 |     resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
13455 | 2479 |     engines: {node: '>=0.8.19'}
13456 | 2480 | 
13457 | 2481 |   indent-string@4.0.0:
13458 | 2482 |     resolution: {integrity: sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==}
13459 | 2483 |     engines: {node: '>=8'}
13460 | 2484 | 
13461 | 2485 |   inflight@1.0.6:
13462 | 2486 |     resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
13463 | 2487 |     deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
13464 | 2488 | 
13465 | 2489 |   inherits@2.0.4:
13466 | 2490 |     resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}
13467 | 2491 | 
13468 | 2492 |   internal-slot@1.1.0:
13469 | 2493 |     resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
13470 | 2494 |     engines: {node: '>= 0.4'}
13471 | 2495 | 
13472 | 2496 |   invariant@2.2.4:
13473 | 2497 |     resolution: {integrity: sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==}
13474 | 2498 | 
13475 | 2499 |   ipaddr.js@1.9.1:
13476 | 2500 |     resolution: {integrity: sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==}
13477 | 2501 |     engines: {node: '>= 0.10'}
13478 | 2502 | 
13479 | 2503 |   is-arguments@1.2.0:
13480 | 2504 |     resolution: {integrity: sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==}
13481 | 2505 |     engines: {node: '>= 0.4'}
13482 | 2506 | 
13483 | 2507 |   is-array-buffer@3.0.5:
13484 | 2508 |     resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
13485 | 2509 |     engines: {node: '>= 0.4'}
13486 | 2510 | 
13487 | 2511 |   is-arrayish@0.2.1:
13488 | 2512 |     resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}
13489 | 2513 | 
13490 | 2514 |   is-arrayish@0.3.2:
13491 | 2515 |     resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}
13492 | 2516 | 
13493 | 2517 |   is-bigint@1.1.0:
13494 | 2518 |     resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}
13495 | 2519 |     engines: {node: '>= 0.4'}
13496 | 2520 | 
13497 | 2521 |   is-binary-path@2.1.0:
13498 | 2522 |     resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
13499 | 2523 |     engines: {node: '>=8'}
13500 | 2524 | 
13501 | 2525 |   is-boolean-object@1.2.1:
13502 | 2526 |     resolution: {integrity: sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==}
13503 | 2527 |     engines: {node: '>= 0.4'}
13504 | 2528 | 
13505 | 2529 |   is-callable@1.2.7:
13506 | 2530 |     resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
13507 | 2531 |     engines: {node: '>= 0.4'}
13508 | 2532 | 
13509 | 2533 |   is-core-module@2.16.1:
13510 | 2534 |     resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
13511 | 2535 |     engines: {node: '>= 0.4'}
13512 | 2536 | 
13513 | 2537 |   is-date-object@1.1.0:
13514 | 2538 |     resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}
13515 | 2539 |     engines: {node: '>= 0.4'}
13516 | 2540 | 
13517 | 2541 |   is-extglob@2.1.1:
13518 | 2542 |     resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
13519 | 2543 |     engines: {node: '>=0.10.0'}
13520 | 2544 | 
13521 | 2545 |   is-fullwidth-code-point@3.0.0:
13522 | 2546 |     resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
13523 | 2547 |     engines: {node: '>=8'}
13524 | 2548 | 
13525 | 2549 |   is-generator-fn@2.1.0:
13526 | 2550 |     resolution: {integrity: sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==}
13527 | 2551 |     engines: {node: '>=6'}
13528 | 2552 | 
13529 | 2553 |   is-glob@4.0.3:
13530 | 2554 |     resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
13531 | 2555 |     engines: {node: '>=0.10.0'}
13532 | 2556 | 
13533 | 2557 |   is-map@2.0.3:
13534 | 2558 |     resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}
13535 | 2559 |     engines: {node: '>= 0.4'}
13536 | 2560 | 
13537 | 2561 |   is-number-object@1.1.1:
13538 | 2562 |     resolution: {integrity: sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==}
13539 | 2563 |     engines: {node: '>= 0.4'}
13540 | 2564 | 
13541 | 2565 |   is-number@7.0.0:
13542 | 2566 |     resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
13543 | 2567 |     engines: {node: '>=0.12.0'}
13544 | 2568 | 
13545 | 2569 |   is-path-inside@3.0.3:
13546 | 2570 |     resolution: {integrity: sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==}
13547 | 2571 |     engines: {node: '>=8'}
13548 | 2572 | 
13549 | 2573 |   is-regex@1.2.1:
13550 | 2574 |     resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}
13551 | 2575 |     engines: {node: '>= 0.4'}
13552 | 2576 | 
13553 | 2577 |   is-set@2.0.3:
13554 | 2578 |     resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}
13555 | 2579 |     engines: {node: '>= 0.4'}
13556 | 2580 | 
13557 | 2581 |   is-shared-array-buffer@1.0.4:
13558 | 2582 |     resolution: {integrity: sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==}
13559 | 2583 |     engines: {node: '>= 0.4'}
13560 | 2584 | 
13561 | 2585 |   is-stream@2.0.1:
13562 | 2586 |     resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}
13563 | 2587 |     engines: {node: '>=8'}
13564 | 2588 | 
13565 | 2589 |   is-stream@3.0.0:
13566 | 2590 |     resolution: {integrity: sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==}
13567 | 2591 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
13568 | 2592 | 
13569 | 2593 |   is-string@1.1.1:
13570 | 2594 |     resolution: {integrity: sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==}
13571 | 2595 |     engines: {node: '>= 0.4'}
13572 | 2596 | 
13573 | 2597 |   is-symbol@1.1.1:
13574 | 2598 |     resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}
13575 | 2599 |     engines: {node: '>= 0.4'}
13576 | 2600 | 
13577 | 2601 |   is-weakmap@2.0.2:
13578 | 2602 |     resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}
13579 | 2603 |     engines: {node: '>= 0.4'}
13580 | 2604 | 
13581 | 2605 |   is-weakset@2.0.4:
13582 | 2606 |     resolution: {integrity: sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==}
13583 | 2607 |     engines: {node: '>= 0.4'}
13584 | 2608 | 
13585 | 2609 |   isarray@1.0.0:
13586 | 2610 |     resolution: {integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==}
13587 | 2611 | 
13588 | 2612 |   isarray@2.0.5:
13589 | 2613 |     resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}
13590 | 2614 | 
13591 | 2615 |   isexe@2.0.0:
13592 | 2616 |     resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}
13593 | 2617 | 
13594 | 2618 |   istanbul-lib-coverage@3.2.2:
13595 | 2619 |     resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}
13596 | 2620 |     engines: {node: '>=8'}
13597 | 2621 | 
13598 | 2622 |   istanbul-lib-instrument@5.2.1:
13599 | 2623 |     resolution: {integrity: sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==}
13600 | 2624 |     engines: {node: '>=8'}
13601 | 2625 | 
13602 | 2626 |   istanbul-lib-instrument@6.0.3:
13603 | 2627 |     resolution: {integrity: sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==}
13604 | 2628 |     engines: {node: '>=10'}
13605 | 2629 | 
13606 | 2630 |   istanbul-lib-report@3.0.1:
13607 | 2631 |     resolution: {integrity: sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==}
13608 | 2632 |     engines: {node: '>=10'}
13609 | 2633 | 
13610 | 2634 |   istanbul-lib-source-maps@4.0.1:
13611 | 2635 |     resolution: {integrity: sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==}
13612 | 2636 |     engines: {node: '>=10'}
13613 | 2637 | 
13614 | 2638 |   istanbul-lib-source-maps@5.0.6:
13615 | 2639 |     resolution: {integrity: sha512-yg2d+Em4KizZC5niWhQaIomgf5WlL4vOOjZ5xGCmF8SnPE/mDWWXgvRExdcpCgh9lLRRa1/fSYp2ymmbJ1pI+A==}
13616 | 2640 |     engines: {node: '>=10'}
13617 | 2641 | 
13618 | 2642 |   istanbul-reports@3.1.7:
13619 | 2643 |     resolution: {integrity: sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==}
13620 | 2644 |     engines: {node: '>=8'}
13621 | 2645 | 
13622 | 2646 |   jackspeak@3.4.3:
13623 | 2647 |     resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}
13624 | 2648 | 
13625 | 2649 |   jake@10.9.2:
13626 | 2650 |     resolution: {integrity: sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==}
13627 | 2651 |     engines: {node: '>=10'}
13628 | 2652 |     hasBin: true
13629 | 2653 | 
13630 | 2654 |   jest-changed-files@29.7.0:
13631 | 2655 |     resolution: {integrity: sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==}
13632 | 2656 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13633 | 2657 | 
13634 | 2658 |   jest-circus@29.7.0:
13635 | 2659 |     resolution: {integrity: sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==}
13636 | 2660 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13637 | 2661 | 
13638 | 2662 |   jest-cli@29.7.0:
13639 | 2663 |     resolution: {integrity: sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==}
13640 | 2664 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13641 | 2665 |     hasBin: true
13642 | 2666 |     peerDependencies:
13643 | 2667 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
13644 | 2668 |     peerDependenciesMeta:
13645 | 2669 |       node-notifier:
13646 | 2670 |         optional: true
13647 | 2671 | 
13648 | 2672 |   jest-config@29.7.0:
13649 | 2673 |     resolution: {integrity: sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==}
13650 | 2674 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13651 | 2675 |     peerDependencies:
13652 | 2676 |       '@types/node': '*'
13653 | 2677 |       ts-node: '>=9.0.0'
13654 | 2678 |     peerDependenciesMeta:
13655 | 2679 |       '@types/node':
13656 | 2680 |         optional: true
13657 | 2681 |       ts-node:
13658 | 2682 |         optional: true
13659 | 2683 | 
13660 | 2684 |   jest-diff@29.7.0:
13661 | 2685 |     resolution: {integrity: sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==}
13662 | 2686 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13663 | 2687 | 
13664 | 2688 |   jest-docblock@29.7.0:
13665 | 2689 |     resolution: {integrity: sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==}
13666 | 2690 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13667 | 2691 | 
13668 | 2692 |   jest-each@29.7.0:
13669 | 2693 |     resolution: {integrity: sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==}
13670 | 2694 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13671 | 2695 | 
13672 | 2696 |   jest-environment-node@29.7.0:
13673 | 2697 |     resolution: {integrity: sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==}
13674 | 2698 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13675 | 2699 | 
13676 | 2700 |   jest-get-type@29.6.3:
13677 | 2701 |     resolution: {integrity: sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==}
13678 | 2702 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13679 | 2703 | 
13680 | 2704 |   jest-haste-map@29.7.0:
13681 | 2705 |     resolution: {integrity: sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==}
13682 | 2706 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13683 | 2707 | 
13684 | 2708 |   jest-leak-detector@29.7.0:
13685 | 2709 |     resolution: {integrity: sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==}
13686 | 2710 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13687 | 2711 | 
13688 | 2712 |   jest-matcher-utils@29.7.0:
13689 | 2713 |     resolution: {integrity: sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==}
13690 | 2714 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13691 | 2715 | 
13692 | 2716 |   jest-message-util@29.7.0:
13693 | 2717 |     resolution: {integrity: sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==}
13694 | 2718 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13695 | 2719 | 
13696 | 2720 |   jest-mock@29.7.0:
13697 | 2721 |     resolution: {integrity: sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==}
13698 | 2722 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13699 | 2723 | 
13700 | 2724 |   jest-pnp-resolver@1.2.3:
13701 | 2725 |     resolution: {integrity: sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==}
13702 | 2726 |     engines: {node: '>=6'}
13703 | 2727 |     peerDependencies:
13704 | 2728 |       jest-resolve: '*'
13705 | 2729 |     peerDependenciesMeta:
13706 | 2730 |       jest-resolve:
13707 | 2731 |         optional: true
13708 | 2732 | 
13709 | 2733 |   jest-regex-util@29.6.3:
13710 | 2734 |     resolution: {integrity: sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==}
13711 | 2735 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13712 | 2736 | 
13713 | 2737 |   jest-resolve-dependencies@29.7.0:
13714 | 2738 |     resolution: {integrity: sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==}
13715 | 2739 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13716 | 2740 | 
13717 | 2741 |   jest-resolve@29.7.0:
13718 | 2742 |     resolution: {integrity: sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==}
13719 | 2743 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13720 | 2744 | 
13721 | 2745 |   jest-runner@29.7.0:
13722 | 2746 |     resolution: {integrity: sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==}
13723 | 2747 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13724 | 2748 | 
13725 | 2749 |   jest-runtime@29.7.0:
13726 | 2750 |     resolution: {integrity: sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==}
13727 | 2751 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13728 | 2752 | 
13729 | 2753 |   jest-snapshot@29.7.0:
13730 | 2754 |     resolution: {integrity: sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==}
13731 | 2755 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13732 | 2756 | 
13733 | 2757 |   jest-util@29.7.0:
13734 | 2758 |     resolution: {integrity: sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==}
13735 | 2759 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13736 | 2760 | 
13737 | 2761 |   jest-validate@29.7.0:
13738 | 2762 |     resolution: {integrity: sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==}
13739 | 2763 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13740 | 2764 | 
13741 | 2765 |   jest-watcher@29.7.0:
13742 | 2766 |     resolution: {integrity: sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==}
13743 | 2767 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13744 | 2768 | 
13745 | 2769 |   jest-worker@29.7.0:
13746 | 2770 |     resolution: {integrity: sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==}
13747 | 2771 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13748 | 2772 | 
13749 | 2773 |   jest@29.7.0:
13750 | 2774 |     resolution: {integrity: sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==}
13751 | 2775 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
13752 | 2776 |     hasBin: true
13753 | 2777 |     peerDependencies:
13754 | 2778 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
13755 | 2779 |     peerDependenciesMeta:
13756 | 2780 |       node-notifier:
13757 | 2781 |         optional: true
13758 | 2782 | 
13759 | 2783 |   jiti@1.21.7:
13760 | 2784 |     resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}
13761 | 2785 |     hasBin: true
13762 | 2786 | 
13763 | 2787 |   joycon@3.1.1:
13764 | 2788 |     resolution: {integrity: sha512-34wB/Y7MW7bzjKRjUKTa46I2Z7eV62Rkhva+KkopW7Qvv/OSWBqvkSY7vusOPrNuZcUG3tApvdVgNB8POj3SPw==}
13765 | 2789 |     engines: {node: '>=10'}
13766 | 2790 | 
13767 | 2791 |   js-tokens@4.0.0:
13768 | 2792 |     resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}
13769 | 2793 | 
13770 | 2794 |   js-tokens@9.0.1:
13771 | 2795 |     resolution: {integrity: sha512-mxa9E9ITFOt0ban3j6L5MpjwegGz6lBQmM1IJkWeBZGcMxto50+eWdjC/52xDbS2vy0k7vIMK0Fe2wfL9OQSpQ==}
13772 | 2796 | 
13773 | 2797 |   js-yaml@3.14.1:
13774 | 2798 |     resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
13775 | 2799 |     hasBin: true
13776 | 2800 | 
13777 | 2801 |   js-yaml@4.1.0:
13778 | 2802 |     resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
13779 | 2803 |     hasBin: true
13780 | 2804 | 
13781 | 2805 |   jsesc@3.1.0:
13782 | 2806 |     resolution: {integrity: sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==}
13783 | 2807 |     engines: {node: '>=6'}
13784 | 2808 |     hasBin: true
13785 | 2809 | 
13786 | 2810 |   json-buffer@3.0.1:
13787 | 2811 |     resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}
13788 | 2812 | 
13789 | 2813 |   json-parse-even-better-errors@2.3.1:
13790 | 2814 |     resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}
13791 | 2815 | 
13792 | 2816 |   json-schema-traverse@0.4.1:
13793 | 2817 |     resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
13794 | 2818 | 
13795 | 2819 |   json-stable-stringify-without-jsonify@1.0.1:
13796 | 2820 |     resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
13797 | 2821 | 
13798 | 2822 |   json5@2.2.3:
13799 | 2823 |     resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
13800 | 2824 |     engines: {node: '>=6'}
13801 | 2825 |     hasBin: true
13802 | 2826 | 
13803 | 2827 |   jsonwebtoken@9.0.2:
13804 | 2828 |     resolution: {integrity: sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==}
13805 | 2829 |     engines: {node: '>=12', npm: '>=6'}
13806 | 2830 | 
13807 | 2831 |   jwa@1.4.1:
13808 | 2832 |     resolution: {integrity: sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==}
13809 | 2833 | 
13810 | 2834 |   jws@3.2.2:
13811 | 2835 |     resolution: {integrity: sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==}
13812 | 2836 | 
13813 | 2837 |   kdbush@4.0.2:
13814 | 2838 |     resolution: {integrity: sha512-WbCVYJ27Sz8zi9Q7Q0xHC+05iwkm3Znipc2XTlrnJbsHMYktW4hPhXUE8Ys1engBrvffoSCqbil1JQAa7clRpA==}
13815 | 2839 | 
13816 | 2840 |   keyv@4.5.4:
13817 | 2841 |     resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
13818 | 2842 | 
13819 | 2843 |   kleur@3.0.3:
13820 | 2844 |     resolution: {integrity: sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==}
13821 | 2845 |     engines: {node: '>=6'}
13822 | 2846 | 
13823 | 2847 |   kuler@2.0.0:
13824 | 2848 |     resolution: {integrity: sha512-Xq9nH7KlWZmXAtodXDDRE7vs6DU1gTU8zYDHDiWLSip45Egwq3plLHzPn27NgvzL2r1LMPC1vdqh98sQxtqj4A==}
13825 | 2849 | 
13826 | 2850 |   leven@3.1.0:
13827 | 2851 |     resolution: {integrity: sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==}
13828 | 2852 |     engines: {node: '>=6'}
13829 | 2853 | 
13830 | 2854 |   levn@0.4.1:
13831 | 2855 |     resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
13832 | 2856 |     engines: {node: '>= 0.8.0'}
13833 | 2857 | 
13834 | 2858 |   lilconfig@3.1.3:
13835 | 2859 |     resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}
13836 | 2860 |     engines: {node: '>=14'}
13837 | 2861 | 
13838 | 2862 |   lines-and-columns@1.2.4:
13839 | 2863 |     resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}
13840 | 2864 | 
13841 | 2865 |   load-tsconfig@0.2.5:
13842 | 2866 |     resolution: {integrity: sha512-IXO6OCs9yg8tMKzfPZ1YmheJbZCiEsnBdcB03l0OcfK9prKnJb96siuHCr5Fl37/yo9DnKU+TLpxzTUspw9shg==}
13843 | 2867 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
13844 | 2868 | 
13845 | 2869 |   local-pkg@0.5.1:
13846 | 2870 |     resolution: {integrity: sha512-9rrA30MRRP3gBD3HTGnC6cDFpaE1kVDWxWgqWJUN0RvDNAo+Nz/9GxB+nHOH0ifbVFy0hSA1V6vFDvnx54lTEQ==}
13847 | 2871 |     engines: {node: '>=14'}
13848 | 2872 | 
13849 | 2873 |   locate-path@5.0.0:
13850 | 2874 |     resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}
13851 | 2875 |     engines: {node: '>=8'}
13852 | 2876 | 
13853 | 2877 |   locate-path@6.0.0:
13854 | 2878 |     resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
13855 | 2879 |     engines: {node: '>=10'}
13856 | 2880 | 
13857 | 2881 |   lodash.includes@4.3.0:
13858 | 2882 |     resolution: {integrity: sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==}
13859 | 2883 | 
13860 | 2884 |   lodash.isboolean@3.0.3:
13861 | 2885 |     resolution: {integrity: sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==}
13862 | 2886 | 
13863 | 2887 |   lodash.isinteger@4.0.4:
13864 | 2888 |     resolution: {integrity: sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==}
13865 | 2889 | 
13866 | 2890 |   lodash.isnumber@3.0.3:
13867 | 2891 |     resolution: {integrity: sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==}
13868 | 2892 | 
13869 | 2893 |   lodash.isplainobject@4.0.6:
13870 | 2894 |     resolution: {integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==}
13871 | 2895 | 
13872 | 2896 |   lodash.isstring@4.0.1:
13873 | 2897 |     resolution: {integrity: sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==}
13874 | 2898 | 
13875 | 2899 |   lodash.memoize@4.1.2:
13876 | 2900 |     resolution: {integrity: sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==}
13877 | 2901 | 
13878 | 2902 |   lodash.merge@4.6.2:
13879 | 2903 |     resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
13880 | 2904 | 
13881 | 2905 |   lodash.once@4.1.1:
13882 | 2906 |     resolution: {integrity: sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==}
13883 | 2907 | 
13884 | 2908 |   lodash.sortby@4.7.0:
13885 | 2909 |     resolution: {integrity: sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA==}
13886 | 2910 | 
13887 | 2911 |   lodash@4.17.21:
13888 | 2912 |     resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}
13889 | 2913 | 
13890 | 2914 |   logform@2.7.0:
13891 | 2915 |     resolution: {integrity: sha512-TFYA4jnP7PVbmlBIfhlSe+WKxs9dklXMTEGcBCIvLhE/Tn3H6Gk1norupVW7m5Cnd4bLcr08AytbyV/xj7f/kQ==}
13892 | 2916 |     engines: {node: '>= 12.0.0'}
13893 | 2917 | 
13894 | 2918 |   loose-envify@1.4.0:
13895 | 2919 |     resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
13896 | 2920 |     hasBin: true
13897 | 2921 | 
13898 | 2922 |   loupe@2.3.7:
13899 | 2923 |     resolution: {integrity: sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==}
13900 | 2924 | 
13901 | 2925 |   lru-cache@10.4.3:
13902 | 2926 |     resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}
13903 | 2927 | 
13904 | 2928 |   lru-cache@5.1.1:
13905 | 2929 |     resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}
13906 | 2930 | 
13907 | 2931 |   lz-string@1.5.0:
13908 | 2932 |     resolution: {integrity: sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==}
13909 | 2933 |     hasBin: true
13910 | 2934 | 
13911 | 2935 |   magic-string@0.30.17:
13912 | 2936 |     resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}
13913 | 2937 | 
13914 | 2938 |   magicast@0.3.5:
13915 | 2939 |     resolution: {integrity: sha512-L0WhttDl+2BOsybvEOLK7fW3UA0OQ0IQ2d6Zl2x/a6vVRs3bAY0ECOSHHeL5jD+SbOpOCUEi0y1DgHEn9Qn1AQ==}
13916 | 2940 | 
13917 | 2941 |   make-dir@4.0.0:
13918 | 2942 |     resolution: {integrity: sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==}
13919 | 2943 |     engines: {node: '>=10'}
13920 | 2944 | 
13921 | 2945 |   make-error@1.3.6:
13922 | 2946 |     resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}
13923 | 2947 | 
13924 | 2948 |   makeerror@1.0.12:
13925 | 2949 |     resolution: {integrity: sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==}
13926 | 2950 | 
13927 | 2951 |   math-intrinsics@1.1.0:
13928 | 2952 |     resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}
13929 | 2953 |     engines: {node: '>= 0.4'}
13930 | 2954 | 
13931 | 2955 |   media-typer@0.3.0:
13932 | 2956 |     resolution: {integrity: sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==}
13933 | 2957 |     engines: {node: '>= 0.6'}
13934 | 2958 | 
13935 | 2959 |   merge-descriptors@1.0.3:
13936 | 2960 |     resolution: {integrity: sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==}
13937 | 2961 | 
13938 | 2962 |   merge-stream@2.0.0:
13939 | 2963 |     resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}
13940 | 2964 | 
13941 | 2965 |   merge2@1.4.1:
13942 | 2966 |     resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
13943 | 2967 |     engines: {node: '>= 8'}
13944 | 2968 | 
13945 | 2969 |   methods@1.1.2:
13946 | 2970 |     resolution: {integrity: sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==}
13947 | 2971 |     engines: {node: '>= 0.6'}
13948 | 2972 | 
13949 | 2973 |   micromatch@4.0.8:
13950 | 2974 |     resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
13951 | 2975 |     engines: {node: '>=8.6'}
13952 | 2976 | 
13953 | 2977 |   mime-db@1.52.0:
13954 | 2978 |     resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
13955 | 2979 |     engines: {node: '>= 0.6'}
13956 | 2980 | 
13957 | 2981 |   mime-types@2.1.35:
13958 | 2982 |     resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
13959 | 2983 |     engines: {node: '>= 0.6'}
13960 | 2984 | 
13961 | 2985 |   mime@1.6.0:
13962 | 2986 |     resolution: {integrity: sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==}
13963 | 2987 |     engines: {node: '>=4'}
13964 | 2988 |     hasBin: true
13965 | 2989 | 
13966 | 2990 |   mime@2.6.0:
13967 | 2991 |     resolution: {integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==}
13968 | 2992 |     engines: {node: '>=4.0.0'}
13969 | 2993 |     hasBin: true
13970 | 2994 | 
13971 | 2995 |   mimic-fn@2.1.0:
13972 | 2996 |     resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}
13973 | 2997 |     engines: {node: '>=6'}
13974 | 2998 | 
13975 | 2999 |   mimic-fn@4.0.0:
13976 | 3000 |     resolution: {integrity: sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==}
13977 | 3001 |     engines: {node: '>=12'}
13978 | 3002 | 
13979 | 3003 |   min-indent@1.0.1:
13980 | 3004 |     resolution: {integrity: sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==}
13981 | 3005 |     engines: {node: '>=4'}
13982 | 3006 | 
13983 | 3007 |   minimatch@3.1.2:
13984 | 3008 |     resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
13985 | 3009 | 
13986 | 3010 |   minimatch@5.1.6:
13987 | 3011 |     resolution: {integrity: sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==}
13988 | 3012 |     engines: {node: '>=10'}
13989 | 3013 | 
13990 | 3014 |   minimatch@9.0.3:
13991 | 3015 |     resolution: {integrity: sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==}
13992 | 3016 |     engines: {node: '>=16 || 14 >=14.17'}
13993 | 3017 | 
13994 | 3018 |   minimatch@9.0.5:
13995 | 3019 |     resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
13996 | 3020 |     engines: {node: '>=16 || 14 >=14.17'}
13997 | 3021 | 
13998 | 3022 |   minimist@1.2.8:
13999 | 3023 |     resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
14000 | 3024 | 
14001 | 3025 |   minipass@7.1.2:
14002 | 3026 |     resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
14003 | 3027 |     engines: {node: '>=16 || 14 >=14.17'}
14004 | 3028 | 
14005 | 3029 |   mkdirp@0.5.6:
14006 | 3030 |     resolution: {integrity: sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==}
14007 | 3031 |     hasBin: true
14008 | 3032 | 
14009 | 3033 |   mlly@1.7.4:
14010 | 3034 |     resolution: {integrity: sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==}
14011 | 3035 | 
14012 | 3036 |   morgan@1.10.0:
14013 | 3037 |     resolution: {integrity: sha512-AbegBVI4sh6El+1gNwvD5YIck7nSA36weD7xvIxG4in80j/UoK8AEGaWnnz8v1GxonMCltmlNs5ZKbGvl9b1XQ==}
14014 | 3038 |     engines: {node: '>= 0.8.0'}
14015 | 3039 | 
14016 | 3040 |   ms@2.0.0:
14017 | 3041 |     resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}
14018 | 3042 | 
14019 | 3043 |   ms@2.1.3:
14020 | 3044 |     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
14021 | 3045 | 
14022 | 3046 |   multer@1.4.5-lts.1:
14023 | 3047 |     resolution: {integrity: sha512-ywPWvcDMeH+z9gQq5qYHCCy+ethsk4goepZ45GLD63fOu0YcNecQxi64nDs3qluZB+murG3/D4dJ7+dGctcCQQ==}
14024 | 3048 |     engines: {node: '>= 6.0.0'}
14025 | 3049 | 
14026 | 3050 |   mz@2.7.0:
14027 | 3051 |     resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}
14028 | 3052 | 
14029 | 3053 |   nanoid@3.3.8:
14030 | 3054 |     resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}
14031 | 3055 |     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
14032 | 3056 |     hasBin: true
14033 | 3057 | 
14034 | 3058 |   natural-compare@1.4.0:
14035 | 3059 |     resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}
14036 | 3060 | 
14037 | 3061 |   negotiator@0.6.3:
14038 | 3062 |     resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}
14039 | 3063 |     engines: {node: '>= 0.6'}
14040 | 3064 | 
14041 | 3065 |   node-int64@0.4.0:
14042 | 3066 |     resolution: {integrity: sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==}
14043 | 3067 | 
14044 | 3068 |   node-releases@2.0.19:
14045 | 3069 |     resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}
14046 | 3070 | 
14047 | 3071 |   nodemailer@6.9.16:
14048 | 3072 |     resolution: {integrity: sha512-psAuZdTIRN08HKVd/E8ObdV6NO7NTBY3KsC30F7M4H1OnmLCUNaS56FpYxyb26zWLSyYF9Ozch9KYHhHegsiOQ==}
14049 | 3073 |     engines: {node: '>=6.0.0'}
14050 | 3074 | 
14051 | 3075 |   normalize-path@3.0.0:
14052 | 3076 |     resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
14053 | 3077 |     engines: {node: '>=0.10.0'}
14054 | 3078 | 
14055 | 3079 |   normalize-range@0.1.2:
14056 | 3080 |     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}
14057 | 3081 |     engines: {node: '>=0.10.0'}
14058 | 3082 | 
14059 | 3083 |   npm-run-path@4.0.1:
14060 | 3084 |     resolution: {integrity: sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==}
14061 | 3085 |     engines: {node: '>=8'}
14062 | 3086 | 
14063 | 3087 |   npm-run-path@5.3.0:
14064 | 3088 |     resolution: {integrity: sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==}
14065 | 3089 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
14066 | 3090 | 
14067 | 3091 |   object-assign@4.1.1:
14068 | 3092 |     resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
14069 | 3093 |     engines: {node: '>=0.10.0'}
14070 | 3094 | 
14071 | 3095 |   object-hash@3.0.0:
14072 | 3096 |     resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}
14073 | 3097 |     engines: {node: '>= 6'}
14074 | 3098 | 
14075 | 3099 |   object-inspect@1.13.3:
14076 | 3100 |     resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}
14077 | 3101 |     engines: {node: '>= 0.4'}
14078 | 3102 | 
14079 | 3103 |   object-is@1.1.6:
14080 | 3104 |     resolution: {integrity: sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==}
14081 | 3105 |     engines: {node: '>= 0.4'}
14082 | 3106 | 
14083 | 3107 |   object-keys@1.1.1:
14084 | 3108 |     resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
14085 | 3109 |     engines: {node: '>= 0.4'}
14086 | 3110 | 
14087 | 3111 |   object.assign@4.1.7:
14088 | 3112 |     resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}
14089 | 3113 |     engines: {node: '>= 0.4'}
14090 | 3114 | 
14091 | 3115 |   on-finished@2.3.0:
14092 | 3116 |     resolution: {integrity: sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==}
14093 | 3117 |     engines: {node: '>= 0.8'}
14094 | 3118 | 
14095 | 3119 |   on-finished@2.4.1:
14096 | 3120 |     resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}
14097 | 3121 |     engines: {node: '>= 0.8'}
14098 | 3122 | 
14099 | 3123 |   on-headers@1.0.2:
14100 | 3124 |     resolution: {integrity: sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==}
14101 | 3125 |     engines: {node: '>= 0.8'}
14102 | 3126 | 
14103 | 3127 |   once@1.4.0:
14104 | 3128 |     resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}
14105 | 3129 | 
14106 | 3130 |   one-time@1.0.0:
14107 | 3131 |     resolution: {integrity: sha512-5DXOiRKwuSEcQ/l0kGCF6Q3jcADFv5tSmRaJck/OqkVFcOzutB134KRSfF0xDrL39MNnqxbHBbUUcjZIhTgb2g==}
14108 | 3132 | 
14109 | 3133 |   onetime@5.1.2:
14110 | 3134 |     resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}
14111 | 3135 |     engines: {node: '>=6'}
14112 | 3136 | 
14113 | 3137 |   onetime@6.0.0:
14114 | 3138 |     resolution: {integrity: sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==}
14115 | 3139 |     engines: {node: '>=12'}
14116 | 3140 | 
14117 | 3141 |   optionator@0.9.4:
14118 | 3142 |     resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
14119 | 3143 |     engines: {node: '>= 0.8.0'}
14120 | 3144 | 
14121 | 3145 |   p-limit@2.3.0:
14122 | 3146 |     resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}
14123 | 3147 |     engines: {node: '>=6'}
14124 | 3148 | 
14125 | 3149 |   p-limit@3.1.0:
14126 | 3150 |     resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
14127 | 3151 |     engines: {node: '>=10'}
14128 | 3152 | 
14129 | 3153 |   p-limit@5.0.0:
14130 | 3154 |     resolution: {integrity: sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==}
14131 | 3155 |     engines: {node: '>=18'}
14132 | 3156 | 
14133 | 3157 |   p-locate@4.1.0:
14134 | 3158 |     resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}
14135 | 3159 |     engines: {node: '>=8'}
14136 | 3160 | 
14137 | 3161 |   p-locate@5.0.0:
14138 | 3162 |     resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
14139 | 3163 |     engines: {node: '>=10'}
14140 | 3164 | 
14141 | 3165 |   p-try@2.2.0:
14142 | 3166 |     resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}
14143 | 3167 |     engines: {node: '>=6'}
14144 | 3168 | 
14145 | 3169 |   package-json-from-dist@1.0.1:
14146 | 3170 |     resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}
14147 | 3171 | 
14148 | 3172 |   parent-module@1.0.1:
14149 | 3173 |     resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
14150 | 3174 |     engines: {node: '>=6'}
14151 | 3175 | 
14152 | 3176 |   parse-json@5.2.0:
14153 | 3177 |     resolution: {integrity: sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==}
14154 | 3178 |     engines: {node: '>=8'}
14155 | 3179 | 
14156 | 3180 |   parseurl@1.3.3:
14157 | 3181 |     resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}
14158 | 3182 |     engines: {node: '>= 0.8'}
14159 | 3183 | 
14160 | 3184 |   path-exists@4.0.0:
14161 | 3185 |     resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
14162 | 3186 |     engines: {node: '>=8'}
14163 | 3187 | 
14164 | 3188 |   path-is-absolute@1.0.1:
14165 | 3189 |     resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
14166 | 3190 |     engines: {node: '>=0.10.0'}
14167 | 3191 | 
14168 | 3192 |   path-key@3.1.1:
14169 | 3193 |     resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
14170 | 3194 |     engines: {node: '>=8'}
14171 | 3195 | 
14172 | 3196 |   path-key@4.0.0:
14173 | 3197 |     resolution: {integrity: sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==}
14174 | 3198 |     engines: {node: '>=12'}
14175 | 3199 | 
14176 | 3200 |   path-parse@1.0.7:
14177 | 3201 |     resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}
14178 | 3202 | 
14179 | 3203 |   path-scurry@1.11.1:
14180 | 3204 |     resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}
14181 | 3205 |     engines: {node: '>=16 || 14 >=14.18'}
14182 | 3206 | 
14183 | 3207 |   path-to-regexp@0.1.12:
14184 | 3208 |     resolution: {integrity: sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==}
14185 | 3209 | 
14186 | 3210 |   path-type@4.0.0:
14187 | 3211 |     resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}
14188 | 3212 |     engines: {node: '>=8'}
14189 | 3213 | 
14190 | 3214 |   pathe@1.1.2:
14191 | 3215 |     resolution: {integrity: sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==}
14192 | 3216 | 
14193 | 3217 |   pathe@2.0.1:
14194 | 3218 |     resolution: {integrity: sha512-6jpjMpOth5S9ITVu5clZ7NOgHNsv5vRQdheL9ztp2vZmM6fRbLvyua1tiBIL4lk8SAe3ARzeXEly6siXCjDHDw==}
14195 | 3219 | 
14196 | 3220 |   pathval@1.1.1:
14197 | 3221 |     resolution: {integrity: sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==}
14198 | 3222 | 
14199 | 3223 |   picocolors@1.1.1:
14200 | 3224 |     resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}
14201 | 3225 | 
14202 | 3226 |   picomatch@2.3.1:
14203 | 3227 |     resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
14204 | 3228 |     engines: {node: '>=8.6'}
14205 | 3229 | 
14206 | 3230 |   picomatch@4.0.2:
14207 | 3231 |     resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}
14208 | 3232 |     engines: {node: '>=12'}
14209 | 3233 | 
14210 | 3234 |   pify@2.3.0:
14211 | 3235 |     resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}
14212 | 3236 |     engines: {node: '>=0.10.0'}
14213 | 3237 | 
14214 | 3238 |   pirates@4.0.6:
14215 | 3239 |     resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}
14216 | 3240 |     engines: {node: '>= 6'}
14217 | 3241 | 
14218 | 3242 |   pkg-dir@4.2.0:
14219 | 3243 |     resolution: {integrity: sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==}
14220 | 3244 |     engines: {node: '>=8'}
14221 | 3245 | 
14222 | 3246 |   pkg-types@1.3.0:
14223 | 3247 |     resolution: {integrity: sha512-kS7yWjVFCkIw9hqdJBoMxDdzEngmkr5FXeWZZfQ6GoYacjVnsW6l2CcYW/0ThD0vF4LPJgVYnrg4d0uuhwYQbg==}
14224 | 3248 | 
14225 | 3249 |   possible-typed-array-names@1.0.0:
14226 | 3250 |     resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}
14227 | 3251 |     engines: {node: '>= 0.4'}
14228 | 3252 | 
14229 | 3253 |   postcss-import@15.1.0:
14230 | 3254 |     resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}
14231 | 3255 |     engines: {node: '>=14.0.0'}
14232 | 3256 |     peerDependencies:
14233 | 3257 |       postcss: ^8.0.0
14234 | 3258 | 
14235 | 3259 |   postcss-js@4.0.1:
14236 | 3260 |     resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}
14237 | 3261 |     engines: {node: ^12 || ^14 || >= 16}
14238 | 3262 |     peerDependencies:
14239 | 3263 |       postcss: ^8.4.21
14240 | 3264 | 
14241 | 3265 |   postcss-load-config@4.0.2:
14242 | 3266 |     resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}
14243 | 3267 |     engines: {node: '>= 14'}
14244 | 3268 |     peerDependencies:
14245 | 3269 |       postcss: '>=8.0.9'
14246 | 3270 |       ts-node: '>=9.0.0'
14247 | 3271 |     peerDependenciesMeta:
14248 | 3272 |       postcss:
14249 | 3273 |         optional: true
14250 | 3274 |       ts-node:
14251 | 3275 |         optional: true
14252 | 3276 | 
14253 | 3277 |   postcss-load-config@6.0.1:
14254 | 3278 |     resolution: {integrity: sha512-oPtTM4oerL+UXmx+93ytZVN82RrlY/wPUV8IeDxFrzIjXOLF1pN+EmKPLbubvKHT2HC20xXsCAH2Z+CKV6Oz/g==}
14255 | 3279 |     engines: {node: '>= 18'}
14256 | 3280 |     peerDependencies:
14257 | 3281 |       jiti: '>=1.21.0'
14258 | 3282 |       postcss: '>=8.0.9'
14259 | 3283 |       tsx: ^4.8.1
14260 | 3284 |       yaml: ^2.4.2
14261 | 3285 |     peerDependenciesMeta:
14262 | 3286 |       jiti:
14263 | 3287 |         optional: true
14264 | 3288 |       postcss:
14265 | 3289 |         optional: true
14266 | 3290 |       tsx:
14267 | 3291 |         optional: true
14268 | 3292 |       yaml:
14269 | 3293 |         optional: true
14270 | 3294 | 
14271 | 3295 |   postcss-nested@6.2.0:
14272 | 3296 |     resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}
14273 | 3297 |     engines: {node: '>=12.0'}
14274 | 3298 |     peerDependencies:
14275 | 3299 |       postcss: ^8.2.14
14276 | 3300 | 
14277 | 3301 |   postcss-selector-parser@6.1.2:
14278 | 3302 |     resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}
14279 | 3303 |     engines: {node: '>=4'}
14280 | 3304 | 
14281 | 3305 |   postcss-value-parser@4.2.0:
14282 | 3306 |     resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}
14283 | 3307 | 
14284 | 3308 |   postcss@8.4.49:
14285 | 3309 |     resolution: {integrity: sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==}
14286 | 3310 |     engines: {node: ^10 || ^12 || >=14}
14287 | 3311 | 
14288 | 3312 |   prelude-ls@1.2.1:
14289 | 3313 |     resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
14290 | 3314 |     engines: {node: '>= 0.8.0'}
14291 | 3315 | 
14292 | 3316 |   prettier@3.4.2:
14293 | 3317 |     resolution: {integrity: sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==}
14294 | 3318 |     engines: {node: '>=14'}
14295 | 3319 |     hasBin: true
14296 | 3320 | 
14297 | 3321 |   pretty-format@27.5.1:
14298 | 3322 |     resolution: {integrity: sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==}
14299 | 3323 |     engines: {node: ^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0}
14300 | 3324 | 
14301 | 3325 |   pretty-format@29.7.0:
14302 | 3326 |     resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}
14303 | 3327 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
14304 | 3328 | 
14305 | 3329 |   prisma@5.22.0:
14306 | 3330 |     resolution: {integrity: sha512-vtpjW3XuYCSnMsNVBjLMNkTj6OZbudcPPTPYHqX0CJfpcdWciI1dM8uHETwmDxxiqEwCIE6WvXucWUetJgfu/A==}
14307 | 3331 |     engines: {node: '>=16.13'}
14308 | 3332 |     hasBin: true
14309 | 3333 | 
14310 | 3334 |   process-nextick-args@2.0.1:
14311 | 3335 |     resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}
14312 | 3336 | 
14313 | 3337 |   prompts@2.4.2:
14314 | 3338 |     resolution: {integrity: sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==}
14315 | 3339 |     engines: {node: '>= 6'}
14316 | 3340 | 
14317 | 3341 |   prop-types@15.8.1:
14318 | 3342 |     resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}
14319 | 3343 | 
14320 | 3344 |   proxy-addr@2.0.7:
14321 | 3345 |     resolution: {integrity: sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==}
14322 | 3346 |     engines: {node: '>= 0.10'}
14323 | 3347 | 
14324 | 3348 |   proxy-from-env@1.1.0:
14325 | 3349 |     resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}
14326 | 3350 | 
14327 | 3351 |   punycode@2.3.1:
14328 | 3352 |     resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
14329 | 3353 |     engines: {node: '>=6'}
14330 | 3354 | 
14331 | 3355 |   pure-rand@6.1.0:
14332 | 3356 |     resolution: {integrity: sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==}
14333 | 3357 | 
14334 | 3358 |   qs@6.13.0:
14335 | 3359 |     resolution: {integrity: sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==}
14336 | 3360 |     engines: {node: '>=0.6'}
14337 | 3361 | 
14338 | 3362 |   queue-microtask@1.2.3:
14339 | 3363 |     resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
14340 | 3364 | 
14341 | 3365 |   range-parser@1.2.1:
14342 | 3366 |     resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}
14343 | 3367 |     engines: {node: '>= 0.6'}
14344 | 3368 | 
14345 | 3369 |   raw-body@2.5.2:
14346 | 3370 |     resolution: {integrity: sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==}
14347 | 3371 |     engines: {node: '>= 0.8'}
14348 | 3372 | 
14349 | 3373 |   react-dom@18.3.1:
14350 | 3374 |     resolution: {integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==}
14351 | 3375 |     peerDependencies:
14352 | 3376 |       react: ^18.3.1
14353 | 3377 | 
14354 | 3378 |   react-is@16.13.1:
14355 | 3379 |     resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
14356 | 3380 | 
14357 | 3381 |   react-is@17.0.2:
14358 | 3382 |     resolution: {integrity: sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==}
14359 | 3383 | 
14360 | 3384 |   react-is@18.3.1:
14361 | 3385 |     resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}
14362 | 3386 | 
14363 | 3387 |   react-refresh@0.14.2:
14364 | 3388 |     resolution: {integrity: sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==}
14365 | 3389 |     engines: {node: '>=0.10.0'}
14366 | 3390 | 
14367 | 3391 |   react-router-dom@6.28.1:
14368 | 3392 |     resolution: {integrity: sha512-YraE27C/RdjcZwl5UCqF/ffXnZDxpJdk9Q6jw38SZHjXs7NNdpViq2l2c7fO7+4uWaEfcwfGCv3RSg4e1By/fQ==}
14369 | 3393 |     engines: {node: '>=14.0.0'}
14370 | 3394 |     peerDependencies:
14371 | 3395 |       react: '>=16.8'
14372 | 3396 |       react-dom: '>=16.8'
14373 | 3397 | 
14374 | 3398 |   react-router@6.28.1:
14375 | 3399 |     resolution: {integrity: sha512-2omQTA3rkMljmrvvo6WtewGdVh45SpL9hGiCI9uUrwGGfNFDIvGK4gYJsKlJoNVi6AQZcopSCballL+QGOm7fA==}
14376 | 3400 |     engines: {node: '>=14.0.0'}
14377 | 3401 |     peerDependencies:
14378 | 3402 |       react: '>=16.8'
14379 | 3403 | 
14380 | 3404 |   react-transition-group@4.4.5:
14381 | 3405 |     resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}
14382 | 3406 |     peerDependencies:
14383 | 3407 |       react: '>=16.6.0'
14384 | 3408 |       react-dom: '>=16.6.0'
14385 | 3409 | 
14386 | 3410 |   react@18.3.1:
14387 | 3411 |     resolution: {integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==}
14388 | 3412 |     engines: {node: '>=0.10.0'}
14389 | 3413 | 
14390 | 3414 |   read-cache@1.0.0:
14391 | 3415 |     resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}
14392 | 3416 | 
14393 | 3417 |   readable-stream@2.3.8:
14394 | 3418 |     resolution: {integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==}
14395 | 3419 | 
14396 | 3420 |   readable-stream@3.6.2:
14397 | 3421 |     resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}
14398 | 3422 |     engines: {node: '>= 6'}
14399 | 3423 | 
14400 | 3424 |   readdirp@3.6.0:
14401 | 3425 |     resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
14402 | 3426 |     engines: {node: '>=8.10.0'}
14403 | 3427 | 
14404 | 3428 |   readdirp@4.1.1:
14405 | 3429 |     resolution: {integrity: sha512-h80JrZu/MHUZCyHu5ciuoI0+WxsCxzxJTILn6Fs8rxSnFPh+UVHYfeIxK1nVGugMqkfC4vJcBOYbkfkwYK0+gw==}
14406 | 3430 |     engines: {node: '>= 14.18.0'}
14407 | 3431 | 
14408 | 3432 |   redent@3.0.0:
14409 | 3433 |     resolution: {integrity: sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==}
14410 | 3434 |     engines: {node: '>=8'}
14411 | 3435 | 
14412 | 3436 |   regenerator-runtime@0.14.1:
14413 | 3437 |     resolution: {integrity: sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==}
14414 | 3438 | 
14415 | 3439 |   regexp.prototype.flags@1.5.4:
14416 | 3440 |     resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}
14417 | 3441 |     engines: {node: '>= 0.4'}
14418 | 3442 | 
14419 | 3443 |   require-directory@2.1.1:
14420 | 3444 |     resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
14421 | 3445 |     engines: {node: '>=0.10.0'}
14422 | 3446 | 
14423 | 3447 |   resolve-cwd@3.0.0:
14424 | 3448 |     resolution: {integrity: sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==}
14425 | 3449 |     engines: {node: '>=8'}
14426 | 3450 | 
14427 | 3451 |   resolve-from@4.0.0:
14428 | 3452 |     resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
14429 | 3453 |     engines: {node: '>=4'}
14430 | 3454 | 
14431 | 3455 |   resolve-from@5.0.0:
14432 | 3456 |     resolution: {integrity: sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==}
14433 | 3457 |     engines: {node: '>=8'}
14434 | 3458 | 
14435 | 3459 |   resolve-pkg-maps@1.0.0:
14436 | 3460 |     resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}
14437 | 3461 | 
14438 | 3462 |   resolve.exports@2.0.3:
14439 | 3463 |     resolution: {integrity: sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==}
14440 | 3464 |     engines: {node: '>=10'}
14441 | 3465 | 
14442 | 3466 |   resolve@1.22.10:
14443 | 3467 |     resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
14444 | 3468 |     engines: {node: '>= 0.4'}
14445 | 3469 |     hasBin: true
14446 | 3470 | 
14447 | 3471 |   reusify@1.0.4:
14448 | 3472 |     resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
14449 | 3473 |     engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
14450 | 3474 | 
14451 | 3475 |   rimraf@3.0.2:
14452 | 3476 |     resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
14453 | 3477 |     deprecated: Rimraf versions prior to v4 are no longer supported
14454 | 3478 |     hasBin: true
14455 | 3479 | 
14456 | 3480 |   rollup@4.30.1:
14457 | 3481 |     resolution: {integrity: sha512-mlJ4glW020fPuLi7DkM/lN97mYEZGWeqBnrljzN0gs7GLctqX3lNWxKQ7Gl712UAX+6fog/L3jh4gb7R6aVi3w==}
14458 | 3482 |     engines: {node: '>=18.0.0', npm: '>=8.0.0'}
14459 | 3483 |     hasBin: true
14460 | 3484 | 
14461 | 3485 |   run-parallel@1.2.0:
14462 | 3486 |     resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
14463 | 3487 | 
14464 | 3488 |   safe-buffer@5.1.2:
14465 | 3489 |     resolution: {integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==}
14466 | 3490 | 
14467 | 3491 |   safe-buffer@5.2.1:
14468 | 3492 |     resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}
14469 | 3493 | 
14470 | 3494 |   safe-regex-test@1.1.0:
14471 | 3495 |     resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
14472 | 3496 |     engines: {node: '>= 0.4'}
14473 | 3497 | 
14474 | 3498 |   safe-stable-stringify@2.5.0:
14475 | 3499 |     resolution: {integrity: sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==}
14476 | 3500 |     engines: {node: '>=10'}
14477 | 3501 | 
14478 | 3502 |   safer-buffer@2.1.2:
14479 | 3503 |     resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}
14480 | 3504 | 
14481 | 3505 |   scheduler@0.23.2:
14482 | 3506 |     resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}
14483 | 3507 | 
14484 | 3508 |   semver@6.3.1:
14485 | 3509 |     resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
14486 | 3510 |     hasBin: true
14487 | 3511 | 
14488 | 3512 |   semver@7.6.3:
14489 | 3513 |     resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}
14490 | 3514 |     engines: {node: '>=10'}
14491 | 3515 |     hasBin: true
14492 | 3516 | 
14493 | 3517 |   send@0.19.0:
14494 | 3518 |     resolution: {integrity: sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==}
14495 | 3519 |     engines: {node: '>= 0.8.0'}
14496 | 3520 | 
14497 | 3521 |   serve-static@1.16.2:
14498 | 3522 |     resolution: {integrity: sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==}
14499 | 3523 |     engines: {node: '>= 0.8.0'}
14500 | 3524 | 
14501 | 3525 |   set-function-length@1.2.2:
14502 | 3526 |     resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
14503 | 3527 |     engines: {node: '>= 0.4'}
14504 | 3528 | 
14505 | 3529 |   set-function-name@2.0.2:
14506 | 3530 |     resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}
14507 | 3531 |     engines: {node: '>= 0.4'}
14508 | 3532 | 
14509 | 3533 |   setprototypeof@1.2.0:
14510 | 3534 |     resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}
14511 | 3535 | 
14512 | 3536 |   shebang-command@2.0.0:
14513 | 3537 |     resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
14514 | 3538 |     engines: {node: '>=8'}
14515 | 3539 | 
14516 | 3540 |   shebang-regex@3.0.0:
14517 | 3541 |     resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
14518 | 3542 |     engines: {node: '>=8'}
14519 | 3543 | 
14520 | 3544 |   side-channel-list@1.0.0:
14521 | 3545 |     resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}
14522 | 3546 |     engines: {node: '>= 0.4'}
14523 | 3547 | 
14524 | 3548 |   side-channel-map@1.0.1:
14525 | 3549 |     resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}
14526 | 3550 |     engines: {node: '>= 0.4'}
14527 | 3551 | 
14528 | 3552 |   side-channel-weakmap@1.0.2:
14529 | 3553 |     resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}
14530 | 3554 |     engines: {node: '>= 0.4'}
14531 | 3555 | 
14532 | 3556 |   side-channel@1.1.0:
14533 | 3557 |     resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}
14534 | 3558 |     engines: {node: '>= 0.4'}
14535 | 3559 | 
14536 | 3560 |   siginfo@2.0.0:
14537 | 3561 |     resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}
14538 | 3562 | 
14539 | 3563 |   signal-exit@3.0.7:
14540 | 3564 |     resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}
14541 | 3565 | 
14542 | 3566 |   signal-exit@4.1.0:
14543 | 3567 |     resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
14544 | 3568 |     engines: {node: '>=14'}
14545 | 3569 | 
14546 | 3570 |   simple-swizzle@0.2.2:
14547 | 3571 |     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}
14548 | 3572 | 
14549 | 3573 |   sisteransi@1.0.5:
14550 | 3574 |     resolution: {integrity: sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==}
14551 | 3575 | 
14552 | 3576 |   slash@3.0.0:
14553 | 3577 |     resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}
14554 | 3578 |     engines: {node: '>=8'}
14555 | 3579 | 
14556 | 3580 |   source-map-js@1.2.1:
14557 | 3581 |     resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
14558 | 3582 |     engines: {node: '>=0.10.0'}
14559 | 3583 | 
14560 | 3584 |   source-map-support@0.5.13:
14561 | 3585 |     resolution: {integrity: sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==}
14562 | 3586 | 
14563 | 3587 |   source-map@0.6.1:
14564 | 3588 |     resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
14565 | 3589 |     engines: {node: '>=0.10.0'}
14566 | 3590 | 
14567 | 3591 |   source-map@0.8.0-beta.0:
14568 | 3592 |     resolution: {integrity: sha512-2ymg6oRBpebeZi9UUNsgQ89bhx01TcTkmNTGnNO88imTmbSgy4nfujrgVEFKWpMTEGA11EDkTt7mqObTPdigIA==}
14569 | 3593 |     engines: {node: '>= 8'}
14570 | 3594 | 
14571 | 3595 |   sprintf-js@1.0.3:
14572 | 3596 |     resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}
14573 | 3597 | 
14574 | 3598 |   stack-trace@0.0.10:
14575 | 3599 |     resolution: {integrity: sha512-KGzahc7puUKkzyMt+IqAep+TVNbKP+k2Lmwhub39m1AsTSkaDutx56aDCo+HLDzf/D26BIHTJWNiTG1KAJiQCg==}
14576 | 3600 | 
14577 | 3601 |   stack-utils@2.0.6:
14578 | 3602 |     resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}
14579 | 3603 |     engines: {node: '>=10'}
14580 | 3604 | 
14581 | 3605 |   stackback@0.0.2:
14582 | 3606 |     resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}
14583 | 3607 | 
14584 | 3608 |   statuses@2.0.1:
14585 | 3609 |     resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}
14586 | 3610 |     engines: {node: '>= 0.8'}
14587 | 3611 | 
14588 | 3612 |   std-env@3.8.0:
14589 | 3613 |     resolution: {integrity: sha512-Bc3YwwCB+OzldMxOXJIIvC6cPRWr/LxOp48CdQTOkPyk/t4JWWJbrilwBd7RJzKV8QW7tJkcgAmeuLLJugl5/w==}
14590 | 3614 | 
14591 | 3615 |   stop-iteration-iterator@1.1.0:
14592 | 3616 |     resolution: {integrity: sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==}
14593 | 3617 |     engines: {node: '>= 0.4'}
14594 | 3618 | 
14595 | 3619 |   streamsearch@1.1.0:
14596 | 3620 |     resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}
14597 | 3621 |     engines: {node: '>=10.0.0'}
14598 | 3622 | 
14599 | 3623 |   string-length@4.0.2:
14600 | 3624 |     resolution: {integrity: sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==}
14601 | 3625 |     engines: {node: '>=10'}
14602 | 3626 | 
14603 | 3627 |   string-width@4.2.3:
14604 | 3628 |     resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
14605 | 3629 |     engines: {node: '>=8'}
14606 | 3630 | 
14607 | 3631 |   string-width@5.1.2:
14608 | 3632 |     resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}
14609 | 3633 |     engines: {node: '>=12'}
14610 | 3634 | 
14611 | 3635 |   string_decoder@1.1.1:
14612 | 3636 |     resolution: {integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==}
14613 | 3637 | 
14614 | 3638 |   strip-ansi@6.0.1:
14615 | 3639 |     resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
14616 | 3640 |     engines: {node: '>=8'}
14617 | 3641 | 
14618 | 3642 |   strip-ansi@7.1.0:
14619 | 3643 |     resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}
14620 | 3644 |     engines: {node: '>=12'}
14621 | 3645 | 
14622 | 3646 |   strip-bom@4.0.0:
14623 | 3647 |     resolution: {integrity: sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==}
14624 | 3648 |     engines: {node: '>=8'}
14625 | 3649 | 
14626 | 3650 |   strip-final-newline@2.0.0:
14627 | 3651 |     resolution: {integrity: sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==}
14628 | 3652 |     engines: {node: '>=6'}
14629 | 3653 | 
14630 | 3654 |   strip-final-newline@3.0.0:
14631 | 3655 |     resolution: {integrity: sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==}
14632 | 3656 |     engines: {node: '>=12'}
14633 | 3657 | 
14634 | 3658 |   strip-indent@3.0.0:
14635 | 3659 |     resolution: {integrity: sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==}
14636 | 3660 |     engines: {node: '>=8'}
14637 | 3661 | 
14638 | 3662 |   strip-json-comments@3.1.1:
14639 | 3663 |     resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
14640 | 3664 |     engines: {node: '>=8'}
14641 | 3665 | 
14642 | 3666 |   strip-literal@2.1.1:
14643 | 3667 |     resolution: {integrity: sha512-631UJ6O00eNGfMiWG78ck80dfBab8X6IVFB51jZK5Icd7XAs60Z5y7QdSd/wGIklnWvRbUNloVzhOKKmutxQ6Q==}
14644 | 3668 | 
14645 | 3669 |   sucrase@3.35.0:
14646 | 3670 |     resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}
14647 | 3671 |     engines: {node: '>=16 || 14 >=14.17'}
14648 | 3672 |     hasBin: true
14649 | 3673 | 
14650 | 3674 |   superagent@9.0.2:
14651 | 3675 |     resolution: {integrity: sha512-xuW7dzkUpcJq7QnhOsnNUgtYp3xRwpt2F7abdRYIpCsAt0hhUqia0EdxyXZQQpNmGtsCzYHryaKSV3q3GJnq7w==}
14652 | 3676 |     engines: {node: '>=14.18.0'}
14653 | 3677 | 
14654 | 3678 |   supercluster@8.0.1:
14655 | 3679 |     resolution: {integrity: sha512-IiOea5kJ9iqzD2t7QJq/cREyLHTtSmUT6gQsweojg9WH2sYJqZK9SswTu6jrscO6D1G5v5vYZ9ru/eq85lXeZQ==}
14656 | 3680 | 
14657 | 3681 |   supertest@7.0.0:
14658 | 3682 |     resolution: {integrity: sha512-qlsr7fIC0lSddmA3tzojvzubYxvlGtzumcdHgPwbFWMISQwL22MhM2Y3LNt+6w9Yyx7559VW5ab70dgphm8qQA==}
14659 | 3683 |     engines: {node: '>=14.18.0'}
14660 | 3684 | 
14661 | 3685 |   supports-color@7.2.0:
14662 | 3686 |     resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
14663 | 3687 |     engines: {node: '>=8'}
14664 | 3688 | 
14665 | 3689 |   supports-color@8.1.1:
14666 | 3690 |     resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}
14667 | 3691 |     engines: {node: '>=10'}
14668 | 3692 | 
14669 | 3693 |   supports-preserve-symlinks-flag@1.0.0:
14670 | 3694 |     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
14671 | 3695 |     engines: {node: '>= 0.4'}
14672 | 3696 | 
14673 | 3697 |   tailwindcss@3.4.17:
14674 | 3698 |     resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}
14675 | 3699 |     engines: {node: '>=14.0.0'}
14676 | 3700 |     hasBin: true
14677 | 3701 | 
14678 | 3702 |   test-exclude@6.0.0:
14679 | 3703 |     resolution: {integrity: sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==}
14680 | 3704 |     engines: {node: '>=8'}
14681 | 3705 | 
14682 | 3706 |   text-hex@1.0.0:
14683 | 3707 |     resolution: {integrity: sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==}
14684 | 3708 | 
14685 | 3709 |   text-table@0.2.0:
14686 | 3710 |     resolution: {integrity: sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==}
14687 | 3711 | 
14688 | 3712 |   thenify-all@1.6.0:
14689 | 3713 |     resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}
14690 | 3714 |     engines: {node: '>=0.8'}
14691 | 3715 | 
14692 | 3716 |   thenify@3.3.1:
14693 | 3717 |     resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}
14694 | 3718 | 
14695 | 3719 |   tinybench@2.9.0:
14696 | 3720 |     resolution: {integrity: sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==}
14697 | 3721 | 
14698 | 3722 |   tinyexec@0.3.2:
14699 | 3723 |     resolution: {integrity: sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==}
14700 | 3724 | 
14701 | 3725 |   tinyglobby@0.2.10:
14702 | 3726 |     resolution: {integrity: sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==}
14703 | 3727 |     engines: {node: '>=12.0.0'}
14704 | 3728 | 
14705 | 3729 |   tinypool@0.8.4:
14706 | 3730 |     resolution: {integrity: sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==}
14707 | 3731 |     engines: {node: '>=14.0.0'}
14708 | 3732 | 
14709 | 3733 |   tinyspy@2.2.1:
14710 | 3734 |     resolution: {integrity: sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==}
14711 | 3735 |     engines: {node: '>=14.0.0'}
14712 | 3736 | 
14713 | 3737 |   tmpl@1.0.5:
14714 | 3738 |     resolution: {integrity: sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==}
14715 | 3739 | 
14716 | 3740 |   to-regex-range@5.0.1:
14717 | 3741 |     resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
14718 | 3742 |     engines: {node: '>=8.0'}
14719 | 3743 | 
14720 | 3744 |   toidentifier@1.0.1:
14721 | 3745 |     resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}
14722 | 3746 |     engines: {node: '>=0.6'}
14723 | 3747 | 
14724 | 3748 |   tr46@1.0.1:
14725 | 3749 |     resolution: {integrity: sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==}
14726 | 3750 | 
14727 | 3751 |   tree-kill@1.2.2:
14728 | 3752 |     resolution: {integrity: sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==}
14729 | 3753 |     hasBin: true
14730 | 3754 | 
14731 | 3755 |   triple-beam@1.4.1:
14732 | 3756 |     resolution: {integrity: sha512-aZbgViZrg1QNcG+LULa7nhZpJTZSLm/mXnHXnbAbjmN5aSa0y7V+wvv6+4WaBtpISJzThKy+PIPxc1Nq1EJ9mg==}
14733 | 3757 |     engines: {node: '>= 14.0.0'}
14734 | 3758 | 
14735 | 3759 |   ts-api-utils@1.4.3:
14736 | 3760 |     resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}
14737 | 3761 |     engines: {node: '>=16'}
14738 | 3762 |     peerDependencies:
14739 | 3763 |       typescript: '>=4.2.0'
14740 | 3764 | 
14741 | 3765 |   ts-interface-checker@0.1.13:
14742 | 3766 |     resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}
14743 | 3767 | 
14744 | 3768 |   ts-jest@29.2.5:
14745 | 3769 |     resolution: {integrity: sha512-KD8zB2aAZrcKIdGk4OwpJggeLcH1FgrICqDSROWqlnJXGCXK4Mn6FcdK2B6670Xr73lHMG1kHw8R87A0ecZ+vA==}
14746 | 3770 |     engines: {node: ^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0}
14747 | 3771 |     hasBin: true
14748 | 3772 |     peerDependencies:
14749 | 3773 |       '@babel/core': '>=7.0.0-beta.0 <8'
14750 | 3774 |       '@jest/transform': ^29.0.0
14751 | 3775 |       '@jest/types': ^29.0.0
14752 | 3776 |       babel-jest: ^29.0.0
14753 | 3777 |       esbuild: '*'
14754 | 3778 |       jest: ^29.0.0
14755 | 3779 |       typescript: '>=4.3 <6'
14756 | 3780 |     peerDependenciesMeta:
14757 | 3781 |       '@babel/core':
14758 | 3782 |         optional: true
14759 | 3783 |       '@jest/transform':
14760 | 3784 |         optional: true
14761 | 3785 |       '@jest/types':
14762 | 3786 |         optional: true
14763 | 3787 |       babel-jest:
14764 | 3788 |         optional: true
14765 | 3789 |       esbuild:
14766 | 3790 |         optional: true
14767 | 3791 | 
14768 | 3792 |   ts-node@10.9.2:
14769 | 3793 |     resolution: {integrity: sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==}
14770 | 3794 |     hasBin: true
14771 | 3795 |     peerDependencies:
14772 | 3796 |       '@swc/core': '>=1.2.50'
14773 | 3797 |       '@swc/wasm': '>=1.2.50'
14774 | 3798 |       '@types/node': '*'
14775 | 3799 |       typescript: '>=2.7'
14776 | 3800 |     peerDependenciesMeta:
14777 | 3801 |       '@swc/core':
14778 | 3802 |         optional: true
14779 | 3803 |       '@swc/wasm':
14780 | 3804 |         optional: true
14781 | 3805 | 
14782 | 3806 |   tsup@8.3.5:
14783 | 3807 |     resolution: {integrity: sha512-Tunf6r6m6tnZsG9GYWndg0z8dEV7fD733VBFzFJ5Vcm1FtlXB8xBD/rtrBi2a3YKEV7hHtxiZtW5EAVADoe1pA==}
14784 | 3808 |     engines: {node: '>=18'}
14785 | 3809 |     hasBin: true
14786 | 3810 |     peerDependencies:
14787 | 3811 |       '@microsoft/api-extractor': ^7.36.0
14788 | 3812 |       '@swc/core': ^1
14789 | 3813 |       postcss: ^8.4.12
14790 | 3814 |       typescript: '>=4.5.0'
14791 | 3815 |     peerDependenciesMeta:
14792 | 3816 |       '@microsoft/api-extractor':
14793 | 3817 |         optional: true
14794 | 3818 |       '@swc/core':
14795 | 3819 |         optional: true
14796 | 3820 |       postcss:
14797 | 3821 |         optional: true
14798 | 3822 |       typescript:
14799 | 3823 |         optional: true
14800 | 3824 | 
14801 | 3825 |   tsx@4.19.2:
14802 | 3826 |     resolution: {integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==}
14803 | 3827 |     engines: {node: '>=18.0.0'}
14804 | 3828 |     hasBin: true
14805 | 3829 | 
14806 | 3830 |   turbo-darwin-64@1.13.4:
14807 | 3831 |     resolution: {integrity: sha512-A0eKd73R7CGnRinTiS7txkMElg+R5rKFp9HV7baDiEL4xTG1FIg/56Vm7A5RVgg8UNgG2qNnrfatJtb+dRmNdw==}
14808 | 3832 |     cpu: [x64]
14809 | 3833 |     os: [darwin]
14810 | 3834 | 
14811 | 3835 |   turbo-darwin-arm64@1.13.4:
14812 | 3836 |     resolution: {integrity: sha512-eG769Q0NF6/Vyjsr3mKCnkG/eW6dKMBZk6dxWOdrHfrg6QgfkBUk0WUUujzdtVPiUIvsh4l46vQrNVd9EOtbyA==}
14813 | 3837 |     cpu: [arm64]
14814 | 3838 |     os: [darwin]
14815 | 3839 | 
14816 | 3840 |   turbo-linux-64@1.13.4:
14817 | 3841 |     resolution: {integrity: sha512-Bq0JphDeNw3XEi+Xb/e4xoKhs1DHN7OoLVUbTIQz+gazYjigVZvtwCvgrZI7eW9Xo1eOXM2zw2u1DGLLUfmGkQ==}
14818 | 3842 |     cpu: [x64]
14819 | 3843 |     os: [linux]
14820 | 3844 | 
14821 | 3845 |   turbo-linux-arm64@1.13.4:
14822 | 3846 |     resolution: {integrity: sha512-BJcXw1DDiHO/okYbaNdcWN6szjXyHWx9d460v6fCHY65G8CyqGU3y2uUTPK89o8lq/b2C8NK0yZD+Vp0f9VoIg==}
14823 | 3847 |     cpu: [arm64]
14824 | 3848 |     os: [linux]
14825 | 3849 | 
14826 | 3850 |   turbo-windows-64@1.13.4:
14827 | 3851 |     resolution: {integrity: sha512-OFFhXHOFLN7A78vD/dlVuuSSVEB3s9ZBj18Tm1hk3aW1HTWTuAw0ReN6ZNlVObZUHvGy8d57OAGGxf2bT3etQw==}
14828 | 3852 |     cpu: [x64]
14829 | 3853 |     os: [win32]
14830 | 3854 | 
14831 | 3855 |   turbo-windows-arm64@1.13.4:
14832 | 3856 |     resolution: {integrity: sha512-u5A+VOKHswJJmJ8o8rcilBfU5U3Y1TTAfP9wX8bFh8teYF1ghP0EhtMRLjhtp6RPa+XCxHHVA2CiC3gbh5eg5g==}
14833 | 3857 |     cpu: [arm64]
14834 | 3858 |     os: [win32]
14835 | 3859 | 
14836 | 3860 |   turbo@1.13.4:
14837 | 3861 |     resolution: {integrity: sha512-1q7+9UJABuBAHrcC4Sxp5lOqYS5mvxRrwa33wpIyM18hlOCpRD/fTJNxZ0vhbMcJmz15o9kkVm743mPn7p6jpQ==}
14838 | 3862 |     hasBin: true
14839 | 3863 | 
14840 | 3864 |   type-check@0.4.0:
14841 | 3865 |     resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
14842 | 3866 |     engines: {node: '>= 0.8.0'}
14843 | 3867 | 
14844 | 3868 |   type-detect@4.0.8:
14845 | 3869 |     resolution: {integrity: sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==}
14846 | 3870 |     engines: {node: '>=4'}
14847 | 3871 | 
14848 | 3872 |   type-detect@4.1.0:
14849 | 3873 |     resolution: {integrity: sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==}
14850 | 3874 |     engines: {node: '>=4'}
14851 | 3875 | 
14852 | 3876 |   type-fest@0.20.2:
14853 | 3877 |     resolution: {integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==}
14854 | 3878 |     engines: {node: '>=10'}
14855 | 3879 | 
14856 | 3880 |   type-fest@0.21.3:
14857 | 3881 |     resolution: {integrity: sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==}
14858 | 3882 |     engines: {node: '>=10'}
14859 | 3883 | 
14860 | 3884 |   type-is@1.6.18:
14861 | 3885 |     resolution: {integrity: sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==}
14862 | 3886 |     engines: {node: '>= 0.6'}
14863 | 3887 | 
14864 | 3888 |   typedarray@0.0.6:
14865 | 3889 |     resolution: {integrity: sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==}
14866 | 3890 | 
14867 | 3891 |   typescript@5.7.3:
14868 | 3892 |     resolution: {integrity: sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==}
14869 | 3893 |     engines: {node: '>=14.17'}
14870 | 3894 |     hasBin: true
14871 | 3895 | 
14872 | 3896 |   ufo@1.5.4:
14873 | 3897 |     resolution: {integrity: sha512-UsUk3byDzKd04EyoZ7U4DOlxQaD14JUKQl6/P7wiX4FNvUfm3XL246n9W5AmqwW5RSFJ27NAuM0iLscAOYUiGQ==}
14874 | 3898 | 
14875 | 3899 |   undici-types@6.19.8:
14876 | 3900 |     resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}
14877 | 3901 | 
14878 | 3902 |   unpipe@1.0.0:
14879 | 3903 |     resolution: {integrity: sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==}
14880 | 3904 |     engines: {node: '>= 0.8'}
14881 | 3905 | 
14882 | 3906 |   update-browserslist-db@1.1.2:
14883 | 3907 |     resolution: {integrity: sha512-PPypAm5qvlD7XMZC3BujecnaOxwhrtoFR+Dqkk5Aa/6DssiH0ibKoketaj9w8LP7Bont1rYeoV5plxD7RTEPRg==}
14884 | 3908 |     hasBin: true
14885 | 3909 |     peerDependencies:
14886 | 3910 |       browserslist: '>= 4.21.0'
14887 | 3911 | 
14888 | 3912 |   uri-js@4.4.1:
14889 | 3913 |     resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}
14890 | 3914 | 
14891 | 3915 |   util-deprecate@1.0.2:
14892 | 3916 |     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
14893 | 3917 | 
14894 | 3918 |   utils-merge@1.0.1:
14895 | 3919 |     resolution: {integrity: sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==}
14896 | 3920 |     engines: {node: '>= 0.4.0'}
14897 | 3921 | 
14898 | 3922 |   v8-compile-cache-lib@3.0.1:
14899 | 3923 |     resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}
14900 | 3924 | 
14901 | 3925 |   v8-to-istanbul@9.3.0:
14902 | 3926 |     resolution: {integrity: sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==}
14903 | 3927 |     engines: {node: '>=10.12.0'}
14904 | 3928 | 
14905 | 3929 |   vary@1.1.2:
14906 | 3930 |     resolution: {integrity: sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==}
14907 | 3931 |     engines: {node: '>= 0.8'}
14908 | 3932 | 
14909 | 3933 |   vite-node@1.6.0:
14910 | 3934 |     resolution: {integrity: sha512-de6HJgzC+TFzOu0NTC4RAIsyf/DY/ibWDYQUcuEA84EMHhcefTUGkjFHKKEJhQN4A+6I0u++kr3l36ZF2d7XRw==}
14911 | 3935 |     engines: {node: ^18.0.0 || >=20.0.0}
14912 | 3936 |     hasBin: true
14913 | 3937 | 
14914 | 3938 |   vite@5.4.11:
14915 | 3939 |     resolution: {integrity: sha512-c7jFQRklXua0mTzneGW9QVyxFjUgwcihC4bXEtujIo2ouWCe1Ajt/amn2PCxYnhYfd5k09JX3SB7OYWFKYqj8Q==}
14916 | 3940 |     engines: {node: ^18.0.0 || >=20.0.0}
14917 | 3941 |     hasBin: true
14918 | 3942 |     peerDependencies:
14919 | 3943 |       '@types/node': ^18.0.0 || >=20.0.0
14920 | 3944 |       less: '*'
14921 | 3945 |       lightningcss: ^1.21.0
14922 | 3946 |       sass: '*'
14923 | 3947 |       sass-embedded: '*'
14924 | 3948 |       stylus: '*'
14925 | 3949 |       sugarss: '*'
14926 | 3950 |       terser: ^5.4.0
14927 | 3951 |     peerDependenciesMeta:
14928 | 3952 |       '@types/node':
14929 | 3953 |         optional: true
14930 | 3954 |       less:
14931 | 3955 |         optional: true
14932 | 3956 |       lightningcss:
14933 | 3957 |         optional: true
14934 | 3958 |       sass:
14935 | 3959 |         optional: true
14936 | 3960 |       sass-embedded:
14937 | 3961 |         optional: true
14938 | 3962 |       stylus:
14939 | 3963 |         optional: true
14940 | 3964 |       sugarss:
14941 | 3965 |         optional: true
14942 | 3966 |       terser:
14943 | 3967 |         optional: true
14944 | 3968 | 
14945 | 3969 |   vitest@1.6.0:
14946 | 3970 |     resolution: {integrity: sha512-H5r/dN06swuFnzNFhq/dnz37bPXnq8xB2xB5JOVk8K09rUtoeNN+LHWkoQ0A/i3hvbUKKcCei9KpbxqHMLhLLA==}
14947 | 3971 |     engines: {node: ^18.0.0 || >=20.0.0}
14948 | 3972 |     hasBin: true
14949 | 3973 |     peerDependencies:
14950 | 3974 |       '@edge-runtime/vm': '*'
14951 | 3975 |       '@types/node': ^18.0.0 || >=20.0.0
14952 | 3976 |       '@vitest/browser': 1.6.0
14953 | 3977 |       '@vitest/ui': 1.6.0
14954 | 3978 |       happy-dom: '*'
14955 | 3979 |       jsdom: '*'
14956 | 3980 |     peerDependenciesMeta:
14957 | 3981 |       '@edge-runtime/vm':
14958 | 3982 |         optional: true
14959 | 3983 |       '@types/node':
14960 | 3984 |         optional: true
14961 | 3985 |       '@vitest/browser':
14962 | 3986 |         optional: true
14963 | 3987 |       '@vitest/ui':
14964 | 3988 |         optional: true
14965 | 3989 |       happy-dom:
14966 | 3990 |         optional: true
14967 | 3991 |       jsdom:
14968 | 3992 |         optional: true
14969 | 3993 | 
14970 | 3994 |   walker@1.0.8:
14971 | 3995 |     resolution: {integrity: sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==}
14972 | 3996 | 
14973 | 3997 |   webidl-conversions@4.0.2:
14974 | 3998 |     resolution: {integrity: sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==}
14975 | 3999 | 
14976 | 4000 |   webidl-conversions@7.0.0:
14977 | 4001 |     resolution: {integrity: sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==}
14978 | 4002 |     engines: {node: '>=12'}
14979 | 4003 | 
14980 | 4004 |   whatwg-encoding@2.0.0:
14981 | 4005 |     resolution: {integrity: sha512-p41ogyeMUrw3jWclHWTQg1k05DSVXPLcVxRTYsXUk+ZooOCZLcoYgPZ/HL/D/N+uQPOtcp1me1WhBEaX02mhWg==}
14982 | 4006 |     engines: {node: '>=12'}
14983 | 4007 | 
14984 | 4008 |   whatwg-mimetype@3.0.0:
14985 | 4009 |     resolution: {integrity: sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==}
14986 | 4010 |     engines: {node: '>=12'}
14987 | 4011 | 
14988 | 4012 |   whatwg-url@7.1.0:
14989 | 4013 |     resolution: {integrity: sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==}
14990 | 4014 | 
14991 | 4015 |   which-boxed-primitive@1.1.1:
14992 | 4016 |     resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}
14993 | 4017 |     engines: {node: '>= 0.4'}
14994 | 4018 | 
14995 | 4019 |   which-collection@1.0.2:
14996 | 4020 |     resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}
14997 | 4021 |     engines: {node: '>= 0.4'}
14998 | 4022 | 
14999 | 4023 |   which-typed-array@1.1.18:
15000 | 4024 |     resolution: {integrity: sha512-qEcY+KJYlWyLH9vNbsr6/5j59AXk5ni5aakf8ldzBvGde6Iz4sxZGkJyWSAueTG7QhOvNRYb1lDdFmL5Td0QKA==}
15001 | 4025 |     engines: {node: '>= 0.4'}
15002 | 4026 | 
15003 | 4027 |   which@2.0.2:
15004 | 4028 |     resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
15005 | 4029 |     engines: {node: '>= 8'}
15006 | 4030 |     hasBin: true
15007 | 4031 | 
15008 | 4032 |   why-is-node-running@2.3.0:
15009 | 4033 |     resolution: {integrity: sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==}
15010 | 4034 |     engines: {node: '>=8'}
15011 | 4035 |     hasBin: true
15012 | 4036 | 
15013 | 4037 |   winston-transport@4.9.0:
15014 | 4038 |     resolution: {integrity: sha512-8drMJ4rkgaPo1Me4zD/3WLfI/zPdA9o2IipKODunnGDcuqbHwjsbB79ylv04LCGGzU0xQ6vTznOMpQGaLhhm6A==}
15015 | 4039 |     engines: {node: '>= 12.0.0'}
15016 | 4040 | 
15017 | 4041 |   winston@3.17.0:
15018 | 4042 |     resolution: {integrity: sha512-DLiFIXYC5fMPxaRg832S6F5mJYvePtmO5G9v9IgUFPhXm9/GkXarH/TUrBAVzhTCzAj9anE/+GjrgXp/54nOgw==}
15019 | 4043 |     engines: {node: '>= 12.0.0'}
15020 | 4044 | 
15021 | 4045 |   word-wrap@1.2.5:
15022 | 4046 |     resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
15023 | 4047 |     engines: {node: '>=0.10.0'}
15024 | 4048 | 
15025 | 4049 |   wrap-ansi@7.0.0:
15026 | 4050 |     resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
15027 | 4051 |     engines: {node: '>=10'}
15028 | 4052 | 
15029 | 4053 |   wrap-ansi@8.1.0:
15030 | 4054 |     resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}
15031 | 4055 |     engines: {node: '>=12'}
15032 | 4056 | 
15033 | 4057 |   wrappy@1.0.2:
15034 | 4058 |     resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}
15035 | 4059 | 
15036 | 4060 |   write-file-atomic@4.0.2:
15037 | 4061 |     resolution: {integrity: sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==}
15038 | 4062 |     engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
15039 | 4063 | 
15040 | 4064 |   xtend@4.0.2:
15041 | 4065 |     resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}
15042 | 4066 |     engines: {node: '>=0.4'}
15043 | 4067 | 
15044 | 4068 |   y18n@5.0.8:
15045 | 4069 |     resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
15046 | 4070 |     engines: {node: '>=10'}
15047 | 4071 | 
15048 | 4072 |   yallist@3.1.1:
15049 | 4073 |     resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}
15050 | 4074 | 
15051 | 4075 |   yaml@2.7.0:
15052 | 4076 |     resolution: {integrity: sha512-+hSoy/QHluxmC9kCIJyL/uyFmLmc+e5CFR5Wa+bpIhIj85LVb9ZH2nVnqrHoSvKogwODv0ClqZkmiSSaIH5LTA==}
15053 | 4077 |     engines: {node: '>= 14'}
15054 | 4078 |     hasBin: true
15055 | 4079 | 
15056 | 4080 |   yargs-parser@21.1.1:
15057 | 4081 |     resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
15058 | 4082 |     engines: {node: '>=12'}
15059 | 4083 | 
15060 | 4084 |   yargs@17.7.2:
15061 | 4085 |     resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
15062 | 4086 |     engines: {node: '>=12'}
15063 | 4087 | 
15064 | 4088 |   yn@3.1.1:
15065 | 4089 |     resolution: {integrity: sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==}
15066 | 4090 |     engines: {node: '>=6'}
15067 | 4091 | 
15068 | 4092 |   yocto-queue@0.1.0:
15069 | 4093 |     resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
15070 | 4094 |     engines: {node: '>=10'}
15071 | 4095 | 
15072 | 4096 |   yocto-queue@1.1.1:
15073 | 4097 |     resolution: {integrity: sha512-b4JR1PFR10y1mKjhHY9LaGo6tmrgjit7hxVIeAmyMw3jegXR4dhYqLaQF5zMXZxY7tLpMyJeLjr1C4rLmkVe8g==}
15074 | 4098 |     engines: {node: '>=12.20'}
15075 | 4099 | 
15076 | 4100 |   zod@3.24.1:
15077 | 4101 |     resolution: {integrity: sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==}
15078 | 4102 | 
15079 | 4103 | snapshots:
15080 | 4104 | 
15081 | 4105 |   '@adobe/css-tools@4.4.1': {}
15082 | 4106 | 
15083 | 4107 |   '@alloc/quick-lru@5.2.0': {}
15084 | 4108 | 
15085 | 4109 |   '@ampproject/remapping@2.3.0':
15086 | 4110 |     dependencies:
15087 | 4111 |       '@jridgewell/gen-mapping': 0.3.8
15088 | 4112 |       '@jridgewell/trace-mapping': 0.3.25
15089 | 4113 | 
15090 | 4114 |   '@babel/code-frame@7.26.2':
15091 | 4115 |     dependencies:
15092 | 4116 |       '@babel/helper-validator-identifier': 7.25.9
15093 | 4117 |       js-tokens: 4.0.0
15094 | 4118 |       picocolors: 1.1.1
15095 | 4119 | 
15096 | 4120 |   '@babel/compat-data@7.26.5': {}
15097 | 4121 | 
15098 | 4122 |   '@babel/core@7.26.0':
15099 | 4123 |     dependencies:
15100 | 4124 |       '@ampproject/remapping': 2.3.0
15101 | 4125 |       '@babel/code-frame': 7.26.2
15102 | 4126 |       '@babel/generator': 7.26.5
15103 | 4127 |       '@babel/helper-compilation-targets': 7.26.5
15104 | 4128 |       '@babel/helper-module-transforms': 7.26.0(@babel/core@7.26.0)
15105 | 4129 |       '@babel/helpers': 7.26.0
15106 | 4130 |       '@babel/parser': 7.26.5
15107 | 4131 |       '@babel/template': 7.25.9
15108 | 4132 |       '@babel/traverse': 7.26.5
15109 | 4133 |       '@babel/types': 7.26.5
15110 | 4134 |       convert-source-map: 2.0.0
15111 | 4135 |       debug: 4.4.0
15112 | 4136 |       gensync: 1.0.0-beta.2
15113 | 4137 |       json5: 2.2.3
15114 | 4138 |       semver: 6.3.1
15115 | 4139 |     transitivePeerDependencies:
15116 | 4140 |       - supports-color
15117 | 4141 | 
15118 | 4142 |   '@babel/generator@7.26.5':
15119 | 4143 |     dependencies:
15120 | 4144 |       '@babel/parser': 7.26.5
15121 | 4145 |       '@babel/types': 7.26.5
15122 | 4146 |       '@jridgewell/gen-mapping': 0.3.8
15123 | 4147 |       '@jridgewell/trace-mapping': 0.3.25
15124 | 4148 |       jsesc: 3.1.0
15125 | 4149 | 
15126 | 4150 |   '@babel/helper-compilation-targets@7.26.5':
15127 | 4151 |     dependencies:
15128 | 4152 |       '@babel/compat-data': 7.26.5
15129 | 4153 |       '@babel/helper-validator-option': 7.25.9
15130 | 4154 |       browserslist: 4.24.4
15131 | 4155 |       lru-cache: 5.1.1
15132 | 4156 |       semver: 6.3.1
15133 | 4157 | 
15134 | 4158 |   '@babel/helper-module-imports@7.25.9':
15135 | 4159 |     dependencies:
15136 | 4160 |       '@babel/traverse': 7.26.5
15137 | 4161 |       '@babel/types': 7.26.5
15138 | 4162 |     transitivePeerDependencies:
15139 | 4163 |       - supports-color
15140 | 4164 | 
15141 | 4165 |   '@babel/helper-module-transforms@7.26.0(@babel/core@7.26.0)':
15142 | 4166 |     dependencies:
15143 | 4167 |       '@babel/core': 7.26.0
15144 | 4168 |       '@babel/helper-module-imports': 7.25.9
15145 | 4169 |       '@babel/helper-validator-identifier': 7.25.9
15146 | 4170 |       '@babel/traverse': 7.26.5
15147 | 4171 |     transitivePeerDependencies:
15148 | 4172 |       - supports-color
15149 | 4173 | 
15150 | 4174 |   '@babel/helper-plugin-utils@7.26.5': {}
15151 | 4175 | 
15152 | 4176 |   '@babel/helper-string-parser@7.25.9': {}
15153 | 4177 | 
15154 | 4178 |   '@babel/helper-validator-identifier@7.25.9': {}
15155 | 4179 | 
15156 | 4180 |   '@babel/helper-validator-option@7.25.9': {}
15157 | 4181 | 
15158 | 4182 |   '@babel/helpers@7.26.0':
15159 | 4183 |     dependencies:
15160 | 4184 |       '@babel/template': 7.25.9
15161 | 4185 |       '@babel/types': 7.26.5
15162 | 4186 | 
15163 | 4187 |   '@babel/parser@7.26.5':
15164 | 4188 |     dependencies:
15165 | 4189 |       '@babel/types': 7.26.5
15166 | 4190 | 
15167 | 4191 |   '@babel/plugin-syntax-async-generators@7.8.4(@babel/core@7.26.0)':
15168 | 4192 |     dependencies:
15169 | 4193 |       '@babel/core': 7.26.0
15170 | 4194 |       '@babel/helper-plugin-utils': 7.26.5
15171 | 4195 | 
15172 | 4196 |   '@babel/plugin-syntax-bigint@7.8.3(@babel/core@7.26.0)':
15173 | 4197 |     dependencies:
15174 | 4198 |       '@babel/core': 7.26.0
15175 | 4199 |       '@babel/helper-plugin-utils': 7.26.5
15176 | 4200 | 
15177 | 4201 |   '@babel/plugin-syntax-class-properties@7.12.13(@babel/core@7.26.0)':
15178 | 4202 |     dependencies:
15179 | 4203 |       '@babel/core': 7.26.0
15180 | 4204 |       '@babel/helper-plugin-utils': 7.26.5
15181 | 4205 | 
15182 | 4206 |   '@babel/plugin-syntax-class-static-block@7.14.5(@babel/core@7.26.0)':
15183 | 4207 |     dependencies:
15184 | 4208 |       '@babel/core': 7.26.0
15185 | 4209 |       '@babel/helper-plugin-utils': 7.26.5
15186 | 4210 | 
15187 | 4211 |   '@babel/plugin-syntax-import-attributes@7.26.0(@babel/core@7.26.0)':
15188 | 4212 |     dependencies:
15189 | 4213 |       '@babel/core': 7.26.0
15190 | 4214 |       '@babel/helper-plugin-utils': 7.26.5
15191 | 4215 | 
15192 | 4216 |   '@babel/plugin-syntax-import-meta@7.10.4(@babel/core@7.26.0)':
15193 | 4217 |     dependencies:
15194 | 4218 |       '@babel/core': 7.26.0
15195 | 4219 |       '@babel/helper-plugin-utils': 7.26.5
15196 | 4220 | 
15197 | 4221 |   '@babel/plugin-syntax-json-strings@7.8.3(@babel/core@7.26.0)':
15198 | 4222 |     dependencies:
15199 | 4223 |       '@babel/core': 7.26.0
15200 | 4224 |       '@babel/helper-plugin-utils': 7.26.5
15201 | 4225 | 
15202 | 4226 |   '@babel/plugin-syntax-jsx@7.25.9(@babel/core@7.26.0)':
15203 | 4227 |     dependencies:
15204 | 4228 |       '@babel/core': 7.26.0
15205 | 4229 |       '@babel/helper-plugin-utils': 7.26.5
15206 | 4230 | 
15207 | 4231 |   '@babel/plugin-syntax-logical-assignment-operators@7.10.4(@babel/core@7.26.0)':
15208 | 4232 |     dependencies:
15209 | 4233 |       '@babel/core': 7.26.0
15210 | 4234 |       '@babel/helper-plugin-utils': 7.26.5
15211 | 4235 | 
15212 | 4236 |   '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3(@babel/core@7.26.0)':
15213 | 4237 |     dependencies:
15214 | 4238 |       '@babel/core': 7.26.0
15215 | 4239 |       '@babel/helper-plugin-utils': 7.26.5
15216 | 4240 | 
15217 | 4241 |   '@babel/plugin-syntax-numeric-separator@7.10.4(@babel/core@7.26.0)':
15218 | 4242 |     dependencies:
15219 | 4243 |       '@babel/core': 7.26.0
15220 | 4244 |       '@babel/helper-plugin-utils': 7.26.5
15221 | 4245 | 
15222 | 4246 |   '@babel/plugin-syntax-object-rest-spread@7.8.3(@babel/core@7.26.0)':
15223 | 4247 |     dependencies:
15224 | 4248 |       '@babel/core': 7.26.0
15225 | 4249 |       '@babel/helper-plugin-utils': 7.26.5
15226 | 4250 | 
15227 | 4251 |   '@babel/plugin-syntax-optional-catch-binding@7.8.3(@babel/core@7.26.0)':
15228 | 4252 |     dependencies:
15229 | 4253 |       '@babel/core': 7.26.0
15230 | 4254 |       '@babel/helper-plugin-utils': 7.26.5
15231 | 4255 | 
15232 | 4256 |   '@babel/plugin-syntax-optional-chaining@7.8.3(@babel/core@7.26.0)':
15233 | 4257 |     dependencies:
15234 | 4258 |       '@babel/core': 7.26.0
15235 | 4259 |       '@babel/helper-plugin-utils': 7.26.5
15236 | 4260 | 
15237 | 4261 |   '@babel/plugin-syntax-private-property-in-object@7.14.5(@babel/core@7.26.0)':
15238 | 4262 |     dependencies:
15239 | 4263 |       '@babel/core': 7.26.0
15240 | 4264 |       '@babel/helper-plugin-utils': 7.26.5
15241 | 4265 | 
15242 | 4266 |   '@babel/plugin-syntax-top-level-await@7.14.5(@babel/core@7.26.0)':
15243 | 4267 |     dependencies:
15244 | 4268 |       '@babel/core': 7.26.0
15245 | 4269 |       '@babel/helper-plugin-utils': 7.26.5
15246 | 4270 | 
15247 | 4271 |   '@babel/plugin-syntax-typescript@7.25.9(@babel/core@7.26.0)':
15248 | 4272 |     dependencies:
15249 | 4273 |       '@babel/core': 7.26.0
15250 | 4274 |       '@babel/helper-plugin-utils': 7.26.5
15251 | 4275 | 
15252 | 4276 |   '@babel/plugin-transform-react-jsx-self@7.25.9(@babel/core@7.26.0)':
15253 | 4277 |     dependencies:
15254 | 4278 |       '@babel/core': 7.26.0
15255 | 4279 |       '@babel/helper-plugin-utils': 7.26.5
15256 | 4280 | 
15257 | 4281 |   '@babel/plugin-transform-react-jsx-source@7.25.9(@babel/core@7.26.0)':
15258 | 4282 |     dependencies:
15259 | 4283 |       '@babel/core': 7.26.0
15260 | 4284 |       '@babel/helper-plugin-utils': 7.26.5
15261 | 4285 | 
15262 | 4286 |   '@babel/runtime@7.26.0':
15263 | 4287 |     dependencies:
15264 | 4288 |       regenerator-runtime: 0.14.1
15265 | 4289 | 
15266 | 4290 |   '@babel/template@7.25.9':
15267 | 4291 |     dependencies:
15268 | 4292 |       '@babel/code-frame': 7.26.2
15269 | 4293 |       '@babel/parser': 7.26.5
15270 | 4294 |       '@babel/types': 7.26.5
15271 | 4295 | 
15272 | 4296 |   '@babel/traverse@7.26.5':
15273 | 4297 |     dependencies:
15274 | 4298 |       '@babel/code-frame': 7.26.2
15275 | 4299 |       '@babel/generator': 7.26.5
15276 | 4300 |       '@babel/parser': 7.26.5
15277 | 4301 |       '@babel/template': 7.25.9
15278 | 4302 |       '@babel/types': 7.26.5
15279 | 4303 |       debug: 4.4.0
15280 | 4304 |       globals: 11.12.0
15281 | 4305 |     transitivePeerDependencies:
15282 | 4306 |       - supports-color
15283 | 4307 | 
15284 | 4308 |   '@babel/types@7.26.5':
15285 | 4309 |     dependencies:
15286 | 4310 |       '@babel/helper-string-parser': 7.25.9
15287 | 4311 |       '@babel/helper-validator-identifier': 7.25.9
15288 | 4312 | 
15289 | 4313 |   '@bcoe/v8-coverage@0.2.3': {}
15290 | 4314 | 
15291 | 4315 |   '@colors/colors@1.6.0': {}
15292 | 4316 | 
15293 | 4317 |   '@cspotcode/source-map-support@0.8.1':
15294 | 4318 |     dependencies:
15295 | 4319 |       '@jridgewell/trace-mapping': 0.3.9
15296 | 4320 |     optional: true
15297 | 4321 | 
15298 | 4322 |   '@dabh/diagnostics@2.0.3':
15299 | 4323 |     dependencies:
15300 | 4324 |       colorspace: 1.1.4
15301 | 4325 |       enabled: 2.0.0
15302 | 4326 |       kuler: 2.0.0
15303 | 4327 | 
15304 | 4328 |   '@esbuild/aix-ppc64@0.21.5':
15305 | 4329 |     optional: true
15306 | 4330 | 
15307 | 4331 |   '@esbuild/aix-ppc64@0.23.1':
15308 | 4332 |     optional: true
15309 | 4333 | 
15310 | 4334 |   '@esbuild/aix-ppc64@0.24.2':
15311 | 4335 |     optional: true
15312 | 4336 | 
15313 | 4337 |   '@esbuild/android-arm64@0.21.5':
15314 | 4338 |     optional: true
15315 | 4339 | 
15316 | 4340 |   '@esbuild/android-arm64@0.23.1':
15317 | 4341 |     optional: true
15318 | 4342 | 
15319 | 4343 |   '@esbuild/android-arm64@0.24.2':
15320 | 4344 |     optional: true
15321 | 4345 | 
15322 | 4346 |   '@esbuild/android-arm@0.21.5':
15323 | 4347 |     optional: true
15324 | 4348 | 
15325 | 4349 |   '@esbuild/android-arm@0.23.1':
15326 | 4350 |     optional: true
15327 | 4351 | 
15328 | 4352 |   '@esbuild/android-arm@0.24.2':
15329 | 4353 |     optional: true
15330 | 4354 | 
15331 | 4355 |   '@esbuild/android-x64@0.21.5':
15332 | 4356 |     optional: true
15333 | 4357 | 
15334 | 4358 |   '@esbuild/android-x64@0.23.1':
15335 | 4359 |     optional: true
15336 | 4360 | 
15337 | 4361 |   '@esbuild/android-x64@0.24.2':
15338 | 4362 |     optional: true
15339 | 4363 | 
15340 | 4364 |   '@esbuild/darwin-arm64@0.21.5':
15341 | 4365 |     optional: true
15342 | 4366 | 
15343 | 4367 |   '@esbuild/darwin-arm64@0.23.1':
15344 | 4368 |     optional: true
15345 | 4369 | 
15346 | 4370 |   '@esbuild/darwin-arm64@0.24.2':
15347 | 4371 |     optional: true
15348 | 4372 | 
15349 | 4373 |   '@esbuild/darwin-x64@0.21.5':
15350 | 4374 |     optional: true
15351 | 4375 | 
15352 | 4376 |   '@esbuild/darwin-x64@0.23.1':
15353 | 4377 |     optional: true
15354 | 4378 | 
15355 | 4379 |   '@esbuild/darwin-x64@0.24.2':
15356 | 4380 |     optional: true
15357 | 4381 | 
15358 | 4382 |   '@esbuild/freebsd-arm64@0.21.5':
15359 | 4383 |     optional: true
15360 | 4384 | 
15361 | 4385 |   '@esbuild/freebsd-arm64@0.23.1':
15362 | 4386 |     optional: true
15363 | 4387 | 
15364 | 4388 |   '@esbuild/freebsd-arm64@0.24.2':
15365 | 4389 |     optional: true
15366 | 4390 | 
15367 | 4391 |   '@esbuild/freebsd-x64@0.21.5':
15368 | 4392 |     optional: true
15369 | 4393 | 
15370 | 4394 |   '@esbuild/freebsd-x64@0.23.1':
15371 | 4395 |     optional: true
15372 | 4396 | 
15373 | 4397 |   '@esbuild/freebsd-x64@0.24.2':
15374 | 4398 |     optional: true
15375 | 4399 | 
15376 | 4400 |   '@esbuild/linux-arm64@0.21.5':
15377 | 4401 |     optional: true
15378 | 4402 | 
15379 | 4403 |   '@esbuild/linux-arm64@0.23.1':
15380 | 4404 |     optional: true
15381 | 4405 | 
15382 | 4406 |   '@esbuild/linux-arm64@0.24.2':
15383 | 4407 |     optional: true
15384 | 4408 | 
15385 | 4409 |   '@esbuild/linux-arm@0.21.5':
15386 | 4410 |     optional: true
15387 | 4411 | 
15388 | 4412 |   '@esbuild/linux-arm@0.23.1':
15389 | 4413 |     optional: true
15390 | 4414 | 
15391 | 4415 |   '@esbuild/linux-arm@0.24.2':
15392 | 4416 |     optional: true
15393 | 4417 | 
15394 | 4418 |   '@esbuild/linux-ia32@0.21.5':
15395 | 4419 |     optional: true
15396 | 4420 | 
15397 | 4421 |   '@esbuild/linux-ia32@0.23.1':
15398 | 4422 |     optional: true
15399 | 4423 | 
15400 | 4424 |   '@esbuild/linux-ia32@0.24.2':
15401 | 4425 |     optional: true
15402 | 4426 | 
15403 | 4427 |   '@esbuild/linux-loong64@0.21.5':
15404 | 4428 |     optional: true
15405 | 4429 | 
15406 | 4430 |   '@esbuild/linux-loong64@0.23.1':
15407 | 4431 |     optional: true
15408 | 4432 | 
15409 | 4433 |   '@esbuild/linux-loong64@0.24.2':
15410 | 4434 |     optional: true
15411 | 4435 | 
15412 | 4436 |   '@esbuild/linux-mips64el@0.21.5':
15413 | 4437 |     optional: true
15414 | 4438 | 
15415 | 4439 |   '@esbuild/linux-mips64el@0.23.1':
15416 | 4440 |     optional: true
15417 | 4441 | 
15418 | 4442 |   '@esbuild/linux-mips64el@0.24.2':
15419 | 4443 |     optional: true
15420 | 4444 | 
15421 | 4445 |   '@esbuild/linux-ppc64@0.21.5':
15422 | 4446 |     optional: true
15423 | 4447 | 
15424 | 4448 |   '@esbuild/linux-ppc64@0.23.1':
15425 | 4449 |     optional: true
15426 | 4450 | 
15427 | 4451 |   '@esbuild/linux-ppc64@0.24.2':
15428 | 4452 |     optional: true
15429 | 4453 | 
15430 | 4454 |   '@esbuild/linux-riscv64@0.21.5':
15431 | 4455 |     optional: true
15432 | 4456 | 
15433 | 4457 |   '@esbuild/linux-riscv64@0.23.1':
15434 | 4458 |     optional: true
15435 | 4459 | 
15436 | 4460 |   '@esbuild/linux-riscv64@0.24.2':
15437 | 4461 |     optional: true
15438 | 4462 | 
15439 | 4463 |   '@esbuild/linux-s390x@0.21.5':
15440 | 4464 |     optional: true
15441 | 4465 | 
15442 | 4466 |   '@esbuild/linux-s390x@0.23.1':
15443 | 4467 |     optional: true
15444 | 4468 | 
15445 | 4469 |   '@esbuild/linux-s390x@0.24.2':
15446 | 4470 |     optional: true
15447 | 4471 | 
15448 | 4472 |   '@esbuild/linux-x64@0.21.5':
15449 | 4473 |     optional: true
15450 | 4474 | 
15451 | 4475 |   '@esbuild/linux-x64@0.23.1':
15452 | 4476 |     optional: true
15453 | 4477 | 
15454 | 4478 |   '@esbuild/linux-x64@0.24.2':
15455 | 4479 |     optional: true
15456 | 4480 | 
15457 | 4481 |   '@esbuild/netbsd-arm64@0.24.2':
15458 | 4482 |     optional: true
15459 | 4483 | 
15460 | 4484 |   '@esbuild/netbsd-x64@0.21.5':
15461 | 4485 |     optional: true
15462 | 4486 | 
15463 | 4487 |   '@esbuild/netbsd-x64@0.23.1':
15464 | 4488 |     optional: true
15465 | 4489 | 
15466 | 4490 |   '@esbuild/netbsd-x64@0.24.2':
15467 | 4491 |     optional: true
15468 | 4492 | 
15469 | 4493 |   '@esbuild/openbsd-arm64@0.23.1':
15470 | 4494 |     optional: true
15471 | 4495 | 
15472 | 4496 |   '@esbuild/openbsd-arm64@0.24.2':
15473 | 4497 |     optional: true
15474 | 4498 | 
15475 | 4499 |   '@esbuild/openbsd-x64@0.21.5':
15476 | 4500 |     optional: true
15477 | 4501 | 
15478 | 4502 |   '@esbuild/openbsd-x64@0.23.1':
15479 | 4503 |     optional: true
15480 | 4504 | 
15481 | 4505 |   '@esbuild/openbsd-x64@0.24.2':
15482 | 4506 |     optional: true
15483 | 4507 | 
15484 | 4508 |   '@esbuild/sunos-x64@0.21.5':
15485 | 4509 |     optional: true
15486 | 4510 | 
15487 | 4511 |   '@esbuild/sunos-x64@0.23.1':
15488 | 4512 |     optional: true
15489 | 4513 | 
15490 | 4514 |   '@esbuild/sunos-x64@0.24.2':
15491 | 4515 |     optional: true
15492 | 4516 | 
15493 | 4517 |   '@esbuild/win32-arm64@0.21.5':
15494 | 4518 |     optional: true
15495 | 4519 | 
15496 | 4520 |   '@esbuild/win32-arm64@0.23.1':
15497 | 4521 |     optional: true
15498 | 4522 | 
15499 | 4523 |   '@esbuild/win32-arm64@0.24.2':
15500 | 4524 |     optional: true
15501 | 4525 | 
15502 | 4526 |   '@esbuild/win32-ia32@0.21.5':
15503 | 4527 |     optional: true
15504 | 4528 | 
15505 | 4529 |   '@esbuild/win32-ia32@0.23.1':
15506 | 4530 |     optional: true
15507 | 4531 | 
15508 | 4532 |   '@esbuild/win32-ia32@0.24.2':
15509 | 4533 |     optional: true
15510 | 4534 | 
15511 | 4535 |   '@esbuild/win32-x64@0.21.5':
15512 | 4536 |     optional: true
15513 | 4537 | 
15514 | 4538 |   '@esbuild/win32-x64@0.23.1':
15515 | 4539 |     optional: true
15516 | 4540 | 
15517 | 4541 |   '@esbuild/win32-x64@0.24.2':
15518 | 4542 |     optional: true
15519 | 4543 | 
15520 | 4544 |   '@eslint-community/eslint-utils@4.4.1(eslint@8.57.1)':
15521 | 4545 |     dependencies:
15522 | 4546 |       eslint: 8.57.1
15523 | 4547 |       eslint-visitor-keys: 3.4.3
15524 | 4548 | 
15525 | 4549 |   '@eslint-community/regexpp@4.12.1': {}
15526 | 4550 | 
15527 | 4551 |   '@eslint/eslintrc@2.1.4':
15528 | 4552 |     dependencies:
15529 | 4553 |       ajv: 6.12.6
15530 | 4554 |       debug: 4.4.0
15531 | 4555 |       espree: 9.6.1
15532 | 4556 |       globals: 13.24.0
15533 | 4557 |       ignore: 5.3.2
15534 | 4558 |       import-fresh: 3.3.0
15535 | 4559 |       js-yaml: 4.1.0
15536 | 4560 |       minimatch: 3.1.2
15537 | 4561 |       strip-json-comments: 3.1.1
15538 | 4562 |     transitivePeerDependencies:
15539 | 4563 |       - supports-color
15540 | 4564 | 
15541 | 4565 |   '@eslint/js@8.57.1': {}
15542 | 4566 | 
15543 | 4567 |   '@googlemaps/js-api-loader@1.16.8': {}
15544 | 4568 | 
15545 | 4569 |   '@googlemaps/markerclusterer@2.5.3':
15546 | 4570 |     dependencies:
15547 | 4571 |       fast-deep-equal: 3.1.3
15548 | 4572 |       supercluster: 8.0.1
15549 | 4573 | 
15550 | 4574 |   '@headlessui/react@1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
15551 | 4575 |     dependencies:
15552 | 4576 |       '@tanstack/react-virtual': 3.11.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
15553 | 4577 |       client-only: 0.0.1
15554 | 4578 |       react: 18.3.1
15555 | 4579 |       react-dom: 18.3.1(react@18.3.1)
15556 | 4580 | 
15557 | 4581 |   '@heroicons/react@2.2.0(react@18.3.1)':
15558 | 4582 |     dependencies:
15559 | 4583 |       react: 18.3.1
15560 | 4584 | 
15561 | 4585 |   '@humanwhocodes/config-array@0.13.0':
15562 | 4586 |     dependencies:
15563 | 4587 |       '@humanwhocodes/object-schema': 2.0.3
15564 | 4588 |       debug: 4.4.0
15565 | 4589 |       minimatch: 3.1.2
15566 | 4590 |     transitivePeerDependencies:
15567 | 4591 |       - supports-color
15568 | 4592 | 
15569 | 4593 |   '@humanwhocodes/module-importer@1.0.1': {}
15570 | 4594 | 
15571 | 4595 |   '@humanwhocodes/object-schema@2.0.3': {}
15572 | 4596 | 
15573 | 4597 |   '@isaacs/cliui@8.0.2':
15574 | 4598 |     dependencies:
15575 | 4599 |       string-width: 5.1.2
15576 | 4600 |       string-width-cjs: string-width@4.2.3
15577 | 4601 |       strip-ansi: 7.1.0
15578 | 4602 |       strip-ansi-cjs: strip-ansi@6.0.1
15579 | 4603 |       wrap-ansi: 8.1.0
15580 | 4604 |       wrap-ansi-cjs: wrap-ansi@7.0.0
15581 | 4605 | 
15582 | 4606 |   '@istanbuljs/load-nyc-config@1.1.0':
15583 | 4607 |     dependencies:
15584 | 4608 |       camelcase: 5.3.1
15585 | 4609 |       find-up: 4.1.0
15586 | 4610 |       get-package-type: 0.1.0
15587 | 4611 |       js-yaml: 3.14.1
15588 | 4612 |       resolve-from: 5.0.0
15589 | 4613 | 
15590 | 4614 |   '@istanbuljs/schema@0.1.3': {}
15591 | 4615 | 
15592 | 4616 |   '@jest/console@29.7.0':
15593 | 4617 |     dependencies:
15594 | 4618 |       '@jest/types': 29.6.3
15595 | 4619 |       '@types/node': 20.17.12
15596 | 4620 |       chalk: 4.1.2
15597 | 4621 |       jest-message-util: 29.7.0
15598 | 4622 |       jest-util: 29.7.0
15599 | 4623 |       slash: 3.0.0
15600 | 4624 | 
15601 | 4625 |   '@jest/core@29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))':
15602 | 4626 |     dependencies:
15603 | 4627 |       '@jest/console': 29.7.0
15604 | 4628 |       '@jest/reporters': 29.7.0
15605 | 4629 |       '@jest/test-result': 29.7.0
15606 | 4630 |       '@jest/transform': 29.7.0
15607 | 4631 |       '@jest/types': 29.6.3
15608 | 4632 |       '@types/node': 20.17.12
15609 | 4633 |       ansi-escapes: 4.3.2
15610 | 4634 |       chalk: 4.1.2
15611 | 4635 |       ci-info: 3.9.0
15612 | 4636 |       exit: 0.1.2
15613 | 4637 |       graceful-fs: 4.2.11
15614 | 4638 |       jest-changed-files: 29.7.0
15615 | 4639 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
15616 | 4640 |       jest-haste-map: 29.7.0
15617 | 4641 |       jest-message-util: 29.7.0
15618 | 4642 |       jest-regex-util: 29.6.3
15619 | 4643 |       jest-resolve: 29.7.0
15620 | 4644 |       jest-resolve-dependencies: 29.7.0
15621 | 4645 |       jest-runner: 29.7.0
15622 | 4646 |       jest-runtime: 29.7.0
15623 | 4647 |       jest-snapshot: 29.7.0
15624 | 4648 |       jest-util: 29.7.0
15625 | 4649 |       jest-validate: 29.7.0
15626 | 4650 |       jest-watcher: 29.7.0
15627 | 4651 |       micromatch: 4.0.8
15628 | 4652 |       pretty-format: 29.7.0
15629 | 4653 |       slash: 3.0.0
15630 | 4654 |       strip-ansi: 6.0.1
15631 | 4655 |     transitivePeerDependencies:
15632 | 4656 |       - babel-plugin-macros
15633 | 4657 |       - supports-color
15634 | 4658 |       - ts-node
15635 | 4659 | 
15636 | 4660 |   '@jest/environment@29.7.0':
15637 | 4661 |     dependencies:
15638 | 4662 |       '@jest/fake-timers': 29.7.0
15639 | 4663 |       '@jest/types': 29.6.3
15640 | 4664 |       '@types/node': 20.17.12
15641 | 4665 |       jest-mock: 29.7.0
15642 | 4666 | 
15643 | 4667 |   '@jest/expect-utils@29.7.0':
15644 | 4668 |     dependencies:
15645 | 4669 |       jest-get-type: 29.6.3
15646 | 4670 | 
15647 | 4671 |   '@jest/expect@29.7.0':
15648 | 4672 |     dependencies:
15649 | 4673 |       expect: 29.7.0
15650 | 4674 |       jest-snapshot: 29.7.0
15651 | 4675 |     transitivePeerDependencies:
15652 | 4676 |       - supports-color
15653 | 4677 | 
15654 | 4678 |   '@jest/fake-timers@29.7.0':
15655 | 4679 |     dependencies:
15656 | 4680 |       '@jest/types': 29.6.3
15657 | 4681 |       '@sinonjs/fake-timers': 10.3.0
15658 | 4682 |       '@types/node': 20.17.12
15659 | 4683 |       jest-message-util: 29.7.0
15660 | 4684 |       jest-mock: 29.7.0
15661 | 4685 |       jest-util: 29.7.0
15662 | 4686 | 
15663 | 4687 |   '@jest/globals@29.7.0':
15664 | 4688 |     dependencies:
15665 | 4689 |       '@jest/environment': 29.7.0
15666 | 4690 |       '@jest/expect': 29.7.0
15667 | 4691 |       '@jest/types': 29.6.3
15668 | 4692 |       jest-mock: 29.7.0
15669 | 4693 |     transitivePeerDependencies:
15670 | 4694 |       - supports-color
15671 | 4695 | 
15672 | 4696 |   '@jest/reporters@29.7.0':
15673 | 4697 |     dependencies:
15674 | 4698 |       '@bcoe/v8-coverage': 0.2.3
15675 | 4699 |       '@jest/console': 29.7.0
15676 | 4700 |       '@jest/test-result': 29.7.0
15677 | 4701 |       '@jest/transform': 29.7.0
15678 | 4702 |       '@jest/types': 29.6.3
15679 | 4703 |       '@jridgewell/trace-mapping': 0.3.25
15680 | 4704 |       '@types/node': 20.17.12
15681 | 4705 |       chalk: 4.1.2
15682 | 4706 |       collect-v8-coverage: 1.0.2
15683 | 4707 |       exit: 0.1.2
15684 | 4708 |       glob: 7.2.3
15685 | 4709 |       graceful-fs: 4.2.11
15686 | 4710 |       istanbul-lib-coverage: 3.2.2
15687 | 4711 |       istanbul-lib-instrument: 6.0.3
15688 | 4712 |       istanbul-lib-report: 3.0.1
15689 | 4713 |       istanbul-lib-source-maps: 4.0.1
15690 | 4714 |       istanbul-reports: 3.1.7
15691 | 4715 |       jest-message-util: 29.7.0
15692 | 4716 |       jest-util: 29.7.0
15693 | 4717 |       jest-worker: 29.7.0
15694 | 4718 |       slash: 3.0.0
15695 | 4719 |       string-length: 4.0.2
15696 | 4720 |       strip-ansi: 6.0.1
15697 | 4721 |       v8-to-istanbul: 9.3.0
15698 | 4722 |     transitivePeerDependencies:
15699 | 4723 |       - supports-color
15700 | 4724 | 
15701 | 4725 |   '@jest/schemas@29.6.3':
15702 | 4726 |     dependencies:
15703 | 4727 |       '@sinclair/typebox': 0.27.8
15704 | 4728 | 
15705 | 4729 |   '@jest/source-map@29.6.3':
15706 | 4730 |     dependencies:
15707 | 4731 |       '@jridgewell/trace-mapping': 0.3.25
15708 | 4732 |       callsites: 3.1.0
15709 | 4733 |       graceful-fs: 4.2.11
15710 | 4734 | 
15711 | 4735 |   '@jest/test-result@29.7.0':
15712 | 4736 |     dependencies:
15713 | 4737 |       '@jest/console': 29.7.0
15714 | 4738 |       '@jest/types': 29.6.3
15715 | 4739 |       '@types/istanbul-lib-coverage': 2.0.6
15716 | 4740 |       collect-v8-coverage: 1.0.2
15717 | 4741 | 
15718 | 4742 |   '@jest/test-sequencer@29.7.0':
15719 | 4743 |     dependencies:
15720 | 4744 |       '@jest/test-result': 29.7.0
15721 | 4745 |       graceful-fs: 4.2.11
15722 | 4746 |       jest-haste-map: 29.7.0
15723 | 4747 |       slash: 3.0.0
15724 | 4748 | 
15725 | 4749 |   '@jest/transform@29.7.0':
15726 | 4750 |     dependencies:
15727 | 4751 |       '@babel/core': 7.26.0
15728 | 4752 |       '@jest/types': 29.6.3
15729 | 4753 |       '@jridgewell/trace-mapping': 0.3.25
15730 | 4754 |       babel-plugin-istanbul: 6.1.1
15731 | 4755 |       chalk: 4.1.2
15732 | 4756 |       convert-source-map: 2.0.0
15733 | 4757 |       fast-json-stable-stringify: 2.1.0
15734 | 4758 |       graceful-fs: 4.2.11
15735 | 4759 |       jest-haste-map: 29.7.0
15736 | 4760 |       jest-regex-util: 29.6.3
15737 | 4761 |       jest-util: 29.7.0
15738 | 4762 |       micromatch: 4.0.8
15739 | 4763 |       pirates: 4.0.6
15740 | 4764 |       slash: 3.0.0
15741 | 4765 |       write-file-atomic: 4.0.2
15742 | 4766 |     transitivePeerDependencies:
15743 | 4767 |       - supports-color
15744 | 4768 | 
15745 | 4769 |   '@jest/types@29.6.3':
15746 | 4770 |     dependencies:
15747 | 4771 |       '@jest/schemas': 29.6.3
15748 | 4772 |       '@types/istanbul-lib-coverage': 2.0.6
15749 | 4773 |       '@types/istanbul-reports': 3.0.4
15750 | 4774 |       '@types/node': 20.17.12
15751 | 4775 |       '@types/yargs': 17.0.33
15752 | 4776 |       chalk: 4.1.2
15753 | 4777 | 
15754 | 4778 |   '@jridgewell/gen-mapping@0.3.8':
15755 | 4779 |     dependencies:
15756 | 4780 |       '@jridgewell/set-array': 1.2.1
15757 | 4781 |       '@jridgewell/sourcemap-codec': 1.5.0
15758 | 4782 |       '@jridgewell/trace-mapping': 0.3.25
15759 | 4783 | 
15760 | 4784 |   '@jridgewell/resolve-uri@3.1.2': {}
15761 | 4785 | 
15762 | 4786 |   '@jridgewell/set-array@1.2.1': {}
15763 | 4787 | 
15764 | 4788 |   '@jridgewell/sourcemap-codec@1.5.0': {}
15765 | 4789 | 
15766 | 4790 |   '@jridgewell/trace-mapping@0.3.25':
15767 | 4791 |     dependencies:
15768 | 4792 |       '@jridgewell/resolve-uri': 3.1.2
15769 | 4793 |       '@jridgewell/sourcemap-codec': 1.5.0
15770 | 4794 | 
15771 | 4795 |   '@jridgewell/trace-mapping@0.3.9':
15772 | 4796 |     dependencies:
15773 | 4797 |       '@jridgewell/resolve-uri': 3.1.2
15774 | 4798 |       '@jridgewell/sourcemap-codec': 1.5.0
15775 | 4799 |     optional: true
15776 | 4800 | 
15777 | 4801 |   '@nodelib/fs.scandir@2.1.5':
15778 | 4802 |     dependencies:
15779 | 4803 |       '@nodelib/fs.stat': 2.0.5
15780 | 4804 |       run-parallel: 1.2.0
15781 | 4805 | 
15782 | 4806 |   '@nodelib/fs.stat@2.0.5': {}
15783 | 4807 | 
15784 | 4808 |   '@nodelib/fs.walk@1.2.8':
15785 | 4809 |     dependencies:
15786 | 4810 |       '@nodelib/fs.scandir': 2.1.5
15787 | 4811 |       fastq: 1.18.0
15788 | 4812 | 
15789 | 4813 |   '@pkgjs/parseargs@0.11.0':
15790 | 4814 |     optional: true
15791 | 4815 | 
15792 | 4816 |   '@prisma/client@5.22.0(prisma@5.22.0)':
15793 | 4817 |     optionalDependencies:
15794 | 4818 |       prisma: 5.22.0
15795 | 4819 | 
15796 | 4820 |   '@prisma/debug@5.22.0': {}
15797 | 4821 | 
15798 | 4822 |   '@prisma/engines-version@5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2': {}
15799 | 4823 | 
15800 | 4824 |   '@prisma/engines@5.22.0':
15801 | 4825 |     dependencies:
15802 | 4826 |       '@prisma/debug': 5.22.0
15803 | 4827 |       '@prisma/engines-version': 5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2
15804 | 4828 |       '@prisma/fetch-engine': 5.22.0
15805 | 4829 |       '@prisma/get-platform': 5.22.0
15806 | 4830 | 
15807 | 4831 |   '@prisma/fetch-engine@5.22.0':
15808 | 4832 |     dependencies:
15809 | 4833 |       '@prisma/debug': 5.22.0
15810 | 4834 |       '@prisma/engines-version': 5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2
15811 | 4835 |       '@prisma/get-platform': 5.22.0
15812 | 4836 | 
15813 | 4837 |   '@prisma/get-platform@5.22.0':
15814 | 4838 |     dependencies:
15815 | 4839 |       '@prisma/debug': 5.22.0
15816 | 4840 | 
15817 | 4841 |   '@react-google-maps/api@2.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
15818 | 4842 |     dependencies:
15819 | 4843 |       '@googlemaps/js-api-loader': 1.16.8
15820 | 4844 |       '@googlemaps/markerclusterer': 2.5.3
15821 | 4845 |       '@react-google-maps/infobox': 2.20.0
15822 | 4846 |       '@react-google-maps/marker-clusterer': 2.20.0
15823 | 4847 |       '@types/google.maps': 3.58.1
15824 | 4848 |       invariant: 2.2.4
15825 | 4849 |       react: 18.3.1
15826 | 4850 |       react-dom: 18.3.1(react@18.3.1)
15827 | 4851 | 
15828 | 4852 |   '@react-google-maps/infobox@2.20.0': {}
15829 | 4853 | 
15830 | 4854 |   '@react-google-maps/marker-clusterer@2.20.0': {}
15831 | 4855 | 
15832 | 4856 |   '@remix-run/router@1.21.0': {}
15833 | 4857 | 
15834 | 4858 |   '@rollup/rollup-android-arm-eabi@4.30.1':
15835 | 4859 |     optional: true
15836 | 4860 | 
15837 | 4861 |   '@rollup/rollup-android-arm64@4.30.1':
15838 | 4862 |     optional: true
15839 | 4863 | 
15840 | 4864 |   '@rollup/rollup-darwin-arm64@4.30.1':
15841 | 4865 |     optional: true
15842 | 4866 | 
15843 | 4867 |   '@rollup/rollup-darwin-x64@4.30.1':
15844 | 4868 |     optional: true
15845 | 4869 | 
15846 | 4870 |   '@rollup/rollup-freebsd-arm64@4.30.1':
15847 | 4871 |     optional: true
15848 | 4872 | 
15849 | 4873 |   '@rollup/rollup-freebsd-x64@4.30.1':
15850 | 4874 |     optional: true
15851 | 4875 | 
15852 | 4876 |   '@rollup/rollup-linux-arm-gnueabihf@4.30.1':
15853 | 4877 |     optional: true
15854 | 4878 | 
15855 | 4879 |   '@rollup/rollup-linux-arm-musleabihf@4.30.1':
15856 | 4880 |     optional: true
15857 | 4881 | 
15858 | 4882 |   '@rollup/rollup-linux-arm64-gnu@4.30.1':
15859 | 4883 |     optional: true
15860 | 4884 | 
15861 | 4885 |   '@rollup/rollup-linux-arm64-musl@4.30.1':
15862 | 4886 |     optional: true
15863 | 4887 | 
15864 | 4888 |   '@rollup/rollup-linux-loongarch64-gnu@4.30.1':
15865 | 4889 |     optional: true
15866 | 4890 | 
15867 | 4891 |   '@rollup/rollup-linux-powerpc64le-gnu@4.30.1':
15868 | 4892 |     optional: true
15869 | 4893 | 
15870 | 4894 |   '@rollup/rollup-linux-riscv64-gnu@4.30.1':
15871 | 4895 |     optional: true
15872 | 4896 | 
15873 | 4897 |   '@rollup/rollup-linux-s390x-gnu@4.30.1':
15874 | 4898 |     optional: true
15875 | 4899 | 
15876 | 4900 |   '@rollup/rollup-linux-x64-gnu@4.30.1':
15877 | 4901 |     optional: true
15878 | 4902 | 
15879 | 4903 |   '@rollup/rollup-linux-x64-musl@4.30.1':
15880 | 4904 |     optional: true
15881 | 4905 | 
15882 | 4906 |   '@rollup/rollup-win32-arm64-msvc@4.30.1':
15883 | 4907 |     optional: true
15884 | 4908 | 
15885 | 4909 |   '@rollup/rollup-win32-ia32-msvc@4.30.1':
15886 | 4910 |     optional: true
15887 | 4911 | 
15888 | 4912 |   '@rollup/rollup-win32-x64-msvc@4.30.1':
15889 | 4913 |     optional: true
15890 | 4914 | 
15891 | 4915 |   '@sinclair/typebox@0.27.8': {}
15892 | 4916 | 
15893 | 4917 |   '@sinonjs/commons@3.0.1':
15894 | 4918 |     dependencies:
15895 | 4919 |       type-detect: 4.0.8
15896 | 4920 | 
15897 | 4921 |   '@sinonjs/fake-timers@10.3.0':
15898 | 4922 |     dependencies:
15899 | 4923 |       '@sinonjs/commons': 3.0.1
15900 | 4924 | 
15901 | 4925 |   '@swc/core-darwin-arm64@1.10.7':
15902 | 4926 |     optional: true
15903 | 4927 | 
15904 | 4928 |   '@swc/core-darwin-x64@1.10.7':
15905 | 4929 |     optional: true
15906 | 4930 | 
15907 | 4931 |   '@swc/core-linux-arm-gnueabihf@1.10.7':
15908 | 4932 |     optional: true
15909 | 4933 | 
15910 | 4934 |   '@swc/core-linux-arm64-gnu@1.10.7':
15911 | 4935 |     optional: true
15912 | 4936 | 
15913 | 4937 |   '@swc/core-linux-arm64-musl@1.10.7':
15914 | 4938 |     optional: true
15915 | 4939 | 
15916 | 4940 |   '@swc/core-linux-x64-gnu@1.10.7':
15917 | 4941 |     optional: true
15918 | 4942 | 
15919 | 4943 |   '@swc/core-linux-x64-musl@1.10.7':
15920 | 4944 |     optional: true
15921 | 4945 | 
15922 | 4946 |   '@swc/core-win32-arm64-msvc@1.10.7':
15923 | 4947 |     optional: true
15924 | 4948 | 
15925 | 4949 |   '@swc/core-win32-ia32-msvc@1.10.7':
15926 | 4950 |     optional: true
15927 | 4951 | 
15928 | 4952 |   '@swc/core-win32-x64-msvc@1.10.7':
15929 | 4953 |     optional: true
15930 | 4954 | 
15931 | 4955 |   '@swc/core@1.10.7':
15932 | 4956 |     dependencies:
15933 | 4957 |       '@swc/counter': 0.1.3
15934 | 4958 |       '@swc/types': 0.1.17
15935 | 4959 |     optionalDependencies:
15936 | 4960 |       '@swc/core-darwin-arm64': 1.10.7
15937 | 4961 |       '@swc/core-darwin-x64': 1.10.7
15938 | 4962 |       '@swc/core-linux-arm-gnueabihf': 1.10.7
15939 | 4963 |       '@swc/core-linux-arm64-gnu': 1.10.7
15940 | 4964 |       '@swc/core-linux-arm64-musl': 1.10.7
15941 | 4965 |       '@swc/core-linux-x64-gnu': 1.10.7
15942 | 4966 |       '@swc/core-linux-x64-musl': 1.10.7
15943 | 4967 |       '@swc/core-win32-arm64-msvc': 1.10.7
15944 | 4968 |       '@swc/core-win32-ia32-msvc': 1.10.7
15945 | 4969 |       '@swc/core-win32-x64-msvc': 1.10.7
15946 | 4970 | 
15947 | 4971 |   '@swc/counter@0.1.3': {}
15948 | 4972 | 
15949 | 4973 |   '@swc/types@0.1.17':
15950 | 4974 |     dependencies:
15951 | 4975 |       '@swc/counter': 0.1.3
15952 | 4976 | 
15953 | 4977 |   '@tanstack/query-core@5.64.1': {}
15954 | 4978 | 
15955 | 4979 |   '@tanstack/query-devtools@5.62.16': {}
15956 | 4980 | 
15957 | 4981 |   '@tanstack/react-query-devtools@5.64.1(@tanstack/react-query@5.64.1(react@18.3.1))(react@18.3.1)':
15958 | 4982 |     dependencies:
15959 | 4983 |       '@tanstack/query-devtools': 5.62.16
15960 | 4984 |       '@tanstack/react-query': 5.64.1(react@18.3.1)
15961 | 4985 |       react: 18.3.1
15962 | 4986 | 
15963 | 4987 |   '@tanstack/react-query@5.64.1(react@18.3.1)':
15964 | 4988 |     dependencies:
15965 | 4989 |       '@tanstack/query-core': 5.64.1
15966 | 4990 |       react: 18.3.1
15967 | 4991 | 
15968 | 4992 |   '@tanstack/react-virtual@3.11.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
15969 | 4993 |     dependencies:
15970 | 4994 |       '@tanstack/virtual-core': 3.11.2
15971 | 4995 |       react: 18.3.1
15972 | 4996 |       react-dom: 18.3.1(react@18.3.1)
15973 | 4997 | 
15974 | 4998 |   '@tanstack/virtual-core@3.11.2': {}
15975 | 4999 | 
15976 | 5000 |   '@testing-library/dom@9.3.4':
15977 | 5001 |     dependencies:
15978 | 5002 |       '@babel/code-frame': 7.26.2
15979 | 5003 |       '@babel/runtime': 7.26.0
15980 | 5004 |       '@types/aria-query': 5.0.4
15981 | 5005 |       aria-query: 5.1.3
15982 | 5006 |       chalk: 4.1.2
15983 | 5007 |       dom-accessibility-api: 0.5.16
15984 | 5008 |       lz-string: 1.5.0
15985 | 5009 |       pretty-format: 27.5.1
15986 | 5010 | 
15987 | 5011 |   '@testing-library/jest-dom@6.6.3':
15988 | 5012 |     dependencies:
15989 | 5013 |       '@adobe/css-tools': 4.4.1
15990 | 5014 |       aria-query: 5.3.2
15991 | 5015 |       chalk: 3.0.0
15992 | 5016 |       css.escape: 1.5.1
15993 | 5017 |       dom-accessibility-api: 0.6.3
15994 | 5018 |       lodash: 4.17.21
15995 | 5019 |       redent: 3.0.0
15996 | 5020 | 
15997 | 5021 |   '@testing-library/react@14.3.1(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
15998 | 5022 |     dependencies:
15999 | 5023 |       '@babel/runtime': 7.26.0
16000 | 5024 |       '@testing-library/dom': 9.3.4
16001 | 5025 |       '@types/react-dom': 18.3.5(@types/react@18.3.18)
16002 | 5026 |       react: 18.3.1
16003 | 5027 |       react-dom: 18.3.1(react@18.3.1)
16004 | 5028 |     transitivePeerDependencies:
16005 | 5029 |       - '@types/react'
16006 | 5030 | 
16007 | 5031 |   '@testing-library/user-event@14.5.2(@testing-library/dom@9.3.4)':
16008 | 5032 |     dependencies:
16009 | 5033 |       '@testing-library/dom': 9.3.4
16010 | 5034 | 
16011 | 5035 |   '@tsconfig/node10@1.0.11':
16012 | 5036 |     optional: true
16013 | 5037 | 
16014 | 5038 |   '@tsconfig/node12@1.0.11':
16015 | 5039 |     optional: true
16016 | 5040 | 
16017 | 5041 |   '@tsconfig/node14@1.0.3':
16018 | 5042 |     optional: true
16019 | 5043 | 
16020 | 5044 |   '@tsconfig/node16@1.0.4':
16021 | 5045 |     optional: true
16022 | 5046 | 
16023 | 5047 |   '@types/aria-query@5.0.4': {}
16024 | 5048 | 
16025 | 5049 |   '@types/babel__core@7.20.5':
16026 | 5050 |     dependencies:
16027 | 5051 |       '@babel/parser': 7.26.5
16028 | 5052 |       '@babel/types': 7.26.5
16029 | 5053 |       '@types/babel__generator': 7.6.8
16030 | 5054 |       '@types/babel__template': 7.4.4
16031 | 5055 |       '@types/babel__traverse': 7.20.6
16032 | 5056 | 
16033 | 5057 |   '@types/babel__generator@7.6.8':
16034 | 5058 |     dependencies:
16035 | 5059 |       '@babel/types': 7.26.5
16036 | 5060 | 
16037 | 5061 |   '@types/babel__template@7.4.4':
16038 | 5062 |     dependencies:
16039 | 5063 |       '@babel/parser': 7.26.5
16040 | 5064 |       '@babel/types': 7.26.5
16041 | 5065 | 
16042 | 5066 |   '@types/babel__traverse@7.20.6':
16043 | 5067 |     dependencies:
16044 | 5068 |       '@babel/types': 7.26.5
16045 | 5069 | 
16046 | 5070 |   '@types/bcryptjs@2.4.6': {}
16047 | 5071 | 
16048 | 5072 |   '@types/body-parser@1.19.5':
16049 | 5073 |     dependencies:
16050 | 5074 |       '@types/connect': 3.4.38
16051 | 5075 |       '@types/node': 20.17.12
16052 | 5076 | 
16053 | 5077 |   '@types/connect@3.4.38':
16054 | 5078 |     dependencies:
16055 | 5079 |       '@types/node': 20.17.12
16056 | 5080 | 
16057 | 5081 |   '@types/cookiejar@2.1.5': {}
16058 | 5082 | 
16059 | 5083 |   '@types/cors@2.8.17':
16060 | 5084 |     dependencies:
16061 | 5085 |       '@types/node': 20.17.12
16062 | 5086 | 
16063 | 5087 |   '@types/estree@1.0.6': {}
16064 | 5088 | 
16065 | 5089 |   '@types/express-serve-static-core@4.19.6':
16066 | 5090 |     dependencies:
16067 | 5091 |       '@types/node': 20.17.12
16068 | 5092 |       '@types/qs': 6.9.17
16069 | 5093 |       '@types/range-parser': 1.2.7
16070 | 5094 |       '@types/send': 0.17.4
16071 | 5095 | 
16072 | 5096 |   '@types/express@4.17.21':
16073 | 5097 |     dependencies:
16074 | 5098 |       '@types/body-parser': 1.19.5
16075 | 5099 |       '@types/express-serve-static-core': 4.19.6
16076 | 5100 |       '@types/qs': 6.9.17
16077 | 5101 |       '@types/serve-static': 1.15.7
16078 | 5102 | 
16079 | 5103 |   '@types/google.maps@3.58.1': {}
16080 | 5104 | 
16081 | 5105 |   '@types/graceful-fs@4.1.9':
16082 | 5106 |     dependencies:
16083 | 5107 |       '@types/node': 20.17.12
16084 | 5108 | 
16085 | 5109 |   '@types/http-errors@2.0.4': {}
16086 | 5110 | 
16087 | 5111 |   '@types/istanbul-lib-coverage@2.0.6': {}
16088 | 5112 | 
16089 | 5113 |   '@types/istanbul-lib-report@3.0.3':
16090 | 5114 |     dependencies:
16091 | 5115 |       '@types/istanbul-lib-coverage': 2.0.6
16092 | 5116 | 
16093 | 5117 |   '@types/istanbul-reports@3.0.4':
16094 | 5118 |     dependencies:
16095 | 5119 |       '@types/istanbul-lib-report': 3.0.3
16096 | 5120 | 
16097 | 5121 |   '@types/jest@29.5.14':
16098 | 5122 |     dependencies:
16099 | 5123 |       expect: 29.7.0
16100 | 5124 |       pretty-format: 29.7.0
16101 | 5125 | 
16102 | 5126 |   '@types/json-schema@7.0.15': {}
16103 | 5127 | 
16104 | 5128 |   '@types/jsonwebtoken@9.0.7':
16105 | 5129 |     dependencies:
16106 | 5130 |       '@types/node': 20.17.12
16107 | 5131 | 
16108 | 5132 |   '@types/methods@1.1.4': {}
16109 | 5133 | 
16110 | 5134 |   '@types/mime@1.3.5': {}
16111 | 5135 | 
16112 | 5136 |   '@types/morgan@1.9.9':
16113 | 5137 |     dependencies:
16114 | 5138 |       '@types/node': 20.17.12
16115 | 5139 | 
16116 | 5140 |   '@types/multer@1.4.12':
16117 | 5141 |     dependencies:
16118 | 5142 |       '@types/express': 4.17.21
16119 | 5143 | 
16120 | 5144 |   '@types/node@20.17.12':
16121 | 5145 |     dependencies:
16122 | 5146 |       undici-types: 6.19.8
16123 | 5147 | 
16124 | 5148 |   '@types/nodemailer@6.4.17':
16125 | 5149 |     dependencies:
16126 | 5150 |       '@types/node': 20.17.12
16127 | 5151 | 
16128 | 5152 |   '@types/prop-types@15.7.14': {}
16129 | 5153 | 
16130 | 5154 |   '@types/qs@6.9.17': {}
16131 | 5155 | 
16132 | 5156 |   '@types/range-parser@1.2.7': {}
16133 | 5157 | 
16134 | 5158 |   '@types/react-dom@18.3.5(@types/react@18.3.18)':
16135 | 5159 |     dependencies:
16136 | 5160 |       '@types/react': 18.3.18
16137 | 5161 | 
16138 | 5162 |   '@types/react-transition-group@4.4.12(@types/react@18.3.18)':
16139 | 5163 |     dependencies:
16140 | 5164 |       '@types/react': 18.3.18
16141 | 5165 | 
16142 | 5166 |   '@types/react@18.3.18':
16143 | 5167 |     dependencies:
16144 | 5168 |       '@types/prop-types': 15.7.14
16145 | 5169 |       csstype: 3.1.3
16146 | 5170 | 
16147 | 5171 |   '@types/semver@7.5.8': {}
16148 | 5172 | 
16149 | 5173 |   '@types/send@0.17.4':
16150 | 5174 |     dependencies:
16151 | 5175 |       '@types/mime': 1.3.5
16152 | 5176 |       '@types/node': 20.17.12
16153 | 5177 | 
16154 | 5178 |   '@types/serve-static@1.15.7':
16155 | 5179 |     dependencies:
16156 | 5180 |       '@types/http-errors': 2.0.4
16157 | 5181 |       '@types/node': 20.17.12
16158 | 5182 |       '@types/send': 0.17.4
16159 | 5183 | 
16160 | 5184 |   '@types/stack-utils@2.0.3': {}
16161 | 5185 | 
16162 | 5186 |   '@types/superagent@8.1.9':
16163 | 5187 |     dependencies:
16164 | 5188 |       '@types/cookiejar': 2.1.5
16165 | 5189 |       '@types/methods': 1.1.4
16166 | 5190 |       '@types/node': 20.17.12
16167 | 5191 |       form-data: 4.0.1
16168 | 5192 | 
16169 | 5193 |   '@types/supertest@6.0.2':
16170 | 5194 |     dependencies:
16171 | 5195 |       '@types/methods': 1.1.4
16172 | 5196 |       '@types/superagent': 8.1.9
16173 | 5197 | 
16174 | 5198 |   '@types/triple-beam@1.3.5': {}
16175 | 5199 | 
16176 | 5200 |   '@types/yargs-parser@21.0.3': {}
16177 | 5201 | 
16178 | 5202 |   '@types/yargs@17.0.33':
16179 | 5203 |     dependencies:
16180 | 5204 |       '@types/yargs-parser': 21.0.3
16181 | 5205 | 
16182 | 5206 |   '@typescript-eslint/eslint-plugin@6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)':
16183 | 5207 |     dependencies:
16184 | 5208 |       '@eslint-community/regexpp': 4.12.1
16185 | 5209 |       '@typescript-eslint/parser': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
16186 | 5210 |       '@typescript-eslint/scope-manager': 6.21.0
16187 | 5211 |       '@typescript-eslint/type-utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
16188 | 5212 |       '@typescript-eslint/utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
16189 | 5213 |       '@typescript-eslint/visitor-keys': 6.21.0
16190 | 5214 |       debug: 4.4.0
16191 | 5215 |       eslint: 8.57.1
16192 | 5216 |       graphemer: 1.4.0
16193 | 5217 |       ignore: 5.3.2
16194 | 5218 |       natural-compare: 1.4.0
16195 | 5219 |       semver: 7.6.3
16196 | 5220 |       ts-api-utils: 1.4.3(typescript@5.7.3)
16197 | 5221 |     optionalDependencies:
16198 | 5222 |       typescript: 5.7.3
16199 | 5223 |     transitivePeerDependencies:
16200 | 5224 |       - supports-color
16201 | 5225 | 
16202 | 5226 |   '@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
16203 | 5227 |     dependencies:
16204 | 5228 |       '@typescript-eslint/scope-manager': 6.21.0
16205 | 5229 |       '@typescript-eslint/types': 6.21.0
16206 | 5230 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
16207 | 5231 |       '@typescript-eslint/visitor-keys': 6.21.0
16208 | 5232 |       debug: 4.4.0
16209 | 5233 |       eslint: 8.57.1
16210 | 5234 |     optionalDependencies:
16211 | 5235 |       typescript: 5.7.3
16212 | 5236 |     transitivePeerDependencies:
16213 | 5237 |       - supports-color
16214 | 5238 | 
16215 | 5239 |   '@typescript-eslint/scope-manager@6.21.0':
16216 | 5240 |     dependencies:
16217 | 5241 |       '@typescript-eslint/types': 6.21.0
16218 | 5242 |       '@typescript-eslint/visitor-keys': 6.21.0
16219 | 5243 | 
16220 | 5244 |   '@typescript-eslint/type-utils@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
16221 | 5245 |     dependencies:
16222 | 5246 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
16223 | 5247 |       '@typescript-eslint/utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
16224 | 5248 |       debug: 4.4.0
16225 | 5249 |       eslint: 8.57.1
16226 | 5250 |       ts-api-utils: 1.4.3(typescript@5.7.3)
16227 | 5251 |     optionalDependencies:
16228 | 5252 |       typescript: 5.7.3
16229 | 5253 |     transitivePeerDependencies:
16230 | 5254 |       - supports-color
16231 | 5255 | 
16232 | 5256 |   '@typescript-eslint/types@6.21.0': {}
16233 | 5257 | 
16234 | 5258 |   '@typescript-eslint/typescript-estree@6.21.0(typescript@5.7.3)':
16235 | 5259 |     dependencies:
16236 | 5260 |       '@typescript-eslint/types': 6.21.0
16237 | 5261 |       '@typescript-eslint/visitor-keys': 6.21.0
16238 | 5262 |       debug: 4.4.0
16239 | 5263 |       globby: 11.1.0
16240 | 5264 |       is-glob: 4.0.3
16241 | 5265 |       minimatch: 9.0.3
16242 | 5266 |       semver: 7.6.3
16243 | 5267 |       ts-api-utils: 1.4.3(typescript@5.7.3)
16244 | 5268 |     optionalDependencies:
16245 | 5269 |       typescript: 5.7.3
16246 | 5270 |     transitivePeerDependencies:
16247 | 5271 |       - supports-color
16248 | 5272 | 
16249 | 5273 |   '@typescript-eslint/utils@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
16250 | 5274 |     dependencies:
16251 | 5275 |       '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
16252 | 5276 |       '@types/json-schema': 7.0.15
16253 | 5277 |       '@types/semver': 7.5.8
16254 | 5278 |       '@typescript-eslint/scope-manager': 6.21.0
16255 | 5279 |       '@typescript-eslint/types': 6.21.0
16256 | 5280 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
16257 | 5281 |       eslint: 8.57.1
16258 | 5282 |       semver: 7.6.3
16259 | 5283 |     transitivePeerDependencies:
16260 | 5284 |       - supports-color
16261 | 5285 |       - typescript
16262 | 5286 | 
16263 | 5287 |   '@typescript-eslint/visitor-keys@6.21.0':
16264 | 5288 |     dependencies:
16265 | 5289 |       '@typescript-eslint/types': 6.21.0
16266 | 5290 |       eslint-visitor-keys: 3.4.3
16267 | 5291 | 
16268 | 5292 |   '@ungap/structured-clone@1.2.1': {}
16269 | 5293 | 
16270 | 5294 |   '@vitejs/plugin-react-swc@3.7.2(vite@5.4.11(@types/node@20.17.12))':
16271 | 5295 |     dependencies:
16272 | 5296 |       '@swc/core': 1.10.7
16273 | 5297 |       vite: 5.4.11(@types/node@20.17.12)
16274 | 5298 |     transitivePeerDependencies:
16275 | 5299 |       - '@swc/helpers'
16276 | 5300 | 
16277 | 5301 |   '@vitejs/plugin-react@4.3.4(vite@5.4.11(@types/node@20.17.12))':
16278 | 5302 |     dependencies:
16279 | 5303 |       '@babel/core': 7.26.0
16280 | 5304 |       '@babel/plugin-transform-react-jsx-self': 7.25.9(@babel/core@7.26.0)
16281 | 5305 |       '@babel/plugin-transform-react-jsx-source': 7.25.9(@babel/core@7.26.0)
16282 | 5306 |       '@types/babel__core': 7.20.5
16283 | 5307 |       react-refresh: 0.14.2
16284 | 5308 |       vite: 5.4.11(@types/node@20.17.12)
16285 | 5309 |     transitivePeerDependencies:
16286 | 5310 |       - supports-color
16287 | 5311 | 
16288 | 5312 |   '@vitest/coverage-v8@1.6.0(vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3))':
16289 | 5313 |     dependencies:
16290 | 5314 |       '@ampproject/remapping': 2.3.0
16291 | 5315 |       '@bcoe/v8-coverage': 0.2.3
16292 | 5316 |       debug: 4.4.0
16293 | 5317 |       istanbul-lib-coverage: 3.2.2
16294 | 5318 |       istanbul-lib-report: 3.0.1
16295 | 5319 |       istanbul-lib-source-maps: 5.0.6
16296 | 5320 |       istanbul-reports: 3.1.7
16297 | 5321 |       magic-string: 0.30.17
16298 | 5322 |       magicast: 0.3.5
16299 | 5323 |       picocolors: 1.1.1
16300 | 5324 |       std-env: 3.8.0
16301 | 5325 |       strip-literal: 2.1.1
16302 | 5326 |       test-exclude: 6.0.0
16303 | 5327 |       vitest: 1.6.0(@types/node@20.17.12)(happy-dom@12.10.3)
16304 | 5328 |     transitivePeerDependencies:
16305 | 5329 |       - supports-color
16306 | 5330 | 
16307 | 5331 |   '@vitest/expect@1.6.0':
16308 | 5332 |     dependencies:
16309 | 5333 |       '@vitest/spy': 1.6.0
16310 | 5334 |       '@vitest/utils': 1.6.0
16311 | 5335 |       chai: 4.5.0
16312 | 5336 | 
16313 | 5337 |   '@vitest/runner@1.6.0':
16314 | 5338 |     dependencies:
16315 | 5339 |       '@vitest/utils': 1.6.0
16316 | 5340 |       p-limit: 5.0.0
16317 | 5341 |       pathe: 1.1.2
16318 | 5342 | 
16319 | 5343 |   '@vitest/snapshot@1.6.0':
16320 | 5344 |     dependencies:
16321 | 5345 |       magic-string: 0.30.17
16322 | 5346 |       pathe: 1.1.2
16323 | 5347 |       pretty-format: 29.7.0
16324 | 5348 | 
16325 | 5349 |   '@vitest/spy@1.6.0':
16326 | 5350 |     dependencies:
16327 | 5351 |       tinyspy: 2.2.1
16328 | 5352 | 
16329 | 5353 |   '@vitest/utils@1.6.0':
16330 | 5354 |     dependencies:
16331 | 5355 |       diff-sequences: 29.6.3
16332 | 5356 |       estree-walker: 3.0.3
16333 | 5357 |       loupe: 2.3.7
16334 | 5358 |       pretty-format: 29.7.0
16335 | 5359 | 
16336 | 5360 |   accepts@1.3.8:
16337 | 5361 |     dependencies:
16338 | 5362 |       mime-types: 2.1.35
16339 | 5363 |       negotiator: 0.6.3
16340 | 5364 | 
16341 | 5365 |   acorn-jsx@5.3.2(acorn@8.14.0):
16342 | 5366 |     dependencies:
16343 | 5367 |       acorn: 8.14.0
16344 | 5368 | 
16345 | 5369 |   acorn-walk@8.3.4:
16346 | 5370 |     dependencies:
16347 | 5371 |       acorn: 8.14.0
16348 | 5372 | 
16349 | 5373 |   acorn@8.14.0: {}
16350 | 5374 | 
16351 | 5375 |   ajv@6.12.6:
16352 | 5376 |     dependencies:
16353 | 5377 |       fast-deep-equal: 3.1.3
16354 | 5378 |       fast-json-stable-stringify: 2.1.0
16355 | 5379 |       json-schema-traverse: 0.4.1
16356 | 5380 |       uri-js: 4.4.1
16357 | 5381 | 
16358 | 5382 |   ansi-escapes@4.3.2:
16359 | 5383 |     dependencies:
16360 | 5384 |       type-fest: 0.21.3
16361 | 5385 | 
16362 | 5386 |   ansi-regex@5.0.1: {}
16363 | 5387 | 
16364 | 5388 |   ansi-regex@6.1.0: {}
16365 | 5389 | 
16366 | 5390 |   ansi-styles@4.3.0:
16367 | 5391 |     dependencies:
16368 | 5392 |       color-convert: 2.0.1
16369 | 5393 | 
16370 | 5394 |   ansi-styles@5.2.0: {}
16371 | 5395 | 
16372 | 5396 |   ansi-styles@6.2.1: {}
16373 | 5397 | 
16374 | 5398 |   any-promise@1.3.0: {}
16375 | 5399 | 
16376 | 5400 |   anymatch@3.1.3:
16377 | 5401 |     dependencies:
16378 | 5402 |       normalize-path: 3.0.0
16379 | 5403 |       picomatch: 2.3.1
16380 | 5404 | 
16381 | 5405 |   append-field@1.0.0: {}
16382 | 5406 | 
16383 | 5407 |   arg@4.1.3:
16384 | 5408 |     optional: true
16385 | 5409 | 
16386 | 5410 |   arg@5.0.2: {}
16387 | 5411 | 
16388 | 5412 |   argparse@1.0.10:
16389 | 5413 |     dependencies:
16390 | 5414 |       sprintf-js: 1.0.3
16391 | 5415 | 
16392 | 5416 |   argparse@2.0.1: {}
16393 | 5417 | 
16394 | 5418 |   aria-query@5.1.3:
16395 | 5419 |     dependencies:
16396 | 5420 |       deep-equal: 2.2.3
16397 | 5421 | 
16398 | 5422 |   aria-query@5.3.2: {}
16399 | 5423 | 
16400 | 5424 |   array-buffer-byte-length@1.0.2:
16401 | 5425 |     dependencies:
16402 | 5426 |       call-bound: 1.0.3
16403 | 5427 |       is-array-buffer: 3.0.5
16404 | 5428 | 
16405 | 5429 |   array-flatten@1.1.1: {}
16406 | 5430 | 
16407 | 5431 |   array-union@2.1.0: {}
16408 | 5432 | 
16409 | 5433 |   asap@2.0.6: {}
16410 | 5434 | 
16411 | 5435 |   assertion-error@1.1.0: {}
16412 | 5436 | 
16413 | 5437 |   async@3.2.6: {}
16414 | 5438 | 
16415 | 5439 |   asynckit@0.4.0: {}
16416 | 5440 | 
16417 | 5441 |   autoprefixer@10.4.20(postcss@8.4.49):
16418 | 5442 |     dependencies:
16419 | 5443 |       browserslist: 4.24.4
16420 | 5444 |       caniuse-lite: 1.0.30001692
16421 | 5445 |       fraction.js: 4.3.7
16422 | 5446 |       normalize-range: 0.1.2
16423 | 5447 |       picocolors: 1.1.1
16424 | 5448 |       postcss: 8.4.49
16425 | 5449 |       postcss-value-parser: 4.2.0
16426 | 5450 | 
16427 | 5451 |   available-typed-arrays@1.0.7:
16428 | 5452 |     dependencies:
16429 | 5453 |       possible-typed-array-names: 1.0.0
16430 | 5454 | 
16431 | 5455 |   axios@1.7.9:
16432 | 5456 |     dependencies:
16433 | 5457 |       follow-redirects: 1.15.9
16434 | 5458 |       form-data: 4.0.1
16435 | 5459 |       proxy-from-env: 1.1.0
16436 | 5460 |     transitivePeerDependencies:
16437 | 5461 |       - debug
16438 | 5462 | 
16439 | 5463 |   babel-jest@29.7.0(@babel/core@7.26.0):
16440 | 5464 |     dependencies:
16441 | 5465 |       '@babel/core': 7.26.0
16442 | 5466 |       '@jest/transform': 29.7.0
16443 | 5467 |       '@types/babel__core': 7.20.5
16444 | 5468 |       babel-plugin-istanbul: 6.1.1
16445 | 5469 |       babel-preset-jest: 29.6.3(@babel/core@7.26.0)
16446 | 5470 |       chalk: 4.1.2
16447 | 5471 |       graceful-fs: 4.2.11
16448 | 5472 |       slash: 3.0.0
16449 | 5473 |     transitivePeerDependencies:
16450 | 5474 |       - supports-color
16451 | 5475 | 
16452 | 5476 |   babel-plugin-istanbul@6.1.1:
16453 | 5477 |     dependencies:
16454 | 5478 |       '@babel/helper-plugin-utils': 7.26.5
16455 | 5479 |       '@istanbuljs/load-nyc-config': 1.1.0
16456 | 5480 |       '@istanbuljs/schema': 0.1.3
16457 | 5481 |       istanbul-lib-instrument: 5.2.1
16458 | 5482 |       test-exclude: 6.0.0
16459 | 5483 |     transitivePeerDependencies:
16460 | 5484 |       - supports-color
16461 | 5485 | 
16462 | 5486 |   babel-plugin-jest-hoist@29.6.3:
16463 | 5487 |     dependencies:
16464 | 5488 |       '@babel/template': 7.25.9
16465 | 5489 |       '@babel/types': 7.26.5
16466 | 5490 |       '@types/babel__core': 7.20.5
16467 | 5491 |       '@types/babel__traverse': 7.20.6
16468 | 5492 | 
16469 | 5493 |   babel-preset-current-node-syntax@1.1.0(@babel/core@7.26.0):
16470 | 5494 |     dependencies:
16471 | 5495 |       '@babel/core': 7.26.0
16472 | 5496 |       '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.26.0)
16473 | 5497 |       '@babel/plugin-syntax-bigint': 7.8.3(@babel/core@7.26.0)
16474 | 5498 |       '@babel/plugin-syntax-class-properties': 7.12.13(@babel/core@7.26.0)
16475 | 5499 |       '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.26.0)
16476 | 5500 |       '@babel/plugin-syntax-import-attributes': 7.26.0(@babel/core@7.26.0)
16477 | 5501 |       '@babel/plugin-syntax-import-meta': 7.10.4(@babel/core@7.26.0)
16478 | 5502 |       '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.26.0)
16479 | 5503 |       '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.26.0)
16480 | 5504 |       '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.26.0)
16481 | 5505 |       '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.26.0)
16482 | 5506 |       '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.26.0)
16483 | 5507 |       '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.26.0)
16484 | 5508 |       '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.26.0)
16485 | 5509 |       '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.26.0)
16486 | 5510 |       '@babel/plugin-syntax-top-level-await': 7.14.5(@babel/core@7.26.0)
16487 | 5511 | 
16488 | 5512 |   babel-preset-jest@29.6.3(@babel/core@7.26.0):
16489 | 5513 |     dependencies:
16490 | 5514 |       '@babel/core': 7.26.0
16491 | 5515 |       babel-plugin-jest-hoist: 29.6.3
16492 | 5516 |       babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.0)
16493 | 5517 | 
16494 | 5518 |   balanced-match@1.0.2: {}
16495 | 5519 | 
16496 | 5520 |   basic-auth@2.0.1:
16497 | 5521 |     dependencies:
16498 | 5522 |       safe-buffer: 5.1.2
16499 | 5523 | 
16500 | 5524 |   bcryptjs@2.4.3: {}
16501 | 5525 | 
16502 | 5526 |   binary-extensions@2.3.0: {}
16503 | 5527 | 
16504 | 5528 |   body-parser@1.20.3:
16505 | 5529 |     dependencies:
16506 | 5530 |       bytes: 3.1.2
16507 | 5531 |       content-type: 1.0.5
16508 | 5532 |       debug: 2.6.9
16509 | 5533 |       depd: 2.0.0
16510 | 5534 |       destroy: 1.2.0
16511 | 5535 |       http-errors: 2.0.0
16512 | 5536 |       iconv-lite: 0.4.24
16513 | 5537 |       on-finished: 2.4.1
16514 | 5538 |       qs: 6.13.0
16515 | 5539 |       raw-body: 2.5.2
16516 | 5540 |       type-is: 1.6.18
16517 | 5541 |       unpipe: 1.0.0
16518 | 5542 |     transitivePeerDependencies:
16519 | 5543 |       - supports-color
16520 | 5544 | 
16521 | 5545 |   brace-expansion@1.1.11:
16522 | 5546 |     dependencies:
16523 | 5547 |       balanced-match: 1.0.2
16524 | 5548 |       concat-map: 0.0.1
16525 | 5549 | 
16526 | 5550 |   brace-expansion@2.0.1:
16527 | 5551 |     dependencies:
16528 | 5552 |       balanced-match: 1.0.2
16529 | 5553 | 
16530 | 5554 |   braces@3.0.3:
16531 | 5555 |     dependencies:
16532 | 5556 |       fill-range: 7.1.1
16533 | 5557 | 
16534 | 5558 |   browserslist@4.24.4:
16535 | 5559 |     dependencies:
16536 | 5560 |       caniuse-lite: 1.0.30001692
16537 | 5561 |       electron-to-chromium: 1.5.80
16538 | 5562 |       node-releases: 2.0.19
16539 | 5563 |       update-browserslist-db: 1.1.2(browserslist@4.24.4)
16540 | 5564 | 
16541 | 5565 |   bs-logger@0.2.6:
16542 | 5566 |     dependencies:
16543 | 5567 |       fast-json-stable-stringify: 2.1.0
16544 | 5568 | 
16545 | 5569 |   bser@2.1.1:
16546 | 5570 |     dependencies:
16547 | 5571 |       node-int64: 0.4.0
16548 | 5572 | 
16549 | 5573 |   buffer-equal-constant-time@1.0.1: {}
16550 | 5574 | 
16551 | 5575 |   buffer-from@1.1.2: {}
16552 | 5576 | 
16553 | 5577 |   bundle-require@5.1.0(esbuild@0.24.2):
16554 | 5578 |     dependencies:
16555 | 5579 |       esbuild: 0.24.2
16556 | 5580 |       load-tsconfig: 0.2.5
16557 | 5581 | 
16558 | 5582 |   busboy@1.6.0:
16559 | 5583 |     dependencies:
16560 | 5584 |       streamsearch: 1.1.0
16561 | 5585 | 
16562 | 5586 |   bytes@3.1.2: {}
16563 | 5587 | 
16564 | 5588 |   cac@6.7.14: {}
16565 | 5589 | 
16566 | 5590 |   call-bind-apply-helpers@1.0.1:
16567 | 5591 |     dependencies:
16568 | 5592 |       es-errors: 1.3.0
16569 | 5593 |       function-bind: 1.1.2
16570 | 5594 | 
16571 | 5595 |   call-bind@1.0.8:
16572 | 5596 |     dependencies:
16573 | 5597 |       call-bind-apply-helpers: 1.0.1
16574 | 5598 |       es-define-property: 1.0.1
16575 | 5599 |       get-intrinsic: 1.2.7
16576 | 5600 |       set-function-length: 1.2.2
16577 | 5601 | 
16578 | 5602 |   call-bound@1.0.3:
16579 | 5603 |     dependencies:
16580 | 5604 |       call-bind-apply-helpers: 1.0.1
16581 | 5605 |       get-intrinsic: 1.2.7
16582 | 5606 | 
16583 | 5607 |   callsites@3.1.0: {}
16584 | 5608 | 
16585 | 5609 |   camelcase-css@2.0.1: {}
16586 | 5610 | 
16587 | 5611 |   camelcase@5.3.1: {}
16588 | 5612 | 
16589 | 5613 |   camelcase@6.3.0: {}
16590 | 5614 | 
16591 | 5615 |   caniuse-lite@1.0.30001692: {}
16592 | 5616 | 
16593 | 5617 |   chai@4.5.0:
16594 | 5618 |     dependencies:
16595 | 5619 |       assertion-error: 1.1.0
16596 | 5620 |       check-error: 1.0.3
16597 | 5621 |       deep-eql: 4.1.4
16598 | 5622 |       get-func-name: 2.0.2
16599 | 5623 |       loupe: 2.3.7
16600 | 5624 |       pathval: 1.1.1
16601 | 5625 |       type-detect: 4.1.0
16602 | 5626 | 
16603 | 5627 |   chalk@3.0.0:
16604 | 5628 |     dependencies:
16605 | 5629 |       ansi-styles: 4.3.0
16606 | 5630 |       supports-color: 7.2.0
16607 | 5631 | 
16608 | 5632 |   chalk@4.1.2:
16609 | 5633 |     dependencies:
16610 | 5634 |       ansi-styles: 4.3.0
16611 | 5635 |       supports-color: 7.2.0
16612 | 5636 | 
16613 | 5637 |   char-regex@1.0.2: {}
16614 | 5638 | 
16615 | 5639 |   check-error@1.0.3:
16616 | 5640 |     dependencies:
16617 | 5641 |       get-func-name: 2.0.2
16618 | 5642 | 
16619 | 5643 |   chokidar@3.6.0:
16620 | 5644 |     dependencies:
16621 | 5645 |       anymatch: 3.1.3
16622 | 5646 |       braces: 3.0.3
16623 | 5647 |       glob-parent: 5.1.2
16624 | 5648 |       is-binary-path: 2.1.0
16625 | 5649 |       is-glob: 4.0.3
16626 | 5650 |       normalize-path: 3.0.0
16627 | 5651 |       readdirp: 3.6.0
16628 | 5652 |     optionalDependencies:
16629 | 5653 |       fsevents: 2.3.3
16630 | 5654 | 
16631 | 5655 |   chokidar@4.0.3:
16632 | 5656 |     dependencies:
16633 | 5657 |       readdirp: 4.1.1
16634 | 5658 | 
16635 | 5659 |   ci-info@3.9.0: {}
16636 | 5660 | 
16637 | 5661 |   cjs-module-lexer@1.4.1: {}
16638 | 5662 | 
16639 | 5663 |   client-only@0.0.1: {}
16640 | 5664 | 
16641 | 5665 |   cliui@8.0.1:
16642 | 5666 |     dependencies:
16643 | 5667 |       string-width: 4.2.3
16644 | 5668 |       strip-ansi: 6.0.1
16645 | 5669 |       wrap-ansi: 7.0.0
16646 | 5670 | 
16647 | 5671 |   clsx@2.1.1: {}
16648 | 5672 | 
16649 | 5673 |   co@4.6.0: {}
16650 | 5674 | 
16651 | 5675 |   collect-v8-coverage@1.0.2: {}
16652 | 5676 | 
16653 | 5677 |   color-convert@1.9.3:
16654 | 5678 |     dependencies:
16655 | 5679 |       color-name: 1.1.3
16656 | 5680 | 
16657 | 5681 |   color-convert@2.0.1:
16658 | 5682 |     dependencies:
16659 | 5683 |       color-name: 1.1.4
16660 | 5684 | 
16661 | 5685 |   color-name@1.1.3: {}
16662 | 5686 | 
16663 | 5687 |   color-name@1.1.4: {}
16664 | 5688 | 
16665 | 5689 |   color-string@1.9.1:
16666 | 5690 |     dependencies:
16667 | 5691 |       color-name: 1.1.4
16668 | 5692 |       simple-swizzle: 0.2.2
16669 | 5693 | 
16670 | 5694 |   color@3.2.1:
16671 | 5695 |     dependencies:
16672 | 5696 |       color-convert: 1.9.3
16673 | 5697 |       color-string: 1.9.1
16674 | 5698 | 
16675 | 5699 |   colorspace@1.1.4:
16676 | 5700 |     dependencies:
16677 | 5701 |       color: 3.2.1
16678 | 5702 |       text-hex: 1.0.0
16679 | 5703 | 
16680 | 5704 |   combined-stream@1.0.8:
16681 | 5705 |     dependencies:
16682 | 5706 |       delayed-stream: 1.0.0
16683 | 5707 | 
16684 | 5708 |   commander@4.1.1: {}
16685 | 5709 | 
16686 | 5710 |   component-emitter@1.3.1: {}
16687 | 5711 | 
16688 | 5712 |   concat-map@0.0.1: {}
16689 | 5713 | 
16690 | 5714 |   concat-stream@1.6.2:
16691 | 5715 |     dependencies:
16692 | 5716 |       buffer-from: 1.1.2
16693 | 5717 |       inherits: 2.0.4
16694 | 5718 |       readable-stream: 2.3.8
16695 | 5719 |       typedarray: 0.0.6
16696 | 5720 | 
16697 | 5721 |   confbox@0.1.8: {}
16698 | 5722 | 
16699 | 5723 |   consola@3.4.0: {}
16700 | 5724 | 
16701 | 5725 |   content-disposition@0.5.4:
16702 | 5726 |     dependencies:
16703 | 5727 |       safe-buffer: 5.2.1
16704 | 5728 | 
16705 | 5729 |   content-type@1.0.5: {}
16706 | 5730 | 
16707 | 5731 |   convert-source-map@2.0.0: {}
16708 | 5732 | 
16709 | 5733 |   cookie-signature@1.0.6: {}
16710 | 5734 | 
16711 | 5735 |   cookie@0.7.1: {}
16712 | 5736 | 
16713 | 5737 |   cookiejar@2.1.4: {}
16714 | 5738 | 
16715 | 5739 |   core-util-is@1.0.3: {}
16716 | 5740 | 
16717 | 5741 |   cors@2.8.5:
16718 | 5742 |     dependencies:
16719 | 5743 |       object-assign: 4.1.1
16720 | 5744 |       vary: 1.1.2
16721 | 5745 | 
16722 | 5746 |   create-jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
16723 | 5747 |     dependencies:
16724 | 5748 |       '@jest/types': 29.6.3
16725 | 5749 |       chalk: 4.1.2
16726 | 5750 |       exit: 0.1.2
16727 | 5751 |       graceful-fs: 4.2.11
16728 | 5752 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
16729 | 5753 |       jest-util: 29.7.0
16730 | 5754 |       prompts: 2.4.2
16731 | 5755 |     transitivePeerDependencies:
16732 | 5756 |       - '@types/node'
16733 | 5757 |       - babel-plugin-macros
16734 | 5758 |       - supports-color
16735 | 5759 |       - ts-node
16736 | 5760 | 
16737 | 5761 |   create-require@1.1.1:
16738 | 5762 |     optional: true
16739 | 5763 | 
16740 | 5764 |   cross-env@7.0.3:
16741 | 5765 |     dependencies:
16742 | 5766 |       cross-spawn: 7.0.6
16743 | 5767 | 
16744 | 5768 |   cross-spawn@7.0.6:
16745 | 5769 |     dependencies:
16746 | 5770 |       path-key: 3.1.1
16747 | 5771 |       shebang-command: 2.0.0
16748 | 5772 |       which: 2.0.2
16749 | 5773 | 
16750 | 5774 |   css.escape@1.5.1: {}
16751 | 5775 | 
16752 | 5776 |   cssesc@3.0.0: {}
16753 | 5777 | 
16754 | 5778 |   csstype@3.1.3: {}
16755 | 5779 | 
16756 | 5780 |   debug@2.6.9:
16757 | 5781 |     dependencies:
16758 | 5782 |       ms: 2.0.0
16759 | 5783 | 
16760 | 5784 |   debug@4.4.0:
16761 | 5785 |     dependencies:
16762 | 5786 |       ms: 2.1.3
16763 | 5787 | 
16764 | 5788 |   dedent@1.5.3: {}
16765 | 5789 | 
16766 | 5790 |   deep-eql@4.1.4:
16767 | 5791 |     dependencies:
16768 | 5792 |       type-detect: 4.1.0
16769 | 5793 | 
16770 | 5794 |   deep-equal@2.2.3:
16771 | 5795 |     dependencies:
16772 | 5796 |       array-buffer-byte-length: 1.0.2
16773 | 5797 |       call-bind: 1.0.8
16774 | 5798 |       es-get-iterator: 1.1.3
16775 | 5799 |       get-intrinsic: 1.2.7
16776 | 5800 |       is-arguments: 1.2.0
16777 | 5801 |       is-array-buffer: 3.0.5
16778 | 5802 |       is-date-object: 1.1.0
16779 | 5803 |       is-regex: 1.2.1
16780 | 5804 |       is-shared-array-buffer: 1.0.4
16781 | 5805 |       isarray: 2.0.5
16782 | 5806 |       object-is: 1.1.6
16783 | 5807 |       object-keys: 1.1.1
16784 | 5808 |       object.assign: 4.1.7
16785 | 5809 |       regexp.prototype.flags: 1.5.4
16786 | 5810 |       side-channel: 1.1.0
16787 | 5811 |       which-boxed-primitive: 1.1.1
16788 | 5812 |       which-collection: 1.0.2
16789 | 5813 |       which-typed-array: 1.1.18
16790 | 5814 | 
16791 | 5815 |   deep-is@0.1.4: {}
16792 | 5816 | 
16793 | 5817 |   deepmerge@4.3.1: {}
16794 | 5818 | 
16795 | 5819 |   define-data-property@1.1.4:
16796 | 5820 |     dependencies:
16797 | 5821 |       es-define-property: 1.0.1
16798 | 5822 |       es-errors: 1.3.0
16799 | 5823 |       gopd: 1.2.0
16800 | 5824 | 
16801 | 5825 |   define-properties@1.2.1:
16802 | 5826 |     dependencies:
16803 | 5827 |       define-data-property: 1.1.4
16804 | 5828 |       has-property-descriptors: 1.0.2
16805 | 5829 |       object-keys: 1.1.1
16806 | 5830 | 
16807 | 5831 |   delayed-stream@1.0.0: {}
16808 | 5832 | 
16809 | 5833 |   depd@2.0.0: {}
16810 | 5834 | 
16811 | 5835 |   destroy@1.2.0: {}
16812 | 5836 | 
16813 | 5837 |   detect-newline@3.1.0: {}
16814 | 5838 | 
16815 | 5839 |   dezalgo@1.0.4:
16816 | 5840 |     dependencies:
16817 | 5841 |       asap: 2.0.6
16818 | 5842 |       wrappy: 1.0.2
16819 | 5843 | 
16820 | 5844 |   didyoumean@1.2.2: {}
16821 | 5845 | 
16822 | 5846 |   diff-sequences@29.6.3: {}
16823 | 5847 | 
16824 | 5848 |   diff@4.0.2:
16825 | 5849 |     optional: true
16826 | 5850 | 
16827 | 5851 |   dir-glob@3.0.1:
16828 | 5852 |     dependencies:
16829 | 5853 |       path-type: 4.0.0
16830 | 5854 | 
16831 | 5855 |   dlv@1.1.3: {}
16832 | 5856 | 
16833 | 5857 |   doctrine@3.0.0:
16834 | 5858 |     dependencies:
16835 | 5859 |       esutils: 2.0.3
16836 | 5860 | 
16837 | 5861 |   dom-accessibility-api@0.5.16: {}
16838 | 5862 | 
16839 | 5863 |   dom-accessibility-api@0.6.3: {}
16840 | 5864 | 
16841 | 5865 |   dom-helpers@5.2.1:
16842 | 5866 |     dependencies:
16843 | 5867 |       '@babel/runtime': 7.26.0
16844 | 5868 |       csstype: 3.1.3
16845 | 5869 | 
16846 | 5870 |   dotenv@16.4.7: {}
16847 | 5871 | 
16848 | 5872 |   dunder-proto@1.0.1:
16849 | 5873 |     dependencies:
16850 | 5874 |       call-bind-apply-helpers: 1.0.1
16851 | 5875 |       es-errors: 1.3.0
16852 | 5876 |       gopd: 1.2.0
16853 | 5877 | 
16854 | 5878 |   eastasianwidth@0.2.0: {}
16855 | 5879 | 
16856 | 5880 |   ecdsa-sig-formatter@1.0.11:
16857 | 5881 |     dependencies:
16858 | 5882 |       safe-buffer: 5.2.1
16859 | 5883 | 
16860 | 5884 |   ee-first@1.1.1: {}
16861 | 5885 | 
16862 | 5886 |   ejs@3.1.10:
16863 | 5887 |     dependencies:
16864 | 5888 |       jake: 10.9.2
16865 | 5889 | 
16866 | 5890 |   electron-to-chromium@1.5.80: {}
16867 | 5891 | 
16868 | 5892 |   emittery@0.13.1: {}
16869 | 5893 | 
16870 | 5894 |   emoji-regex@8.0.0: {}
16871 | 5895 | 
16872 | 5896 |   emoji-regex@9.2.2: {}
16873 | 5897 | 
16874 | 5898 |   enabled@2.0.0: {}
16875 | 5899 | 
16876 | 5900 |   encodeurl@1.0.2: {}
16877 | 5901 | 
16878 | 5902 |   encodeurl@2.0.0: {}
16879 | 5903 | 
16880 | 5904 |   entities@4.5.0: {}
16881 | 5905 | 
16882 | 5906 |   error-ex@1.3.2:
16883 | 5907 |     dependencies:
16884 | 5908 |       is-arrayish: 0.2.1
16885 | 5909 | 
16886 | 5910 |   es-define-property@1.0.1: {}
16887 | 5911 | 
16888 | 5912 |   es-errors@1.3.0: {}
16889 | 5913 | 
16890 | 5914 |   es-get-iterator@1.1.3:
16891 | 5915 |     dependencies:
16892 | 5916 |       call-bind: 1.0.8
16893 | 5917 |       get-intrinsic: 1.2.7
16894 | 5918 |       has-symbols: 1.1.0
16895 | 5919 |       is-arguments: 1.2.0
16896 | 5920 |       is-map: 2.0.3
16897 | 5921 |       is-set: 2.0.3
16898 | 5922 |       is-string: 1.1.1
16899 | 5923 |       isarray: 2.0.5
16900 | 5924 |       stop-iteration-iterator: 1.1.0
16901 | 5925 | 
16902 | 5926 |   es-object-atoms@1.0.0:
16903 | 5927 |     dependencies:
16904 | 5928 |       es-errors: 1.3.0
16905 | 5929 | 
16906 | 5930 |   esbuild@0.21.5:
16907 | 5931 |     optionalDependencies:
16908 | 5932 |       '@esbuild/aix-ppc64': 0.21.5
16909 | 5933 |       '@esbuild/android-arm': 0.21.5
16910 | 5934 |       '@esbuild/android-arm64': 0.21.5
16911 | 5935 |       '@esbuild/android-x64': 0.21.5
16912 | 5936 |       '@esbuild/darwin-arm64': 0.21.5
16913 | 5937 |       '@esbuild/darwin-x64': 0.21.5
16914 | 5938 |       '@esbuild/freebsd-arm64': 0.21.5
16915 | 5939 |       '@esbuild/freebsd-x64': 0.21.5
16916 | 5940 |       '@esbuild/linux-arm': 0.21.5
16917 | 5941 |       '@esbuild/linux-arm64': 0.21.5
16918 | 5942 |       '@esbuild/linux-ia32': 0.21.5
16919 | 5943 |       '@esbuild/linux-loong64': 0.21.5
16920 | 5944 |       '@esbuild/linux-mips64el': 0.21.5
16921 | 5945 |       '@esbuild/linux-ppc64': 0.21.5
16922 | 5946 |       '@esbuild/linux-riscv64': 0.21.5
16923 | 5947 |       '@esbuild/linux-s390x': 0.21.5
16924 | 5948 |       '@esbuild/linux-x64': 0.21.5
16925 | 5949 |       '@esbuild/netbsd-x64': 0.21.5
16926 | 5950 |       '@esbuild/openbsd-x64': 0.21.5
16927 | 5951 |       '@esbuild/sunos-x64': 0.21.5
16928 | 5952 |       '@esbuild/win32-arm64': 0.21.5
16929 | 5953 |       '@esbuild/win32-ia32': 0.21.5
16930 | 5954 |       '@esbuild/win32-x64': 0.21.5
16931 | 5955 | 
16932 | 5956 |   esbuild@0.23.1:
16933 | 5957 |     optionalDependencies:
16934 | 5958 |       '@esbuild/aix-ppc64': 0.23.1
16935 | 5959 |       '@esbuild/android-arm': 0.23.1
16936 | 5960 |       '@esbuild/android-arm64': 0.23.1
16937 | 5961 |       '@esbuild/android-x64': 0.23.1
16938 | 5962 |       '@esbuild/darwin-arm64': 0.23.1
16939 | 5963 |       '@esbuild/darwin-x64': 0.23.1
16940 | 5964 |       '@esbuild/freebsd-arm64': 0.23.1
16941 | 5965 |       '@esbuild/freebsd-x64': 0.23.1
16942 | 5966 |       '@esbuild/linux-arm': 0.23.1
16943 | 5967 |       '@esbuild/linux-arm64': 0.23.1
16944 | 5968 |       '@esbuild/linux-ia32': 0.23.1
16945 | 5969 |       '@esbuild/linux-loong64': 0.23.1
16946 | 5970 |       '@esbuild/linux-mips64el': 0.23.1
16947 | 5971 |       '@esbuild/linux-ppc64': 0.23.1
16948 | 5972 |       '@esbuild/linux-riscv64': 0.23.1
16949 | 5973 |       '@esbuild/linux-s390x': 0.23.1
16950 | 5974 |       '@esbuild/linux-x64': 0.23.1
16951 | 5975 |       '@esbuild/netbsd-x64': 0.23.1
16952 | 5976 |       '@esbuild/openbsd-arm64': 0.23.1
16953 | 5977 |       '@esbuild/openbsd-x64': 0.23.1
16954 | 5978 |       '@esbuild/sunos-x64': 0.23.1
16955 | 5979 |       '@esbuild/win32-arm64': 0.23.1
16956 | 5980 |       '@esbuild/win32-ia32': 0.23.1
16957 | 5981 |       '@esbuild/win32-x64': 0.23.1
16958 | 5982 | 
16959 | 5983 |   esbuild@0.24.2:
16960 | 5984 |     optionalDependencies:
16961 | 5985 |       '@esbuild/aix-ppc64': 0.24.2
16962 | 5986 |       '@esbuild/android-arm': 0.24.2
16963 | 5987 |       '@esbuild/android-arm64': 0.24.2
16964 | 5988 |       '@esbuild/android-x64': 0.24.2
16965 | 5989 |       '@esbuild/darwin-arm64': 0.24.2
16966 | 5990 |       '@esbuild/darwin-x64': 0.24.2
16967 | 5991 |       '@esbuild/freebsd-arm64': 0.24.2
16968 | 5992 |       '@esbuild/freebsd-x64': 0.24.2
16969 | 5993 |       '@esbuild/linux-arm': 0.24.2
16970 | 5994 |       '@esbuild/linux-arm64': 0.24.2
16971 | 5995 |       '@esbuild/linux-ia32': 0.24.2
16972 | 5996 |       '@esbuild/linux-loong64': 0.24.2
16973 | 5997 |       '@esbuild/linux-mips64el': 0.24.2
16974 | 5998 |       '@esbuild/linux-ppc64': 0.24.2
16975 | 5999 |       '@esbuild/linux-riscv64': 0.24.2
16976 | 6000 |       '@esbuild/linux-s390x': 0.24.2
16977 | 6001 |       '@esbuild/linux-x64': 0.24.2
16978 | 6002 |       '@esbuild/netbsd-arm64': 0.24.2
16979 | 6003 |       '@esbuild/netbsd-x64': 0.24.2
16980 | 6004 |       '@esbuild/openbsd-arm64': 0.24.2
16981 | 6005 |       '@esbuild/openbsd-x64': 0.24.2
16982 | 6006 |       '@esbuild/sunos-x64': 0.24.2
16983 | 6007 |       '@esbuild/win32-arm64': 0.24.2
16984 | 6008 |       '@esbuild/win32-ia32': 0.24.2
16985 | 6009 |       '@esbuild/win32-x64': 0.24.2
16986 | 6010 | 
16987 | 6011 |   escalade@3.2.0: {}
16988 | 6012 | 
16989 | 6013 |   escape-html@1.0.3: {}
16990 | 6014 | 
16991 | 6015 |   escape-string-regexp@2.0.0: {}
16992 | 6016 | 
16993 | 6017 |   escape-string-regexp@4.0.0: {}
16994 | 6018 | 
16995 | 6019 |   eslint-config-prettier@9.1.0(eslint@8.57.1):
16996 | 6020 |     dependencies:
16997 | 6021 |       eslint: 8.57.1
16998 | 6022 | 
16999 | 6023 |   eslint-plugin-react-hooks@4.6.2(eslint@8.57.1):
17000 | 6024 |     dependencies:
17001 | 6025 |       eslint: 8.57.1
17002 | 6026 | 
17003 | 6027 |   eslint-plugin-react-refresh@0.4.18(eslint@8.57.1):
17004 | 6028 |     dependencies:
17005 | 6029 |       eslint: 8.57.1
17006 | 6030 | 
17007 | 6031 |   eslint-scope@7.2.2:
17008 | 6032 |     dependencies:
17009 | 6033 |       esrecurse: 4.3.0
17010 | 6034 |       estraverse: 5.3.0
17011 | 6035 | 
17012 | 6036 |   eslint-visitor-keys@3.4.3: {}
17013 | 6037 | 
17014 | 6038 |   eslint@8.57.1:
17015 | 6039 |     dependencies:
17016 | 6040 |       '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
17017 | 6041 |       '@eslint-community/regexpp': 4.12.1
17018 | 6042 |       '@eslint/eslintrc': 2.1.4
17019 | 6043 |       '@eslint/js': 8.57.1
17020 | 6044 |       '@humanwhocodes/config-array': 0.13.0
17021 | 6045 |       '@humanwhocodes/module-importer': 1.0.1
17022 | 6046 |       '@nodelib/fs.walk': 1.2.8
17023 | 6047 |       '@ungap/structured-clone': 1.2.1
17024 | 6048 |       ajv: 6.12.6
17025 | 6049 |       chalk: 4.1.2
17026 | 6050 |       cross-spawn: 7.0.6
17027 | 6051 |       debug: 4.4.0
17028 | 6052 |       doctrine: 3.0.0
17029 | 6053 |       escape-string-regexp: 4.0.0
17030 | 6054 |       eslint-scope: 7.2.2
17031 | 6055 |       eslint-visitor-keys: 3.4.3
17032 | 6056 |       espree: 9.6.1
17033 | 6057 |       esquery: 1.6.0
17034 | 6058 |       esutils: 2.0.3
17035 | 6059 |       fast-deep-equal: 3.1.3
17036 | 6060 |       file-entry-cache: 6.0.1
17037 | 6061 |       find-up: 5.0.0
17038 | 6062 |       glob-parent: 6.0.2
17039 | 6063 |       globals: 13.24.0
17040 | 6064 |       graphemer: 1.4.0
17041 | 6065 |       ignore: 5.3.2
17042 | 6066 |       imurmurhash: 0.1.4
17043 | 6067 |       is-glob: 4.0.3
17044 | 6068 |       is-path-inside: 3.0.3
17045 | 6069 |       js-yaml: 4.1.0
17046 | 6070 |       json-stable-stringify-without-jsonify: 1.0.1
17047 | 6071 |       levn: 0.4.1
17048 | 6072 |       lodash.merge: 4.6.2
17049 | 6073 |       minimatch: 3.1.2
17050 | 6074 |       natural-compare: 1.4.0
17051 | 6075 |       optionator: 0.9.4
17052 | 6076 |       strip-ansi: 6.0.1
17053 | 6077 |       text-table: 0.2.0
17054 | 6078 |     transitivePeerDependencies:
17055 | 6079 |       - supports-color
17056 | 6080 | 
17057 | 6081 |   espree@9.6.1:
17058 | 6082 |     dependencies:
17059 | 6083 |       acorn: 8.14.0
17060 | 6084 |       acorn-jsx: 5.3.2(acorn@8.14.0)
17061 | 6085 |       eslint-visitor-keys: 3.4.3
17062 | 6086 | 
17063 | 6087 |   esprima@4.0.1: {}
17064 | 6088 | 
17065 | 6089 |   esquery@1.6.0:
17066 | 6090 |     dependencies:
17067 | 6091 |       estraverse: 5.3.0
17068 | 6092 | 
17069 | 6093 |   esrecurse@4.3.0:
17070 | 6094 |     dependencies:
17071 | 6095 |       estraverse: 5.3.0
17072 | 6096 | 
17073 | 6097 |   estraverse@5.3.0: {}
17074 | 6098 | 
17075 | 6099 |   estree-walker@3.0.3:
17076 | 6100 |     dependencies:
17077 | 6101 |       '@types/estree': 1.0.6
17078 | 6102 | 
17079 | 6103 |   esutils@2.0.3: {}
17080 | 6104 | 
17081 | 6105 |   etag@1.8.1: {}
17082 | 6106 | 
17083 | 6107 |   execa@5.1.1:
17084 | 6108 |     dependencies:
17085 | 6109 |       cross-spawn: 7.0.6
17086 | 6110 |       get-stream: 6.0.1
17087 | 6111 |       human-signals: 2.1.0
17088 | 6112 |       is-stream: 2.0.1
17089 | 6113 |       merge-stream: 2.0.0
17090 | 6114 |       npm-run-path: 4.0.1
17091 | 6115 |       onetime: 5.1.2
17092 | 6116 |       signal-exit: 3.0.7
17093 | 6117 |       strip-final-newline: 2.0.0
17094 | 6118 | 
17095 | 6119 |   execa@8.0.1:
17096 | 6120 |     dependencies:
17097 | 6121 |       cross-spawn: 7.0.6
17098 | 6122 |       get-stream: 8.0.1
17099 | 6123 |       human-signals: 5.0.0
17100 | 6124 |       is-stream: 3.0.0
17101 | 6125 |       merge-stream: 2.0.0
17102 | 6126 |       npm-run-path: 5.3.0
17103 | 6127 |       onetime: 6.0.0
17104 | 6128 |       signal-exit: 4.1.0
17105 | 6129 |       strip-final-newline: 3.0.0
17106 | 6130 | 
17107 | 6131 |   exit@0.1.2: {}
17108 | 6132 | 
17109 | 6133 |   expect@29.7.0:
17110 | 6134 |     dependencies:
17111 | 6135 |       '@jest/expect-utils': 29.7.0
17112 | 6136 |       jest-get-type: 29.6.3
17113 | 6137 |       jest-matcher-utils: 29.7.0
17114 | 6138 |       jest-message-util: 29.7.0
17115 | 6139 |       jest-util: 29.7.0
17116 | 6140 | 
17117 | 6141 |   express-rate-limit@7.5.0(express@4.21.2):
17118 | 6142 |     dependencies:
17119 | 6143 |       express: 4.21.2
17120 | 6144 | 
17121 | 6145 |   express@4.21.2:
17122 | 6146 |     dependencies:
17123 | 6147 |       accepts: 1.3.8
17124 | 6148 |       array-flatten: 1.1.1
17125 | 6149 |       body-parser: 1.20.3
17126 | 6150 |       content-disposition: 0.5.4
17127 | 6151 |       content-type: 1.0.5
17128 | 6152 |       cookie: 0.7.1
17129 | 6153 |       cookie-signature: 1.0.6
17130 | 6154 |       debug: 2.6.9
17131 | 6155 |       depd: 2.0.0
17132 | 6156 |       encodeurl: 2.0.0
17133 | 6157 |       escape-html: 1.0.3
17134 | 6158 |       etag: 1.8.1
17135 | 6159 |       finalhandler: 1.3.1
17136 | 6160 |       fresh: 0.5.2
17137 | 6161 |       http-errors: 2.0.0
17138 | 6162 |       merge-descriptors: 1.0.3
17139 | 6163 |       methods: 1.1.2
17140 | 6164 |       on-finished: 2.4.1
17141 | 6165 |       parseurl: 1.3.3
17142 | 6166 |       path-to-regexp: 0.1.12
17143 | 6167 |       proxy-addr: 2.0.7
17144 | 6168 |       qs: 6.13.0
17145 | 6169 |       range-parser: 1.2.1
17146 | 6170 |       safe-buffer: 5.2.1
17147 | 6171 |       send: 0.19.0
17148 | 6172 |       serve-static: 1.16.2
17149 | 6173 |       setprototypeof: 1.2.0
17150 | 6174 |       statuses: 2.0.1
17151 | 6175 |       type-is: 1.6.18
17152 | 6176 |       utils-merge: 1.0.1
17153 | 6177 |       vary: 1.1.2
17154 | 6178 |     transitivePeerDependencies:
17155 | 6179 |       - supports-color
17156 | 6180 | 
17157 | 6181 |   fast-deep-equal@3.1.3: {}
17158 | 6182 | 
17159 | 6183 |   fast-glob@3.3.3:
17160 | 6184 |     dependencies:
17161 | 6185 |       '@nodelib/fs.stat': 2.0.5
17162 | 6186 |       '@nodelib/fs.walk': 1.2.8
17163 | 6187 |       glob-parent: 5.1.2
17164 | 6188 |       merge2: 1.4.1
17165 | 6189 |       micromatch: 4.0.8
17166 | 6190 | 
17167 | 6191 |   fast-json-stable-stringify@2.1.0: {}
17168 | 6192 | 
17169 | 6193 |   fast-levenshtein@2.0.6: {}
17170 | 6194 | 
17171 | 6195 |   fast-safe-stringify@2.1.1: {}
17172 | 6196 | 
17173 | 6197 |   fastq@1.18.0:
17174 | 6198 |     dependencies:
17175 | 6199 |       reusify: 1.0.4
17176 | 6200 | 
17177 | 6201 |   fb-watchman@2.0.2:
17178 | 6202 |     dependencies:
17179 | 6203 |       bser: 2.1.1
17180 | 6204 | 
17181 | 6205 |   fdir@6.4.2(picomatch@4.0.2):
17182 | 6206 |     optionalDependencies:
17183 | 6207 |       picomatch: 4.0.2
17184 | 6208 | 
17185 | 6209 |   fecha@4.2.3: {}
17186 | 6210 | 
17187 | 6211 |   file-entry-cache@6.0.1:
17188 | 6212 |     dependencies:
17189 | 6213 |       flat-cache: 3.2.0
17190 | 6214 | 
17191 | 6215 |   filelist@1.0.4:
17192 | 6216 |     dependencies:
17193 | 6217 |       minimatch: 5.1.6
17194 | 6218 | 
17195 | 6219 |   fill-range@7.1.1:
17196 | 6220 |     dependencies:
17197 | 6221 |       to-regex-range: 5.0.1
17198 | 6222 | 
17199 | 6223 |   finalhandler@1.3.1:
17200 | 6224 |     dependencies:
17201 | 6225 |       debug: 2.6.9
17202 | 6226 |       encodeurl: 2.0.0
17203 | 6227 |       escape-html: 1.0.3
17204 | 6228 |       on-finished: 2.4.1
17205 | 6229 |       parseurl: 1.3.3
17206 | 6230 |       statuses: 2.0.1
17207 | 6231 |       unpipe: 1.0.0
17208 | 6232 |     transitivePeerDependencies:
17209 | 6233 |       - supports-color
17210 | 6234 | 
17211 | 6235 |   find-up@4.1.0:
17212 | 6236 |     dependencies:
17213 | 6237 |       locate-path: 5.0.0
17214 | 6238 |       path-exists: 4.0.0
17215 | 6239 | 
17216 | 6240 |   find-up@5.0.0:
17217 | 6241 |     dependencies:
17218 | 6242 |       locate-path: 6.0.0
17219 | 6243 |       path-exists: 4.0.0
17220 | 6244 | 
17221 | 6245 |   flat-cache@3.2.0:
17222 | 6246 |     dependencies:
17223 | 6247 |       flatted: 3.3.2
17224 | 6248 |       keyv: 4.5.4
17225 | 6249 |       rimraf: 3.0.2
17226 | 6250 | 
17227 | 6251 |   flatted@3.3.2: {}
17228 | 6252 | 
17229 | 6253 |   fn.name@1.1.0: {}
17230 | 6254 | 
17231 | 6255 |   follow-redirects@1.15.9: {}
17232 | 6256 | 
17233 | 6257 |   for-each@0.3.3:
17234 | 6258 |     dependencies:
17235 | 6259 |       is-callable: 1.2.7
17236 | 6260 | 
17237 | 6261 |   foreground-child@3.3.0:
17238 | 6262 |     dependencies:
17239 | 6263 |       cross-spawn: 7.0.6
17240 | 6264 |       signal-exit: 4.1.0
17241 | 6265 | 
17242 | 6266 |   form-data@4.0.1:
17243 | 6267 |     dependencies:
17244 | 6268 |       asynckit: 0.4.0
17245 | 6269 |       combined-stream: 1.0.8
17246 | 6270 |       mime-types: 2.1.35
17247 | 6271 | 
17248 | 6272 |   formidable@3.5.2:
17249 | 6273 |     dependencies:
17250 | 6274 |       dezalgo: 1.0.4
17251 | 6275 |       hexoid: 2.0.0
17252 | 6276 |       once: 1.4.0
17253 | 6277 | 
17254 | 6278 |   forwarded@0.2.0: {}
17255 | 6279 | 
17256 | 6280 |   fraction.js@4.3.7: {}
17257 | 6281 | 
17258 | 6282 |   fresh@0.5.2: {}
17259 | 6283 | 
17260 | 6284 |   fs.realpath@1.0.0: {}
17261 | 6285 | 
17262 | 6286 |   fsevents@2.3.3:
17263 | 6287 |     optional: true
17264 | 6288 | 
17265 | 6289 |   function-bind@1.1.2: {}
17266 | 6290 | 
17267 | 6291 |   functions-have-names@1.2.3: {}
17268 | 6292 | 
17269 | 6293 |   gensync@1.0.0-beta.2: {}
17270 | 6294 | 
17271 | 6295 |   get-caller-file@2.0.5: {}
17272 | 6296 | 
17273 | 6297 |   get-func-name@2.0.2: {}
17274 | 6298 | 
17275 | 6299 |   get-intrinsic@1.2.7:
17276 | 6300 |     dependencies:
17277 | 6301 |       call-bind-apply-helpers: 1.0.1
17278 | 6302 |       es-define-property: 1.0.1
17279 | 6303 |       es-errors: 1.3.0
17280 | 6304 |       es-object-atoms: 1.0.0
17281 | 6305 |       function-bind: 1.1.2
17282 | 6306 |       get-proto: 1.0.1
17283 | 6307 |       gopd: 1.2.0
17284 | 6308 |       has-symbols: 1.1.0
17285 | 6309 |       hasown: 2.0.2
17286 | 6310 |       math-intrinsics: 1.1.0
17287 | 6311 | 
17288 | 6312 |   get-package-type@0.1.0: {}
17289 | 6313 | 
17290 | 6314 |   get-proto@1.0.1:
17291 | 6315 |     dependencies:
17292 | 6316 |       dunder-proto: 1.0.1
17293 | 6317 |       es-object-atoms: 1.0.0
17294 | 6318 | 
17295 | 6319 |   get-stream@6.0.1: {}
17296 | 6320 | 
17297 | 6321 |   get-stream@8.0.1: {}
17298 | 6322 | 
17299 | 6323 |   get-tsconfig@4.8.1:
17300 | 6324 |     dependencies:
17301 | 6325 |       resolve-pkg-maps: 1.0.0
17302 | 6326 | 
17303 | 6327 |   glob-parent@5.1.2:
17304 | 6328 |     dependencies:
17305 | 6329 |       is-glob: 4.0.3
17306 | 6330 | 
17307 | 6331 |   glob-parent@6.0.2:
17308 | 6332 |     dependencies:
17309 | 6333 |       is-glob: 4.0.3
17310 | 6334 | 
17311 | 6335 |   glob@10.4.5:
17312 | 6336 |     dependencies:
17313 | 6337 |       foreground-child: 3.3.0
17314 | 6338 |       jackspeak: 3.4.3
17315 | 6339 |       minimatch: 9.0.5
17316 | 6340 |       minipass: 7.1.2
17317 | 6341 |       package-json-from-dist: 1.0.1
17318 | 6342 |       path-scurry: 1.11.1
17319 | 6343 | 
17320 | 6344 |   glob@7.2.3:
17321 | 6345 |     dependencies:
17322 | 6346 |       fs.realpath: 1.0.0
17323 | 6347 |       inflight: 1.0.6
17324 | 6348 |       inherits: 2.0.4
17325 | 6349 |       minimatch: 3.1.2
17326 | 6350 |       once: 1.4.0
17327 | 6351 |       path-is-absolute: 1.0.1
17328 | 6352 | 
17329 | 6353 |   globals@11.12.0: {}
17330 | 6354 | 
17331 | 6355 |   globals@13.24.0:
17332 | 6356 |     dependencies:
17333 | 6357 |       type-fest: 0.20.2
17334 | 6358 | 
17335 | 6359 |   globby@11.1.0:
17336 | 6360 |     dependencies:
17337 | 6361 |       array-union: 2.1.0
17338 | 6362 |       dir-glob: 3.0.1
17339 | 6363 |       fast-glob: 3.3.3
17340 | 6364 |       ignore: 5.3.2
17341 | 6365 |       merge2: 1.4.1
17342 | 6366 |       slash: 3.0.0
17343 | 6367 | 
17344 | 6368 |   gopd@1.2.0: {}
17345 | 6369 | 
17346 | 6370 |   graceful-fs@4.2.11: {}
17347 | 6371 | 
17348 | 6372 |   graphemer@1.4.0: {}
17349 | 6373 | 
17350 | 6374 |   happy-dom@12.10.3:
17351 | 6375 |     dependencies:
17352 | 6376 |       css.escape: 1.5.1
17353 | 6377 |       entities: 4.5.0
17354 | 6378 |       iconv-lite: 0.6.3
17355 | 6379 |       webidl-conversions: 7.0.0
17356 | 6380 |       whatwg-encoding: 2.0.0
17357 | 6381 |       whatwg-mimetype: 3.0.0
17358 | 6382 | 
17359 | 6383 |   has-bigints@1.1.0: {}
17360 | 6384 | 
17361 | 6385 |   has-flag@4.0.0: {}
17362 | 6386 | 
17363 | 6387 |   has-property-descriptors@1.0.2:
17364 | 6388 |     dependencies:
17365 | 6389 |       es-define-property: 1.0.1
17366 | 6390 | 
17367 | 6391 |   has-symbols@1.1.0: {}
17368 | 6392 | 
17369 | 6393 |   has-tostringtag@1.0.2:
17370 | 6394 |     dependencies:
17371 | 6395 |       has-symbols: 1.1.0
17372 | 6396 | 
17373 | 6397 |   hasown@2.0.2:
17374 | 6398 |     dependencies:
17375 | 6399 |       function-bind: 1.1.2
17376 | 6400 | 
17377 | 6401 |   hexoid@2.0.0: {}
17378 | 6402 | 
17379 | 6403 |   html-escaper@2.0.2: {}
17380 | 6404 | 
17381 | 6405 |   http-errors@2.0.0:
17382 | 6406 |     dependencies:
17383 | 6407 |       depd: 2.0.0
17384 | 6408 |       inherits: 2.0.4
17385 | 6409 |       setprototypeof: 1.2.0
17386 | 6410 |       statuses: 2.0.1
17387 | 6411 |       toidentifier: 1.0.1
17388 | 6412 | 
17389 | 6413 |   human-signals@2.1.0: {}
17390 | 6414 | 
17391 | 6415 |   human-signals@5.0.0: {}
17392 | 6416 | 
17393 | 6417 |   iconv-lite@0.4.24:
17394 | 6418 |     dependencies:
17395 | 6419 |       safer-buffer: 2.1.2
17396 | 6420 | 
17397 | 6421 |   iconv-lite@0.6.3:
17398 | 6422 |     dependencies:
17399 | 6423 |       safer-buffer: 2.1.2
17400 | 6424 | 
17401 | 6425 |   ignore@5.3.2: {}
17402 | 6426 | 
17403 | 6427 |   import-fresh@3.3.0:
17404 | 6428 |     dependencies:
17405 | 6429 |       parent-module: 1.0.1
17406 | 6430 |       resolve-from: 4.0.0
17407 | 6431 | 
17408 | 6432 |   import-local@3.2.0:
17409 | 6433 |     dependencies:
17410 | 6434 |       pkg-dir: 4.2.0
17411 | 6435 |       resolve-cwd: 3.0.0
17412 | 6436 | 
17413 | 6437 |   imurmurhash@0.1.4: {}
17414 | 6438 | 
17415 | 6439 |   indent-string@4.0.0: {}
17416 | 6440 | 
17417 | 6441 |   inflight@1.0.6:
17418 | 6442 |     dependencies:
17419 | 6443 |       once: 1.4.0
17420 | 6444 |       wrappy: 1.0.2
17421 | 6445 | 
17422 | 6446 |   inherits@2.0.4: {}
17423 | 6447 | 
17424 | 6448 |   internal-slot@1.1.0:
17425 | 6449 |     dependencies:
17426 | 6450 |       es-errors: 1.3.0
17427 | 6451 |       hasown: 2.0.2
17428 | 6452 |       side-channel: 1.1.0
17429 | 6453 | 
17430 | 6454 |   invariant@2.2.4:
17431 | 6455 |     dependencies:
17432 | 6456 |       loose-envify: 1.4.0
17433 | 6457 | 
17434 | 6458 |   ipaddr.js@1.9.1: {}
17435 | 6459 | 
17436 | 6460 |   is-arguments@1.2.0:
17437 | 6461 |     dependencies:
17438 | 6462 |       call-bound: 1.0.3
17439 | 6463 |       has-tostringtag: 1.0.2
17440 | 6464 | 
17441 | 6465 |   is-array-buffer@3.0.5:
17442 | 6466 |     dependencies:
17443 | 6467 |       call-bind: 1.0.8
17444 | 6468 |       call-bound: 1.0.3
17445 | 6469 |       get-intrinsic: 1.2.7
17446 | 6470 | 
17447 | 6471 |   is-arrayish@0.2.1: {}
17448 | 6472 | 
17449 | 6473 |   is-arrayish@0.3.2: {}
17450 | 6474 | 
17451 | 6475 |   is-bigint@1.1.0:
17452 | 6476 |     dependencies:
17453 | 6477 |       has-bigints: 1.1.0
17454 | 6478 | 
17455 | 6479 |   is-binary-path@2.1.0:
17456 | 6480 |     dependencies:
17457 | 6481 |       binary-extensions: 2.3.0
17458 | 6482 | 
17459 | 6483 |   is-boolean-object@1.2.1:
17460 | 6484 |     dependencies:
17461 | 6485 |       call-bound: 1.0.3
17462 | 6486 |       has-tostringtag: 1.0.2
17463 | 6487 | 
17464 | 6488 |   is-callable@1.2.7: {}
17465 | 6489 | 
17466 | 6490 |   is-core-module@2.16.1:
17467 | 6491 |     dependencies:
17468 | 6492 |       hasown: 2.0.2
17469 | 6493 | 
17470 | 6494 |   is-date-object@1.1.0:
17471 | 6495 |     dependencies:
17472 | 6496 |       call-bound: 1.0.3
17473 | 6497 |       has-tostringtag: 1.0.2
17474 | 6498 | 
17475 | 6499 |   is-extglob@2.1.1: {}
17476 | 6500 | 
17477 | 6501 |   is-fullwidth-code-point@3.0.0: {}
17478 | 6502 | 
17479 | 6503 |   is-generator-fn@2.1.0: {}
17480 | 6504 | 
17481 | 6505 |   is-glob@4.0.3:
17482 | 6506 |     dependencies:
17483 | 6507 |       is-extglob: 2.1.1
17484 | 6508 | 
17485 | 6509 |   is-map@2.0.3: {}
17486 | 6510 | 
17487 | 6511 |   is-number-object@1.1.1:
17488 | 6512 |     dependencies:
17489 | 6513 |       call-bound: 1.0.3
17490 | 6514 |       has-tostringtag: 1.0.2
17491 | 6515 | 
17492 | 6516 |   is-number@7.0.0: {}
17493 | 6517 | 
17494 | 6518 |   is-path-inside@3.0.3: {}
17495 | 6519 | 
17496 | 6520 |   is-regex@1.2.1:
17497 | 6521 |     dependencies:
17498 | 6522 |       call-bound: 1.0.3
17499 | 6523 |       gopd: 1.2.0
17500 | 6524 |       has-tostringtag: 1.0.2
17501 | 6525 |       hasown: 2.0.2
17502 | 6526 | 
17503 | 6527 |   is-set@2.0.3: {}
17504 | 6528 | 
17505 | 6529 |   is-shared-array-buffer@1.0.4:
17506 | 6530 |     dependencies:
17507 | 6531 |       call-bound: 1.0.3
17508 | 6532 | 
17509 | 6533 |   is-stream@2.0.1: {}
17510 | 6534 | 
17511 | 6535 |   is-stream@3.0.0: {}
17512 | 6536 | 
17513 | 6537 |   is-string@1.1.1:
17514 | 6538 |     dependencies:
17515 | 6539 |       call-bound: 1.0.3
17516 | 6540 |       has-tostringtag: 1.0.2
17517 | 6541 | 
17518 | 6542 |   is-symbol@1.1.1:
17519 | 6543 |     dependencies:
17520 | 6544 |       call-bound: 1.0.3
17521 | 6545 |       has-symbols: 1.1.0
17522 | 6546 |       safe-regex-test: 1.1.0
17523 | 6547 | 
17524 | 6548 |   is-weakmap@2.0.2: {}
17525 | 6549 | 
17526 | 6550 |   is-weakset@2.0.4:
17527 | 6551 |     dependencies:
17528 | 6552 |       call-bound: 1.0.3
17529 | 6553 |       get-intrinsic: 1.2.7
17530 | 6554 | 
17531 | 6555 |   isarray@1.0.0: {}
17532 | 6556 | 
17533 | 6557 |   isarray@2.0.5: {}
17534 | 6558 | 
17535 | 6559 |   isexe@2.0.0: {}
17536 | 6560 | 
17537 | 6561 |   istanbul-lib-coverage@3.2.2: {}
17538 | 6562 | 
17539 | 6563 |   istanbul-lib-instrument@5.2.1:
17540 | 6564 |     dependencies:
17541 | 6565 |       '@babel/core': 7.26.0
17542 | 6566 |       '@babel/parser': 7.26.5
17543 | 6567 |       '@istanbuljs/schema': 0.1.3
17544 | 6568 |       istanbul-lib-coverage: 3.2.2
17545 | 6569 |       semver: 6.3.1
17546 | 6570 |     transitivePeerDependencies:
17547 | 6571 |       - supports-color
17548 | 6572 | 
17549 | 6573 |   istanbul-lib-instrument@6.0.3:
17550 | 6574 |     dependencies:
17551 | 6575 |       '@babel/core': 7.26.0
17552 | 6576 |       '@babel/parser': 7.26.5
17553 | 6577 |       '@istanbuljs/schema': 0.1.3
17554 | 6578 |       istanbul-lib-coverage: 3.2.2
17555 | 6579 |       semver: 7.6.3
17556 | 6580 |     transitivePeerDependencies:
17557 | 6581 |       - supports-color
17558 | 6582 | 
17559 | 6583 |   istanbul-lib-report@3.0.1:
17560 | 6584 |     dependencies:
17561 | 6585 |       istanbul-lib-coverage: 3.2.2
17562 | 6586 |       make-dir: 4.0.0
17563 | 6587 |       supports-color: 7.2.0
17564 | 6588 | 
17565 | 6589 |   istanbul-lib-source-maps@4.0.1:
17566 | 6590 |     dependencies:
17567 | 6591 |       debug: 4.4.0
17568 | 6592 |       istanbul-lib-coverage: 3.2.2
17569 | 6593 |       source-map: 0.6.1
17570 | 6594 |     transitivePeerDependencies:
17571 | 6595 |       - supports-color
17572 | 6596 | 
17573 | 6597 |   istanbul-lib-source-maps@5.0.6:
17574 | 6598 |     dependencies:
17575 | 6599 |       '@jridgewell/trace-mapping': 0.3.25
17576 | 6600 |       debug: 4.4.0
17577 | 6601 |       istanbul-lib-coverage: 3.2.2
17578 | 6602 |     transitivePeerDependencies:
17579 | 6603 |       - supports-color
17580 | 6604 | 
17581 | 6605 |   istanbul-reports@3.1.7:
17582 | 6606 |     dependencies:
17583 | 6607 |       html-escaper: 2.0.2
17584 | 6608 |       istanbul-lib-report: 3.0.1
17585 | 6609 | 
17586 | 6610 |   jackspeak@3.4.3:
17587 | 6611 |     dependencies:
17588 | 6612 |       '@isaacs/cliui': 8.0.2
17589 | 6613 |     optionalDependencies:
17590 | 6614 |       '@pkgjs/parseargs': 0.11.0
17591 | 6615 | 
17592 | 6616 |   jake@10.9.2:
17593 | 6617 |     dependencies:
17594 | 6618 |       async: 3.2.6
17595 | 6619 |       chalk: 4.1.2
17596 | 6620 |       filelist: 1.0.4
17597 | 6621 |       minimatch: 3.1.2
17598 | 6622 | 
17599 | 6623 |   jest-changed-files@29.7.0:
17600 | 6624 |     dependencies:
17601 | 6625 |       execa: 5.1.1
17602 | 6626 |       jest-util: 29.7.0
17603 | 6627 |       p-limit: 3.1.0
17604 | 6628 | 
17605 | 6629 |   jest-circus@29.7.0:
17606 | 6630 |     dependencies:
17607 | 6631 |       '@jest/environment': 29.7.0
17608 | 6632 |       '@jest/expect': 29.7.0
17609 | 6633 |       '@jest/test-result': 29.7.0
17610 | 6634 |       '@jest/types': 29.6.3
17611 | 6635 |       '@types/node': 20.17.12
17612 | 6636 |       chalk: 4.1.2
17613 | 6637 |       co: 4.6.0
17614 | 6638 |       dedent: 1.5.3
17615 | 6639 |       is-generator-fn: 2.1.0
17616 | 6640 |       jest-each: 29.7.0
17617 | 6641 |       jest-matcher-utils: 29.7.0
17618 | 6642 |       jest-message-util: 29.7.0
17619 | 6643 |       jest-runtime: 29.7.0
17620 | 6644 |       jest-snapshot: 29.7.0
17621 | 6645 |       jest-util: 29.7.0
17622 | 6646 |       p-limit: 3.1.0
17623 | 6647 |       pretty-format: 29.7.0
17624 | 6648 |       pure-rand: 6.1.0
17625 | 6649 |       slash: 3.0.0
17626 | 6650 |       stack-utils: 2.0.6
17627 | 6651 |     transitivePeerDependencies:
17628 | 6652 |       - babel-plugin-macros
17629 | 6653 |       - supports-color
17630 | 6654 | 
17631 | 6655 |   jest-cli@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
17632 | 6656 |     dependencies:
17633 | 6657 |       '@jest/core': 29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
17634 | 6658 |       '@jest/test-result': 29.7.0
17635 | 6659 |       '@jest/types': 29.6.3
17636 | 6660 |       chalk: 4.1.2
17637 | 6661 |       create-jest: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
17638 | 6662 |       exit: 0.1.2
17639 | 6663 |       import-local: 3.2.0
17640 | 6664 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
17641 | 6665 |       jest-util: 29.7.0
17642 | 6666 |       jest-validate: 29.7.0
17643 | 6667 |       yargs: 17.7.2
17644 | 6668 |     transitivePeerDependencies:
17645 | 6669 |       - '@types/node'
17646 | 6670 |       - babel-plugin-macros
17647 | 6671 |       - supports-color
17648 | 6672 |       - ts-node
17649 | 6673 | 
17650 | 6674 |   jest-config@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
17651 | 6675 |     dependencies:
17652 | 6676 |       '@babel/core': 7.26.0
17653 | 6677 |       '@jest/test-sequencer': 29.7.0
17654 | 6678 |       '@jest/types': 29.6.3
17655 | 6679 |       babel-jest: 29.7.0(@babel/core@7.26.0)
17656 | 6680 |       chalk: 4.1.2
17657 | 6681 |       ci-info: 3.9.0
17658 | 6682 |       deepmerge: 4.3.1
17659 | 6683 |       glob: 7.2.3
17660 | 6684 |       graceful-fs: 4.2.11
17661 | 6685 |       jest-circus: 29.7.0
17662 | 6686 |       jest-environment-node: 29.7.0
17663 | 6687 |       jest-get-type: 29.6.3
17664 | 6688 |       jest-regex-util: 29.6.3
17665 | 6689 |       jest-resolve: 29.7.0
17666 | 6690 |       jest-runner: 29.7.0
17667 | 6691 |       jest-util: 29.7.0
17668 | 6692 |       jest-validate: 29.7.0
17669 | 6693 |       micromatch: 4.0.8
17670 | 6694 |       parse-json: 5.2.0
17671 | 6695 |       pretty-format: 29.7.0
17672 | 6696 |       slash: 3.0.0
17673 | 6697 |       strip-json-comments: 3.1.1
17674 | 6698 |     optionalDependencies:
17675 | 6699 |       '@types/node': 20.17.12
17676 | 6700 |       ts-node: 10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)
17677 | 6701 |     transitivePeerDependencies:
17678 | 6702 |       - babel-plugin-macros
17679 | 6703 |       - supports-color
17680 | 6704 | 
17681 | 6705 |   jest-diff@29.7.0:
17682 | 6706 |     dependencies:
17683 | 6707 |       chalk: 4.1.2
17684 | 6708 |       diff-sequences: 29.6.3
17685 | 6709 |       jest-get-type: 29.6.3
17686 | 6710 |       pretty-format: 29.7.0
17687 | 6711 | 
17688 | 6712 |   jest-docblock@29.7.0:
17689 | 6713 |     dependencies:
17690 | 6714 |       detect-newline: 3.1.0
17691 | 6715 | 
17692 | 6716 |   jest-each@29.7.0:
17693 | 6717 |     dependencies:
17694 | 6718 |       '@jest/types': 29.6.3
17695 | 6719 |       chalk: 4.1.2
17696 | 6720 |       jest-get-type: 29.6.3
17697 | 6721 |       jest-util: 29.7.0
17698 | 6722 |       pretty-format: 29.7.0
17699 | 6723 | 
17700 | 6724 |   jest-environment-node@29.7.0:
17701 | 6725 |     dependencies:
17702 | 6726 |       '@jest/environment': 29.7.0
17703 | 6727 |       '@jest/fake-timers': 29.7.0
17704 | 6728 |       '@jest/types': 29.6.3
17705 | 6729 |       '@types/node': 20.17.12
17706 | 6730 |       jest-mock: 29.7.0
17707 | 6731 |       jest-util: 29.7.0
17708 | 6732 | 
17709 | 6733 |   jest-get-type@29.6.3: {}
17710 | 6734 | 
17711 | 6735 |   jest-haste-map@29.7.0:
17712 | 6736 |     dependencies:
17713 | 6737 |       '@jest/types': 29.6.3
17714 | 6738 |       '@types/graceful-fs': 4.1.9
17715 | 6739 |       '@types/node': 20.17.12
17716 | 6740 |       anymatch: 3.1.3
17717 | 6741 |       fb-watchman: 2.0.2
17718 | 6742 |       graceful-fs: 4.2.11
17719 | 6743 |       jest-regex-util: 29.6.3
17720 | 6744 |       jest-util: 29.7.0
17721 | 6745 |       jest-worker: 29.7.0
17722 | 6746 |       micromatch: 4.0.8
17723 | 6747 |       walker: 1.0.8
17724 | 6748 |     optionalDependencies:
17725 | 6749 |       fsevents: 2.3.3
17726 | 6750 | 
17727 | 6751 |   jest-leak-detector@29.7.0:
17728 | 6752 |     dependencies:
17729 | 6753 |       jest-get-type: 29.6.3
17730 | 6754 |       pretty-format: 29.7.0
17731 | 6755 | 
17732 | 6756 |   jest-matcher-utils@29.7.0:
17733 | 6757 |     dependencies:
17734 | 6758 |       chalk: 4.1.2
17735 | 6759 |       jest-diff: 29.7.0
17736 | 6760 |       jest-get-type: 29.6.3
17737 | 6761 |       pretty-format: 29.7.0
17738 | 6762 | 
17739 | 6763 |   jest-message-util@29.7.0:
17740 | 6764 |     dependencies:
17741 | 6765 |       '@babel/code-frame': 7.26.2
17742 | 6766 |       '@jest/types': 29.6.3
17743 | 6767 |       '@types/stack-utils': 2.0.3
17744 | 6768 |       chalk: 4.1.2
17745 | 6769 |       graceful-fs: 4.2.11
17746 | 6770 |       micromatch: 4.0.8
17747 | 6771 |       pretty-format: 29.7.0
17748 | 6772 |       slash: 3.0.0
17749 | 6773 |       stack-utils: 2.0.6
17750 | 6774 | 
17751 | 6775 |   jest-mock@29.7.0:
17752 | 6776 |     dependencies:
17753 | 6777 |       '@jest/types': 29.6.3
17754 | 6778 |       '@types/node': 20.17.12
17755 | 6779 |       jest-util: 29.7.0
17756 | 6780 | 
17757 | 6781 |   jest-pnp-resolver@1.2.3(jest-resolve@29.7.0):
17758 | 6782 |     optionalDependencies:
17759 | 6783 |       jest-resolve: 29.7.0
17760 | 6784 | 
17761 | 6785 |   jest-regex-util@29.6.3: {}
17762 | 6786 | 
17763 | 6787 |   jest-resolve-dependencies@29.7.0:
17764 | 6788 |     dependencies:
17765 | 6789 |       jest-regex-util: 29.6.3
17766 | 6790 |       jest-snapshot: 29.7.0
17767 | 6791 |     transitivePeerDependencies:
17768 | 6792 |       - supports-color
17769 | 6793 | 
17770 | 6794 |   jest-resolve@29.7.0:
17771 | 6795 |     dependencies:
17772 | 6796 |       chalk: 4.1.2
17773 | 6797 |       graceful-fs: 4.2.11
17774 | 6798 |       jest-haste-map: 29.7.0
17775 | 6799 |       jest-pnp-resolver: 1.2.3(jest-resolve@29.7.0)
17776 | 6800 |       jest-util: 29.7.0
17777 | 6801 |       jest-validate: 29.7.0
17778 | 6802 |       resolve: 1.22.10
17779 | 6803 |       resolve.exports: 2.0.3
17780 | 6804 |       slash: 3.0.0
17781 | 6805 | 
17782 | 6806 |   jest-runner@29.7.0:
17783 | 6807 |     dependencies:
17784 | 6808 |       '@jest/console': 29.7.0
17785 | 6809 |       '@jest/environment': 29.7.0
17786 | 6810 |       '@jest/test-result': 29.7.0
17787 | 6811 |       '@jest/transform': 29.7.0
17788 | 6812 |       '@jest/types': 29.6.3
17789 | 6813 |       '@types/node': 20.17.12
17790 | 6814 |       chalk: 4.1.2
17791 | 6815 |       emittery: 0.13.1
17792 | 6816 |       graceful-fs: 4.2.11
17793 | 6817 |       jest-docblock: 29.7.0
17794 | 6818 |       jest-environment-node: 29.7.0
17795 | 6819 |       jest-haste-map: 29.7.0
17796 | 6820 |       jest-leak-detector: 29.7.0
17797 | 6821 |       jest-message-util: 29.7.0
17798 | 6822 |       jest-resolve: 29.7.0
17799 | 6823 |       jest-runtime: 29.7.0
17800 | 6824 |       jest-util: 29.7.0
17801 | 6825 |       jest-watcher: 29.7.0
17802 | 6826 |       jest-worker: 29.7.0
17803 | 6827 |       p-limit: 3.1.0
17804 | 6828 |       source-map-support: 0.5.13
17805 | 6829 |     transitivePeerDependencies:
17806 | 6830 |       - supports-color
17807 | 6831 | 
17808 | 6832 |   jest-runtime@29.7.0:
17809 | 6833 |     dependencies:
17810 | 6834 |       '@jest/environment': 29.7.0
17811 | 6835 |       '@jest/fake-timers': 29.7.0
17812 | 6836 |       '@jest/globals': 29.7.0
17813 | 6837 |       '@jest/source-map': 29.6.3
17814 | 6838 |       '@jest/test-result': 29.7.0
17815 | 6839 |       '@jest/transform': 29.7.0
17816 | 6840 |       '@jest/types': 29.6.3
17817 | 6841 |       '@types/node': 20.17.12
17818 | 6842 |       chalk: 4.1.2
17819 | 6843 |       cjs-module-lexer: 1.4.1
17820 | 6844 |       collect-v8-coverage: 1.0.2
17821 | 6845 |       glob: 7.2.3
17822 | 6846 |       graceful-fs: 4.2.11
17823 | 6847 |       jest-haste-map: 29.7.0
17824 | 6848 |       jest-message-util: 29.7.0
17825 | 6849 |       jest-mock: 29.7.0
17826 | 6850 |       jest-regex-util: 29.6.3
17827 | 6851 |       jest-resolve: 29.7.0
17828 | 6852 |       jest-snapshot: 29.7.0
17829 | 6853 |       jest-util: 29.7.0
17830 | 6854 |       slash: 3.0.0
17831 | 6855 |       strip-bom: 4.0.0
17832 | 6856 |     transitivePeerDependencies:
17833 | 6857 |       - supports-color
17834 | 6858 | 
17835 | 6859 |   jest-snapshot@29.7.0:
17836 | 6860 |     dependencies:
17837 | 6861 |       '@babel/core': 7.26.0
17838 | 6862 |       '@babel/generator': 7.26.5
17839 | 6863 |       '@babel/plugin-syntax-jsx': 7.25.9(@babel/core@7.26.0)
17840 | 6864 |       '@babel/plugin-syntax-typescript': 7.25.9(@babel/core@7.26.0)
17841 | 6865 |       '@babel/types': 7.26.5
17842 | 6866 |       '@jest/expect-utils': 29.7.0
17843 | 6867 |       '@jest/transform': 29.7.0
17844 | 6868 |       '@jest/types': 29.6.3
17845 | 6869 |       babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.0)
17846 | 6870 |       chalk: 4.1.2
17847 | 6871 |       expect: 29.7.0
17848 | 6872 |       graceful-fs: 4.2.11
17849 | 6873 |       jest-diff: 29.7.0
17850 | 6874 |       jest-get-type: 29.6.3
17851 | 6875 |       jest-matcher-utils: 29.7.0
17852 | 6876 |       jest-message-util: 29.7.0
17853 | 6877 |       jest-util: 29.7.0
17854 | 6878 |       natural-compare: 1.4.0
17855 | 6879 |       pretty-format: 29.7.0
17856 | 6880 |       semver: 7.6.3
17857 | 6881 |     transitivePeerDependencies:
17858 | 6882 |       - supports-color
17859 | 6883 | 
17860 | 6884 |   jest-util@29.7.0:
17861 | 6885 |     dependencies:
17862 | 6886 |       '@jest/types': 29.6.3
17863 | 6887 |       '@types/node': 20.17.12
17864 | 6888 |       chalk: 4.1.2
17865 | 6889 |       ci-info: 3.9.0
17866 | 6890 |       graceful-fs: 4.2.11
17867 | 6891 |       picomatch: 2.3.1
17868 | 6892 | 
17869 | 6893 |   jest-validate@29.7.0:
17870 | 6894 |     dependencies:
17871 | 6895 |       '@jest/types': 29.6.3
17872 | 6896 |       camelcase: 6.3.0
17873 | 6897 |       chalk: 4.1.2
17874 | 6898 |       jest-get-type: 29.6.3
17875 | 6899 |       leven: 3.1.0
17876 | 6900 |       pretty-format: 29.7.0
17877 | 6901 | 
17878 | 6902 |   jest-watcher@29.7.0:
17879 | 6903 |     dependencies:
17880 | 6904 |       '@jest/test-result': 29.7.0
17881 | 6905 |       '@jest/types': 29.6.3
17882 | 6906 |       '@types/node': 20.17.12
17883 | 6907 |       ansi-escapes: 4.3.2
17884 | 6908 |       chalk: 4.1.2
17885 | 6909 |       emittery: 0.13.1
17886 | 6910 |       jest-util: 29.7.0
17887 | 6911 |       string-length: 4.0.2
17888 | 6912 | 
17889 | 6913 |   jest-worker@29.7.0:
17890 | 6914 |     dependencies:
17891 | 6915 |       '@types/node': 20.17.12
17892 | 6916 |       jest-util: 29.7.0
17893 | 6917 |       merge-stream: 2.0.0
17894 | 6918 |       supports-color: 8.1.1
17895 | 6919 | 
17896 | 6920 |   jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
17897 | 6921 |     dependencies:
17898 | 6922 |       '@jest/core': 29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
17899 | 6923 |       '@jest/types': 29.6.3
17900 | 6924 |       import-local: 3.2.0
17901 | 6925 |       jest-cli: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
17902 | 6926 |     transitivePeerDependencies:
17903 | 6927 |       - '@types/node'
17904 | 6928 |       - babel-plugin-macros
17905 | 6929 |       - supports-color
17906 | 6930 |       - ts-node
17907 | 6931 | 
17908 | 6932 |   jiti@1.21.7: {}
17909 | 6933 | 
17910 | 6934 |   joycon@3.1.1: {}
17911 | 6935 | 
17912 | 6936 |   js-tokens@4.0.0: {}
17913 | 6937 | 
17914 | 6938 |   js-tokens@9.0.1: {}
17915 | 6939 | 
17916 | 6940 |   js-yaml@3.14.1:
17917 | 6941 |     dependencies:
17918 | 6942 |       argparse: 1.0.10
17919 | 6943 |       esprima: 4.0.1
17920 | 6944 | 
17921 | 6945 |   js-yaml@4.1.0:
17922 | 6946 |     dependencies:
17923 | 6947 |       argparse: 2.0.1
17924 | 6948 | 
17925 | 6949 |   jsesc@3.1.0: {}
17926 | 6950 | 
17927 | 6951 |   json-buffer@3.0.1: {}
17928 | 6952 | 
17929 | 6953 |   json-parse-even-better-errors@2.3.1: {}
17930 | 6954 | 
17931 | 6955 |   json-schema-traverse@0.4.1: {}
17932 | 6956 | 
17933 | 6957 |   json-stable-stringify-without-jsonify@1.0.1: {}
17934 | 6958 | 
17935 | 6959 |   json5@2.2.3: {}
17936 | 6960 | 
17937 | 6961 |   jsonwebtoken@9.0.2:
17938 | 6962 |     dependencies:
17939 | 6963 |       jws: 3.2.2
17940 | 6964 |       lodash.includes: 4.3.0
17941 | 6965 |       lodash.isboolean: 3.0.3
17942 | 6966 |       lodash.isinteger: 4.0.4
17943 | 6967 |       lodash.isnumber: 3.0.3
17944 | 6968 |       lodash.isplainobject: 4.0.6
17945 | 6969 |       lodash.isstring: 4.0.1
17946 | 6970 |       lodash.once: 4.1.1
17947 | 6971 |       ms: 2.1.3
17948 | 6972 |       semver: 7.6.3
17949 | 6973 | 
17950 | 6974 |   jwa@1.4.1:
17951 | 6975 |     dependencies:
17952 | 6976 |       buffer-equal-constant-time: 1.0.1
17953 | 6977 |       ecdsa-sig-formatter: 1.0.11
17954 | 6978 |       safe-buffer: 5.2.1
17955 | 6979 | 
17956 | 6980 |   jws@3.2.2:
17957 | 6981 |     dependencies:
17958 | 6982 |       jwa: 1.4.1
17959 | 6983 |       safe-buffer: 5.2.1
17960 | 6984 | 
17961 | 6985 |   kdbush@4.0.2: {}
17962 | 6986 | 
17963 | 6987 |   keyv@4.5.4:
17964 | 6988 |     dependencies:
17965 | 6989 |       json-buffer: 3.0.1
17966 | 6990 | 
17967 | 6991 |   kleur@3.0.3: {}
17968 | 6992 | 
17969 | 6993 |   kuler@2.0.0: {}
17970 | 6994 | 
17971 | 6995 |   leven@3.1.0: {}
17972 | 6996 | 
17973 | 6997 |   levn@0.4.1:
17974 | 6998 |     dependencies:
17975 | 6999 |       prelude-ls: 1.2.1
17976 | 7000 |       type-check: 0.4.0
17977 | 7001 | 
17978 | 7002 |   lilconfig@3.1.3: {}
17979 | 7003 | 
17980 | 7004 |   lines-and-columns@1.2.4: {}
17981 | 7005 | 
17982 | 7006 |   load-tsconfig@0.2.5: {}
17983 | 7007 | 
17984 | 7008 |   local-pkg@0.5.1:
17985 | 7009 |     dependencies:
17986 | 7010 |       mlly: 1.7.4
17987 | 7011 |       pkg-types: 1.3.0
17988 | 7012 | 
17989 | 7013 |   locate-path@5.0.0:
17990 | 7014 |     dependencies:
17991 | 7015 |       p-locate: 4.1.0
17992 | 7016 | 
17993 | 7017 |   locate-path@6.0.0:
17994 | 7018 |     dependencies:
17995 | 7019 |       p-locate: 5.0.0
17996 | 7020 | 
17997 | 7021 |   lodash.includes@4.3.0: {}
17998 | 7022 | 
17999 | 7023 |   lodash.isboolean@3.0.3: {}
18000 | 7024 | 
18001 | 7025 |   lodash.isinteger@4.0.4: {}
18002 | 7026 | 
18003 | 7027 |   lodash.isnumber@3.0.3: {}
18004 | 7028 | 
18005 | 7029 |   lodash.isplainobject@4.0.6: {}
18006 | 7030 | 
18007 | 7031 |   lodash.isstring@4.0.1: {}
18008 | 7032 | 
18009 | 7033 |   lodash.memoize@4.1.2: {}
18010 | 7034 | 
18011 | 7035 |   lodash.merge@4.6.2: {}
18012 | 7036 | 
18013 | 7037 |   lodash.once@4.1.1: {}
18014 | 7038 | 
18015 | 7039 |   lodash.sortby@4.7.0: {}
18016 | 7040 | 
18017 | 7041 |   lodash@4.17.21: {}
18018 | 7042 | 
18019 | 7043 |   logform@2.7.0:
18020 | 7044 |     dependencies:
18021 | 7045 |       '@colors/colors': 1.6.0
18022 | 7046 |       '@types/triple-beam': 1.3.5
18023 | 7047 |       fecha: 4.2.3
18024 | 7048 |       ms: 2.1.3
18025 | 7049 |       safe-stable-stringify: 2.5.0
18026 | 7050 |       triple-beam: 1.4.1
18027 | 7051 | 
18028 | 7052 |   loose-envify@1.4.0:
18029 | 7053 |     dependencies:
18030 | 7054 |       js-tokens: 4.0.0
18031 | 7055 | 
18032 | 7056 |   loupe@2.3.7:
18033 | 7057 |     dependencies:
18034 | 7058 |       get-func-name: 2.0.2
18035 | 7059 | 
18036 | 7060 |   lru-cache@10.4.3: {}
18037 | 7061 | 
18038 | 7062 |   lru-cache@5.1.1:
18039 | 7063 |     dependencies:
18040 | 7064 |       yallist: 3.1.1
18041 | 7065 | 
18042 | 7066 |   lz-string@1.5.0: {}
18043 | 7067 | 
18044 | 7068 |   magic-string@0.30.17:
18045 | 7069 |     dependencies:
18046 | 7070 |       '@jridgewell/sourcemap-codec': 1.5.0
18047 | 7071 | 
18048 | 7072 |   magicast@0.3.5:
18049 | 7073 |     dependencies:
18050 | 7074 |       '@babel/parser': 7.26.5
18051 | 7075 |       '@babel/types': 7.26.5
18052 | 7076 |       source-map-js: 1.2.1
18053 | 7077 | 
18054 | 7078 |   make-dir@4.0.0:
18055 | 7079 |     dependencies:
18056 | 7080 |       semver: 7.6.3
18057 | 7081 | 
18058 | 7082 |   make-error@1.3.6: {}
18059 | 7083 | 
18060 | 7084 |   makeerror@1.0.12:
18061 | 7085 |     dependencies:
18062 | 7086 |       tmpl: 1.0.5
18063 | 7087 | 
18064 | 7088 |   math-intrinsics@1.1.0: {}
18065 | 7089 | 
18066 | 7090 |   media-typer@0.3.0: {}
18067 | 7091 | 
18068 | 7092 |   merge-descriptors@1.0.3: {}
18069 | 7093 | 
18070 | 7094 |   merge-stream@2.0.0: {}
18071 | 7095 | 
18072 | 7096 |   merge2@1.4.1: {}
18073 | 7097 | 
18074 | 7098 |   methods@1.1.2: {}
18075 | 7099 | 
18076 | 7100 |   micromatch@4.0.8:
18077 | 7101 |     dependencies:
18078 | 7102 |       braces: 3.0.3
18079 | 7103 |       picomatch: 2.3.1
18080 | 7104 | 
18081 | 7105 |   mime-db@1.52.0: {}
18082 | 7106 | 
18083 | 7107 |   mime-types@2.1.35:
18084 | 7108 |     dependencies:
18085 | 7109 |       mime-db: 1.52.0
18086 | 7110 | 
18087 | 7111 |   mime@1.6.0: {}
18088 | 7112 | 
18089 | 7113 |   mime@2.6.0: {}
18090 | 7114 | 
18091 | 7115 |   mimic-fn@2.1.0: {}
18092 | 7116 | 
18093 | 7117 |   mimic-fn@4.0.0: {}
18094 | 7118 | 
18095 | 7119 |   min-indent@1.0.1: {}
18096 | 7120 | 
18097 | 7121 |   minimatch@3.1.2:
18098 | 7122 |     dependencies:
18099 | 7123 |       brace-expansion: 1.1.11
18100 | 7124 | 
18101 | 7125 |   minimatch@5.1.6:
18102 | 7126 |     dependencies:
18103 | 7127 |       brace-expansion: 2.0.1
18104 | 7128 | 
18105 | 7129 |   minimatch@9.0.3:
18106 | 7130 |     dependencies:
18107 | 7131 |       brace-expansion: 2.0.1
18108 | 7132 | 
18109 | 7133 |   minimatch@9.0.5:
18110 | 7134 |     dependencies:
18111 | 7135 |       brace-expansion: 2.0.1
18112 | 7136 | 
18113 | 7137 |   minimist@1.2.8: {}
18114 | 7138 | 
18115 | 7139 |   minipass@7.1.2: {}
18116 | 7140 | 
18117 | 7141 |   mkdirp@0.5.6:
18118 | 7142 |     dependencies:
18119 | 7143 |       minimist: 1.2.8
18120 | 7144 | 
18121 | 7145 |   mlly@1.7.4:
18122 | 7146 |     dependencies:
18123 | 7147 |       acorn: 8.14.0
18124 | 7148 |       pathe: 2.0.1
18125 | 7149 |       pkg-types: 1.3.0
18126 | 7150 |       ufo: 1.5.4
18127 | 7151 | 
18128 | 7152 |   morgan@1.10.0:
18129 | 7153 |     dependencies:
18130 | 7154 |       basic-auth: 2.0.1
18131 | 7155 |       debug: 2.6.9
18132 | 7156 |       depd: 2.0.0
18133 | 7157 |       on-finished: 2.3.0
18134 | 7158 |       on-headers: 1.0.2
18135 | 7159 |     transitivePeerDependencies:
18136 | 7160 |       - supports-color
18137 | 7161 | 
18138 | 7162 |   ms@2.0.0: {}
18139 | 7163 | 
18140 | 7164 |   ms@2.1.3: {}
18141 | 7165 | 
18142 | 7166 |   multer@1.4.5-lts.1:
18143 | 7167 |     dependencies:
18144 | 7168 |       append-field: 1.0.0
18145 | 7169 |       busboy: 1.6.0
18146 | 7170 |       concat-stream: 1.6.2
18147 | 7171 |       mkdirp: 0.5.6
18148 | 7172 |       object-assign: 4.1.1
18149 | 7173 |       type-is: 1.6.18
18150 | 7174 |       xtend: 4.0.2
18151 | 7175 | 
18152 | 7176 |   mz@2.7.0:
18153 | 7177 |     dependencies:
18154 | 7178 |       any-promise: 1.3.0
18155 | 7179 |       object-assign: 4.1.1
18156 | 7180 |       thenify-all: 1.6.0
18157 | 7181 | 
18158 | 7182 |   nanoid@3.3.8: {}
18159 | 7183 | 
18160 | 7184 |   natural-compare@1.4.0: {}
18161 | 7185 | 
18162 | 7186 |   negotiator@0.6.3: {}
18163 | 7187 | 
18164 | 7188 |   node-int64@0.4.0: {}
18165 | 7189 | 
18166 | 7190 |   node-releases@2.0.19: {}
18167 | 7191 | 
18168 | 7192 |   nodemailer@6.9.16: {}
18169 | 7193 | 
18170 | 7194 |   normalize-path@3.0.0: {}
18171 | 7195 | 
18172 | 7196 |   normalize-range@0.1.2: {}
18173 | 7197 | 
18174 | 7198 |   npm-run-path@4.0.1:
18175 | 7199 |     dependencies:
18176 | 7200 |       path-key: 3.1.1
18177 | 7201 | 
18178 | 7202 |   npm-run-path@5.3.0:
18179 | 7203 |     dependencies:
18180 | 7204 |       path-key: 4.0.0
18181 | 7205 | 
18182 | 7206 |   object-assign@4.1.1: {}
18183 | 7207 | 
18184 | 7208 |   object-hash@3.0.0: {}
18185 | 7209 | 
18186 | 7210 |   object-inspect@1.13.3: {}
18187 | 7211 | 
18188 | 7212 |   object-is@1.1.6:
18189 | 7213 |     dependencies:
18190 | 7214 |       call-bind: 1.0.8
18191 | 7215 |       define-properties: 1.2.1
18192 | 7216 | 
18193 | 7217 |   object-keys@1.1.1: {}
18194 | 7218 | 
18195 | 7219 |   object.assign@4.1.7:
18196 | 7220 |     dependencies:
18197 | 7221 |       call-bind: 1.0.8
18198 | 7222 |       call-bound: 1.0.3
18199 | 7223 |       define-properties: 1.2.1
18200 | 7224 |       es-object-atoms: 1.0.0
18201 | 7225 |       has-symbols: 1.1.0
18202 | 7226 |       object-keys: 1.1.1
18203 | 7227 | 
18204 | 7228 |   on-finished@2.3.0:
18205 | 7229 |     dependencies:
18206 | 7230 |       ee-first: 1.1.1
18207 | 7231 | 
18208 | 7232 |   on-finished@2.4.1:
18209 | 7233 |     dependencies:
18210 | 7234 |       ee-first: 1.1.1
18211 | 7235 | 
18212 | 7236 |   on-headers@1.0.2: {}
18213 | 7237 | 
18214 | 7238 |   once@1.4.0:
18215 | 7239 |     dependencies:
18216 | 7240 |       wrappy: 1.0.2
18217 | 7241 | 
18218 | 7242 |   one-time@1.0.0:
18219 | 7243 |     dependencies:
18220 | 7244 |       fn.name: 1.1.0
18221 | 7245 | 
18222 | 7246 |   onetime@5.1.2:
18223 | 7247 |     dependencies:
18224 | 7248 |       mimic-fn: 2.1.0
18225 | 7249 | 
18226 | 7250 |   onetime@6.0.0:
18227 | 7251 |     dependencies:
18228 | 7252 |       mimic-fn: 4.0.0
18229 | 7253 | 
18230 | 7254 |   optionator@0.9.4:
18231 | 7255 |     dependencies:
18232 | 7256 |       deep-is: 0.1.4
18233 | 7257 |       fast-levenshtein: 2.0.6
18234 | 7258 |       levn: 0.4.1
18235 | 7259 |       prelude-ls: 1.2.1
18236 | 7260 |       type-check: 0.4.0
18237 | 7261 |       word-wrap: 1.2.5
18238 | 7262 | 
18239 | 7263 |   p-limit@2.3.0:
18240 | 7264 |     dependencies:
18241 | 7265 |       p-try: 2.2.0
18242 | 7266 | 
18243 | 7267 |   p-limit@3.1.0:
18244 | 7268 |     dependencies:
18245 | 7269 |       yocto-queue: 0.1.0
18246 | 7270 | 
18247 | 7271 |   p-limit@5.0.0:
18248 | 7272 |     dependencies:
18249 | 7273 |       yocto-queue: 1.1.1
18250 | 7274 | 
18251 | 7275 |   p-locate@4.1.0:
18252 | 7276 |     dependencies:
18253 | 7277 |       p-limit: 2.3.0
18254 | 7278 | 
18255 | 7279 |   p-locate@5.0.0:
18256 | 7280 |     dependencies:
18257 | 7281 |       p-limit: 3.1.0
18258 | 7282 | 
18259 | 7283 |   p-try@2.2.0: {}
18260 | 7284 | 
18261 | 7285 |   package-json-from-dist@1.0.1: {}
18262 | 7286 | 
18263 | 7287 |   parent-module@1.0.1:
18264 | 7288 |     dependencies:
18265 | 7289 |       callsites: 3.1.0
18266 | 7290 | 
18267 | 7291 |   parse-json@5.2.0:
18268 | 7292 |     dependencies:
18269 | 7293 |       '@babel/code-frame': 7.26.2
18270 | 7294 |       error-ex: 1.3.2
18271 | 7295 |       json-parse-even-better-errors: 2.3.1
18272 | 7296 |       lines-and-columns: 1.2.4
18273 | 7297 | 
18274 | 7298 |   parseurl@1.3.3: {}
18275 | 7299 | 
18276 | 7300 |   path-exists@4.0.0: {}
18277 | 7301 | 
18278 | 7302 |   path-is-absolute@1.0.1: {}
18279 | 7303 | 
18280 | 7304 |   path-key@3.1.1: {}
18281 | 7305 | 
18282 | 7306 |   path-key@4.0.0: {}
18283 | 7307 | 
18284 | 7308 |   path-parse@1.0.7: {}
18285 | 7309 | 
18286 | 7310 |   path-scurry@1.11.1:
18287 | 7311 |     dependencies:
18288 | 7312 |       lru-cache: 10.4.3
18289 | 7313 |       minipass: 7.1.2
18290 | 7314 | 
18291 | 7315 |   path-to-regexp@0.1.12: {}
18292 | 7316 | 
18293 | 7317 |   path-type@4.0.0: {}
18294 | 7318 | 
18295 | 7319 |   pathe@1.1.2: {}
18296 | 7320 | 
18297 | 7321 |   pathe@2.0.1: {}
18298 | 7322 | 
18299 | 7323 |   pathval@1.1.1: {}
18300 | 7324 | 
18301 | 7325 |   picocolors@1.1.1: {}
18302 | 7326 | 
18303 | 7327 |   picomatch@2.3.1: {}
18304 | 7328 | 
18305 | 7329 |   picomatch@4.0.2: {}
18306 | 7330 | 
18307 | 7331 |   pify@2.3.0: {}
18308 | 7332 | 
18309 | 7333 |   pirates@4.0.6: {}
18310 | 7334 | 
18311 | 7335 |   pkg-dir@4.2.0:
18312 | 7336 |     dependencies:
18313 | 7337 |       find-up: 4.1.0
18314 | 7338 | 
18315 | 7339 |   pkg-types@1.3.0:
18316 | 7340 |     dependencies:
18317 | 7341 |       confbox: 0.1.8
18318 | 7342 |       mlly: 1.7.4
18319 | 7343 |       pathe: 1.1.2
18320 | 7344 | 
18321 | 7345 |   possible-typed-array-names@1.0.0: {}
18322 | 7346 | 
18323 | 7347 |   postcss-import@15.1.0(postcss@8.4.49):
18324 | 7348 |     dependencies:
18325 | 7349 |       postcss: 8.4.49
18326 | 7350 |       postcss-value-parser: 4.2.0
18327 | 7351 |       read-cache: 1.0.0
18328 | 7352 |       resolve: 1.22.10
18329 | 7353 | 
18330 | 7354 |   postcss-js@4.0.1(postcss@8.4.49):
18331 | 7355 |     dependencies:
18332 | 7356 |       camelcase-css: 2.0.1
18333 | 7357 |       postcss: 8.4.49
18334 | 7358 | 
18335 | 7359 |   postcss-load-config@4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
18336 | 7360 |     dependencies:
18337 | 7361 |       lilconfig: 3.1.3
18338 | 7362 |       yaml: 2.7.0
18339 | 7363 |     optionalDependencies:
18340 | 7364 |       postcss: 8.4.49
18341 | 7365 |       ts-node: 10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)
18342 | 7366 | 
18343 | 7367 |   postcss-load-config@6.0.1(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.7.0):
18344 | 7368 |     dependencies:
18345 | 7369 |       lilconfig: 3.1.3
18346 | 7370 |     optionalDependencies:
18347 | 7371 |       jiti: 1.21.7
18348 | 7372 |       postcss: 8.4.49
18349 | 7373 |       tsx: 4.19.2
18350 | 7374 |       yaml: 2.7.0
18351 | 7375 | 
18352 | 7376 |   postcss-nested@6.2.0(postcss@8.4.49):
18353 | 7377 |     dependencies:
18354 | 7378 |       postcss: 8.4.49
18355 | 7379 |       postcss-selector-parser: 6.1.2
18356 | 7380 | 
18357 | 7381 |   postcss-selector-parser@6.1.2:
18358 | 7382 |     dependencies:
18359 | 7383 |       cssesc: 3.0.0
18360 | 7384 |       util-deprecate: 1.0.2
18361 | 7385 | 
18362 | 7386 |   postcss-value-parser@4.2.0: {}
18363 | 7387 | 
18364 | 7388 |   postcss@8.4.49:
18365 | 7389 |     dependencies:
18366 | 7390 |       nanoid: 3.3.8
18367 | 7391 |       picocolors: 1.1.1
18368 | 7392 |       source-map-js: 1.2.1
18369 | 7393 | 
18370 | 7394 |   prelude-ls@1.2.1: {}
18371 | 7395 | 
18372 | 7396 |   prettier@3.4.2: {}
18373 | 7397 | 
18374 | 7398 |   pretty-format@27.5.1:
18375 | 7399 |     dependencies:
18376 | 7400 |       ansi-regex: 5.0.1
18377 | 7401 |       ansi-styles: 5.2.0
18378 | 7402 |       react-is: 17.0.2
18379 | 7403 | 
18380 | 7404 |   pretty-format@29.7.0:
18381 | 7405 |     dependencies:
18382 | 7406 |       '@jest/schemas': 29.6.3
18383 | 7407 |       ansi-styles: 5.2.0
18384 | 7408 |       react-is: 18.3.1
18385 | 7409 | 
18386 | 7410 |   prisma@5.22.0:
18387 | 7411 |     dependencies:
18388 | 7412 |       '@prisma/engines': 5.22.0
18389 | 7413 |     optionalDependencies:
18390 | 7414 |       fsevents: 2.3.3
18391 | 7415 | 
18392 | 7416 |   process-nextick-args@2.0.1: {}
18393 | 7417 | 
18394 | 7418 |   prompts@2.4.2:
18395 | 7419 |     dependencies:
18396 | 7420 |       kleur: 3.0.3
18397 | 7421 |       sisteransi: 1.0.5
18398 | 7422 | 
18399 | 7423 |   prop-types@15.8.1:
18400 | 7424 |     dependencies:
18401 | 7425 |       loose-envify: 1.4.0
18402 | 7426 |       object-assign: 4.1.1
18403 | 7427 |       react-is: 16.13.1
18404 | 7428 | 
18405 | 7429 |   proxy-addr@2.0.7:
18406 | 7430 |     dependencies:
18407 | 7431 |       forwarded: 0.2.0
18408 | 7432 |       ipaddr.js: 1.9.1
18409 | 7433 | 
18410 | 7434 |   proxy-from-env@1.1.0: {}
18411 | 7435 | 
18412 | 7436 |   punycode@2.3.1: {}
18413 | 7437 | 
18414 | 7438 |   pure-rand@6.1.0: {}
18415 | 7439 | 
18416 | 7440 |   qs@6.13.0:
18417 | 7441 |     dependencies:
18418 | 7442 |       side-channel: 1.1.0
18419 | 7443 | 
18420 | 7444 |   queue-microtask@1.2.3: {}
18421 | 7445 | 
18422 | 7446 |   range-parser@1.2.1: {}
18423 | 7447 | 
18424 | 7448 |   raw-body@2.5.2:
18425 | 7449 |     dependencies:
18426 | 7450 |       bytes: 3.1.2
18427 | 7451 |       http-errors: 2.0.0
18428 | 7452 |       iconv-lite: 0.4.24
18429 | 7453 |       unpipe: 1.0.0
18430 | 7454 | 
18431 | 7455 |   react-dom@18.3.1(react@18.3.1):
18432 | 7456 |     dependencies:
18433 | 7457 |       loose-envify: 1.4.0
18434 | 7458 |       react: 18.3.1
18435 | 7459 |       scheduler: 0.23.2
18436 | 7460 | 
18437 | 7461 |   react-is@16.13.1: {}
18438 | 7462 | 
18439 | 7463 |   react-is@17.0.2: {}
18440 | 7464 | 
18441 | 7465 |   react-is@18.3.1: {}
18442 | 7466 | 
18443 | 7467 |   react-refresh@0.14.2: {}
18444 | 7468 | 
18445 | 7469 |   react-router-dom@6.28.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
18446 | 7470 |     dependencies:
18447 | 7471 |       '@remix-run/router': 1.21.0
18448 | 7472 |       react: 18.3.1
18449 | 7473 |       react-dom: 18.3.1(react@18.3.1)
18450 | 7474 |       react-router: 6.28.1(react@18.3.1)
18451 | 7475 | 
18452 | 7476 |   react-router@6.28.1(react@18.3.1):
18453 | 7477 |     dependencies:
18454 | 7478 |       '@remix-run/router': 1.21.0
18455 | 7479 |       react: 18.3.1
18456 | 7480 | 
18457 | 7481 |   react-transition-group@4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
18458 | 7482 |     dependencies:
18459 | 7483 |       '@babel/runtime': 7.26.0
18460 | 7484 |       dom-helpers: 5.2.1
18461 | 7485 |       loose-envify: 1.4.0
18462 | 7486 |       prop-types: 15.8.1
18463 | 7487 |       react: 18.3.1
18464 | 7488 |       react-dom: 18.3.1(react@18.3.1)
18465 | 7489 | 
18466 | 7490 |   react@18.3.1:
18467 | 7491 |     dependencies:
18468 | 7492 |       loose-envify: 1.4.0
18469 | 7493 | 
18470 | 7494 |   read-cache@1.0.0:
18471 | 7495 |     dependencies:
18472 | 7496 |       pify: 2.3.0
18473 | 7497 | 
18474 | 7498 |   readable-stream@2.3.8:
18475 | 7499 |     dependencies:
18476 | 7500 |       core-util-is: 1.0.3
18477 | 7501 |       inherits: 2.0.4
18478 | 7502 |       isarray: 1.0.0
18479 | 7503 |       process-nextick-args: 2.0.1
18480 | 7504 |       safe-buffer: 5.1.2
18481 | 7505 |       string_decoder: 1.1.1
18482 | 7506 |       util-deprecate: 1.0.2
18483 | 7507 | 
18484 | 7508 |   readable-stream@3.6.2:
18485 | 7509 |     dependencies:
18486 | 7510 |       inherits: 2.0.4
18487 | 7511 |       string_decoder: 1.1.1
18488 | 7512 |       util-deprecate: 1.0.2
18489 | 7513 | 
18490 | 7514 |   readdirp@3.6.0:
18491 | 7515 |     dependencies:
18492 | 7516 |       picomatch: 2.3.1
18493 | 7517 | 
18494 | 7518 |   readdirp@4.1.1: {}
18495 | 7519 | 
18496 | 7520 |   redent@3.0.0:
18497 | 7521 |     dependencies:
18498 | 7522 |       indent-string: 4.0.0
18499 | 7523 |       strip-indent: 3.0.0
18500 | 7524 | 
18501 | 7525 |   regenerator-runtime@0.14.1: {}
18502 | 7526 | 
18503 | 7527 |   regexp.prototype.flags@1.5.4:
18504 | 7528 |     dependencies:
18505 | 7529 |       call-bind: 1.0.8
18506 | 7530 |       define-properties: 1.2.1
18507 | 7531 |       es-errors: 1.3.0
18508 | 7532 |       get-proto: 1.0.1
18509 | 7533 |       gopd: 1.2.0
18510 | 7534 |       set-function-name: 2.0.2
18511 | 7535 | 
18512 | 7536 |   require-directory@2.1.1: {}
18513 | 7537 | 
18514 | 7538 |   resolve-cwd@3.0.0:
18515 | 7539 |     dependencies:
18516 | 7540 |       resolve-from: 5.0.0
18517 | 7541 | 
18518 | 7542 |   resolve-from@4.0.0: {}
18519 | 7543 | 
18520 | 7544 |   resolve-from@5.0.0: {}
18521 | 7545 | 
18522 | 7546 |   resolve-pkg-maps@1.0.0: {}
18523 | 7547 | 
18524 | 7548 |   resolve.exports@2.0.3: {}
18525 | 7549 | 
18526 | 7550 |   resolve@1.22.10:
18527 | 7551 |     dependencies:
18528 | 7552 |       is-core-module: 2.16.1
18529 | 7553 |       path-parse: 1.0.7
18530 | 7554 |       supports-preserve-symlinks-flag: 1.0.0
18531 | 7555 | 
18532 | 7556 |   reusify@1.0.4: {}
18533 | 7557 | 
18534 | 7558 |   rimraf@3.0.2:
18535 | 7559 |     dependencies:
18536 | 7560 |       glob: 7.2.3
18537 | 7561 | 
18538 | 7562 |   rollup@4.30.1:
18539 | 7563 |     dependencies:
18540 | 7564 |       '@types/estree': 1.0.6
18541 | 7565 |     optionalDependencies:
18542 | 7566 |       '@rollup/rollup-android-arm-eabi': 4.30.1
18543 | 7567 |       '@rollup/rollup-android-arm64': 4.30.1
18544 | 7568 |       '@rollup/rollup-darwin-arm64': 4.30.1
18545 | 7569 |       '@rollup/rollup-darwin-x64': 4.30.1
18546 | 7570 |       '@rollup/rollup-freebsd-arm64': 4.30.1
18547 | 7571 |       '@rollup/rollup-freebsd-x64': 4.30.1
18548 | 7572 |       '@rollup/rollup-linux-arm-gnueabihf': 4.30.1
18549 | 7573 |       '@rollup/rollup-linux-arm-musleabihf': 4.30.1
18550 | 7574 |       '@rollup/rollup-linux-arm64-gnu': 4.30.1
18551 | 7575 |       '@rollup/rollup-linux-arm64-musl': 4.30.1
18552 | 7576 |       '@rollup/rollup-linux-loongarch64-gnu': 4.30.1
18553 | 7577 |       '@rollup/rollup-linux-powerpc64le-gnu': 4.30.1
18554 | 7578 |       '@rollup/rollup-linux-riscv64-gnu': 4.30.1
18555 | 7579 |       '@rollup/rollup-linux-s390x-gnu': 4.30.1
18556 | 7580 |       '@rollup/rollup-linux-x64-gnu': 4.30.1
18557 | 7581 |       '@rollup/rollup-linux-x64-musl': 4.30.1
18558 | 7582 |       '@rollup/rollup-win32-arm64-msvc': 4.30.1
18559 | 7583 |       '@rollup/rollup-win32-ia32-msvc': 4.30.1
18560 | 7584 |       '@rollup/rollup-win32-x64-msvc': 4.30.1
18561 | 7585 |       fsevents: 2.3.3
18562 | 7586 | 
18563 | 7587 |   run-parallel@1.2.0:
18564 | 7588 |     dependencies:
18565 | 7589 |       queue-microtask: 1.2.3
18566 | 7590 | 
18567 | 7591 |   safe-buffer@5.1.2: {}
18568 | 7592 | 
18569 | 7593 |   safe-buffer@5.2.1: {}
18570 | 7594 | 
18571 | 7595 |   safe-regex-test@1.1.0:
18572 | 7596 |     dependencies:
18573 | 7597 |       call-bound: 1.0.3
18574 | 7598 |       es-errors: 1.3.0
18575 | 7599 |       is-regex: 1.2.1
18576 | 7600 | 
18577 | 7601 |   safe-stable-stringify@2.5.0: {}
18578 | 7602 | 
18579 | 7603 |   safer-buffer@2.1.2: {}
18580 | 7604 | 
18581 | 7605 |   scheduler@0.23.2:
18582 | 7606 |     dependencies:
18583 | 7607 |       loose-envify: 1.4.0
18584 | 7608 | 
18585 | 7609 |   semver@6.3.1: {}
18586 | 7610 | 
18587 | 7611 |   semver@7.6.3: {}
18588 | 7612 | 
18589 | 7613 |   send@0.19.0:
18590 | 7614 |     dependencies:
18591 | 7615 |       debug: 2.6.9
18592 | 7616 |       depd: 2.0.0
18593 | 7617 |       destroy: 1.2.0
18594 | 7618 |       encodeurl: 1.0.2
18595 | 7619 |       escape-html: 1.0.3
18596 | 7620 |       etag: 1.8.1
18597 | 7621 |       fresh: 0.5.2
18598 | 7622 |       http-errors: 2.0.0
18599 | 7623 |       mime: 1.6.0
18600 | 7624 |       ms: 2.1.3
18601 | 7625 |       on-finished: 2.4.1
18602 | 7626 |       range-parser: 1.2.1
18603 | 7627 |       statuses: 2.0.1
18604 | 7628 |     transitivePeerDependencies:
18605 | 7629 |       - supports-color
18606 | 7630 | 
18607 | 7631 |   serve-static@1.16.2:
18608 | 7632 |     dependencies:
18609 | 7633 |       encodeurl: 2.0.0
18610 | 7634 |       escape-html: 1.0.3
18611 | 7635 |       parseurl: 1.3.3
18612 | 7636 |       send: 0.19.0
18613 | 7637 |     transitivePeerDependencies:
18614 | 7638 |       - supports-color
18615 | 7639 | 
18616 | 7640 |   set-function-length@1.2.2:
18617 | 7641 |     dependencies:
18618 | 7642 |       define-data-property: 1.1.4
18619 | 7643 |       es-errors: 1.3.0
18620 | 7644 |       function-bind: 1.1.2
18621 | 7645 |       get-intrinsic: 1.2.7
18622 | 7646 |       gopd: 1.2.0
18623 | 7647 |       has-property-descriptors: 1.0.2
18624 | 7648 | 
18625 | 7649 |   set-function-name@2.0.2:
18626 | 7650 |     dependencies:
18627 | 7651 |       define-data-property: 1.1.4
18628 | 7652 |       es-errors: 1.3.0
18629 | 7653 |       functions-have-names: 1.2.3
18630 | 7654 |       has-property-descriptors: 1.0.2
18631 | 7655 | 
18632 | 7656 |   setprototypeof@1.2.0: {}
18633 | 7657 | 
18634 | 7658 |   shebang-command@2.0.0:
18635 | 7659 |     dependencies:
18636 | 7660 |       shebang-regex: 3.0.0
18637 | 7661 | 
18638 | 7662 |   shebang-regex@3.0.0: {}
18639 | 7663 | 
18640 | 7664 |   side-channel-list@1.0.0:
18641 | 7665 |     dependencies:
18642 | 7666 |       es-errors: 1.3.0
18643 | 7667 |       object-inspect: 1.13.3
18644 | 7668 | 
18645 | 7669 |   side-channel-map@1.0.1:
18646 | 7670 |     dependencies:
18647 | 7671 |       call-bound: 1.0.3
18648 | 7672 |       es-errors: 1.3.0
18649 | 7673 |       get-intrinsic: 1.2.7
18650 | 7674 |       object-inspect: 1.13.3
18651 | 7675 | 
18652 | 7676 |   side-channel-weakmap@1.0.2:
18653 | 7677 |     dependencies:
18654 | 7678 |       call-bound: 1.0.3
18655 | 7679 |       es-errors: 1.3.0
18656 | 7680 |       get-intrinsic: 1.2.7
18657 | 7681 |       object-inspect: 1.13.3
18658 | 7682 |       side-channel-map: 1.0.1
18659 | 7683 | 
18660 | 7684 |   side-channel@1.1.0:
18661 | 7685 |     dependencies:
18662 | 7686 |       es-errors: 1.3.0
18663 | 7687 |       object-inspect: 1.13.3
18664 | 7688 |       side-channel-list: 1.0.0
18665 | 7689 |       side-channel-map: 1.0.1
18666 | 7690 |       side-channel-weakmap: 1.0.2
18667 | 7691 | 
18668 | 7692 |   siginfo@2.0.0: {}
18669 | 7693 | 
18670 | 7694 |   signal-exit@3.0.7: {}
18671 | 7695 | 
18672 | 7696 |   signal-exit@4.1.0: {}
18673 | 7697 | 
18674 | 7698 |   simple-swizzle@0.2.2:
18675 | 7699 |     dependencies:
18676 | 7700 |       is-arrayish: 0.3.2
18677 | 7701 | 
18678 | 7702 |   sisteransi@1.0.5: {}
18679 | 7703 | 
18680 | 7704 |   slash@3.0.0: {}
18681 | 7705 | 
18682 | 7706 |   source-map-js@1.2.1: {}
18683 | 7707 | 
18684 | 7708 |   source-map-support@0.5.13:
18685 | 7709 |     dependencies:
18686 | 7710 |       buffer-from: 1.1.2
18687 | 7711 |       source-map: 0.6.1
18688 | 7712 | 
18689 | 7713 |   source-map@0.6.1: {}
18690 | 7714 | 
18691 | 7715 |   source-map@0.8.0-beta.0:
18692 | 7716 |     dependencies:
18693 | 7717 |       whatwg-url: 7.1.0
18694 | 7718 | 
18695 | 7719 |   sprintf-js@1.0.3: {}
18696 | 7720 | 
18697 | 7721 |   stack-trace@0.0.10: {}
18698 | 7722 | 
18699 | 7723 |   stack-utils@2.0.6:
18700 | 7724 |     dependencies:
18701 | 7725 |       escape-string-regexp: 2.0.0
18702 | 7726 | 
18703 | 7727 |   stackback@0.0.2: {}
18704 | 7728 | 
18705 | 7729 |   statuses@2.0.1: {}
18706 | 7730 | 
18707 | 7731 |   std-env@3.8.0: {}
18708 | 7732 | 
18709 | 7733 |   stop-iteration-iterator@1.1.0:
18710 | 7734 |     dependencies:
18711 | 7735 |       es-errors: 1.3.0
18712 | 7736 |       internal-slot: 1.1.0
18713 | 7737 | 
18714 | 7738 |   streamsearch@1.1.0: {}
18715 | 7739 | 
18716 | 7740 |   string-length@4.0.2:
18717 | 7741 |     dependencies:
18718 | 7742 |       char-regex: 1.0.2
18719 | 7743 |       strip-ansi: 6.0.1
18720 | 7744 | 
18721 | 7745 |   string-width@4.2.3:
18722 | 7746 |     dependencies:
18723 | 7747 |       emoji-regex: 8.0.0
18724 | 7748 |       is-fullwidth-code-point: 3.0.0
18725 | 7749 |       strip-ansi: 6.0.1
18726 | 7750 | 
18727 | 7751 |   string-width@5.1.2:
18728 | 7752 |     dependencies:
18729 | 7753 |       eastasianwidth: 0.2.0
18730 | 7754 |       emoji-regex: 9.2.2
18731 | 7755 |       strip-ansi: 7.1.0
18732 | 7756 | 
18733 | 7757 |   string_decoder@1.1.1:
18734 | 7758 |     dependencies:
18735 | 7759 |       safe-buffer: 5.1.2
18736 | 7760 | 
18737 | 7761 |   strip-ansi@6.0.1:
18738 | 7762 |     dependencies:
18739 | 7763 |       ansi-regex: 5.0.1
18740 | 7764 | 
18741 | 7765 |   strip-ansi@7.1.0:
18742 | 7766 |     dependencies:
18743 | 7767 |       ansi-regex: 6.1.0
18744 | 7768 | 
18745 | 7769 |   strip-bom@4.0.0: {}
18746 | 7770 | 
18747 | 7771 |   strip-final-newline@2.0.0: {}
18748 | 7772 | 
18749 | 7773 |   strip-final-newline@3.0.0: {}
18750 | 7774 | 
18751 | 7775 |   strip-indent@3.0.0:
18752 | 7776 |     dependencies:
18753 | 7777 |       min-indent: 1.0.1
18754 | 7778 | 
18755 | 7779 |   strip-json-comments@3.1.1: {}
18756 | 7780 | 
18757 | 7781 |   strip-literal@2.1.1:
18758 | 7782 |     dependencies:
18759 | 7783 |       js-tokens: 9.0.1
18760 | 7784 | 
18761 | 7785 |   sucrase@3.35.0:
18762 | 7786 |     dependencies:
18763 | 7787 |       '@jridgewell/gen-mapping': 0.3.8
18764 | 7788 |       commander: 4.1.1
18765 | 7789 |       glob: 10.4.5
18766 | 7790 |       lines-and-columns: 1.2.4
18767 | 7791 |       mz: 2.7.0
18768 | 7792 |       pirates: 4.0.6
18769 | 7793 |       ts-interface-checker: 0.1.13
18770 | 7794 | 
18771 | 7795 |   superagent@9.0.2:
18772 | 7796 |     dependencies:
18773 | 7797 |       component-emitter: 1.3.1
18774 | 7798 |       cookiejar: 2.1.4
18775 | 7799 |       debug: 4.4.0
18776 | 7800 |       fast-safe-stringify: 2.1.1
18777 | 7801 |       form-data: 4.0.1
18778 | 7802 |       formidable: 3.5.2
18779 | 7803 |       methods: 1.1.2
18780 | 7804 |       mime: 2.6.0
18781 | 7805 |       qs: 6.13.0
18782 | 7806 |     transitivePeerDependencies:
18783 | 7807 |       - supports-color
18784 | 7808 | 
18785 | 7809 |   supercluster@8.0.1:
18786 | 7810 |     dependencies:
18787 | 7811 |       kdbush: 4.0.2
18788 | 7812 | 
18789 | 7813 |   supertest@7.0.0:
18790 | 7814 |     dependencies:
18791 | 7815 |       methods: 1.1.2
18792 | 7816 |       superagent: 9.0.2
18793 | 7817 |     transitivePeerDependencies:
18794 | 7818 |       - supports-color
18795 | 7819 | 
18796 | 7820 |   supports-color@7.2.0:
18797 | 7821 |     dependencies:
18798 | 7822 |       has-flag: 4.0.0
18799 | 7823 | 
18800 | 7824 |   supports-color@8.1.1:
18801 | 7825 |     dependencies:
18802 | 7826 |       has-flag: 4.0.0
18803 | 7827 | 
18804 | 7828 |   supports-preserve-symlinks-flag@1.0.0: {}
18805 | 7829 | 
18806 | 7830 |   tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
18807 | 7831 |     dependencies:
18808 | 7832 |       '@alloc/quick-lru': 5.2.0
18809 | 7833 |       arg: 5.0.2
18810 | 7834 |       chokidar: 3.6.0
18811 | 7835 |       didyoumean: 1.2.2
18812 | 7836 |       dlv: 1.1.3
18813 | 7837 |       fast-glob: 3.3.3
18814 | 7838 |       glob-parent: 6.0.2
18815 | 7839 |       is-glob: 4.0.3
18816 | 7840 |       jiti: 1.21.7
18817 | 7841 |       lilconfig: 3.1.3
18818 | 7842 |       micromatch: 4.0.8
18819 | 7843 |       normalize-path: 3.0.0
18820 | 7844 |       object-hash: 3.0.0
18821 | 7845 |       picocolors: 1.1.1
18822 | 7846 |       postcss: 8.4.49
18823 | 7847 |       postcss-import: 15.1.0(postcss@8.4.49)
18824 | 7848 |       postcss-js: 4.0.1(postcss@8.4.49)
18825 | 7849 |       postcss-load-config: 4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
18826 | 7850 |       postcss-nested: 6.2.0(postcss@8.4.49)
18827 | 7851 |       postcss-selector-parser: 6.1.2
18828 | 7852 |       resolve: 1.22.10
18829 | 7853 |       sucrase: 3.35.0
18830 | 7854 |     transitivePeerDependencies:
18831 | 7855 |       - ts-node
18832 | 7856 | 
18833 | 7857 |   test-exclude@6.0.0:
18834 | 7858 |     dependencies:
18835 | 7859 |       '@istanbuljs/schema': 0.1.3
18836 | 7860 |       glob: 7.2.3
18837 | 7861 |       minimatch: 3.1.2
18838 | 7862 | 
18839 | 7863 |   text-hex@1.0.0: {}
18840 | 7864 | 
18841 | 7865 |   text-table@0.2.0: {}
18842 | 7866 | 
18843 | 7867 |   thenify-all@1.6.0:
18844 | 7868 |     dependencies:
18845 | 7869 |       thenify: 3.3.1
18846 | 7870 | 
18847 | 7871 |   thenify@3.3.1:
18848 | 7872 |     dependencies:
18849 | 7873 |       any-promise: 1.3.0
18850 | 7874 | 
18851 | 7875 |   tinybench@2.9.0: {}
18852 | 7876 | 
18853 | 7877 |   tinyexec@0.3.2: {}
18854 | 7878 | 
18855 | 7879 |   tinyglobby@0.2.10:
18856 | 7880 |     dependencies:
18857 | 7881 |       fdir: 6.4.2(picomatch@4.0.2)
18858 | 7882 |       picomatch: 4.0.2
18859 | 7883 | 
18860 | 7884 |   tinypool@0.8.4: {}
18861 | 7885 | 
18862 | 7886 |   tinyspy@2.2.1: {}
18863 | 7887 | 
18864 | 7888 |   tmpl@1.0.5: {}
18865 | 7889 | 
18866 | 7890 |   to-regex-range@5.0.1:
18867 | 7891 |     dependencies:
18868 | 7892 |       is-number: 7.0.0
18869 | 7893 | 
18870 | 7894 |   toidentifier@1.0.1: {}
18871 | 7895 | 
18872 | 7896 |   tr46@1.0.1:
18873 | 7897 |     dependencies:
18874 | 7898 |       punycode: 2.3.1
18875 | 7899 | 
18876 | 7900 |   tree-kill@1.2.2: {}
18877 | 7901 | 
18878 | 7902 |   triple-beam@1.4.1: {}
18879 | 7903 | 
18880 | 7904 |   ts-api-utils@1.4.3(typescript@5.7.3):
18881 | 7905 |     dependencies:
18882 | 7906 |       typescript: 5.7.3
18883 | 7907 | 
18884 | 7908 |   ts-interface-checker@0.1.13: {}
18885 | 7909 | 
18886 | 7910 |   ts-jest@29.2.5(@babel/core@7.26.0)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.0))(esbuild@0.24.2)(jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))(typescript@5.7.3):
18887 | 7911 |     dependencies:
18888 | 7912 |       bs-logger: 0.2.6
18889 | 7913 |       ejs: 3.1.10
18890 | 7914 |       fast-json-stable-stringify: 2.1.0
18891 | 7915 |       jest: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
18892 | 7916 |       jest-util: 29.7.0
18893 | 7917 |       json5: 2.2.3
18894 | 7918 |       lodash.memoize: 4.1.2
18895 | 7919 |       make-error: 1.3.6
18896 | 7920 |       semver: 7.6.3
18897 | 7921 |       typescript: 5.7.3
18898 | 7922 |       yargs-parser: 21.1.1
18899 | 7923 |     optionalDependencies:
18900 | 7924 |       '@babel/core': 7.26.0
18901 | 7925 |       '@jest/transform': 29.7.0
18902 | 7926 |       '@jest/types': 29.6.3
18903 | 7927 |       babel-jest: 29.7.0(@babel/core@7.26.0)
18904 | 7928 |       esbuild: 0.24.2
18905 | 7929 | 
18906 | 7930 |   ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3):
18907 | 7931 |     dependencies:
18908 | 7932 |       '@cspotcode/source-map-support': 0.8.1
18909 | 7933 |       '@tsconfig/node10': 1.0.11
18910 | 7934 |       '@tsconfig/node12': 1.0.11
18911 | 7935 |       '@tsconfig/node14': 1.0.3
18912 | 7936 |       '@tsconfig/node16': 1.0.4
18913 | 7937 |       '@types/node': 20.17.12
18914 | 7938 |       acorn: 8.14.0
18915 | 7939 |       acorn-walk: 8.3.4
18916 | 7940 |       arg: 4.1.3
18917 | 7941 |       create-require: 1.1.1
18918 | 7942 |       diff: 4.0.2
18919 | 7943 |       make-error: 1.3.6
18920 | 7944 |       typescript: 5.7.3
18921 | 7945 |       v8-compile-cache-lib: 3.0.1
18922 | 7946 |       yn: 3.1.1
18923 | 7947 |     optionalDependencies:
18924 | 7948 |       '@swc/core': 1.10.7
18925 | 7949 |     optional: true
18926 | 7950 | 
18927 | 7951 |   tsup@8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0):
18928 | 7952 |     dependencies:
18929 | 7953 |       bundle-require: 5.1.0(esbuild@0.24.2)
18930 | 7954 |       cac: 6.7.14
18931 | 7955 |       chokidar: 4.0.3
18932 | 7956 |       consola: 3.4.0
18933 | 7957 |       debug: 4.4.0
18934 | 7958 |       esbuild: 0.24.2
18935 | 7959 |       joycon: 3.1.1
18936 | 7960 |       picocolors: 1.1.1
18937 | 7961 |       postcss-load-config: 6.0.1(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.7.0)
18938 | 7962 |       resolve-from: 5.0.0
18939 | 7963 |       rollup: 4.30.1
18940 | 7964 |       source-map: 0.8.0-beta.0
18941 | 7965 |       sucrase: 3.35.0
18942 | 7966 |       tinyexec: 0.3.2
18943 | 7967 |       tinyglobby: 0.2.10
18944 | 7968 |       tree-kill: 1.2.2
18945 | 7969 |     optionalDependencies:
18946 | 7970 |       '@swc/core': 1.10.7
18947 | 7971 |       postcss: 8.4.49
18948 | 7972 |       typescript: 5.7.3
18949 | 7973 |     transitivePeerDependencies:
18950 | 7974 |       - jiti
18951 | 7975 |       - supports-color
18952 | 7976 |       - tsx
18953 | 7977 |       - yaml
18954 | 7978 | 
18955 | 7979 |   tsx@4.19.2:
18956 | 7980 |     dependencies:
18957 | 7981 |       esbuild: 0.23.1
18958 | 7982 |       get-tsconfig: 4.8.1
18959 | 7983 |     optionalDependencies:
18960 | 7984 |       fsevents: 2.3.3
18961 | 7985 | 
18962 | 7986 |   turbo-darwin-64@1.13.4:
18963 | 7987 |     optional: true
18964 | 7988 | 
18965 | 7989 |   turbo-darwin-arm64@1.13.4:
18966 | 7990 |     optional: true
18967 | 7991 | 
18968 | 7992 |   turbo-linux-64@1.13.4:
18969 | 7993 |     optional: true
18970 | 7994 | 
18971 | 7995 |   turbo-linux-arm64@1.13.4:
18972 | 7996 |     optional: true
18973 | 7997 | 
18974 | 7998 |   turbo-windows-64@1.13.4:
18975 | 7999 |     optional: true
18976 | 8000 | 
18977 | 8001 |   turbo-windows-arm64@1.13.4:
18978 | 8002 |     optional: true
18979 | 8003 | 
18980 | 8004 |   turbo@1.13.4:
18981 | 8005 |     optionalDependencies:
18982 | 8006 |       turbo-darwin-64: 1.13.4
18983 | 8007 |       turbo-darwin-arm64: 1.13.4
18984 | 8008 |       turbo-linux-64: 1.13.4
18985 | 8009 |       turbo-linux-arm64: 1.13.4
18986 | 8010 |       turbo-windows-64: 1.13.4
18987 | 8011 |       turbo-windows-arm64: 1.13.4
18988 | 8012 | 
18989 | 8013 |   type-check@0.4.0:
18990 | 8014 |     dependencies:
18991 | 8015 |       prelude-ls: 1.2.1
18992 | 8016 | 
18993 | 8017 |   type-detect@4.0.8: {}
18994 | 8018 | 
18995 | 8019 |   type-detect@4.1.0: {}
18996 | 8020 | 
18997 | 8021 |   type-fest@0.20.2: {}
18998 | 8022 | 
18999 | 8023 |   type-fest@0.21.3: {}
19000 | 8024 | 
19001 | 8025 |   type-is@1.6.18:
19002 | 8026 |     dependencies:
19003 | 8027 |       media-typer: 0.3.0
19004 | 8028 |       mime-types: 2.1.35
19005 | 8029 | 
19006 | 8030 |   typedarray@0.0.6: {}
19007 | 8031 | 
19008 | 8032 |   typescript@5.7.3: {}
19009 | 8033 | 
19010 | 8034 |   ufo@1.5.4: {}
19011 | 8035 | 
19012 | 8036 |   undici-types@6.19.8: {}
19013 | 8037 | 
19014 | 8038 |   unpipe@1.0.0: {}
19015 | 8039 | 
19016 | 8040 |   update-browserslist-db@1.1.2(browserslist@4.24.4):
19017 | 8041 |     dependencies:
19018 | 8042 |       browserslist: 4.24.4
19019 | 8043 |       escalade: 3.2.0
19020 | 8044 |       picocolors: 1.1.1
19021 | 8045 | 
19022 | 8046 |   uri-js@4.4.1:
19023 | 8047 |     dependencies:
19024 | 8048 |       punycode: 2.3.1
19025 | 8049 | 
19026 | 8050 |   util-deprecate@1.0.2: {}
19027 | 8051 | 
19028 | 8052 |   utils-merge@1.0.1: {}
19029 | 8053 | 
19030 | 8054 |   v8-compile-cache-lib@3.0.1:
19031 | 8055 |     optional: true
19032 | 8056 | 
19033 | 8057 |   v8-to-istanbul@9.3.0:
19034 | 8058 |     dependencies:
19035 | 8059 |       '@jridgewell/trace-mapping': 0.3.25
19036 | 8060 |       '@types/istanbul-lib-coverage': 2.0.6
19037 | 8061 |       convert-source-map: 2.0.0
19038 | 8062 | 
19039 | 8063 |   vary@1.1.2: {}
19040 | 8064 | 
19041 | 8065 |   vite-node@1.6.0(@types/node@20.17.12):
19042 | 8066 |     dependencies:
19043 | 8067 |       cac: 6.7.14
19044 | 8068 |       debug: 4.4.0
19045 | 8069 |       pathe: 1.1.2
19046 | 8070 |       picocolors: 1.1.1
19047 | 8071 |       vite: 5.4.11(@types/node@20.17.12)
19048 | 8072 |     transitivePeerDependencies:
19049 | 8073 |       - '@types/node'
19050 | 8074 |       - less
19051 | 8075 |       - lightningcss
19052 | 8076 |       - sass
19053 | 8077 |       - sass-embedded
19054 | 8078 |       - stylus
19055 | 8079 |       - sugarss
19056 | 8080 |       - supports-color
19057 | 8081 |       - terser
19058 | 8082 | 
19059 | 8083 |   vite@5.4.11(@types/node@20.17.12):
19060 | 8084 |     dependencies:
19061 | 8085 |       esbuild: 0.21.5
19062 | 8086 |       postcss: 8.4.49
19063 | 8087 |       rollup: 4.30.1
19064 | 8088 |     optionalDependencies:
19065 | 8089 |       '@types/node': 20.17.12
19066 | 8090 |       fsevents: 2.3.3
19067 | 8091 | 
19068 | 8092 |   vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3):
19069 | 8093 |     dependencies:
19070 | 8094 |       '@vitest/expect': 1.6.0
19071 | 8095 |       '@vitest/runner': 1.6.0
19072 | 8096 |       '@vitest/snapshot': 1.6.0
19073 | 8097 |       '@vitest/spy': 1.6.0
19074 | 8098 |       '@vitest/utils': 1.6.0
19075 | 8099 |       acorn-walk: 8.3.4
19076 | 8100 |       chai: 4.5.0
19077 | 8101 |       debug: 4.4.0
19078 | 8102 |       execa: 8.0.1
19079 | 8103 |       local-pkg: 0.5.1
19080 | 8104 |       magic-string: 0.30.17
19081 | 8105 |       pathe: 1.1.2
19082 | 8106 |       picocolors: 1.1.1
19083 | 8107 |       std-env: 3.8.0
19084 | 8108 |       strip-literal: 2.1.1
19085 | 8109 |       tinybench: 2.9.0
19086 | 8110 |       tinypool: 0.8.4
19087 | 8111 |       vite: 5.4.11(@types/node@20.17.12)
19088 | 8112 |       vite-node: 1.6.0(@types/node@20.17.12)
19089 | 8113 |       why-is-node-running: 2.3.0
19090 | 8114 |     optionalDependencies:
19091 | 8115 |       '@types/node': 20.17.12
19092 | 8116 |       happy-dom: 12.10.3
19093 | 8117 |     transitivePeerDependencies:
19094 | 8118 |       - less
19095 | 8119 |       - lightningcss
19096 | 8120 |       - sass
19097 | 8121 |       - sass-embedded
19098 | 8122 |       - stylus
19099 | 8123 |       - sugarss
19100 | 8124 |       - supports-color
19101 | 8125 |       - terser
19102 | 8126 | 
19103 | 8127 |   walker@1.0.8:
19104 | 8128 |     dependencies:
19105 | 8129 |       makeerror: 1.0.12
19106 | 8130 | 
19107 | 8131 |   webidl-conversions@4.0.2: {}
19108 | 8132 | 
19109 | 8133 |   webidl-conversions@7.0.0: {}
19110 | 8134 | 
19111 | 8135 |   whatwg-encoding@2.0.0:
19112 | 8136 |     dependencies:
19113 | 8137 |       iconv-lite: 0.6.3
19114 | 8138 | 
19115 | 8139 |   whatwg-mimetype@3.0.0: {}
19116 | 8140 | 
19117 | 8141 |   whatwg-url@7.1.0:
19118 | 8142 |     dependencies:
19119 | 8143 |       lodash.sortby: 4.7.0
19120 | 8144 |       tr46: 1.0.1
19121 | 8145 |       webidl-conversions: 4.0.2
19122 | 8146 | 
19123 | 8147 |   which-boxed-primitive@1.1.1:
19124 | 8148 |     dependencies:
19125 | 8149 |       is-bigint: 1.1.0
19126 | 8150 |       is-boolean-object: 1.2.1
19127 | 8151 |       is-number-object: 1.1.1
19128 | 8152 |       is-string: 1.1.1
19129 | 8153 |       is-symbol: 1.1.1
19130 | 8154 | 
19131 | 8155 |   which-collection@1.0.2:
19132 | 8156 |     dependencies:
19133 | 8157 |       is-map: 2.0.3
19134 | 8158 |       is-set: 2.0.3
19135 | 8159 |       is-weakmap: 2.0.2
19136 | 8160 |       is-weakset: 2.0.4
19137 | 8161 | 
19138 | 8162 |   which-typed-array@1.1.18:
19139 | 8163 |     dependencies:
19140 | 8164 |       available-typed-arrays: 1.0.7
19141 | 8165 |       call-bind: 1.0.8
19142 | 8166 |       call-bound: 1.0.3
19143 | 8167 |       for-each: 0.3.3
19144 | 8168 |       gopd: 1.2.0
19145 | 8169 |       has-tostringtag: 1.0.2
19146 | 8170 | 
19147 | 8171 |   which@2.0.2:
19148 | 8172 |     dependencies:
19149 | 8173 |       isexe: 2.0.0
19150 | 8174 | 
19151 | 8175 |   why-is-node-running@2.3.0:
19152 | 8176 |     dependencies:
19153 | 8177 |       siginfo: 2.0.0
19154 | 8178 |       stackback: 0.0.2
19155 | 8179 | 
19156 | 8180 |   winston-transport@4.9.0:
19157 | 8181 |     dependencies:
19158 | 8182 |       logform: 2.7.0
19159 | 8183 |       readable-stream: 3.6.2
19160 | 8184 |       triple-beam: 1.4.1
19161 | 8185 | 
19162 | 8186 |   winston@3.17.0:
19163 | 8187 |     dependencies:
19164 | 8188 |       '@colors/colors': 1.6.0
19165 | 8189 |       '@dabh/diagnostics': 2.0.3
19166 | 8190 |       async: 3.2.6
19167 | 8191 |       is-stream: 2.0.1
19168 | 8192 |       logform: 2.7.0
19169 | 8193 |       one-time: 1.0.0
19170 | 8194 |       readable-stream: 3.6.2
19171 | 8195 |       safe-stable-stringify: 2.5.0
19172 | 8196 |       stack-trace: 0.0.10
19173 | 8197 |       triple-beam: 1.4.1
19174 | 8198 |       winston-transport: 4.9.0
19175 | 8199 | 
19176 | 8200 |   word-wrap@1.2.5: {}
19177 | 8201 | 
19178 | 8202 |   wrap-ansi@7.0.0:
19179 | 8203 |     dependencies:
19180 | 8204 |       ansi-styles: 4.3.0
19181 | 8205 |       string-width: 4.2.3
19182 | 8206 |       strip-ansi: 6.0.1
19183 | 8207 | 
19184 | 8208 |   wrap-ansi@8.1.0:
19185 | 8209 |     dependencies:
19186 | 8210 |       ansi-styles: 6.2.1
19187 | 8211 |       string-width: 5.1.2
19188 | 8212 |       strip-ansi: 7.1.0
19189 | 8213 | 
19190 | 8214 |   wrappy@1.0.2: {}
19191 | 8215 | 
19192 | 8216 |   write-file-atomic@4.0.2:
19193 | 8217 |     dependencies:
19194 | 8218 |       imurmurhash: 0.1.4
19195 | 8219 |       signal-exit: 3.0.7
19196 | 8220 | 
19197 | 8221 |   xtend@4.0.2: {}
19198 | 8222 | 
19199 | 8223 |   y18n@5.0.8: {}
19200 | 8224 | 
19201 | 8225 |   yallist@3.1.1: {}
19202 | 8226 | 
19203 | 8227 |   yaml@2.7.0: {}
19204 | 8228 | 
19205 | 8229 |   yargs-parser@21.1.1: {}
19206 | 8230 | 
19207 | 8231 |   yargs@17.7.2:
19208 | 8232 |     dependencies:
19209 | 8233 |       cliui: 8.0.1
19210 | 8234 |       escalade: 3.2.0
19211 | 8235 |       get-caller-file: 2.0.5
19212 | 8236 |       require-directory: 2.1.1
19213 | 8237 |       string-width: 4.2.3
19214 | 8238 |       y18n: 5.0.8
19215 | 8239 |       yargs-parser: 21.1.1
19216 | 8240 | 
19217 | 8241 |   yn@3.1.1:
19218 | 8242 |     optional: true
19219 | 8243 | 
19220 | 8244 |   yocto-queue@0.1.0: {}
19221 | 8245 | 
19222 | 8246 |   yocto-queue@1.1.1: {}
19223 | 8247 | 
19224 | 8248 |   zod@3.24.1: {}
19225 | 8249 | 
19226 | 
19227 | 
19228 | --------------------------------------------------------------------------------
19229 | /pnpm-workspace.yaml:
19230 | --------------------------------------------------------------------------------
19231 | 1 | packages:
19232 | 2 |   - 'apps/*'
19233 | 3 |   - 'packages/*' 
19234 | 4 | 
19235 | 
19236 | 
19237 | --------------------------------------------------------------------------------
19238 | /turbo.json:
19239 | --------------------------------------------------------------------------------
19240 |  1 | {
19241 |  2 |   "$schema": "https://turbo.build/schema.json",
19242 |  3 |   "globalDependencies": ["**/.env.*local"],
19243 |  4 |   "pipeline": {
19244 |  5 |     "build": {
19245 |  6 |       "dependsOn": ["^build", "prisma:generate"],
19246 |  7 |       "outputs": ["dist/**"]
19247 |  8 |     },
19248 |  9 |     "lint": {
19249 | 10 |       "outputs": []
19250 | 11 |     },
19251 | 12 |     "dev": {
19252 | 13 |       "dependsOn": ["^build", "prisma:generate"],
19253 | 14 |       "cache": false,
19254 | 15 |       "persistent": true,
19255 | 16 |       "dotEnv": [
19256 | 17 |         ".env.local",
19257 | 18 |         ".env.development.local",
19258 | 19 |         ".env.development",
19259 | 20 |         ".env"
19260 | 21 |       ]
19261 | 22 |     },
19262 | 23 |     "clean": {
19263 | 24 |       "cache": false
19264 | 25 |     },
19265 | 26 |     "prisma:generate": {
19266 | 27 |       "cache": false
19267 | 28 |     },
19268 | 29 |     "prisma:migrate": {
19269 | 30 |       "cache": false
19270 | 31 |     },
19271 | 32 |     "prisma:studio": {
19272 | 33 |       "cache": false
19273 | 34 |     },
19274 | 35 |     "prisma:seed": {
19275 | 36 |       "cache": false
19276 | 37 |     }
19277 | 38 |   }
19278 | 39 | }
19279 | 40 | 
19280 | 
19281 | 
19282 | --------------------------------------------------------------------------------
19283 | 


--------------------------------------------------------------------------------
/.gitignore:
--------------------------------------------------------------------------------
 1 | # Dependencies
 2 | node_modules
 3 | .pnp
 4 | .pnp.js
 5 | 
 6 | # Testing
 7 | coverage
 8 | 
 9 | # Production
10 | dist
11 | build
12 | out
13 | .next
14 | 
15 | # Environment Variables
16 | .env
17 | .env.local
18 | .env.development.local
19 | .env.test.local
20 | .env.production.local
21 | .env*.local
22 | 
23 | # Debug
24 | npm-debug.log*
25 | yarn-debug.log*
26 | yarn-error.log*
27 | pnpm-debug.log*
28 | 
29 | # IDEs and editors
30 | .idea
31 | .vscode/*
32 | !.vscode/extensions.json
33 | !.vscode/settings.json
34 | !.vscode/tasks.json
35 | !.vscode/launch.json
36 | *.suo
37 | *.ntvs*
38 | *.njsproj
39 | *.sln
40 | *.sw?
41 | 
42 | # OS files
43 | .DS_Store
44 | Thumbs.db
45 | 
46 | # Prisma
47 | apps/api/prisma/dev.db
48 | apps/api/prisma/dev.db-journal
49 | apps/api/prisma/migrations/migration_lock.toml
50 | 
51 | # Logs
52 | logs
53 | *.log
54 | npm-debug.log*
55 | yarn-debug.log*
56 | yarn-error.log*
57 | pnpm-debug.log*
58 | lerna-debug.log*
59 | 
60 | # Turborepo
61 | .turbo
62 | 
63 | # Cache
64 | .cache
65 | .eslintcache
66 | .stylelintcache
67 | 
68 | # Uploads
69 | apps/api/uploads/*
70 | !apps/api/uploads/.gitkeep
71 | 
72 | # TypeScript
73 | *.tsbuildinfo
74 | 
75 | # Vite
76 | *.local
77 | 
78 | # Testing
79 | /coverage
80 | .nyc_output
81 | 
82 | # Temporary files
83 | *.tmp
84 | *.temp
85 | .temp
86 | .tmp
87 | 


--------------------------------------------------------------------------------
/.nvmrc:
--------------------------------------------------------------------------------
1 | v20.12.2
2 | 


--------------------------------------------------------------------------------
/.vscode/settings.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "workbench.colorCustomizations": {
 3 |     "activityBar.activeBackground": "#d6a251",
 4 |     "activityBar.background": "#d6a251",
 5 |     "activityBar.foreground": "#15202b",
 6 |     "activityBar.inactiveForeground": "#15202b99",
 7 |     "activityBarBadge.background": "#e5f9f1",
 8 |     "activityBarBadge.foreground": "#15202b",
 9 |     "commandCenter.border": "#15202b99",
10 |     "sash.hoverBorder": "#d6a251",
11 |     "statusBar.background": "#c58b2f",
12 |     "statusBar.foreground": "#15202b",
13 |     "statusBarItem.hoverBackground": "#9c6e25",
14 |     "statusBarItem.remoteBackground": "#c58b2f",
15 |     "statusBarItem.remoteForeground": "#15202b",
16 |     "titleBar.activeBackground": "#c58b2f",
17 |     "titleBar.activeForeground": "#15202b",
18 |     "titleBar.inactiveBackground": "#c58b2f99",
19 |     "titleBar.inactiveForeground": "#15202b99"
20 |   },
21 |   "peacock.color": "#c58b2f"
22 | }
23 | 


--------------------------------------------------------------------------------
/Cursor Agent - Task Master Prompt.md:
--------------------------------------------------------------------------------
  1 | # User Input:
  2 | [TASK]: Now that we have updated the shared types in the web, I want to make sure that the web app is working as expected. Could you perform a full test of the web app and make sure that it is working as expected. Additionally, I want to make sure that the admin page is working as expected. I want you to also periodically check if you can compile the web and server apps and read the logs to make sure that everything is working as expected and you can resolve any issues.
  3 | [PROJECT OVERVIEW]: .cursorrules
  4 | [MAIN BRANCH]: master
  5 | [YOLO MODE]: on
  6 | 
  7 | ---
  8 | 
  9 | # Global Objectives
 10 | 1. Read the "User Input" at the bottom
 11 | 2. Read through this entire prompt carefully
 12 | 3. Follow the "Execution Protocol"
 13 | 4. Stop at each verification point for human confirmation
 14 | 5. MAINTAIN THE TASK FILE AS THE CENTRAL SOURCE OF TRUTH
 15 | 
 16 | > You must reply with "I understand the main objectives' when you have read and fully understood the above global objectives, also reply with:
 17 | > - A summary of what the global objectives are
 18 | > - Repeat what the execution protocol entails, step-by-step.
 19 | > - If [YOLO MODE] is set to "ask", ask the user if they want to proceed in "YOLO MODE" or not.
 20 | 
 21 | ---
 22 | 
 23 | # Execution Protocol:
 24 | 
 25 | ## 1. Git Branch Creation
 26 | 1. Create a new task branch from [MAIN BRANCH]:  
 27 |    ```
 28 |    git checkout -b task/[TASK_IDENTIFIER]_[TASK_DATE_AND_NUMBER]
 29 |    ```
 30 | 2. Add the branch name to the [TASK FILE] under "Task Branch."
 31 | 3. Verify the branch is active:  
 32 |    ```
 33 |    git branch --show-current
 34 |    ```
 35 | 
 36 | ## 2. Task Analysis
 37 | - Examine the [TASK], related code and functionality step-by-step.  
 38 | 
 39 | <<< HALT IF NOT [YOLO MODE]: Before continuing, wait for user confirmation that your analysis is complete, if not, iterate on this >>>
 40 | 
 41 | ## 3. Task File Creation
 42 | 1. Create the [TASK FILE], naming it `[TASK_FILE_NAME]_[TASK_IDENTIFIER].md` and placing it in the `.tasks` directory at the root of the project.
 43 | 2. Start by adding everything in "Placeholder Definitions", as is, to the [TASK FILE].
 44 |    - This is to ensure any other developer knows what these placeholders mean.
 45 | 3. Then add content by filling in the entire "Task File Template" using:
 46 |    - The result form execution step 2
 47 |    - The user-provided input.
 48 | 
 49 | <<< HALT IF NOT [YOLO MODE]: Before continuing, wait for the user to confirm the [TASK FILE] name andcontents >>>
 50 | 
 51 | ## **4. Iterate on the Task**
 52 | 1. Analyze code context fully before changes.  
 53 | 2. Analyze updates under "Task Progress" in the [TASK FILE] to ensure you don't repeat previous mistakes or unsuccessful changes.
 54 | 3. Make changes to the codebase as needed.  
 55 | 4. Update any progress under "Task Progress" in the [TASK FILE].  
 56 | 5. For each change:
 57 |    - Seek user confirmation on updates.
 58 |    - Mark changes as SUCCESSFUL or UNSUCCESSFUL in the log after user confirmation.
 59 |    - Optional, when apporopriate (determined appropriate by you), commit code:
 60 |       ```
 61 |       git add --all -- ':!./.tasks'
 62 |       git commit -m "[COMMIT_MESSAGE]"
 63 |       ```
 64 | 
 65 | <<< HALT IF NOT [YOLO MODE]: Before continuing, confirm with the user if the changes where successful or not, if not, iterate on this execution step once more >>>
 66 | 
 67 | ## **5. Task Completion**
 68 | 1. After user confirmation, and if there are changes to commit:
 69 |    - Stage all changes EXCEPT the task file:
 70 |      ```
 71 |      git add --all -- ':!./.tasks'
 72 |      ```
 73 |    - Commit changes with a concise message:
 74 |      ```
 75 |      git commit -m "[COMMIT_MESSAGE]"
 76 |      ```
 77 | 
 78 | <<< HALT IF NOT [YOLO MODE]:: Before continuing, ask the user if the [TASK BRANCH] should be merged into the [MAIN BRANCH], if not, proceed to execution step 8 >>>
 79 | 
 80 | ## **6. Merge Task Branch**
 81 | 1. Confirm with the user before merging into [MAIN BRANCH].
 82 | 2. If approved:
 83 |    - Checkout [MAIN BRANCH]:  
 84 |      ```
 85 |      git checkout [MAIN BRANCH]
 86 |      ```
 87 |    - Merge:  
 88 |      ```
 89 |      git merge task/[TASK_IDENTIFIER]_[TASK_DATE_AND_NUMBER]
 90 |      ```
 91 | 3. Confirm that the merge was successful by running:
 92 |    ```
 93 |    git log [TASK BRANCH]..[MAIN BRANCH] | cat
 94 |    ```
 95 | 
 96 | ## **7. Delete Task Branch**
 97 | 1. Ask the user if we should delete the [TASK BRANCH], if not, proceed to execution step 8
 98 | 2. Delete the [TASK BRANCH]:  
 99 |    ```
100 |    git branch -d task/[TASK_IDENTIFIER]_[TASK_DATE_AND_NUMBER]
101 |    ```
102 | 
103 | <<< HALT IF NOT [YOLO MODE]:: Before continuing, confirm with the user that the [TASK BRANCH] was deleted successfully by looking at `git branch --list | cat` >>>
104 | 
105 | ## **8. Final Review**
106 | 1. Look at everything we've done and fill in the "Final Review" in the [TASK FILE].
107 | 
108 | <<< HALT IF NOT [YOLO MODE]:: Before we are done, give the user the final review >>>
109 | 
110 | ---
111 | 
112 | # Task File Template:
113 | ```markdown
114 | # Context
115 | Task file name: [TASK_FILE_NAME]
116 | Created at: [DATETIME]
117 | Created by: [USER_NAME]
118 | YOLO MODE: [YOLO MODE]
119 | 
120 | # Task Description
121 | [A detailed description based on the [TASK] given by the user.]
122 | 
123 | # Project Overview
124 | [A detailed overview of the project based on the [PROJECT OVERVIEW] given by the user.]
125 | 
126 | # Original Task Template
127 | [The ENTIRE unedited "Task File Template"]
128 | - Copy and paste the ENTIRE unedited "Task File Template" into this section, __including all the details__
129 | - Surround it with a markdown code block
130 | - Add "DO NOT REMOVE OR EDIT THIS SECTION" to the bottom of this section, so that it stays for the entire process.
131 | 
132 | # Original Execution Protocol
133 | [The ENTIRE unedited "Execution Protocol" section]
134 | - Copy and paste the ENTIRE unedited "Execution Protocol" section into this section, __including all the details under each execution step__
135 | - Surround it with a markdown code block
136 | - Add "DO NOT REMOVE OR EDIT THIS SECTION" to the bottom of this section, so that it stays for the entire process.
137 | 
138 | # Task Analysis
139 | - Purpose of the [TASK].
140 | - Issues identified, including:
141 |   - Problems caused.
142 |   - Why it needs resolution.
143 |   - Implementation details and goals.
144 | - Other useful reference details.
145 | 
146 | # Main branch
147 | [MAIN BRANCH]
148 | 
149 | # Task Branch
150 | [TASK BRANCH]
151 | 
152 | # Steps to take
153 | [List of actionable steps for the task]
154 | - Just "—" when there are not tasks
155 | 
156 | # Current execution step: [The number of the current execution step]
157 | 
158 | # Task Progress
159 | - Updates must include:
160 |   - Mandatory:
161 |     - [DATETIME].
162 |     - SUCCESSFUL/UNSUCCESSFUL, after user confirmation
163 |   - Optional:
164 |     - Findings, solutions, blockers, and results.
165 |     - All updates must be logged chronologically.
166 | 
167 | # Final Review
168 | [To be filled in only after task completion.]
169 | ```
170 | 
171 | ---
172 | 
173 | # Placeholder Definitions:
174 | [ Explanation of the placeholders used thoughout the prompt ]
175 | - [TASK]: The specific task or issue being addressed (e.g., "fix-cache-manager")
176 | - [TASK_IDENTIFIER]: A unique, human-readable identifier for the task (e.g., "fix-cache-manager")
177 | - [TASK_FILE_NAME]: The name of the task file
178 | - [TASK_DATE_AND_NUMBER]: A timestamped and sequential identifier for the task file (e.g., "2025-01-14_1")
179 | - [MAIN BRANCH]: The branch where the primary development takes place (default: "master")
180 | - [TASK FILE]: The Markdown file created to document and track the task's progress
181 | - [TASK BRANCH]: The Git branch where the task's changes are being implemented
182 | - [DATETIME]: The current date and time
183 | - [DATE]: The current date
184 | - [TIME]: The current time
185 | - [USER_NAME]: The current username
186 | - [COMMIT_MESSAGE]: A short and concise commit message of what we have done, keep it as short as possible
187 | - [YOLO MODE]: Whether we are in YOLO MODE or not, if we are, you ignore "<<< HALT >>>" stops and just do what you think is best, always. Ask the user as few questions as possible.
188 | - Commands for populating some of the placeholders:
189 |    - [TASK_FILE_NAME]: `echo $(date +%Y-%m-%d)_$(($(find .tasks -maxdepth 1 -name "$(date +%Y-%m-%d)_*" | wc -l) + 1))`
190 |    - [DATETIME]: `echo $(date +'%Y-%m-%d_%H:%M:%S')`
191 |    - [DATE]: `echo $(date +'%Y-%m-%d')`
192 |    - [TIME]: `echo $(date +'%H:%M:%S')`
193 |    - [USER_NAME]: `echo $(whoami)`
194 | 


--------------------------------------------------------------------------------
/README.md:
--------------------------------------------------------------------------------
 1 | # Avalon Real Estate Website
 2 | 
 3 | Modern real estate website for Авалон Недвижими Имоти, built with React, Node.js, and TypeScript.
 4 | 
 5 | ## Project Structure
 6 | 
 7 | ```
 8 | avalon-real-estate/
 9 | ├── apps/
10 | │   ├── web/           # React frontend application
11 | │   └── api/           # Node.js/Express backend
12 | ├── packages/
13 | │   ├── ui/            # Shared UI components
14 | │   ├── config/        # Shared configurations
15 | │   └── types/         # Shared TypeScript types
16 | ├── pnpm-workspace.yaml
17 | └── package.json
18 | ```
19 | 
20 | ## Prerequisites
21 | 
22 | - Node.js (v18 or higher)
23 | - pnpm (v8.14.1 or higher)
24 | 
25 | ## Getting Started
26 | 
27 | 1. Install dependencies:
28 |    ```bash
29 |    pnpm install
30 |    ```
31 | 
32 | 2. Start development servers:
33 |    ```bash
34 |    pnpm dev
35 |    ```
36 | 
37 |    This will start both the frontend and backend development servers:
38 |    - Frontend: http://localhost:5173
39 |    - Backend: http://localhost:3000
40 | 
41 | ## Tech Stack
42 | 
43 | - **Frontend:**
44 |   - React + TypeScript
45 |   - Tailwind CSS
46 |   - React Router
47 |   - TanStack Query (React Query)
48 |   - Zod for runtime type validation
49 | 
50 | - **Backend:**
51 |   - Node.js + TypeScript
52 |   - Express
53 |   - Prisma (Type-safe ORM)
54 |   - SQLite/MongoDB
55 |   - JWT Authentication
56 | 
57 | ## Features
58 | 
59 | - Responsive design with light/dark mode
60 | - Property search and filtering
61 | - Admin panel for property management
62 | - Contact form with reCAPTCHA
63 | - Google Analytics integration
64 | - Interactive map integration
65 | 
66 | ## Development
67 | 
68 | - All code is written in TypeScript
69 | - ESLint for code linting
70 | - Prettier for code formatting
71 | - Turborepo for monorepo management
72 | - pnpm for fast, disk-space efficient package management
73 | 
74 | ## License
75 | 
76 | Private - All rights reserved 
77 | 


--------------------------------------------------------------------------------
/apps/api/.env.example:
--------------------------------------------------------------------------------
 1 | # Email Configuration
 2 | SMTP_HOST=smtp.example.com
 3 | SMTP_PORT=587
 4 | SMTP_SECURE=false
 5 | SMTP_USER=your-email@example.com
 6 | SMTP_PASS=your-email-password
 7 | SMTP_FROM=noreply@example.com
 8 | ADMIN_EMAIL=admin@example.com
 9 | 
10 | # reCAPTCHA Configuration
11 | RECAPTCHA_SITE_KEY=your-recaptcha-site-key
12 | RECAPTCHA_SECRET_KEY=your-recaptcha-secret-key 
13 | 


--------------------------------------------------------------------------------
/apps/api/jest.config.ts:
--------------------------------------------------------------------------------
 1 | import type { Config } from '@jest/types';
 2 | 
 3 | const config: Config.InitialOptions = {
 4 |   preset: 'ts-jest',
 5 |   testEnvironment: 'node',
 6 |   moduleNameMapper: {
 7 |     '^@avalon/shared-types
#39;: '<rootDir>/../../packages/shared-types/src/index.ts'
 8 |   },
 9 |   transform: {
10 |     '^.+\\.tsx?
#39;: ['ts-jest', {
11 |       useESM: true,
12 |     }]
13 |   },
14 |   extensionsToTreatAsEsm: ['.ts'],
15 |   moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node']
16 | };
17 | 
18 | export default config; 
19 | 


--------------------------------------------------------------------------------
/apps/api/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "@avalon/api",
 3 |   "version": "1.0.0",
 4 |   "private": true,
 5 |   "type": "module",
 6 |   "scripts": {
 7 |     "dev": "tsup src/index.ts --watch --onSuccess \"node dist/index.js\"",
 8 |     "build": "tsup src/index.ts --minify",
 9 |     "start": "node dist/index.js",
10 |     "clean": "rm -rf dist",
11 |     "prisma:generate": "prisma generate",
12 |     "prisma:migrate": "prisma migrate deploy",
13 |     "prisma:studio": "prisma studio",
14 |     "prisma:seed": "tsx prisma/seed.ts",
15 |     "fix:categories": "tsx scripts/fix-property-categories.ts",
16 |     "test": "cross-env NODE_ENV=test jest"
17 |   },
18 |   "dependencies": {
19 |     "@avalon/shared-types": "workspace:*",
20 |     "@prisma/client": "^5.22.0",
21 |     "@types/nodemailer": "^6.4.17",
22 |     "bcryptjs": "^2.4.3",
23 |     "cors": "^2.8.5",
24 |     "dotenv": "^16.4.5",
25 |     "express": "^4.18.3",
26 |     "express-rate-limit": "^7.5.0",
27 |     "jsonwebtoken": "^9.0.2",
28 |     "morgan": "^1.10.0",
29 |     "multer": "^1.4.5-lts.1",
30 |     "nodemailer": "^6.9.16",
31 |     "winston": "^3.17.0",
32 |     "zod": "^3.22.4"
33 |   },
34 |   "devDependencies": {
35 |     "@jest/globals": "^29.7.0",
36 |     "@jest/types": "^29.6.3",
37 |     "@types/bcryptjs": "^2.4.6",
38 |     "@types/cors": "^2.8.17",
39 |     "@types/express": "^4.17.21",
40 |     "@types/jest": "^29.5.14",
41 |     "@types/jsonwebtoken": "^9.0.5",
42 |     "@types/morgan": "^1.9.9",
43 |     "@types/multer": "^1.4.11",
44 |     "@types/node": "^20.17.12",
45 |     "@types/supertest": "^6.0.2",
46 |     "@typescript-eslint/eslint-plugin": "^6.21.0",
47 |     "@typescript-eslint/parser": "^6.21.0",
48 |     "cross-env": "^7.0.3",
49 |     "jest": "^29.7.0",
50 |     "prisma": "^5.22.0",
51 |     "supertest": "^7.0.0",
52 |     "ts-jest": "^29.2.5",
53 |     "ts-node": "^10.9.2",
54 |     "tsup": "^8.3.5",
55 |     "tsx": "^4.7.1",
56 |     "typescript": "^5.7.3"
57 |   },
58 |   "prisma": {
59 |     "seed": "node --loader ts-node/esm prisma/seed.ts"
60 |   }
61 | }
62 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250112191046_init/migration.sql:
--------------------------------------------------------------------------------
 1 | -- CreateTable
 2 | CREATE TABLE "User" (
 3 |     "id" TEXT NOT NULL PRIMARY KEY,
 4 |     "email" TEXT NOT NULL,
 5 |     "name" TEXT NOT NULL,
 6 |     "password" TEXT NOT NULL,
 7 |     "role" TEXT NOT NULL DEFAULT 'USER',
 8 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
 9 |     "updatedAt" DATETIME NOT NULL
10 | );
11 | 
12 | -- CreateTable
13 | CREATE TABLE "Property" (
14 |     "id" TEXT NOT NULL PRIMARY KEY,
15 |     "title" TEXT NOT NULL,
16 |     "description" TEXT NOT NULL,
17 |     "price" REAL NOT NULL,
18 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
19 |     "area_sqm" REAL NOT NULL,
20 |     "floor" INTEGER,
21 |     "construction_type" TEXT,
22 |     "furnishing" TEXT,
23 |     "location" TEXT NOT NULL,
24 |     "category" TEXT NOT NULL,
25 |     "type" TEXT NOT NULL,
26 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
27 |     "updatedAt" DATETIME NOT NULL
28 | );
29 | 
30 | -- CreateTable
31 | CREATE TABLE "Image" (
32 |     "id" TEXT NOT NULL PRIMARY KEY,
33 |     "url" TEXT NOT NULL,
34 |     "propertyId" TEXT NOT NULL,
35 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
36 |     "updatedAt" DATETIME NOT NULL,
37 |     CONSTRAINT "Image_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE
38 | );
39 | 
40 | -- CreateTable
41 | CREATE TABLE "ContactInfo" (
42 |     "id" TEXT NOT NULL PRIMARY KEY,
43 |     "phone" TEXT NOT NULL,
44 |     "email" TEXT NOT NULL,
45 |     "propertyId" TEXT NOT NULL,
46 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
47 |     "updatedAt" DATETIME NOT NULL,
48 |     CONSTRAINT "ContactInfo_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE
49 | );
50 | 
51 | -- CreateTable
52 | CREATE TABLE "ContactMessage" (
53 |     "id" TEXT NOT NULL PRIMARY KEY,
54 |     "name" TEXT NOT NULL,
55 |     "email" TEXT NOT NULL,
56 |     "message" TEXT NOT NULL,
57 |     "isRead" BOOLEAN NOT NULL DEFAULT false,
58 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
59 |     "updatedAt" DATETIME NOT NULL
60 | );
61 | 
62 | -- CreateIndex
63 | CREATE UNIQUE INDEX "User_email_key" ON "User"("email");
64 | 
65 | -- CreateIndex
66 | CREATE UNIQUE INDEX "ContactInfo_propertyId_key" ON "ContactInfo"("propertyId");
67 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250112201244_add_featured_field/migration.sql:
--------------------------------------------------------------------------------
 1 | -- RedefineTables
 2 | PRAGMA defer_foreign_keys=ON;
 3 | PRAGMA foreign_keys=OFF;
 4 | CREATE TABLE "new_Property" (
 5 |     "id" TEXT NOT NULL PRIMARY KEY,
 6 |     "title" TEXT NOT NULL,
 7 |     "description" TEXT NOT NULL,
 8 |     "price" REAL NOT NULL,
 9 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
10 |     "area_sqm" REAL NOT NULL,
11 |     "floor" INTEGER,
12 |     "construction_type" TEXT,
13 |     "furnishing" TEXT,
14 |     "location" TEXT NOT NULL,
15 |     "category" TEXT NOT NULL,
16 |     "type" TEXT NOT NULL,
17 |     "featured" BOOLEAN NOT NULL DEFAULT false,
18 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
19 |     "updatedAt" DATETIME NOT NULL
20 | );
21 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt" FROM "Property";
22 | DROP TABLE "Property";
23 | ALTER TABLE "new_Property" RENAME TO "Property";
24 | PRAGMA foreign_keys=ON;
25 | PRAGMA defer_foreign_keys=OFF;
26 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250113201522_init/migration.sql:
--------------------------------------------------------------------------------
 1 | -- RedefineTables
 2 | PRAGMA defer_foreign_keys=ON;
 3 | PRAGMA foreign_keys=OFF;
 4 | CREATE TABLE "new_Property" (
 5 |     "id" TEXT NOT NULL PRIMARY KEY,
 6 |     "title" TEXT NOT NULL,
 7 |     "description" TEXT NOT NULL,
 8 |     "price" REAL NOT NULL,
 9 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
10 |     "area_sqm" REAL NOT NULL,
11 |     "floor" INTEGER,
12 |     "construction_type" TEXT,
13 |     "furnishing" TEXT,
14 |     "location" TEXT NOT NULL,
15 |     "category" TEXT NOT NULL DEFAULT 'SALE',
16 |     "type" TEXT NOT NULL DEFAULT 'APARTMENT',
17 |     "featured" BOOLEAN NOT NULL DEFAULT false,
18 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
19 |     "updatedAt" DATETIME NOT NULL
20 | );
21 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt" FROM "Property";
22 | DROP TABLE "Property";
23 | ALTER TABLE "new_Property" RENAME TO "Property";
24 | CREATE INDEX "Property_category_idx" ON "Property"("category");
25 | CREATE INDEX "Property_type_idx" ON "Property"("type");
26 | PRAGMA foreign_keys=ON;
27 | PRAGMA defer_foreign_keys=OFF;
28 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250113223215_wordpress_sync/migration.sql:
--------------------------------------------------------------------------------
 1 | /*
 2 |   Warnings:
 3 | 
 4 |   - You are about to drop the column `location` on the `Property` table. All the data in the column will be lost.
 5 | 
 6 | */
 7 | -- CreateTable
 8 | CREATE TABLE "Region" (
 9 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
10 |     "name" TEXT NOT NULL,
11 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
12 |     "updatedAt" DATETIME NOT NULL
13 | );
14 | 
15 | -- CreateTable
16 | CREATE TABLE "Neighborhood" (
17 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
18 |     "name" TEXT NOT NULL,
19 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
20 |     "updatedAt" DATETIME NOT NULL
21 | );
22 | 
23 | -- CreateTable
24 | CREATE TABLE "Feature" (
25 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
26 |     "name" TEXT NOT NULL,
27 |     "type" TEXT NOT NULL,
28 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
29 |     "updatedAt" DATETIME NOT NULL
30 | );
31 | 
32 | -- CreateTable
33 | CREATE TABLE "PropertyFeature" (
34 |     "propertyId" TEXT NOT NULL,
35 |     "featureId" INTEGER NOT NULL,
36 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
37 |     "updatedAt" DATETIME NOT NULL,
38 | 
39 |     PRIMARY KEY ("propertyId", "featureId"),
40 |     CONSTRAINT "PropertyFeature_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE,
41 |     CONSTRAINT "PropertyFeature_featureId_fkey" FOREIGN KEY ("featureId") REFERENCES "Feature" ("id") ON DELETE RESTRICT ON UPDATE CASCADE
42 | );
43 | 
44 | -- RedefineTables
45 | PRAGMA defer_foreign_keys=ON;
46 | PRAGMA foreign_keys=OFF;
47 | CREATE TABLE "new_Property" (
48 |     "id" TEXT NOT NULL PRIMARY KEY,
49 |     "title" TEXT NOT NULL,
50 |     "description" TEXT NOT NULL,
51 |     "price" REAL NOT NULL,
52 |     "currency" TEXT NOT NULL DEFAULT 'BGN',
53 |     "area_sqm" REAL NOT NULL,
54 |     "land_area_sqm" REAL,
55 |     "floor" INTEGER,
56 |     "total_floors" INTEGER,
57 |     "construction_type" TEXT,
58 |     "furnishing" TEXT,
59 |     "location_type" TEXT NOT NULL DEFAULT 'CITY',
60 |     "regionId" INTEGER,
61 |     "neighborhoodId" INTEGER,
62 |     "has_regulation" BOOLEAN,
63 |     "category" TEXT NOT NULL DEFAULT 'SALE',
64 |     "type" TEXT NOT NULL DEFAULT 'APARTMENT',
65 |     "featured" BOOLEAN NOT NULL DEFAULT false,
66 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
67 |     "updatedAt" DATETIME NOT NULL,
68 |     CONSTRAINT "Property_regionId_fkey" FOREIGN KEY ("regionId") REFERENCES "Region" ("id") ON DELETE SET NULL ON UPDATE CASCADE,
69 |     CONSTRAINT "Property_neighborhoodId_fkey" FOREIGN KEY ("neighborhoodId") REFERENCES "Neighborhood" ("id") ON DELETE SET NULL ON UPDATE CASCADE
70 | );
71 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "price", "title", "type", "updatedAt" FROM "Property";
72 | DROP TABLE "Property";
73 | ALTER TABLE "new_Property" RENAME TO "Property";
74 | CREATE INDEX "Property_category_idx" ON "Property"("category");
75 | CREATE INDEX "Property_type_idx" ON "Property"("type");
76 | CREATE INDEX "Property_regionId_idx" ON "Property"("regionId");
77 | CREATE INDEX "Property_neighborhoodId_idx" ON "Property"("neighborhoodId");
78 | PRAGMA foreign_keys=ON;
79 | PRAGMA defer_foreign_keys=OFF;
80 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250114224900_update_location_models/migration.sql:
--------------------------------------------------------------------------------
 1 | /*
 2 |   Warnings:
 3 | 
 4 |   - A unique constraint covering the columns `[name]` on the table `Neighborhood` will be added. If there are existing duplicate values, this will fail.
 5 |   - A unique constraint covering the columns `[name]` on the table `Region` will be added. If there are existing duplicate values, this will fail.
 6 | 
 7 | */
 8 | -- CreateIndex
 9 | CREATE UNIQUE INDEX "Neighborhood_name_key" ON "Neighborhood"("name");
10 | 
11 | -- CreateIndex
12 | CREATE UNIQUE INDEX "Region_name_key" ON "Region"("name");
13 | 


--------------------------------------------------------------------------------
/apps/api/prisma/schema.prisma:
--------------------------------------------------------------------------------
  1 | generator client {
  2 |   provider = "prisma-client-js"
  3 | }
  4 | 
  5 | datasource db {
  6 |   provider = "sqlite"
  7 |   url      = "file:./dev.db"
  8 | }
  9 | 
 10 | model User {
 11 |   id        String   @id @default(cuid())
 12 |   email     String   @unique
 13 |   name      String
 14 |   password  String
 15 |   role      String   @default("USER") // Can be "USER" or "ADMIN"
 16 |   createdAt DateTime @default(now())
 17 |   updatedAt DateTime @updatedAt
 18 | }
 19 | 
 20 | model Region {
 21 |   id         Int        @id @default(autoincrement())
 22 |   name       String     @unique
 23 |   properties Property[]
 24 |   createdAt  DateTime   @default(now())
 25 |   updatedAt  DateTime   @updatedAt
 26 | }
 27 | 
 28 | model Neighborhood {
 29 |   id         Int        @id @default(autoincrement())
 30 |   name       String     @unique
 31 |   properties Property[]
 32 |   createdAt  DateTime   @default(now())
 33 |   updatedAt  DateTime   @updatedAt
 34 | }
 35 | 
 36 | model Feature {
 37 |   id          Int               @id @default(autoincrement())
 38 |   name        String
 39 |   type        String            // 'INFRASTRUCTURE' or 'BUILDING'
 40 |   properties  PropertyFeature[]
 41 |   createdAt   DateTime          @default(now())
 42 |   updatedAt   DateTime          @updatedAt
 43 | }
 44 | 
 45 | model Property {
 46 |   id               String            @id @default(cuid())
 47 |   title            String
 48 |   description      String
 49 |   price            Float
 50 |   currency         String            @default("BGN") // BGN or EUR
 51 |   area_sqm         Float
 52 |   land_area_sqm    Float?
 53 |   floor            Int?
 54 |   total_floors     Int?
 55 |   construction_type String?          // BRICK, EPK, PK, PANEL, WOOD_FLOOR
 56 |   furnishing       String?           // FURNISHED, PARTIALLY_FURNISHED, UNFURNISHED
 57 |   location_type    String            @default("CITY") // CITY or REGION
 58 |   region           Region?           @relation(fields: [regionId], references: [id])
 59 |   regionId         Int?
 60 |   neighborhood     Neighborhood?     @relation(fields: [neighborhoodId], references: [id])
 61 |   neighborhoodId   Int?
 62 |   has_regulation   Boolean?
 63 |   category         String            @default("SALE") // SALE or RENT
 64 |   type             String            @default("APARTMENT") // APARTMENT, HOUSE, LAND, COMMERCIAL, INDUSTRIAL
 65 |   featured         Boolean           @default(false)
 66 |   images           Image[]
 67 |   contact_info     ContactInfo?
 68 |   features         PropertyFeature[]
 69 |   createdAt        DateTime          @default(now())
 70 |   updatedAt        DateTime          @updatedAt
 71 | 
 72 |   @@index([category])
 73 |   @@index([type])
 74 |   @@index([regionId])
 75 |   @@index([neighborhoodId])
 76 | }
 77 | 
 78 | model PropertyFeature {
 79 |   propertyId String
 80 |   featureId  Int
 81 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
 82 |   feature    Feature  @relation(fields: [featureId], references: [id])
 83 |   createdAt  DateTime @default(now())
 84 |   updatedAt  DateTime @updatedAt
 85 | 
 86 |   @@id([propertyId, featureId])
 87 | }
 88 | 
 89 | model Image {
 90 |   id         String   @id @default(cuid())
 91 |   url        String
 92 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
 93 |   propertyId String
 94 |   createdAt  DateTime @default(now())
 95 |   updatedAt  DateTime @updatedAt
 96 | }
 97 | 
 98 | model ContactInfo {
 99 |   id         String   @id @default(cuid())
100 |   phone      String
101 |   email      String
102 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
103 |   propertyId String   @unique
104 |   createdAt  DateTime @default(now())
105 |   updatedAt  DateTime @updatedAt
106 | }
107 | 
108 | model ContactMessage {
109 |   id        String   @id @default(cuid())
110 |   name      String
111 |   email     String
112 |   message   String
113 |   isRead    Boolean  @default(false)
114 |   createdAt DateTime @default(now())
115 |   updatedAt DateTime @updatedAt
116 | } 
117 | 


--------------------------------------------------------------------------------
/apps/api/prisma/seed.ts:
--------------------------------------------------------------------------------
  1 | import { PrismaClient } from '@prisma/client';
  2 | import bcryptjs from 'bcryptjs';
  3 | import { randomUUID } from 'crypto';
  4 | 
  5 | const prisma = new PrismaClient();
  6 | 
  7 | // Data mapping constants
  8 | const CURRENCY_MAP = {
  9 |   euro: 'EUR',
 10 |   bgn: 'BGN',
 11 | } as const;
 12 | 
 13 | const CONSTRUCTION_TYPE_MAP = {
 14 |   brick: 'BRICK',
 15 |   epk: 'EPK',
 16 |   pk: 'PK',
 17 |   panel: 'PANEL',
 18 |   wood: 'WOOD_FLOOR',
 19 | } as const;
 20 | 
 21 | const FURNISHING_MAP = {
 22 |   furnished: 'FURNISHED',
 23 |   partially_furnished: 'PARTIALLY_FURNISHED',
 24 |   unfurnished: 'UNFURNISHED',
 25 | } as const;
 26 | 
 27 | const PROPERTY_TYPE_MAP = {
 28 |   apartment: 'APARTMENT',
 29 |   house: 'HOUSE',
 30 |   land: 'LAND',
 31 |   commercial: 'COMMERCIAL',
 32 |   industrial: 'INDUSTRIAL',
 33 | } as const;
 34 | 
 35 | const regions = [
 36 |   { id: 1, name: "главен път Е85" },
 37 |   { id: 2, name: "гр. Борово" },
 38 |   { id: 3, name: "гр. Бяла" },
 39 |   { id: 4, name: "гр. Ветово" },
 40 |   { id: 5, name: "гр. Глоджево" },
 41 |   { id: 6, name: "гр. Две могили" },
 42 |   { id: 7, name: "гр. Мартен" },
 43 |   { id: 8, name: "гр. Сеново" },
 44 |   { id: 9, name: "гр. Сливо поле" },
 45 |   { id: 10, name: "с. Бабово" },
 46 |   { id: 11, name: "с. Баниска" },
 47 |   { id: 12, name: "с. Басарбово" },
 48 |   { id: 13, name: "с. Батин" },
 49 |   { id: 14, name: "с. Батишница" },
 50 |   { id: 15, name: "с. Белцов" },
 51 |   { id: 16, name: "с. Беляново" },
 52 |   { id: 17, name: "с. Бистренци" },
 53 |   { id: 18, name: "с. Божичен" },
 54 |   { id: 19, name: "с. Борисово" },
 55 |   { id: 20, name: "с. Босилковци" },
 56 |   { id: 21, name: "с. Ботров" },
 57 |   { id: 22, name: "с. Брестовица" },
 58 |   { id: 23, name: "с. Бръшлен" },
 59 |   { id: 24, name: "с. Бъзовец" },
 60 |   { id: 25, name: "с. Бъзън" },
 61 |   { id: 26, name: "с. Волово" },
 62 |   { id: 27, name: "с. Голямо Враново" },
 63 |   { id: 28, name: "с. Горно Абланово" },
 64 |   { id: 29, name: "с. Джулюница" },
 65 |   { id: 30, name: "с. Долна Студена" },
 66 |   { id: 31, name: "с. Долно Абланово" },
 67 |   { id: 32, name: "с. Дряновец" },
 68 |   { id: 33, name: "с. Екзарх Йосиф" },
 69 |   { id: 34, name: "с. Иваново" },
 70 |   { id: 35, name: "с. Караманово" },
 71 |   { id: 36, name: "с. Каран Върбовка" },
 72 |   { id: 37, name: "с. Кацелово" },
 73 |   { id: 38, name: "с. Копривец" },
 74 |   { id: 39, name: "с. Кошарна" },
 75 |   { id: 40, name: "с. Кошов" },
 76 |   { id: 41, name: "с. Красен" },
 77 |   { id: 42, name: "с. Кривина" },
 78 |   { id: 43, name: "с. Кривня" },
 79 |   { id: 44, name: "с. Лом Черковна" },
 80 |   { id: 45, name: "с. Малко Враново" },
 81 |   { id: 46, name: "с. Мечка" },
 82 |   { id: 47, name: "с. Могилино" },
 83 |   { id: 48, name: "с. Николово" },
 84 |   { id: 49, name: "с. Нисово" },
 85 |   { id: 50, name: "с. Новград" },
 86 |   { id: 51, name: "с. Ново село" },
 87 |   { id: 52, name: "с. Обретеник" },
 88 |   { id: 53, name: "с. Острица" },
 89 |   { id: 54, name: "с. Пейчиново" },
 90 |   { id: 55, name: "с. Пепелина" },
 91 |   { id: 56, name: "с. Пет кладенци" },
 92 |   { id: 57, name: "с. Пиперково" },
 93 |   { id: 58, name: "с. Пиргово" },
 94 |   { id: 59, name: "с. Писанец" },
 95 |   { id: 60, name: "с. Полско Косово" },
 96 |   { id: 61, name: "с. Помен" },
 97 |   { id: 62, name: "с. Просена" },
 98 |   { id: 63, name: "с. Ряхово" },
 99 |   { id: 64, name: "с. Сандрово" },
100 |   { id: 65, name: "с. Сваленик" },
101 |   { id: 66, name: "с. Семерджиево" },
102 |   { id: 67, name: "с. Смирненски" },
103 |   { id: 68, name: "с. Стамболово" },
104 |   { id: 69, name: "с. Стърмен" },
105 |   { id: 70, name: "с. Табачка" },
106 |   { id: 71, name: "с. Тетово" },
107 |   { id: 72, name: "с. Тръстеник" },
108 |   { id: 73, name: "с. Хотанца" },
109 |   { id: 74, name: "с. Ценово" },
110 |   { id: 75, name: "с. Церовец" },
111 |   { id: 76, name: "с. Червен" },
112 |   { id: 77, name: "с. Червена вода" },
113 |   { id: 78, name: "с. Черешово" },
114 |   { id: 79, name: "с. Чилнов" },
115 |   { id: 80, name: "с. Широково" },
116 |   { id: 81, name: "с. Щръклево" },
117 |   { id: 82, name: "с. Юделник" },
118 |   { id: 83, name: "с. Ястребово" }
119 | ];
120 | 
121 | const neighborhoods = [
122 |   { id: 1, name: "Алеи Възраждане" },
123 |   { id: 2, name: "Басарбово" },
124 |   { id: 3, name: "Веждата" },
125 |   { id: 4, name: "Възраждане" },
126 |   { id: 5, name: "Долапите" },
127 |   { id: 6, name: "Дружба 1" },
128 |   { id: 7, name: "Дружба 2" },
129 |   { id: 8, name: "Дружба 3" },
130 |   { id: 9, name: "Завод Найден Киров" },
131 |   { id: 10, name: "Захарна фабрика" },
132 |   { id: 11, name: "Здравец" },
133 |   { id: 12, name: "Здравец Изток" },
134 |   { id: 13, name: "Здравец Север 1" },
135 |   { id: 14, name: "Здравец Север 2" },
136 |   { id: 15, name: "КТМ" },
137 |   { id: 16, name: "Мальовица" },
138 |   { id: 17, name: "Мидия Енос" },
139 |   { id: 18, name: "Нова промишлена зона" },
140 |   { id: 19, name: "Новата махала" },
141 |   { id: 20, name: "Промишлена зона - Запад" },
142 |   { id: 21, name: "Промишлена зона - Изток" },
143 |   { id: 22, name: "Родина 1" },
144 |   { id: 23, name: "Родина 2" },
145 |   { id: 24, name: "Родина 3" },
146 |   { id: 25, name: "Родина 4" },
147 |   { id: 26, name: "Сарая" },
148 |   { id: 27, name: "Средна кула" },
149 |   { id: 28, name: "Товарна гара" },
150 |   { id: 29, name: "Тракцията" },
151 |   { id: 30, name: "Търговия на едро" },
152 |   { id: 31, name: "Хъшове" },
153 |   { id: 32, name: "Цветница" },
154 |   { id: 33, name: "Централен кооп. Пазар" },
155 |   { id: 34, name: "Централен южен район" },
156 |   { id: 35, name: "Център" },
157 |   { id: 36, name: "Чародейка - Север" },
158 |   { id: 37, name: "Чародейка - Юг" },
159 |   { id: 38, name: "Широк център" },
160 |   { id: 39, name: "Ялта" },
161 |   { id: 40, name: "в.з. Д. Басарбовски" },
162 |   { id: 41, name: "в.з. Касева Чешма" },
163 |   { id: 42, name: "в.з. Кръста" },
164 |   { id: 43, name: "в.з. Кулата" },
165 |   { id: 44, name: "в.з. Левента" },
166 |   { id: 45, name: "в.з. Липака" },
167 |   { id: 46, name: "в.з. Русофили" },
168 |   { id: 47, name: "в.з. Средна кула" },
169 |   { id: 48, name: "в.з. Трите гълъба" },
170 |   { id: 49, name: "Птицекомбинат" },
171 |   { id: 50, name: "с. Николово" }
172 | ];
173 | 
174 | const infrastructureFeatures = [
175 |   { name: "Ток", type: "INFRASTRUCTURE" },
176 |   { name: "Вода", type: "INFRASTRUCTURE" },
177 |   { name: "Ограда", type: "INFRASTRUCTURE" },
178 |   { name: "Асвалтов път", type: "INFRASTRUCTURE" },
179 |   { name: "Черен път", type: "INFRASTRUCTURE" }
180 | ];
181 | 
182 | const buildingFeatures = [
183 |   { name: "ТЕЦ", type: "BUILDING" },
184 |   { name: "Газ", type: "BUILDING" },
185 |   { name: "Климатик", type: "BUILDING" },
186 |   { name: "Локално парно", type: "BUILDING" },
187 |   { name: "В строеж", type: "BUILDING" },
188 |   { name: "С преход", type: "BUILDING" },
189 |   { name: "Асансьор", type: "BUILDING" },
190 |   { name: "Гараж", type: "BUILDING" },
191 |   { name: "Паркинг", type: "BUILDING" },
192 |   { name: "С действащ бизнес", type: "BUILDING" },
193 |   { name: "Видео наблюдение", type: "BUILDING" },
194 |   { name: "Охрана", type: "BUILDING" },
195 |   { name: "Саниран", type: "BUILDING" },
196 |   { name: "Тераса", type: "BUILDING" }
197 | ];
198 | 
199 | async function main() {
200 |   try {
201 |     // Create admin user
202 |     const salt = await bcryptjs.genSalt(10);
203 |     const hashedPassword = await bcryptjs.hash('admin123', salt);
204 | 
205 |     const admin = await prisma.user.upsert({
206 |       where: { email: 'admin@avalon.bg' },
207 |       update: {},
208 |       create: {
209 |         email: 'admin@avalon.bg',
210 |         name: 'Admin',
211 |         password: hashedPassword,
212 |         role: 'ADMIN',
213 |       },
214 |     });
215 | 
216 |     console.log('Created admin user:', admin.email);
217 | 
218 |     // Seed regions
219 |     console.log('Seeding regions...');
220 |     for (const region of regions) {
221 |       await prisma.$transaction([
222 |         prisma.$executeRaw`INSERT OR IGNORE INTO Region (id, name, createdAt, updatedAt) VALUES (${region.id}, ${region.name}, datetime('now'), datetime('now'))`
223 |       ]);
224 |     }
225 | 
226 |     // Seed neighborhoods
227 |     console.log('Seeding neighborhoods...');
228 |     for (const neighborhood of neighborhoods) {
229 |       await prisma.$transaction([
230 |         prisma.$executeRaw`INSERT OR IGNORE INTO Neighborhood (id, name, createdAt, updatedAt) VALUES (${neighborhood.id}, ${neighborhood.name}, datetime('now'), datetime('now'))`
231 |       ]);
232 |     }
233 | 
234 |     // Seed features
235 |     console.log('Seeding features...');
236 |     const allFeatures = [...infrastructureFeatures, ...buildingFeatures];
237 |     for (const [index, feature] of allFeatures.entries()) {
238 |       await prisma.$transaction([
239 |         prisma.$executeRaw`INSERT OR IGNORE INTO Feature (id, name, type, createdAt, updatedAt) VALUES (${index + 1}, ${feature.name}, ${feature.type}, datetime('now'), datetime('now'))`
240 |       ]);
241 |     }
242 | 
243 |     // Create sample properties
244 |     console.log('Creating sample properties...');
245 |     const sampleProperties = [
246 |       {
247 |         title: 'Магазин, кв. Възраждане, 267000 €',
248 |         description: 'Агенция за недвижими имоти АВАЛОН Ви представя магазин в кв. Възраждане. Имотът е с площ от 149 кв.м. и се намира на партерен етаж в тухлена сграда. Подходящ за всякакъв вид търговска дейност.',
249 |         price: 267000,
250 |         currency: 'EUR',
251 |         area_sqm: 149,
252 |         floor: 0,
253 |         total_floors: 1,
254 |         construction_type: 'BRICK',
255 |         furnishing: 'UNFURNISHED',
256 |         location_type: 'CITY',
257 |         neighborhoodId: 4,
258 |         has_regulation: false,
259 |         category: 'SALE',
260 |         type: 'COMMERCIAL',
261 |         featured: false,
262 |         contact_info: {
263 |           phone: '+359888123456',
264 |           email: 'office@avalon.bg'
265 |         }
266 |       },
267 |       {
268 |         title: 'Тристаен апартамент, кв. Дружба 3, 95000 €',
269 |         description: 'Просторен тристаен апартамент в кв. Дружба 3. Имотът е с площ от 85 кв.м. и се намира на 4-ти етаж в панелна сграда. Състои се от хол, две спални, кухня, баня с тоалетна и две тераси.',
270 |         price: 95000,
271 |         currency: 'EUR',
272 |         area_sqm: 85,
273 |         floor: 4,
274 |         total_floors: 8,
275 |         construction_type: 'PANEL',
276 |         furnishing: 'PARTIALLY_FURNISHED',
277 |         location_type: 'CITY',
278 |         neighborhoodId: 8,
279 |         has_regulation: false,
280 |         category: 'SALE',
281 |         type: 'APARTMENT',
282 |         featured: true,
283 |         contact_info: {
284 |           phone: '+359888123456',
285 |           email: 'office@avalon.bg'
286 |         }
287 |       },
288 |       {
289 |         title: 'Къща, с. Николово, 120000 €',
290 |         description: 'Двуетажна къща в с. Николово. Имотът е с площ от 180 кв.м. РЗП и двор от 1000 кв.м. Състои се от първи етаж с хол, кухня, баня с тоалетна и втори етаж с три спални и баня.',
291 |         price: 120000,
292 |         currency: 'EUR',
293 |         area_sqm: 180,
294 |         land_area_sqm: 1000,
295 |         floor: 2,
296 |         total_floors: 2,
297 |         construction_type: 'BRICK',
298 |         furnishing: 'FURNISHED',
299 |         location_type: 'REGION',
300 |         regionId: 48,
301 |         has_regulation: true,
302 |         category: 'SALE',
303 |         type: 'HOUSE',
304 |         featured: true,
305 |         contact_info: {
306 |           phone: '+359888123456',
307 |           email: 'office@avalon.bg'
308 |         }
309 |       },
310 |       {
311 |         title: 'Парцел, с. Басарбово, 25000 €',
312 |         description: 'Парцел в с. Басарбово с площ от 2000 кв.м. Имотът е с лице на главен път и е подходящ за жилищно строителство.',
313 |         price: 25000,
314 |         currency: 'EUR',
315 |         area_sqm: 2000,
316 |         location_type: 'REGION',
317 |         regionId: 12,
318 |         has_regulation: true,
319 |         category: 'SALE',
320 |         type: 'LAND',
321 |         featured: false,
322 |         contact_info: {
323 |           phone: '+359888123456',
324 |           email: 'office@avalon.bg'
325 |         }
326 |       }
327 |     ];
328 | 
329 |     for (const propertyData of sampleProperties) {
330 |       const property = await prisma.property.create({
331 |         data: {
332 |           ...propertyData,
333 |           contact_info: {
334 |             create: propertyData.contact_info
335 |           }
336 |         }
337 |       });
338 |       console.log('Created property:', property.title);
339 |     }
340 | 
341 |     console.log('Seeding completed successfully');
342 |   } catch (error) {
343 |     console.error('Error seeding database:', error);
344 |     throw error;
345 |   } finally {
346 |     await prisma.$disconnect();
347 |   }
348 | }
349 | 
350 | main(); 
351 | 


--------------------------------------------------------------------------------
/apps/api/scripts/fix-property-categories.ts:
--------------------------------------------------------------------------------
 1 | import { PrismaClient } from '@prisma/client';
 2 | 
 3 | const prisma = new PrismaClient();
 4 | 
 5 | async function main() {
 6 |   try {
 7 |     // Update any properties with incorrect category values
 8 |     await prisma.property.updateMany({
 9 |       where: {
10 |         category: 'Residential',
11 |       },
12 |       data: {
13 |         category: 'SALE',
14 |       },
15 |     });
16 | 
17 |     console.log('Successfully updated property categories');
18 |   } catch (error) {
19 |     console.error('Error updating property categories:', error);
20 |     process.exit(1);
21 |   } finally {
22 |     await prisma.$disconnect();
23 |   }
24 | }
25 | 
26 | main(); 
27 | 


--------------------------------------------------------------------------------
/apps/api/src/config/multer.ts:
--------------------------------------------------------------------------------
 1 | import multer, { FileFilterCallback } from 'multer';
 2 | import path from 'path';
 3 | import { Request } from 'express';
 4 | import { AppError } from '../middleware/error';
 5 | 
 6 | type DestinationCallback = (error: Error | null, destination: string) => void;
 7 | type FileNameCallback = (error: Error | null, filename: string) => void;
 8 | 
 9 | // Configure multer for image uploads
10 | const storage = multer.diskStorage({
11 |   destination: (_req: Request, _file: Express.Multer.File, cb: DestinationCallback) => {
12 |     cb(null, path.join(process.cwd(), 'uploads/properties'));
13 |   },
14 |   filename: (_req: Request, file: Express.Multer.File, cb: FileNameCallback) => {
15 |     const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1e9);
16 |     cb(null, uniqueSuffix + path.extname(file.originalname));
17 |   },
18 | });
19 | 
20 | const fileFilter = (_req: Request, file: Express.Multer.File, cb: FileFilterCallback) => {
21 |   const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
22 |   if (!allowedTypes.includes(file.mimetype)) {
23 |     cb(new AppError(400, 'Invalid file type. Only JPEG, PNG and WebP are allowed'));
24 |     return;
25 |   }
26 |   cb(null, true);
27 | };
28 | 
29 | export const upload = multer({
30 |   storage,
31 |   fileFilter,
32 |   limits: {
33 |     fileSize: 10 * 1024 * 1024, // 10MB
34 |   },
35 | }); 
36 | 


--------------------------------------------------------------------------------
/apps/api/src/index.ts:
--------------------------------------------------------------------------------
1 | import app from './server';
2 | 
3 | const port = process.env.PORT || 3001;
4 | app.listen(port, () => {
5 |   console.log(`Server is running on port ${port}`);
6 | }); 
7 | 


--------------------------------------------------------------------------------
/apps/api/src/lib/contact.ts:
--------------------------------------------------------------------------------
 1 | import nodemailer from 'nodemailer';
 2 | import { ContactFormData } from '../types/contact';
 3 | import { AppError } from '../middleware/error';
 4 | 
 5 | // Configure nodemailer with environment variables
 6 | const transporter = nodemailer.createTransport({
 7 |   host: process.env.SMTP_HOST,
 8 |   port: parseInt(process.env.SMTP_PORT || '587'),
 9 |   secure: process.env.SMTP_SECURE === 'true',
10 |   auth: {
11 |     user: process.env.SMTP_USER,
12 |     pass: process.env.SMTP_PASS,
13 |   },
14 | });
15 | 
16 | export async function verifyRecaptcha(token: string): Promise<boolean> {
17 |   try {
18 |     const response = await fetch('https://www.google.com/recaptcha/api/siteverify', {
19 |       method: 'POST',
20 |       headers: {
21 |         'Content-Type': 'application/x-www-form-urlencoded',
22 |       },
23 |       body: new URLSearchParams({
24 |         secret: process.env.RECAPTCHA_SECRET_KEY || '',
25 |         response: token,
26 |       }),
27 |     });
28 | 
29 |     const data = await response.json();
30 |     return data.success;
31 |   } catch (error) {
32 |     console.error('reCAPTCHA verification failed:', error);
33 |     return false;
34 |   }
35 | }
36 | 
37 | export async function sendContactEmail(formData: ContactFormData & { recaptchaToken?: string }): Promise<void> {
38 |   const { name, email, message } = formData;
39 | 
40 |   // Verify reCAPTCHA token if provided
41 |   if (formData.recaptchaToken) {
42 |     const isValidRecaptcha = await verifyRecaptcha(formData.recaptchaToken);
43 |     if (!isValidRecaptcha) {
44 |       throw new AppError(400, 'reCAPTCHA verification failed');
45 |     }
46 |   }
47 | 
48 |   try {
49 |     // Send email to admin
50 |     await transporter.sendMail({
51 |       from: process.env.SMTP_FROM,
52 |       to: process.env.ADMIN_EMAIL,
53 |       subject: `New Contact Form Submission from ${name}`,
54 |       html: `
55 |         <h2>New Contact Form Submission</h2>
56 |         <p><strong>Name:</strong> ${name}</p>
57 |         <p><strong>Email:</strong> ${email}</p>
58 |         <p><strong>Message:</strong></p>
59 |         <p>${message}</p>
60 |       `,
61 |     });
62 | 
63 |     // Send confirmation email to user
64 |     await transporter.sendMail({
65 |       from: process.env.SMTP_FROM,
66 |       to: email,
67 |       subject: 'Thank you for contacting us',
68 |       html: `
69 |         <h2>Thank you for contacting us</h2>
70 |         <p>Dear ${name},</p>
71 |         <p>We have received your message and will get back to you as soon as possible.</p>
72 |         <p>Best regards,<br>The Property AI Team</p>
73 |       `,
74 |     });
75 |   } catch (error) {
76 |     console.error('Failed to send email:', error);
77 |     throw new AppError(500, 'Failed to send email');
78 |   }
79 | } 
80 | 


--------------------------------------------------------------------------------
/apps/api/src/lib/logger.ts:
--------------------------------------------------------------------------------
 1 | import winston from 'winston';
 2 | import path from 'path';
 3 | 
 4 | const logDir = 'logs';
 5 | const { combine, timestamp, printf, colorize } = winston.format;
 6 | 
 7 | // Custom log format
 8 | const logFormat = printf(({ level, message, timestamp, ...metadata }) => {
 9 |   let msg = `${timestamp} [${level}] : ${message}`;
10 |   if (Object.keys(metadata).length > 0) {
11 |     msg += ` ${JSON.stringify(metadata)}`;
12 |   }
13 |   return msg;
14 | });
15 | 
16 | // Create logger instance
17 | const logger = winston.createLogger({
18 |   level: process.env.NODE_ENV === 'production' ? 'info' : 'debug',
19 |   format: combine(
20 |     timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
21 |     logFormat
22 |   ),
23 |   transports: [
24 |     // Console transport with colors
25 |     new winston.transports.Console({
26 |       format: combine(
27 |         colorize(),
28 |         timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
29 |         logFormat
30 |       ),
31 |     }),
32 |     // File transport for errors
33 |     new winston.transports.File({
34 |       filename: path.join(logDir, 'error.log'),
35 |       level: 'error',
36 |       maxsize: 5242880, // 5MB
37 |       maxFiles: 5,
38 |     }),
39 |     // File transport for all logs
40 |     new winston.transports.File({
41 |       filename: path.join(logDir, 'combined.log'),
42 |       maxsize: 5242880, // 5MB
43 |       maxFiles: 5,
44 |     }),
45 |   ],
46 | });
47 | 
48 | // Create a stream object for Morgan
49 | export const stream = {
50 |   write: (message: string) => {
51 |     logger.info(message.trim());
52 |   },
53 | };
54 | 
55 | export default logger; 
56 | 


--------------------------------------------------------------------------------
/apps/api/src/lib/prisma.ts:
--------------------------------------------------------------------------------
1 | import { PrismaClient } from '@prisma/client';
2 | 
3 | const prisma = new PrismaClient();
4 | 
5 | export default prisma; 
6 | 


--------------------------------------------------------------------------------
/apps/api/src/middleware/auth.ts:
--------------------------------------------------------------------------------
 1 | import { Request, Response, NextFunction } from 'express';
 2 | import jwt from 'jsonwebtoken';
 3 | import prisma from '../lib/prisma';
 4 | import { AppError } from './error';
 5 | import { User, UserRole } from '@avalon/shared-types';
 6 | 
 7 | // Extend Express Request type to include user
 8 | declare global {
 9 |   namespace Express {
10 |     interface Request {
11 |       user?: User;
12 |     }
13 |   }
14 | }
15 | 
16 | interface JwtPayload {
17 |   id: string;
18 | }
19 | 
20 | const mapUserToResponse = (user: { 
21 |   id: string; 
22 |   name: string; 
23 |   email: string; 
24 |   role: string;
25 |   createdAt: Date;
26 | }): User => ({
27 |   id: user.id,
28 |   name: user.name,
29 |   email: user.email,
30 |   role: user.role as UserRole,
31 |   createdAt: user.createdAt.toISOString()
32 | });
33 | 
34 | // Protect routes
35 | export const protect = async (req: Request, res: Response, next: NextFunction) => {
36 |   try {
37 |     // Get token from header
38 |     const token = req.headers.authorization?.replace('Bearer ', '');
39 | 
40 |     if (!token) {
41 |       throw new AppError(401, 'Please log in to access this resource');
42 |     }
43 | 
44 |     // Verify token
45 |     const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JwtPayload;
46 | 
47 |     // Get user from token
48 |     const user = await prisma.user.findUnique({
49 |       where: { id: decoded.id },
50 |       select: {
51 |         id: true,
52 |         name: true,
53 |         email: true,
54 |         role: true,
55 |         createdAt: true
56 |       },
57 |     });
58 | 
59 |     if (!user) {
60 |       throw new AppError(401, 'The user belonging to this token no longer exists');
61 |     }
62 | 
63 |     // Add user to request
64 |     req.user = mapUserToResponse(user);
65 |     next();
66 |   } catch (error) {
67 |     next(error);
68 |   }
69 | };
70 | 
71 | // Restrict to certain roles
72 | export const restrictTo = (role: UserRole) => {
73 |   return (req: Request, res: Response, next: NextFunction) => {
74 |     if (req.user?.role !== role) {
75 |       throw new AppError(403, 'You do not have permission to perform this action');
76 |     }
77 |     next();
78 |   };
79 | }; 
80 | 


--------------------------------------------------------------------------------
/apps/api/src/middleware/error.ts:
--------------------------------------------------------------------------------
 1 | import { Request, Response, NextFunction } from 'express';
 2 | import { ZodError } from 'zod';
 3 | import { Prisma } from '@prisma/client';
 4 | 
 5 | export class AppError extends Error {
 6 |   statusCode: number;
 7 | 
 8 |   constructor(message: string, statusCode: string | number) {
 9 |     super(message);
10 |     this.statusCode = typeof statusCode === 'string' ? parseInt(statusCode) : statusCode;
11 |     Error.captureStackTrace(this, this.constructor);
12 |   }
13 | }
14 | 
15 | export const errorHandler = (
16 |   err: Error,
17 |   _req: Request,
18 |   res: Response,
19 |   _next: NextFunction
20 | ) => {
21 |   console.error('Error:', err);
22 | 
23 |   // Custom application error
24 |   if (err instanceof AppError) {
25 |     return res.status(err.statusCode).json({
26 |       status: 'error',
27 |       message: err.message,
28 |     });
29 |   }
30 | 
31 |   // Zod validation error
32 |   if (err instanceof ZodError) {
33 |     return res.status(400).json({
34 |       status: 'error',
35 |       message: 'Validation error',
36 |       errors: err.errors,
37 |     });
38 |   }
39 | 
40 |   // Prisma error
41 |   if (err instanceof Prisma.PrismaClientKnownRequestError) {
42 |     if (err.code === 'P2002') {
43 |       return res.status(409).json({
44 |         status: 'error',
45 |         message: 'A record with this value already exists',
46 |       });
47 |     }
48 |   }
49 | 
50 |   // Default error
51 |   return res.status(500).json({
52 |     status: 'error',
53 |     message: 'Internal server error',
54 |   });
55 | }; 
56 | 


--------------------------------------------------------------------------------
/apps/api/src/middleware/rateLimiter.ts:
--------------------------------------------------------------------------------
 1 | import rateLimit from 'express-rate-limit';
 2 | import { AppError } from './error';
 3 | import logger from '../lib/logger';
 4 | 
 5 | // Rate limiter for contact form
 6 | export const contactFormLimiter = rateLimit({
 7 |   windowMs: 60 * 60 * 1000, // 1 hour window
 8 |   max: 5, // limit each IP to 5 requests per windowMs
 9 |   message: 'Too many contact requests from this IP, please try again after an hour',
10 |   handler: (req, res, next, options) => {
11 |     logger.warn(`Rate limit exceeded for IP: ${req.ip}`);
12 |     next(new AppError(429, options.message));
13 |   },
14 |   standardHeaders: true, // Return rate limit info in the `RateLimit-*` headers
15 |   legacyHeaders: false, // Disable the `X-RateLimit-*` headers
16 | });
17 | 
18 | // General API rate limiter
19 | export const apiLimiter = rateLimit({
20 |   windowMs: 15 * 60 * 1000, // 15 minutes
21 |   max: 100, // limit each IP to 100 requests per windowMs
22 |   message: 'Too many requests from this IP, please try again after 15 minutes',
23 |   handler: (req, res, next, options) => {
24 |     logger.warn(`API rate limit exceeded for IP: ${req.ip}`);
25 |     next(new AppError(429, options.message));
26 |   },
27 |   standardHeaders: true,
28 |   legacyHeaders: false,
29 | }); 
30 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/__tests__/properties.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, it, expect, beforeAll, afterAll } from '@jest/globals';
  2 | import request from 'supertest';
  3 | import bcrypt from 'bcryptjs';
  4 | import app from '../../server';
  5 | import prisma from '../../lib/prisma';
  6 | import jwt from 'jsonwebtoken';
  7 | import { PropertyType, PropertyCategory, Currency, LocationType, UserRole } from '@avalon/shared-types';
  8 | 
  9 | describe('Property Routes', () => {
 10 |   let adminToken: string;
 11 | 
 12 |   beforeAll(async () => {
 13 |     // Create an admin user for testing
 14 |     const hashedPassword = await bcrypt.hash('password123', 10);
 15 |     const admin = await prisma.user.create({
 16 |       data: {
 17 |         name: 'Admin User',
 18 |         email: 'admin@test.com',
 19 |         password: hashedPassword,
 20 |         role: 'ADMIN',
 21 |       },
 22 |     });
 23 | 
 24 |     // Get JWT token for admin
 25 |     const response = await request(app)
 26 |       .post('/api/auth/login')
 27 |       .send({
 28 |         email: 'admin@test.com',
 29 |         password: 'password123',
 30 |       });
 31 | 
 32 |     console.log('Login response:', response.body);
 33 |     adminToken = response.body.data.token;
 34 |   });
 35 | 
 36 |   afterAll(async () => {
 37 |     // Clean up test data
 38 |     await prisma.user.deleteMany({
 39 |       where: {
 40 |         email: 'admin@test.com',
 41 |       },
 42 |     });
 43 |   });
 44 | 
 45 |   describe('GET /properties', () => {
 46 |     it('should return a list of properties', async () => {
 47 |       const response = await request(app)
 48 |         .get('/api/properties')
 49 |         .expect(200);
 50 | 
 51 |       expect(response.body.status).toBe('success');
 52 |       expect(Array.isArray(response.body.data.data)).toBe(true);
 53 |     });
 54 | 
 55 |     it('should filter properties by price range', async () => {
 56 |       const response = await request(app)
 57 |         .get('/api/properties')
 58 |         .query({ min_price: '100000', max_price: '500000' })
 59 |         .expect(200);
 60 | 
 61 |       expect(response.body.status).toBe('success');
 62 |       expect(Array.isArray(response.body.data.data)).toBe(true);
 63 |     });
 64 |   });
 65 | 
 66 |   describe('POST /properties', () => {
 67 |     it('should create a new property when authenticated as admin', async () => {
 68 |       const propertyData = {
 69 |         title: 'Test Property',
 70 |         description: 'A test property description',
 71 |         price: 200000,
 72 |         currency: Currency.USD,
 73 |         area_sqm: 120,
 74 |         type: PropertyType.APARTMENT,
 75 |         category: PropertyCategory.SALE,
 76 |         location_type: LocationType.CITY,
 77 |         contact_info: {
 78 |           phone: '+1234567890',
 79 |           email: 'contact@test.com'
 80 |         }
 81 |       };
 82 | 
 83 |       const response = await request(app)
 84 |         .post('/api/properties')
 85 |         .set('Authorization', `Bearer ${adminToken}`)
 86 |         .field('title', propertyData.title)
 87 |         .field('description', propertyData.description)
 88 |         .field('price', propertyData.price.toString())
 89 |         .field('currency', propertyData.currency)
 90 |         .field('area_sqm', propertyData.area_sqm.toString())
 91 |         .field('type', propertyData.type)
 92 |         .field('category', propertyData.category)
 93 |         .field('location_type', propertyData.location_type)
 94 |         .field('contact_info', JSON.stringify(propertyData.contact_info))
 95 |         .expect(201);
 96 | 
 97 |       console.log('Create property response:', response.body);
 98 |       expect(response.body.status).toBe('success');
 99 |       expect(response.body.data.property).toBeDefined();
100 |       expect(response.body.data.property.title).toBe(propertyData.title);
101 |     });
102 | 
103 |     it('should return 401 when not authenticated', async () => {
104 |       const propertyData = {
105 |         title: 'Test Property',
106 |         description: 'A test property description',
107 |         price: 200000,
108 |         currency: Currency.USD,
109 |         area_sqm: 120,
110 |         type: PropertyType.APARTMENT,
111 |         category: PropertyCategory.SALE,
112 |         location_type: LocationType.CITY,
113 |         contact_info: {
114 |           phone: '+1234567890',
115 |           email: 'contact@test.com'
116 |         }
117 |       };
118 | 
119 |       await request(app)
120 |         .post('/api/properties')
121 |         .field('title', propertyData.title)
122 |         .field('description', propertyData.description)
123 |         .field('price', propertyData.price.toString())
124 |         .field('currency', propertyData.currency)
125 |         .field('area_sqm', propertyData.area_sqm.toString())
126 |         .field('type', propertyData.type)
127 |         .field('category', propertyData.category)
128 |         .field('location_type', propertyData.location_type)
129 |         .field('contact_info', JSON.stringify(propertyData.contact_info))
130 |         .expect(401);
131 |     });
132 |   });
133 | }); 
134 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/__tests__/setup.ts:
--------------------------------------------------------------------------------
 1 | import { describe, it, expect } from '@jest/globals';
 2 | 
 3 | // Set test environment variables
 4 | process.env.NODE_ENV = 'test';
 5 | process.env.JWT_SECRET = 'test-secret-key';
 6 | process.env.JWT_EXPIRES_IN = '30d';
 7 | process.env.DATABASE_URL = 'file:./test.db';
 8 | 
 9 | // Configure test timeouts
10 | jest.setTimeout(30000);
11 | 
12 | describe('Test Environment Setup', () => {
13 |   it('should have correct environment variables', () => {
14 |     expect(process.env.NODE_ENV).toBe('test');
15 |     expect(process.env.JWT_SECRET).toBe('test-secret-key');
16 |     expect(process.env.JWT_EXPIRES_IN).toBe('30d');
17 |     expect(process.env.DATABASE_URL).toBe('file:./test.db');
18 |   });
19 | });
20 | 
21 | describe('Setup', () => {
22 |   it('should pass', () => {
23 |     expect(true).toBe(true);
24 |   });
25 | }); 
26 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/admin.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { upload } from '../config/multer';
  7 | import { propertySchema } from './properties';
  8 | import { 
  9 |   ApiSuccessResponse, 
 10 |   ApiErrorResponse,
 11 |   ApiErrorCode,
 12 |   UserRole,
 13 |   User,
 14 |   Property,
 15 |   AdminStatsResponse,
 16 |   PropertiesResponse,
 17 |   PropertyResponse,
 18 |   CreateUserInput,
 19 |   UpdateUserInput,
 20 |   UsersResponse,
 21 |   UserResponse
 22 | } from '@avalon/shared-types';
 23 | 
 24 | const router = Router();
 25 | 
 26 | // User schema for validation
 27 | const userSchema = z.object({
 28 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 29 |   email: z.string().email('Invalid email address'),
 30 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 31 |   role: z.nativeEnum(UserRole).default(UserRole.USER),
 32 | }) satisfies z.ZodType<CreateUserInput>;
 33 | 
 34 | const handleError = (error: unknown, res: Response) => {
 35 |   if (error instanceof z.ZodError) {
 36 |     const response: ApiErrorResponse = {
 37 |       status: 'error',
 38 |       message: 'Invalid input data',
 39 |       code: ApiErrorCode.VALIDATION_ERROR,
 40 |       errors: error.errors.reduce((acc, err) => {
 41 |         const path = err.path.join('.');
 42 |         acc[path] = [err.message];
 43 |         return acc;
 44 |       }, {} as Record<string, string[]>)
 45 |     };
 46 |     res.status(400).json(response);
 47 |   } else if (error instanceof AppError) {
 48 |     const response: ApiErrorResponse = {
 49 |       status: 'error',
 50 |       message: error.message,
 51 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 52 |     };
 53 |     res.status(error.statusCode).json(response);
 54 |   } else {
 55 |     console.error(error);
 56 |     const response: ApiErrorResponse = {
 57 |       status: 'error',
 58 |       message: 'Internal server error',
 59 |       code: ApiErrorCode.INTERNAL_ERROR
 60 |     };
 61 |     res.status(500).json(response);
 62 |   }
 63 | };
 64 | 
 65 | const mapUser = (user: { id: string; name: string; email: string; role: string; createdAt: Date }): User => ({
 66 |   ...user,
 67 |   role: user.role as UserRole,
 68 |   createdAt: user.createdAt.toISOString()
 69 | });
 70 | 
 71 | const mapProperty = (property: any): Property => ({
 72 |   ...property,
 73 |   createdAt: property.createdAt.toISOString(),
 74 |   updatedAt: property.updatedAt.toISOString(),
 75 |   images: property.images?.map((image: any) => ({
 76 |     ...image,
 77 |     createdAt: image.createdAt.toISOString(),
 78 |     updatedAt: image.updatedAt.toISOString()
 79 |   })),
 80 |   contact_info: property.contact_info ? {
 81 |     ...property.contact_info,
 82 |     createdAt: property.contact_info.createdAt.toISOString(),
 83 |     updatedAt: property.contact_info.updatedAt.toISOString()
 84 |   } : undefined
 85 | });
 86 | 
 87 | // Get admin dashboard stats
 88 | router.get('/stats', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 89 |   try {
 90 |     const [properties, messages, users] = await Promise.all([
 91 |       prisma.property.count(),
 92 |       prisma.contactMessage.count(),
 93 |       prisma.user.count(),
 94 |     ]);
 95 | 
 96 |     const response: ApiSuccessResponse<AdminStatsResponse> = {
 97 |       status: 'success',
 98 |       data: {
 99 |         properties,
100 |         messages,
101 |         users,
102 |       },
103 |     };
104 | 
105 |     res.json(response);
106 |   } catch (error) {
107 |     handleError(error, res);
108 |   }
109 | });
110 | 
111 | // Get all properties (admin)
112 | router.get('/properties', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
113 |   try {
114 |     const page = parseInt(req.query.page as string) || 1;
115 |     const limit = parseInt(req.query.limit as string) || 10;
116 |     const skip = (page - 1) * limit;
117 | 
118 |     const [properties, total] = await Promise.all([
119 |       prisma.property.findMany({
120 |         skip,
121 |         take: limit,
122 |         orderBy: { createdAt: 'desc' },
123 |         include: {
124 |           images: true,
125 |           contact_info: true,
126 |         },
127 |       }),
128 |       prisma.property.count(),
129 |     ]);
130 | 
131 |     const response: ApiSuccessResponse<PropertiesResponse> = {
132 |       status: 'success',
133 |       data: {
134 |         data: properties.map(mapProperty),
135 |         meta: {
136 |           total,
137 |           page,
138 |           pageSize: limit,
139 |           totalPages: Math.ceil(total / limit),
140 |           hasNextPage: skip + limit < total,
141 |           hasPreviousPage: page > 1
142 |         }
143 |       }
144 |     };
145 | 
146 |     res.json(response);
147 |   } catch (error) {
148 |     handleError(error, res);
149 |   }
150 | });
151 | 
152 | // Get single property (admin)
153 | router.get('/properties/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
154 |   try {
155 |     const property = await prisma.property.findUnique({
156 |       where: { id: req.params.id },
157 |       include: {
158 |         images: true,
159 |         contact_info: true,
160 |       },
161 |     });
162 | 
163 |     if (!property) {
164 |       throw new AppError(404, 'Property not found');
165 |     }
166 | 
167 |     const response: ApiSuccessResponse<PropertyResponse> = {
168 |       status: 'success',
169 |       data: { property: mapProperty(property) }
170 |     };
171 | 
172 |     res.json(response);
173 |   } catch (error) {
174 |     handleError(error, res);
175 |   }
176 | });
177 | 
178 | // Update property (admin only)
179 | router.patch(
180 |   '/properties/:id',
181 |   protect,
182 |   restrictTo(UserRole.ADMIN),
183 |   upload.array('image', 20),
184 |   async (req, res: Response) => {
185 |     try {
186 |       const data = propertySchema.parse({
187 |         ...req.body,
188 |         contact_info: typeof req.body.contact_info === 'string' 
189 |           ? JSON.parse(req.body.contact_info)
190 |           : req.body.contact_info
191 |       });
192 |       const files = req.files as Express.Multer.File[];
193 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
194 | 
195 |       // Get the existing property to get the contact info ID
196 |       const existingProperty = await prisma.property.findUnique({
197 |         where: { id: req.params.id },
198 |         include: { contact_info: true },
199 |       });
200 | 
201 |       if (!existingProperty) {
202 |         throw new AppError(404, 'Property not found');
203 |       }
204 | 
205 |       // Update the property with the correct contact info reference
206 |       const property = await prisma.property.update({
207 |         where: { id: req.params.id },
208 |         data: {
209 |           title: data.title,
210 |           description: data.description,
211 |           price: data.price,
212 |           currency: data.currency,
213 |           area_sqm: data.area_sqm,
214 |           floor: data.floor,
215 |           construction_type: data.construction_type,
216 |           furnishing: data.furnishing,
217 |           location_type: data.location_type,
218 |           category: data.category,
219 |           type: data.type,
220 |           featured: data.featured,
221 |           contact_info: data.contact_info ? {
222 |             update: {
223 |               phone: data.contact_info.phone,
224 |               email: data.contact_info.email,
225 |             },
226 |           } : undefined,
227 |           ...(files.length > 0 && {
228 |             images: {
229 |               deleteMany: {},
230 |               create: files.map((file) => ({
231 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
232 |               })),
233 |             },
234 |           }),
235 |         },
236 |         include: {
237 |           images: true,
238 |           contact_info: true,
239 |         },
240 |       });
241 | 
242 |       const response: ApiSuccessResponse<PropertyResponse> = {
243 |         status: 'success',
244 |         data: { property: mapProperty(property) }
245 |       };
246 | 
247 |       res.json(response);
248 |     } catch (error) {
249 |       handleError(error, res);
250 |     }
251 |   }
252 | );
253 | 
254 | // Get all users (admin)
255 | router.get('/users', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
256 |   try {
257 |     const page = parseInt(req.query.page as string) || 1;
258 |     const limit = parseInt(req.query.limit as string) || 10;
259 |     const skip = (page - 1) * limit;
260 | 
261 |     const [users, total] = await Promise.all([
262 |       prisma.user.findMany({
263 |         skip,
264 |         take: limit,
265 |         orderBy: { createdAt: 'desc' },
266 |         select: {
267 |           id: true,
268 |           name: true,
269 |           email: true,
270 |           role: true,
271 |           createdAt: true,
272 |         },
273 |       }),
274 |       prisma.user.count(),
275 |     ]);
276 | 
277 |     const response: ApiSuccessResponse<UsersResponse> = {
278 |       status: 'success',
279 |       data: {
280 |         users: users.map(mapUser),
281 |         meta: {
282 |           total,
283 |           page,
284 |           pageSize: limit,
285 |           totalPages: Math.ceil(total / limit),
286 |           hasNextPage: skip + limit < total,
287 |           hasPreviousPage: page > 1
288 |         }
289 |       }
290 |     };
291 | 
292 |     res.json(response);
293 |   } catch (error) {
294 |     handleError(error, res);
295 |   }
296 | });
297 | 
298 | // Get single user (admin)
299 | router.get('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
300 |   try {
301 |     const user = await prisma.user.findUnique({
302 |       where: { id: String(req.params.id) },
303 |       select: {
304 |         id: true,
305 |         name: true,
306 |         email: true,
307 |         role: true,
308 |         createdAt: true,
309 |       },
310 |     });
311 | 
312 |     if (!user) {
313 |       throw new AppError(404, 'User not found');
314 |     }
315 | 
316 |     const response: ApiSuccessResponse<UserResponse> = {
317 |       status: 'success',
318 |       data: { user: mapUser(user) }
319 |     };
320 | 
321 |     res.json(response);
322 |   } catch (error) {
323 |     handleError(error, res);
324 |   }
325 | });
326 | 
327 | // Create user (admin)
328 | router.post('/users', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
329 |   try {
330 |     const data = userSchema.parse(req.body);
331 | 
332 |     // Check if user with email already exists
333 |     const existingUser = await prisma.user.findUnique({
334 |       where: { email: data.email },
335 |     });
336 | 
337 |     if (existingUser) {
338 |       throw new AppError(400, 'User with this email already exists');
339 |     }
340 | 
341 |     const user = await prisma.user.create({
342 |       data,
343 |       select: {
344 |         id: true,
345 |         name: true,
346 |         email: true,
347 |         role: true,
348 |         createdAt: true,
349 |       },
350 |     });
351 | 
352 |     const response: ApiSuccessResponse<UserResponse> = {
353 |       status: 'success',
354 |       data: { user: mapUser(user) }
355 |     };
356 | 
357 |     res.status(201).json(response);
358 |   } catch (error) {
359 |     handleError(error, res);
360 |   }
361 | });
362 | 
363 | // Update user (admin)
364 | router.patch('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
365 |   try {
366 |     const data = userSchema.partial().parse(req.body) as UpdateUserInput;
367 | 
368 |     // If email is being updated, check if it's already taken
369 |     if (data.email) {
370 |       const existingUser = await prisma.user.findFirst({
371 |         where: {
372 |           email: data.email,
373 |           NOT: { id: String(req.params.id) },
374 |         },
375 |       });
376 | 
377 |       if (existingUser) {
378 |         throw new AppError(400, 'User with this email already exists');
379 |       }
380 |     }
381 | 
382 |     const user = await prisma.user.update({
383 |       where: { id: String(req.params.id) },
384 |       data,
385 |       select: {
386 |         id: true,
387 |         name: true,
388 |         email: true,
389 |         role: true,
390 |         createdAt: true,
391 |       },
392 |     });
393 | 
394 |     const response: ApiSuccessResponse<UserResponse> = {
395 |       status: 'success',
396 |       data: { user: mapUser(user) }
397 |     };
398 | 
399 |     res.json(response);
400 |   } catch (error) {
401 |     handleError(error, res);
402 |   }
403 | });
404 | 
405 | // Delete user (admin)
406 | router.delete('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
407 |   try {
408 |     await prisma.user.delete({
409 |       where: { id: String(req.params.id) },
410 |     });
411 | 
412 |     const response: ApiSuccessResponse<null> = {
413 |       status: 'success',
414 |       data: null
415 |     };
416 | 
417 |     res.status(204).json(response);
418 |   } catch (error) {
419 |     handleError(error, res);
420 |   }
421 | });
422 | 
423 | // Create property (admin only)
424 | router.post(
425 |   '/properties',
426 |   protect,
427 |   restrictTo(UserRole.ADMIN),
428 |   upload.array('image', 20),
429 |   async (req, res: Response) => {
430 |     try {
431 |       const data = propertySchema.parse(req.body);
432 |       const files = req.files as Express.Multer.File[];
433 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
434 | 
435 |       const property = await prisma.property.create({
436 |         data: {
437 |           title: data.title,
438 |           description: data.description,
439 |           price: data.price,
440 |           currency: data.currency,
441 |           area_sqm: data.area_sqm,
442 |           floor: data.floor,
443 |           construction_type: data.construction_type,
444 |           furnishing: data.furnishing,
445 |           location_type: data.location_type,
446 |           category: data.category,
447 |           type: data.type,
448 |           featured: data.featured,
449 |           contact_info: data.contact_info ? {
450 |             create: {
451 |               phone: data.contact_info.phone,
452 |               email: data.contact_info.email,
453 |             },
454 |           } : undefined,
455 |           ...(files.length > 0 && {
456 |             images: {
457 |               create: files.map((file) => ({
458 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
459 |               })),
460 |             },
461 |           }),
462 |         },
463 |         include: {
464 |           images: true,
465 |           contact_info: true,
466 |         },
467 |       });
468 | 
469 |       const response: ApiSuccessResponse<PropertyResponse> = {
470 |         status: 'success',
471 |         data: { property: mapProperty(property) }
472 |       };
473 | 
474 |       res.status(201).json(response);
475 |     } catch (error) {
476 |       handleError(error, res);
477 |     }
478 |   }
479 | );
480 | 
481 | export const adminRoutes: Router = router; 
482 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/auth.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import bcrypt from 'bcryptjs';
  4 | import jwt from 'jsonwebtoken';
  5 | import prisma from '../lib/prisma';
  6 | import { AppError } from '../middleware/error';
  7 | import { protect } from '../middleware/auth';
  8 | import { 
  9 |   ApiSuccessResponse, 
 10 |   ApiErrorResponse,
 11 |   ApiErrorCode,
 12 |   RegisterInput,
 13 |   LoginInput,
 14 |   AuthResponse,
 15 |   MeResponse,
 16 |   UserRole,
 17 |   User
 18 | } from '@avalon/shared-types';
 19 | 
 20 | const router = Router();
 21 | 
 22 | const registerSchema = z.object({
 23 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 24 |   email: z.string().email('Invalid email address'),
 25 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 26 |   passwordConfirm: z.string().min(6, 'Password confirmation must be at least 6 characters')
 27 | }).refine((data) => data.password === data.passwordConfirm, {
 28 |   message: "Passwords don't match",
 29 |   path: ["passwordConfirm"],
 30 | }) satisfies z.ZodType<RegisterInput>;
 31 | 
 32 | const loginSchema = z.object({
 33 |   email: z.string().email('Invalid email address'),
 34 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 35 | }) satisfies z.ZodType<LoginInput>;
 36 | 
 37 | const handleError = (error: unknown, res: Response) => {
 38 |   if (error instanceof z.ZodError) {
 39 |     const response: ApiErrorResponse = {
 40 |       status: 'error',
 41 |       message: 'Invalid input data',
 42 |       code: ApiErrorCode.VALIDATION_ERROR,
 43 |       errors: error.errors.reduce((acc, err) => {
 44 |         const path = err.path.join('.');
 45 |         acc[path] = [err.message];
 46 |         return acc;
 47 |       }, {} as Record<string, string[]>)
 48 |     };
 49 |     res.status(400).json(response);
 50 |   } else if (error instanceof AppError) {
 51 |     const response: ApiErrorResponse = {
 52 |       status: 'error',
 53 |       message: error.message,
 54 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 55 |     };
 56 |     res.status(error.statusCode).json(response);
 57 |   } else {
 58 |     console.error(error);
 59 |     const response: ApiErrorResponse = {
 60 |       status: 'error',
 61 |       message: 'Internal server error',
 62 |       code: ApiErrorCode.INTERNAL_ERROR
 63 |     };
 64 |     res.status(500).json(response);
 65 |   }
 66 | };
 67 | 
 68 | const mapUserToResponse = (user: { 
 69 |   id: string; 
 70 |   name: string; 
 71 |   email: string; 
 72 |   role: string;
 73 |   createdAt: Date;
 74 | }): User => ({
 75 |   id: user.id,
 76 |   name: user.name,
 77 |   email: user.email,
 78 |   role: user.role as UserRole,
 79 |   createdAt: user.createdAt.toISOString()
 80 | });
 81 | 
 82 | // Register
 83 | router.post('/register', async (req, res, next) => {
 84 |   try {
 85 |     const data = registerSchema.parse(req.body);
 86 | 
 87 |     // Check if user exists
 88 |     const existingUser = await prisma.user.findUnique({
 89 |       where: { email: data.email },
 90 |     });
 91 | 
 92 |     if (existingUser) {
 93 |       throw new AppError(400, 'User already exists');
 94 |     }
 95 | 
 96 |     // Hash password
 97 |     const salt = await bcrypt.genSalt(10);
 98 |     const hashedPassword = await bcrypt.hash(data.password, salt);
 99 | 
100 |     // Create user
101 |     const user = await prisma.user.create({
102 |       data: {
103 |         name: data.name,
104 |         email: data.email,
105 |         password: hashedPassword,
106 |         role: UserRole.USER
107 |       },
108 |       select: {
109 |         id: true,
110 |         name: true,
111 |         email: true,
112 |         role: true,
113 |         createdAt: true
114 |       },
115 |     });
116 | 
117 |     // Create token
118 |     const token = jwt.sign(
119 |       { id: user.id },
120 |       process.env.JWT_SECRET!,
121 |       { expiresIn: '30d' }
122 |     );
123 | 
124 |     const response: ApiSuccessResponse<AuthResponse> = {
125 |       status: 'success',
126 |       data: { 
127 |         user: mapUserToResponse(user),
128 |         token 
129 |       }
130 |     };
131 | 
132 |     res.status(201).json(response);
133 |   } catch (error) {
134 |     handleError(error, res);
135 |   }
136 | });
137 | 
138 | // Login
139 | router.post('/login', async (req, res, next) => {
140 |   try {
141 |     const data = loginSchema.parse(req.body);
142 | 
143 |     // Check if user exists
144 |     const user = await prisma.user.findUnique({
145 |       where: { email: data.email },
146 |       select: {
147 |         id: true,
148 |         name: true,
149 |         email: true,
150 |         role: true,
151 |         password: true,
152 |         createdAt: true
153 |       }
154 |     });
155 | 
156 |     if (!user || !(await bcrypt.compare(data.password, user.password))) {
157 |       throw new AppError(401, 'Invalid credentials');
158 |     }
159 | 
160 |     // Create token
161 |     const token = jwt.sign(
162 |       { id: user.id },
163 |       process.env.JWT_SECRET!,
164 |       { expiresIn: '30d' }
165 |     );
166 | 
167 |     // Remove password from response
168 |     const { password: _, ...userWithoutPassword } = user;
169 | 
170 |     const response: ApiSuccessResponse<AuthResponse> = {
171 |       status: 'success',
172 |       data: { 
173 |         user: mapUserToResponse(userWithoutPassword),
174 |         token 
175 |       }
176 |     };
177 | 
178 |     res.json(response);
179 |   } catch (error) {
180 |     handleError(error, res);
181 |   }
182 | });
183 | 
184 | // Get current user
185 | router.get('/me', protect, async (req, res) => {
186 |   const response: ApiSuccessResponse<MeResponse> = {
187 |     status: 'success',
188 |     data: { user: req.user as User }
189 |   };
190 | 
191 |   res.json(response);
192 | });
193 | 
194 | export const authRoutes: Router = router; 
195 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/contact.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response, Request } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { 
  7 |   ApiSuccessResponse, 
  8 |   ApiErrorResponse,
  9 |   ApiErrorCode,
 10 |   ContactMessage, 
 11 |   ContactMessageResponse, 
 12 |   ContactMessagesResponse,
 13 |   UserRole
 14 | } from '@avalon/shared-types';
 15 | 
 16 | const router: Router = Router();
 17 | 
 18 | const createMessageSchema = z.object({
 19 |   name: z.string().min(1),
 20 |   email: z.string().email(),
 21 |   message: z.string().min(1),
 22 | });
 23 | 
 24 | const mapContactMessage = (message: any): ContactMessage => ({
 25 |   id: message.id,
 26 |   name: message.name,
 27 |   email: message.email,
 28 |   message: message.message,
 29 |   isRead: message.isRead,
 30 |   createdAt: message.createdAt.toISOString(),
 31 |   updatedAt: message.updatedAt.toISOString(),
 32 | });
 33 | 
 34 | const handleError = (error: unknown, res: Response) => {
 35 |   if (error instanceof z.ZodError) {
 36 |     const response: ApiErrorResponse = {
 37 |       status: 'error',
 38 |       message: 'Invalid input data',
 39 |       code: ApiErrorCode.VALIDATION_ERROR,
 40 |       errors: error.errors.reduce((acc, err) => {
 41 |         const path = err.path.join('.');
 42 |         acc[path] = [err.message];
 43 |         return acc;
 44 |       }, {} as Record<string, string[]>)
 45 |     };
 46 |     res.status(400).json(response);
 47 |   } else if (error instanceof AppError) {
 48 |     const response: ApiErrorResponse = {
 49 |       status: 'error',
 50 |       message: error.message,
 51 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 52 |     };
 53 |     res.status(error.statusCode).json(response);
 54 |   } else {
 55 |     console.error(error);
 56 |     const response: ApiErrorResponse = {
 57 |       status: 'error',
 58 |       message: 'Internal server error',
 59 |       code: ApiErrorCode.INTERNAL_ERROR
 60 |     };
 61 |     res.status(500).json(response);
 62 |   }
 63 | };
 64 | 
 65 | // Create contact message
 66 | router.post('/', async (req: Request, res: Response) => {
 67 |   try {
 68 |     const data = createMessageSchema.parse(req.body);
 69 | 
 70 |     const message = await prisma.contactMessage.create({
 71 |       data
 72 |     });
 73 | 
 74 |     const response: ApiSuccessResponse<ContactMessageResponse> = {
 75 |       status: 'success',
 76 |       data: { message: mapContactMessage(message) }
 77 |     };
 78 | 
 79 |     res.status(201).json(response);
 80 |   } catch (error) {
 81 |     handleError(error, res);
 82 |   }
 83 | });
 84 | 
 85 | // Get all messages (admin only)
 86 | router.get('/messages', protect, restrictTo(UserRole.ADMIN), async (req: Request, res: Response) => {
 87 |   try {
 88 |     const page = parseInt(req.query.page as string) || 1;
 89 |     const limit = parseInt(req.query.limit as string) || 10;
 90 |     const skip = (page - 1) * limit;
 91 | 
 92 |     const [messages, total] = await Promise.all([
 93 |       prisma.contactMessage.findMany({
 94 |         skip,
 95 |         take: limit,
 96 |         orderBy: { createdAt: 'desc' },
 97 |       }),
 98 |       prisma.contactMessage.count(),
 99 |     ]);
100 | 
101 |     const totalPages = Math.ceil(total / limit);
102 |     const hasNextPage = page < totalPages;
103 | 
104 |     const response: ApiSuccessResponse<ContactMessagesResponse> = {
105 |       status: 'success',
106 |       data: {
107 |         data: messages.map(mapContactMessage),
108 |         meta: {
109 |           total,
110 |           page,
111 |           pageSize: limit,
112 |           totalPages,
113 |           hasNextPage,
114 |           hasPreviousPage: page > 1,
115 |         },
116 |       }
117 |     };
118 | 
119 |     res.json(response);
120 |   } catch (error) {
121 |     handleError(error, res);
122 |   }
123 | });
124 | 
125 | // Mark message as read (admin only)
126 | router.patch('/messages/:id/read', protect, restrictTo(UserRole.ADMIN), async (req: Request, res: Response) => {
127 |   try {
128 |     const { id } = req.params;
129 | 
130 |     const message = await prisma.contactMessage.update({
131 |       where: { id: String(id) },
132 |       data: { isRead: true },
133 |     });
134 | 
135 |     if (!message) {
136 |       throw new AppError('Message not found', 404);
137 |     }
138 | 
139 |     const response: ApiSuccessResponse<ContactMessageResponse> = {
140 |       status: 'success',
141 |       data: { message: mapContactMessage(message) }
142 |     };
143 | 
144 |     res.json(response);
145 |   } catch (error) {
146 |     handleError(error, res);
147 |   }
148 | });
149 | 
150 | // Delete message (admin only)
151 | router.delete('/messages/:id', protect, restrictTo(UserRole.ADMIN), async (req: Request, res: Response) => {
152 |   try {
153 |     const { id } = req.params;
154 | 
155 |     await prisma.contactMessage.delete({
156 |       where: { id: String(id) },
157 |     });
158 | 
159 |     const response: ApiSuccessResponse<null> = {
160 |       status: 'success',
161 |       data: null,
162 |     };
163 | 
164 |     res.json(response);
165 |   } catch (error) {
166 |     handleError(error, res);
167 |   }
168 | });
169 | 
170 | export const contactRoutes = router; 
171 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/locations.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { 
  7 |   ApiSuccessResponse, 
  8 |   ApiErrorResponse,
  9 |   ApiErrorCode,
 10 |   CreateLocationInput,
 11 |   CreateFeatureInput,
 12 |   RegionResponse,
 13 |   RegionsResponse,
 14 |   NeighborhoodResponse,
 15 |   NeighborhoodsResponse,
 16 |   FeatureResponse,
 17 |   FeaturesResponse,
 18 |   FeatureType,
 19 |   UserRole,
 20 |   Feature,
 21 |   Region,
 22 |   Neighborhood
 23 | } from '@avalon/shared-types';
 24 | 
 25 | const router = Router();
 26 | 
 27 | const locationSchema = z.object({
 28 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 29 | }) satisfies z.ZodType<CreateLocationInput>;
 30 | 
 31 | const featureSchema = z.object({
 32 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 33 |   type: z.nativeEnum(FeatureType),
 34 | }) satisfies z.ZodType<CreateFeatureInput>;
 35 | 
 36 | const handleError = (error: unknown, res: Response) => {
 37 |   if (error instanceof z.ZodError) {
 38 |     const response: ApiErrorResponse = {
 39 |       status: 'error',
 40 |       message: 'Invalid input data',
 41 |       code: ApiErrorCode.VALIDATION_ERROR,
 42 |       errors: error.errors.reduce((acc, err) => {
 43 |         const path = err.path.join('.');
 44 |         acc[path] = [err.message];
 45 |         return acc;
 46 |       }, {} as Record<string, string[]>)
 47 |     };
 48 |     res.status(400).json(response);
 49 |   } else if (error instanceof AppError) {
 50 |     const response: ApiErrorResponse = {
 51 |       status: 'error',
 52 |       message: error.message,
 53 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 54 |     };
 55 |     res.status(error.statusCode).json(response);
 56 |   } else {
 57 |     console.error(error);
 58 |     const response: ApiErrorResponse = {
 59 |       status: 'error',
 60 |       message: 'Internal server error',
 61 |       code: ApiErrorCode.INTERNAL_ERROR
 62 |     };
 63 |     res.status(500).json(response);
 64 |   }
 65 | };
 66 | 
 67 | const mapDatesToISOString = <T extends { createdAt: Date; updatedAt: Date }>(
 68 |   item: T
 69 | ): Omit<T, 'createdAt' | 'updatedAt'> & { createdAt: string; updatedAt: string } => ({
 70 |   ...item,
 71 |   createdAt: item.createdAt.toISOString(),
 72 |   updatedAt: item.updatedAt.toISOString()
 73 | });
 74 | 
 75 | const mapRegion = (region: { id: number; name: string; createdAt: Date; updatedAt: Date }): Region => ({
 76 |   ...mapDatesToISOString(region)
 77 | });
 78 | 
 79 | const mapNeighborhood = (neighborhood: { id: number; name: string; createdAt: Date; updatedAt: Date }): Neighborhood => ({
 80 |   ...mapDatesToISOString(neighborhood)
 81 | });
 82 | 
 83 | const mapFeature = (feature: { id: number; name: string; type: string; createdAt: Date; updatedAt: Date }): Feature => ({
 84 |   ...mapDatesToISOString(feature),
 85 |   type: feature.type as FeatureType
 86 | });
 87 | 
 88 | // Get all regions
 89 | router.get('/regions', protect, async (req, res: Response, next) => {
 90 |   try {
 91 |     const regions = await prisma.region.findMany({
 92 |       orderBy: { name: 'asc' },
 93 |     });
 94 | 
 95 |     const response: ApiSuccessResponse<RegionsResponse> = {
 96 |       status: 'success',
 97 |       data: { regions: regions.map(mapRegion) }
 98 |     };
 99 | 
100 |     res.json(response);
101 |   } catch (error) {
102 |     handleError(error, res);
103 |   }
104 | });
105 | 
106 | // Get all neighborhoods
107 | router.get('/neighborhoods', protect, async (req, res: Response, next) => {
108 |   try {
109 |     const neighborhoods = await prisma.neighborhood.findMany({
110 |       orderBy: { name: 'asc' },
111 |     });
112 | 
113 |     const response: ApiSuccessResponse<NeighborhoodsResponse> = {
114 |       status: 'success',
115 |       data: { neighborhoods: neighborhoods.map(mapNeighborhood) }
116 |     };
117 | 
118 |     res.json(response);
119 |   } catch (error) {
120 |     handleError(error, res);
121 |   }
122 | });
123 | 
124 | // Get all features
125 | router.get('/features', protect, async (req, res: Response, next) => {
126 |   try {
127 |     const features = await prisma.feature.findMany({
128 |       orderBy: [
129 |         { type: 'asc' },
130 |         { name: 'asc' }
131 |       ],
132 |     });
133 | 
134 |     const response: ApiSuccessResponse<FeaturesResponse> = {
135 |       status: 'success',
136 |       data: { features: features.map(mapFeature) }
137 |     };
138 | 
139 |     res.json(response);
140 |   } catch (error) {
141 |     handleError(error, res);
142 |   }
143 | });
144 | 
145 | // Create region (admin only)
146 | router.post('/regions', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
147 |   try {
148 |     const { name } = locationSchema.parse(req.body);
149 | 
150 |     const region = await prisma.region.create({
151 |       data: { name },
152 |     });
153 | 
154 |     const response: ApiSuccessResponse<RegionResponse> = {
155 |       status: 'success',
156 |       data: { region: mapRegion(region) }
157 |     };
158 | 
159 |     res.status(201).json(response);
160 |   } catch (error) {
161 |     handleError(error, res);
162 |   }
163 | });
164 | 
165 | // Create neighborhood (admin only)
166 | router.post('/neighborhoods', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
167 |   try {
168 |     const { name } = locationSchema.parse(req.body);
169 | 
170 |     const neighborhood = await prisma.neighborhood.create({
171 |       data: { name },
172 |     });
173 | 
174 |     const response: ApiSuccessResponse<NeighborhoodResponse> = {
175 |       status: 'success',
176 |       data: { neighborhood: mapNeighborhood(neighborhood) }
177 |     };
178 | 
179 |     res.status(201).json(response);
180 |   } catch (error) {
181 |     handleError(error, res);
182 |   }
183 | });
184 | 
185 | // Create feature (admin only)
186 | router.post('/features', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
187 |   try {
188 |     const { name, type } = featureSchema.parse(req.body);
189 | 
190 |     const feature = await prisma.feature.create({
191 |       data: { 
192 |         name,
193 |         type: type as string // Cast to string for Prisma
194 |       },
195 |     });
196 | 
197 |     const response: ApiSuccessResponse<FeatureResponse> = {
198 |       status: 'success',
199 |       data: { feature: mapFeature(feature) }
200 |     };
201 | 
202 |     res.status(201).json(response);
203 |   } catch (error) {
204 |     handleError(error, res);
205 |   }
206 | });
207 | 
208 | // Update region (admin only)
209 | router.patch('/regions/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
210 |   try {
211 |     const data = locationSchema.partial().parse(req.body);
212 | 
213 |     const region = await prisma.region.update({
214 |       where: { id: parseInt(req.params.id) },
215 |       data,
216 |     });
217 | 
218 |     const response: ApiSuccessResponse<RegionResponse> = {
219 |       status: 'success',
220 |       data: { region: mapRegion(region) }
221 |     };
222 | 
223 |     res.json(response);
224 |   } catch (error) {
225 |     handleError(error, res);
226 |   }
227 | });
228 | 
229 | // Update neighborhood (admin only)
230 | router.patch('/neighborhoods/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
231 |   try {
232 |     const data = locationSchema.partial().parse(req.body);
233 | 
234 |     const neighborhood = await prisma.neighborhood.update({
235 |       where: { id: parseInt(req.params.id) },
236 |       data,
237 |     });
238 | 
239 |     const response: ApiSuccessResponse<NeighborhoodResponse> = {
240 |       status: 'success',
241 |       data: { neighborhood: mapNeighborhood(neighborhood) }
242 |     };
243 | 
244 |     res.json(response);
245 |   } catch (error) {
246 |     handleError(error, res);
247 |   }
248 | });
249 | 
250 | // Update feature (admin only)
251 | router.patch('/features/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
252 |   try {
253 |     const data = featureSchema.partial().parse(req.body);
254 | 
255 |     const feature = await prisma.feature.update({
256 |       where: { id: parseInt(req.params.id) },
257 |       data: {
258 |         name: data.name,
259 |         type: data.type as string | undefined
260 |       },
261 |     });
262 | 
263 |     const response: ApiSuccessResponse<FeatureResponse> = {
264 |       status: 'success',
265 |       data: { feature: mapFeature(feature) }
266 |     };
267 | 
268 |     res.json(response);
269 |   } catch (error) {
270 |     handleError(error, res);
271 |   }
272 | });
273 | 
274 | // Delete region (admin only)
275 | router.delete('/regions/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
276 |   try {
277 |     await prisma.region.delete({
278 |       where: { id: parseInt(req.params.id) },
279 |     });
280 | 
281 |     res.status(204).json({
282 |       status: 'success',
283 |       data: null,
284 |     });
285 |   } catch (error) {
286 |     handleError(error, res);
287 |   }
288 | });
289 | 
290 | // Delete neighborhood (admin only)
291 | router.delete('/neighborhoods/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
292 |   try {
293 |     await prisma.neighborhood.delete({
294 |       where: { id: parseInt(req.params.id) },
295 |     });
296 | 
297 |     res.status(204).json({
298 |       status: 'success',
299 |       data: null,
300 |     });
301 |   } catch (error) {
302 |     handleError(error, res);
303 |   }
304 | });
305 | 
306 | // Delete feature (admin only)
307 | router.delete('/features/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
308 |   try {
309 |     await prisma.feature.delete({
310 |       where: { id: parseInt(req.params.id) },
311 |     });
312 | 
313 |     res.status(204).json({
314 |       status: 'success',
315 |       data: null,
316 |     });
317 |   } catch (error) {
318 |     handleError(error, res);
319 |   }
320 | });
321 | 
322 | export const locationRoutes: Router = router; 
323 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/properties.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response, Request } from 'express';
  2 | import { z } from 'zod';
  3 | import { PrismaClient, Prisma } from '@prisma/client';
  4 | import multer from 'multer';
  5 | import { protect, restrictTo } from '../middleware/auth';
  6 | import prisma from '../lib/prisma';
  7 | import { AppError } from '../middleware/error';
  8 | import { upload } from '../config/multer';
  9 | import { 
 10 |   PropertyType, 
 11 |   PropertyCategory, 
 12 |   LocationType, 
 13 |   Currency, 
 14 |   ConstructionType, 
 15 |   FurnishingType,
 16 |   ApiSuccessResponse,
 17 |   ApiErrorResponse,
 18 |   ApiErrorCode,
 19 |   PropertyResponse,
 20 |   PropertiesResponse,
 21 |   GetPropertiesParams,
 22 |   CreatePropertyInput,
 23 |   UpdatePropertyInput,
 24 |   Property,
 25 |   UserRole
 26 | } from '@avalon/shared-types';
 27 | 
 28 | const router: Router = Router();
 29 | 
 30 | export const propertySchema = z.object({
 31 |   title: z.string().min(2, 'Title must be at least 2 characters'),
 32 |   description: z.string().min(10, 'Description must be at least 10 characters'),
 33 |   price: z.coerce.number().positive('Price must be positive'),
 34 |   currency: z.nativeEnum(Currency),
 35 |   area_sqm: z.coerce.number().positive('Area must be positive'),
 36 |   floor: z.coerce.number().optional(),
 37 |   construction_type: z.nativeEnum(ConstructionType).optional(),
 38 |   furnishing: z.nativeEnum(FurnishingType).optional(),
 39 |   location_type: z.nativeEnum(LocationType).optional(),
 40 |   category: z.nativeEnum(PropertyCategory).optional(),
 41 |   type: z.nativeEnum(PropertyType).optional(),
 42 |   featured: z.coerce.boolean().optional(),
 43 |   contact_info: z.object({
 44 |     phone: z.string().min(6, 'Phone must be at least 6 characters'),
 45 |     email: z.string().email('Invalid email address')
 46 |   }).optional()
 47 | }) satisfies z.ZodType<CreatePropertyInput>;
 48 | 
 49 | const propertyInclude = {
 50 |   region: true,
 51 |   neighborhood: true,
 52 |   features: {
 53 |     include: {
 54 |       feature: true
 55 |     }
 56 |   },
 57 |   images: true,
 58 |   contact_info: true,
 59 | } as const;
 60 | 
 61 | const handleError = (error: unknown, res: Response) => {
 62 |   console.error('Properties route error:', error);
 63 | 
 64 |   if (error instanceof z.ZodError) {
 65 |     const response: ApiErrorResponse = {
 66 |       status: 'error',
 67 |       message: 'Invalid input data',
 68 |       code: ApiErrorCode.VALIDATION_ERROR,
 69 |       errors: error.errors.reduce((acc, err) => {
 70 |         const path = err.path.join('.');
 71 |         acc[path] = [err.message];
 72 |         return acc;
 73 |       }, {} as Record<string, string[]>)
 74 |     };
 75 |     res.status(400).json(response);
 76 |   } else if (error instanceof AppError) {
 77 |     const response: ApiErrorResponse = {
 78 |       status: 'error',
 79 |       message: error.message,
 80 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 81 |     };
 82 |     res.status(error.statusCode).json(response);
 83 |   } else if (error instanceof Prisma.PrismaClientKnownRequestError) {
 84 |     console.error('Prisma error:', {
 85 |       code: error.code,
 86 |       meta: error.meta,
 87 |       message: error.message
 88 |     });
 89 |     const response: ApiErrorResponse = {
 90 |       status: 'error',
 91 |       message: 'Database error',
 92 |       code: ApiErrorCode.INTERNAL_ERROR
 93 |     };
 94 |     res.status(500).json(response);
 95 |   } else {
 96 |     console.error('Unhandled error:', error);
 97 |     const response: ApiErrorResponse = {
 98 |       status: 'error',
 99 |       message: 'Internal server error',
100 |       code: ApiErrorCode.INTERNAL_ERROR
101 |     };
102 |     res.status(500).json(response);
103 |   }
104 | };
105 | 
106 | const mapProperty = (property: any): Property => ({
107 |   ...property,
108 |   createdAt: property.createdAt.toISOString(),
109 |   updatedAt: property.updatedAt.toISOString(),
110 |   images: property.images?.map((image: any) => ({
111 |     ...image,
112 |     createdAt: image.createdAt.toISOString(),
113 |     updatedAt: image.updatedAt.toISOString()
114 |   })),
115 |   contact_info: property.contact_info ? {
116 |     ...property.contact_info,
117 |     createdAt: property.contact_info.createdAt.toISOString(),
118 |     updatedAt: property.contact_info.updatedAt.toISOString()
119 |   } : undefined
120 | });
121 | 
122 | // Get all properties with filtering
123 | router.get('/', async (req: Request, res: Response) => {
124 |   try {
125 |     const {
126 |       page = '1',
127 |       limit = '10',
128 |       min_price,
129 |       max_price,
130 |       min_area,
131 |       max_area,
132 |       type,
133 |       category,
134 |       location_type,
135 |       construction_type,
136 |       furnishing,
137 |       featured,
138 |     } = req.query as GetPropertiesParams;
139 | 
140 |     const skip = (parseInt(page) - 1) * parseInt(limit);
141 |     const where: Prisma.PropertyWhereInput = {};
142 | 
143 |     // Apply filters
144 |     if (type) where.type = type as PropertyType;
145 |     if (category) where.category = category as PropertyCategory;
146 |     if (location_type) where.location_type = location_type as LocationType;
147 |     if (construction_type) where.construction_type = construction_type as ConstructionType;
148 |     if (furnishing) where.furnishing = furnishing as FurnishingType;
149 |     if (featured) where.featured = featured === 'true';
150 | 
151 |     // Handle price range when both min and max are provided
152 |     if (min_price && max_price) {
153 |       where.price = {
154 |         gte: parseInt(min_price),
155 |         lte: parseInt(max_price)
156 |       };
157 |     } else {
158 |       if (min_price) where.price = { gte: parseInt(min_price) };
159 |       if (max_price) where.price = { lte: parseInt(max_price) };
160 |     }
161 | 
162 |     // Handle area range when both min and max are provided
163 |     if (min_area && max_area) {
164 |       where.area_sqm = {
165 |         gte: parseInt(min_area),
166 |         lte: parseInt(max_area)
167 |       };
168 |     } else {
169 |       if (min_area) where.area_sqm = { gte: parseInt(min_area) };
170 |       if (max_area) where.area_sqm = { lte: parseInt(max_area) };
171 |     }
172 | 
173 |     console.log('Querying properties with:', {
174 |       where,
175 |       skip,
176 |       take: parseInt(limit),
177 |       include: propertyInclude
178 |     });
179 | 
180 |     const [properties, total] = await Promise.all([
181 |       prisma.property.findMany({
182 |         where,
183 |         include: propertyInclude,
184 |         skip,
185 |         take: parseInt(limit),
186 |         orderBy: { createdAt: 'desc' },
187 |       }),
188 |       prisma.property.count({ where }),
189 |     ]).catch(error => {
190 |       console.error('Database query error:', error);
191 |       throw error;
192 |     });
193 | 
194 |     console.log('Found properties:', {
195 |       count: properties.length,
196 |       total
197 |     });
198 | 
199 |     const response: ApiSuccessResponse<PropertiesResponse> = {
200 |       status: 'success',
201 |       data: {
202 |         data: properties.map(mapProperty),
203 |         meta: {
204 |           total,
205 |           page: parseInt(page),
206 |           pageSize: parseInt(limit),
207 |           totalPages: Math.ceil(total / parseInt(limit)),
208 |           hasNextPage: skip + parseInt(limit) < total,
209 |           hasPreviousPage: parseInt(page) > 1
210 |         }
211 |       }
212 |     };
213 | 
214 |     res.json(response);
215 |   } catch (error) {
216 |     handleError(error, res);
217 |   }
218 | });
219 | 
220 | // Get featured properties
221 | router.get('/featured', async (req, res: Response) => {
222 |   try {
223 |     const properties = await prisma.property.findMany({
224 |       where: {
225 |         featured: true,
226 |       },
227 |       include: propertyInclude,
228 |       take: 6,
229 |       orderBy: { createdAt: 'desc' },
230 |     });
231 | 
232 |     const response: ApiSuccessResponse<PropertiesResponse> = {
233 |       status: 'success',
234 |       data: {
235 |         data: properties.map(mapProperty),
236 |         meta: {
237 |           total: properties.length,
238 |           page: 1,
239 |           pageSize: 6,
240 |           totalPages: 1,
241 |           hasNextPage: false,
242 |           hasPreviousPage: false
243 |         }
244 |       }
245 |     };
246 | 
247 |     res.json(response);
248 |   } catch (error) {
249 |     handleError(error, res);
250 |   }
251 | });
252 | 
253 | // Get single property
254 | router.get('/:id', async (req: Request, res: Response) => {
255 |   try {
256 |     const property = await prisma.property.findUnique({
257 |       where: { id: req.params.id },
258 |       include: propertyInclude,
259 |     });
260 | 
261 |     if (!property) {
262 |       throw new AppError('Property not found', '404');
263 |     }
264 | 
265 |     const response: ApiSuccessResponse<PropertyResponse> = {
266 |       status: 'success',
267 |       data: { property: mapProperty(property) }
268 |     };
269 | 
270 |     res.json(response);
271 |   } catch (error) {
272 |     handleError(error, res);
273 |   }
274 | });
275 | 
276 | // Create property (admin only)
277 | router.post(
278 |   '/',
279 |   protect,
280 |   restrictTo(UserRole.ADMIN),
281 |   upload.array('image', 20),
282 |   async (req, res: Response) => {
283 |     try {
284 |       // Parse fields from multipart/form-data
285 |       const parsedBody = {
286 |         ...req.body,
287 |         price: req.body.price ? parseInt(req.body.price) : undefined,
288 |         area_sqm: req.body.area_sqm ? parseInt(req.body.area_sqm) : undefined,
289 |         floor: req.body.floor ? parseInt(req.body.floor) : undefined,
290 |         featured: req.body.featured === 'true',
291 |         contact_info: req.body.contact_info ? JSON.parse(req.body.contact_info) : undefined,
292 |       };
293 | 
294 |       const data = propertySchema.parse(parsedBody);
295 |       const files = req.files as Express.Multer.File[];
296 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
297 | 
298 |       const property = await prisma.property.create({
299 |         data: {
300 |           title: data.title,
301 |           description: data.description,
302 |           price: data.price,
303 |           currency: data.currency,
304 |           area_sqm: data.area_sqm,
305 |           floor: data.floor,
306 |           construction_type: data.construction_type,
307 |           furnishing: data.furnishing,
308 |           location_type: data.location_type,
309 |           category: data.category,
310 |           type: data.type,
311 |           featured: data.featured,
312 |           contact_info: data.contact_info ? {
313 |             create: {
314 |               phone: data.contact_info.phone,
315 |               email: data.contact_info.email,
316 |             },
317 |           } : undefined,
318 |           ...(files.length > 0 && {
319 |             images: {
320 |               create: files.map((file) => ({
321 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
322 |               })),
323 |             },
324 |           }),
325 |         },
326 |         include: propertyInclude,
327 |       });
328 | 
329 |       const response: ApiSuccessResponse<PropertyResponse> = {
330 |         status: 'success',
331 |         data: { property: mapProperty(property) }
332 |       };
333 | 
334 |       res.status(201).json(response);
335 |     } catch (error) {
336 |       handleError(error, res);
337 |     }
338 |   }
339 | );
340 | 
341 | // Update property (admin only)
342 | router.patch(
343 |   '/:id',
344 |   protect,
345 |   restrictTo(UserRole.ADMIN),
346 |   upload.array('image', 20),
347 |   async (req, res: Response) => {
348 |     try {
349 |       const data = propertySchema.partial().parse(req.body) as UpdatePropertyInput;
350 |       const files = req.files as Express.Multer.File[];
351 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
352 | 
353 |       // Get the existing property to get the contact info ID
354 |       const existingProperty = await prisma.property.findUnique({
355 |         where: { id: req.params.id },
356 |         include: { contact_info: true },
357 |       });
358 | 
359 |       if (!existingProperty) {
360 |         throw new AppError('Property not found', '404');
361 |       }
362 | 
363 |       // Update the property with the correct contact info reference
364 |       const property = await prisma.property.update({
365 |         where: { id: req.params.id },
366 |         data: {
367 |           title: data.title,
368 |           description: data.description,
369 |           price: data.price,
370 |           currency: data.currency,
371 |           area_sqm: data.area_sqm,
372 |           floor: data.floor,
373 |           construction_type: data.construction_type,
374 |           furnishing: data.furnishing,
375 |           location_type: data.location_type,
376 |           category: data.category,
377 |           type: data.type,
378 |           featured: data.featured,
379 |           contact_info: data.contact_info ? {
380 |             update: {
381 |               phone: data.contact_info.phone,
382 |               email: data.contact_info.email,
383 |             },
384 |           } : undefined,
385 |           ...(files.length > 0 && {
386 |             images: {
387 |               deleteMany: {},
388 |               create: files.map((file) => ({
389 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
390 |               })),
391 |             },
392 |           }),
393 |         },
394 |         include: propertyInclude,
395 |       });
396 | 
397 |       const response: ApiSuccessResponse<PropertyResponse> = {
398 |         status: 'success',
399 |         data: { property: mapProperty(property) }
400 |       };
401 | 
402 |       res.json(response);
403 |     } catch (error) {
404 |       handleError(error, res);
405 |     }
406 |   }
407 | );
408 | 
409 | // Delete property (admin only)
410 | router.delete('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
411 |   try {
412 |     await prisma.property.delete({
413 |       where: { id: req.params.id },
414 |     });
415 | 
416 |     const response: ApiSuccessResponse<null> = {
417 |       status: 'success',
418 |       data: null,
419 |     };
420 | 
421 |     res.json(response);
422 |   } catch (error) {
423 |     handleError(error, res);
424 |   }
425 | });
426 | 
427 | export const propertyRoutes: Router = router; 
428 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/users.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { 
  7 |   ApiSuccessResponse, 
  8 |   ApiErrorResponse,
  9 |   ApiErrorCode,
 10 |   UserRole,
 11 |   User,
 12 |   UsersResponse,
 13 |   UserResponse,
 14 |   CreateUserInput,
 15 |   UpdateUserInput
 16 | } from '@avalon/shared-types';
 17 | 
 18 | const router = Router();
 19 | 
 20 | const userSchema = z.object({
 21 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 22 |   email: z.string().email('Invalid email address'),
 23 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 24 |   role: z.nativeEnum(UserRole).default(UserRole.USER),
 25 | }) satisfies z.ZodType<CreateUserInput>;
 26 | 
 27 | const handleError = (error: unknown, res: Response) => {
 28 |   if (error instanceof z.ZodError) {
 29 |     const response: ApiErrorResponse = {
 30 |       status: 'error',
 31 |       message: 'Invalid input data',
 32 |       code: ApiErrorCode.VALIDATION_ERROR,
 33 |       errors: error.errors.reduce((acc, err) => {
 34 |         const path = err.path.join('.');
 35 |         acc[path] = [err.message];
 36 |         return acc;
 37 |       }, {} as Record<string, string[]>)
 38 |     };
 39 |     res.status(400).json(response);
 40 |   } else if (error instanceof AppError) {
 41 |     const response: ApiErrorResponse = {
 42 |       status: 'error',
 43 |       message: error.message,
 44 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 45 |     };
 46 |     res.status(error.statusCode).json(response);
 47 |   } else {
 48 |     console.error(error);
 49 |     const response: ApiErrorResponse = {
 50 |       status: 'error',
 51 |       message: 'Internal server error',
 52 |       code: ApiErrorCode.INTERNAL_ERROR
 53 |     };
 54 |     res.status(500).json(response);
 55 |   }
 56 | };
 57 | 
 58 | const mapUser = (user: { id: string; name: string; email: string; role: string; createdAt: Date }): User => ({
 59 |   ...user,
 60 |   role: user.role as UserRole,
 61 |   createdAt: user.createdAt.toISOString()
 62 | });
 63 | 
 64 | // Get all users (admin only)
 65 | router.get('/', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 66 |   try {
 67 |     const { page = '1', limit = '10' } = req.query;
 68 |     const skip = (parseInt(page as string) - 1) * parseInt(limit as string);
 69 | 
 70 |     const [users, total] = await Promise.all([
 71 |       prisma.user.findMany({
 72 |         select: {
 73 |           id: true,
 74 |           name: true,
 75 |           email: true,
 76 |           role: true,
 77 |           createdAt: true,
 78 |         },
 79 |         skip,
 80 |         take: parseInt(limit as string),
 81 |         orderBy: { createdAt: 'desc' },
 82 |       }),
 83 |       prisma.user.count(),
 84 |     ]);
 85 | 
 86 |     const response: ApiSuccessResponse<UsersResponse> = {
 87 |       status: 'success',
 88 |       data: {
 89 |         users: users.map(mapUser),
 90 |         meta: {
 91 |           total,
 92 |           page: parseInt(page as string),
 93 |           pageSize: parseInt(limit as string),
 94 |           totalPages: Math.ceil(total / parseInt(limit as string)),
 95 |           hasNextPage: skip + parseInt(limit as string) < total,
 96 |           hasPreviousPage: parseInt(page as string) > 1
 97 |         }
 98 |       }
 99 |     };
100 | 
101 |     res.json(response);
102 |   } catch (error) {
103 |     handleError(error, res);
104 |   }
105 | });
106 | 
107 | // Get single user (admin only)
108 | router.get('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
109 |   try {
110 |     const user = await prisma.user.findUnique({
111 |       where: { id: req.params.id },
112 |       select: {
113 |         id: true,
114 |         name: true,
115 |         email: true,
116 |         role: true,
117 |         createdAt: true,
118 |       },
119 |     });
120 | 
121 |     if (!user) {
122 |       throw new AppError(404, 'User not found');
123 |     }
124 | 
125 |     const response: ApiSuccessResponse<UserResponse> = {
126 |       status: 'success',
127 |       data: { user: mapUser(user) }
128 |     };
129 | 
130 |     res.json(response);
131 |   } catch (error) {
132 |     handleError(error, res);
133 |   }
134 | });
135 | 
136 | // Create user (admin only)
137 | router.post('/', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
138 |   try {
139 |     const data = userSchema.parse(req.body);
140 | 
141 |     const existingUser = await prisma.user.findUnique({
142 |       where: { email: data.email },
143 |     });
144 | 
145 |     if (existingUser) {
146 |       throw new AppError(400, 'User already exists');
147 |     }
148 | 
149 |     const user = await prisma.user.create({
150 |       data,
151 |       select: {
152 |         id: true,
153 |         name: true,
154 |         email: true,
155 |         role: true,
156 |         createdAt: true,
157 |       },
158 |     });
159 | 
160 |     const response: ApiSuccessResponse<UserResponse> = {
161 |       status: 'success',
162 |       data: { user: mapUser(user) }
163 |     };
164 | 
165 |     res.status(201).json(response);
166 |   } catch (error) {
167 |     handleError(error, res);
168 |   }
169 | });
170 | 
171 | // Update user (admin only)
172 | router.patch('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
173 |   try {
174 |     const data = userSchema.partial().parse(req.body) as UpdateUserInput;
175 | 
176 |     if (data.email) {
177 |       const existingUser = await prisma.user.findFirst({
178 |         where: {
179 |           email: data.email,
180 |           NOT: { id: req.params.id },
181 |         },
182 |       });
183 | 
184 |       if (existingUser) {
185 |         throw new AppError(400, 'Email already in use');
186 |       }
187 |     }
188 | 
189 |     const user = await prisma.user.update({
190 |       where: { id: req.params.id },
191 |       data,
192 |       select: {
193 |         id: true,
194 |         name: true,
195 |         email: true,
196 |         role: true,
197 |         createdAt: true,
198 |       },
199 |     });
200 | 
201 |     const response: ApiSuccessResponse<UserResponse> = {
202 |       status: 'success',
203 |       data: { user: mapUser(user) }
204 |     };
205 | 
206 |     res.json(response);
207 |   } catch (error) {
208 |     handleError(error, res);
209 |   }
210 | });
211 | 
212 | // Delete user (admin only)
213 | router.delete('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
214 |   try {
215 |     await prisma.user.delete({
216 |       where: { id: req.params.id },
217 |     });
218 | 
219 |     const response: ApiSuccessResponse<null> = {
220 |       status: 'success',
221 |       data: null
222 |     };
223 | 
224 |     res.status(204).json(response);
225 |   } catch (error) {
226 |     handleError(error, res);
227 |   }
228 | });
229 | 
230 | export const userRoutes = router; 
231 | 


--------------------------------------------------------------------------------
/apps/api/src/server.ts:
--------------------------------------------------------------------------------
 1 | import express from 'express';
 2 | import cors from 'cors';
 3 | import { errorHandler } from './middleware/error';
 4 | import { authRoutes } from './routes/auth';
 5 | import { propertyRoutes } from './routes/properties';
 6 | import { contactRoutes } from './routes/contact';
 7 | import { adminRoutes } from './routes/admin';
 8 | import { locationRoutes } from './routes/locations';
 9 | import path from 'path';
10 | 
11 | const app = express();
12 | 
13 | // Middleware
14 | app.use(cors());
15 | app.use(express.json());
16 | 
17 | // Serve static files from uploads directory
18 | app.use('/uploads', express.static(path.join(process.cwd(), 'uploads')));
19 | 
20 | // Routes
21 | app.use('/api/auth', authRoutes);
22 | app.use('/api/properties', propertyRoutes);
23 | app.use('/api/contact', contactRoutes);
24 | app.use('/api/admin', adminRoutes);
25 | app.use('/api/locations', locationRoutes);
26 | 
27 | // Error handling
28 | app.use(errorHandler);
29 | 
30 | export default app; 
31 | 


--------------------------------------------------------------------------------
/apps/api/src/types/contact.ts:
--------------------------------------------------------------------------------
 1 | import { z } from 'zod';
 2 | import type { ContactMessage } from '@prisma/client';
 3 | 
 4 | export const ContactFormSchema = z.object({
 5 |   name: z.string().min(2, 'Name must be at least 2 characters long'),
 6 |   email: z.string().email('Invalid email address'),
 7 |   message: z.string().min(10, 'Message must be at least 10 characters long'),
 8 |   recaptchaToken: z.string(),
 9 | });
10 | 
11 | export type ContactFormData = z.infer<typeof ContactFormSchema>;
12 | 
13 | export interface ContactFormResponse {
14 |   success: boolean;
15 |   message: string;
16 |   data?: {
17 |     message: ContactMessage;
18 |   };
19 | }
20 | 
21 | export interface MessagesResponse {
22 |   success: boolean;
23 |   data: {
24 |     items: ContactMessage[];
25 |     total: number;
26 |     page: number;
27 |     pages: number;
28 |     hasNextPage: boolean;
29 |   };
30 | }
31 | 
32 | export interface MessageResponse {
33 |   success: boolean;
34 |   data: {
35 |     message: ContactMessage;
36 |   };
37 | } 
38 | 


--------------------------------------------------------------------------------
/apps/api/src/types/express.d.ts:
--------------------------------------------------------------------------------
 1 | import { Request } from 'express';
 2 | import { Role } from '@prisma/client';
 3 | 
 4 | declare global {
 5 |   namespace Express {
 6 |     interface Request {
 7 |       user?: {
 8 |         id: string;
 9 |         email: string;
10 |         role: Role;
11 |       };
12 |       files?: Express.Multer.File[];
13 |     }
14 |   }
15 | }
16 | 
17 | export {}; 
18 | 


--------------------------------------------------------------------------------
/apps/api/src/types/multer.d.ts:
--------------------------------------------------------------------------------
 1 | declare namespace Express {
 2 |   namespace Multer {
 3 |     interface File {
 4 |       fieldname: string;
 5 |       originalname: string;
 6 |       encoding: string;
 7 |       mimetype: string;
 8 |       size: number;
 9 |       destination: string;
10 |       filename: string;
11 |       path: string;
12 |       buffer: Buffer;
13 |     }
14 |   }
15 | } 
16 | 


--------------------------------------------------------------------------------
/apps/api/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "target": "ES2020",
 4 |     "module": "ESNext",
 5 |     "moduleResolution": "Bundler",
 6 |     "esModuleInterop": true,
 7 |     "strict": true,
 8 |     "skipLibCheck": true,
 9 |     "forceConsistentCasingInFileNames": true,
10 |     "outDir": "dist",
11 |     "rootDir": "src",
12 |     "baseUrl": ".",
13 |     "declaration": true,
14 |     "paths": {
15 |       "@/*": ["src/*"]
16 |     }
17 |   },
18 |   "include": ["src/**/*"],
19 |   "exclude": ["node_modules", "dist"]
20 | }
21 | 


--------------------------------------------------------------------------------
/apps/api/tsup.config.ts:
--------------------------------------------------------------------------------
 1 | import { defineConfig } from 'tsup'
 2 | 
 3 | export default defineConfig({
 4 |   entry: ['src/index.ts'],
 5 |   format: ['esm'],
 6 |   dts: false,
 7 |   splitting: false,
 8 |   sourcemap: true,
 9 |   clean: true,
10 |   treeshake: true,
11 |   // Important for Prisma
12 |   external: ['@prisma/client'],
13 |   // Needed for __dirname, require, etc
14 |   banner: {
15 |     js: `import { createRequire } from 'module';
16 | const require = createRequire(import.meta.url);
17 | import { fileURLToPath } from 'url';
18 | import { dirname } from 'path';
19 | const __filename = fileURLToPath(import.meta.url);
20 | const __dirname = dirname(__filename);`,
21 |   },
22 |   esbuildOptions(options) {
23 |     options.platform = 'node'
24 |     options.target = 'node20'
25 |   }
26 | }) 
27 | 


--------------------------------------------------------------------------------
/apps/api/uploads/.gitkeep:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/50d0c16275cb605178c736f789f43dfda0f99d82/apps/api/uploads/.gitkeep


--------------------------------------------------------------------------------
/apps/web/.gitignore:
--------------------------------------------------------------------------------
 1 | # Logs
 2 | logs
 3 | *.log
 4 | npm-debug.log*
 5 | yarn-debug.log*
 6 | yarn-error.log*
 7 | pnpm-debug.log*
 8 | lerna-debug.log*
 9 | 
10 | node_modules
11 | dist
12 | dist-ssr
13 | *.local
14 | 
15 | # Editor directories and files
16 | .vscode/*
17 | !.vscode/extensions.json
18 | .idea
19 | .DS_Store
20 | *.suo
21 | *.ntvs*
22 | *.njsproj
23 | *.sln
24 | *.sw?
25 | 


--------------------------------------------------------------------------------
/apps/web/README.md:
--------------------------------------------------------------------------------
 1 | # React + TypeScript + Vite
 2 | 
 3 | This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
 4 | 
 5 | Currently, two official plugins are available:
 6 | 
 7 | - [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
 8 | - [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
 9 | 
10 | ## Expanding the ESLint configuration
11 | 
12 | If you are developing a production application, we recommend updating the configuration to enable type aware lint rules:
13 | 
14 | - Configure the top-level `parserOptions` property like this:
15 | 
16 | ```js
17 | export default tseslint.config({
18 |   languageOptions: {
19 |     // other options...
20 |     parserOptions: {
21 |       project: ['./tsconfig.node.json', './tsconfig.app.json'],
22 |       tsconfigRootDir: import.meta.dirname,
23 |     },
24 |   },
25 | })
26 | ```
27 | 
28 | - Replace `tseslint.configs.recommended` to `tseslint.configs.recommendedTypeChecked` or `tseslint.configs.strictTypeChecked`
29 | - Optionally add `...tseslint.configs.stylisticTypeChecked`
30 | - Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and update the config:
31 | 
32 | ```js
33 | // eslint.config.js
34 | import react from 'eslint-plugin-react'
35 | 
36 | export default tseslint.config({
37 |   // Set the react version
38 |   settings: { react: { version: '18.3' } },
39 |   plugins: {
40 |     // Add the react plugin
41 |     react,
42 |   },
43 |   rules: {
44 |     // other rules...
45 |     // Enable its recommended rules
46 |     ...react.configs.recommended.rules,
47 |     ...react.configs['jsx-runtime'].rules,
48 |   },
49 | })
50 | ```
51 | 


--------------------------------------------------------------------------------
/apps/web/eslint.config.js:
--------------------------------------------------------------------------------
 1 | import js from '@eslint/js'
 2 | import globals from 'globals'
 3 | import reactHooks from 'eslint-plugin-react-hooks'
 4 | import reactRefresh from 'eslint-plugin-react-refresh'
 5 | import tseslint from 'typescript-eslint'
 6 | 
 7 | export default tseslint.config(
 8 |   { ignores: ['dist'] },
 9 |   {
10 |     extends: [js.configs.recommended, ...tseslint.configs.recommended],
11 |     files: ['**/*.{ts,tsx}'],
12 |     languageOptions: {
13 |       ecmaVersion: 2020,
14 |       globals: globals.browser,
15 |     },
16 |     plugins: {
17 |       'react-hooks': reactHooks,
18 |       'react-refresh': reactRefresh,
19 |     },
20 |     rules: {
21 |       ...reactHooks.configs.recommended.rules,
22 |       'react-refresh/only-export-components': [
23 |         'warn',
24 |         { allowConstantExport: true },
25 |       ],
26 |     },
27 |   },
28 | )
29 | 


--------------------------------------------------------------------------------
/apps/web/index.html:
--------------------------------------------------------------------------------
 1 | <!doctype html>
 2 | <html lang="en">
 3 |   <head>
 4 |     <meta charset="UTF-8" />
 5 |     <link rel="icon" type="image/svg+xml" href="/vite.svg" />
 6 |     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 7 |     <title>Vite + React + TS</title>
 8 |   </head>
 9 |   <body>
10 |     <div id="root"></div>
11 |     <script type="module" src="/src/main.tsx"></script>
12 |   </body>
13 | </html>
14 | 


--------------------------------------------------------------------------------
/apps/web/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "web",
 3 |   "private": true,
 4 |   "version": "0.0.0",
 5 |   "type": "module",
 6 |   "scripts": {
 7 |     "dev": "vite",
 8 |     "build": "tsc && vite build",
 9 |     "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
10 |     "preview": "vite preview",
11 |     "test": "vitest",
12 |     "coverage": "vitest run --coverage"
13 |   },
14 |   "dependencies": {
15 |     "@avalon/shared-types": "workspace:*",
16 |     "@headlessui/react": "^1.7.17",
17 |     "@heroicons/react": "^2.0.18",
18 |     "@react-google-maps/api": "^2.20.5",
19 |     "@tanstack/react-query": "^5.64.1",
20 |     "@tanstack/react-query-devtools": "^5.64.1",
21 |     "axios": "^1.6.2",
22 |     "clsx": "^2.0.0",
23 |     "react": "^18.2.0",
24 |     "react-dom": "^18.2.0",
25 |     "react-router-dom": "^6.20.1",
26 |     "react-transition-group": "^4.4.5",
27 |     "zod": "^3.22.4"
28 |   },
29 |   "devDependencies": {
30 |     "@tailwindcss/aspect-ratio": "^0.4.2",
31 |     "@tailwindcss/forms": "^0.5.7",
32 |     "@testing-library/jest-dom": "^6.1.5",
33 |     "@testing-library/react": "^14.1.2",
34 |     "@testing-library/user-event": "^14.5.1",
35 |     "@types/react": "^18.2.37",
36 |     "@types/react-dom": "^18.2.15",
37 |     "@types/react-transition-group": "^4.4.12",
38 |     "@typescript-eslint/eslint-plugin": "^6.10.0",
39 |     "@typescript-eslint/parser": "^6.10.0",
40 |     "@vitejs/plugin-react": "^4.2.0",
41 |     "@vitejs/plugin-react-swc": "^3.7.2",
42 |     "@vitest/coverage-v8": "^1.0.4",
43 |     "autoprefixer": "^10.4.16",
44 |     "eslint": "^8.53.0",
45 |     "eslint-plugin-react-hooks": "^4.6.0",
46 |     "eslint-plugin-react-refresh": "^0.4.4",
47 |     "happy-dom": "^12.10.3",
48 |     "postcss": "^8.4.32",
49 |     "tailwindcss": "^3.3.6",
50 |     "typescript": "^5.2.2",
51 |     "vite": "^5.0.0",
52 |     "vitest": "^1.0.4"
53 |   }
54 | }
55 | 


--------------------------------------------------------------------------------
/apps/web/postcss.config.js:
--------------------------------------------------------------------------------
1 | export default {
2 |   plugins: {
3 |     tailwindcss: {},
4 |     autoprefixer: {}
5 |   }
6 | };
7 | 


--------------------------------------------------------------------------------
/apps/web/public/images/about-us.jpg:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/50d0c16275cb605178c736f789f43dfda0f99d82/apps/web/public/images/about-us.jpg


--------------------------------------------------------------------------------
/apps/web/public/images/contact.jpg:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/50d0c16275cb605178c736f789f43dfda0f99d82/apps/web/public/images/contact.jpg


--------------------------------------------------------------------------------
/apps/web/public/images/homepage-hero.webp:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/50d0c16275cb605178c736f789f43dfda0f99d82/apps/web/public/images/homepage-hero.webp


--------------------------------------------------------------------------------
/apps/web/public/images/logo.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/50d0c16275cb605178c736f789f43dfda0f99d82/apps/web/public/images/logo.png


--------------------------------------------------------------------------------
/apps/web/public/images/logo.svg:
--------------------------------------------------------------------------------
 1 | <svg width="125" height="49" viewBox="0 0 125 49" fill="none" xmlns="http://www.w3.org/2000/svg">
 2 |   <path fill-rule="evenodd" clip-rule="evenodd"
 3 |     d="M12.299 23.96C6.689 27.38 3.841 35.889 6.031 42.685C7.852 48.335 8.69 49.098 11.615 47.766C13.111 47.084 13.864 46.088 13.534 45.229C13.236 44.451 12.72 42.731 12.387 41.407C11.833 39.197 12.079 39 15.392 39C18.541 39 19 39.307 19 41.418C19 45.568 20.054 47 23.107 47H26V37.437V27.873L22.75 28.187C20.11 28.441 19.515 28.922 19.579 30.75C19.646 32.649 19.139 33 16.329 33C12.315 33 12.111 31.845 15.635 29.073C17.408 27.678 19.732 27 22.742 27C26.409 27 27.105 26.715 26.607 25.418C26.273 24.548 26 23.423 26 22.918C26 21.139 15.632 21.927 12.299 23.96ZM30 37.573V47.145L35.75 46.896C43.345 46.566 44.868 46.116 46.087 43.838C46.823 42.462 46.723 41.15 45.729 39.158C44.712 37.12 44.62 35.777 45.381 34.072C47.022 30.395 43.278 28 35.889 28H30V37.573ZM53.763 29.565C48.483 32.43 46.44 39.852 49.791 43.99C51.23 45.768 52.9 46.29 58.291 46.647L65 47.093V37.546V28L60.75 28.04C58.413 28.062 55.268 28.748 53.763 29.565ZM73.286 29.728C69.31 31.708 67 36.365 67 42.401C67 46.844 67.102 47 70 47C72.895 47 73 46.841 73 42.434C73 39.923 73.466 36.998 74.035 35.934C75.491 33.214 78.189 33.431 77.961 36.25C77.861 37.487 77.828 40.413 77.889 42.75C77.989 46.587 78.243 47 80.5 47C82.991 47 83 46.967 83 37.5V28L79.75 28.064C77.963 28.099 75.054 28.848 73.286 29.728ZM89.827 29.701C85.575 34.571 84.575 42.4 87.829 45.345C90.443 47.711 99.148 47.599 101.345 45.171C103.769 42.493 103.461 35.983 100.718 31.898C97.965 27.799 92.458 26.689 89.827 29.701ZM106 37.566V47.133L108.75 46.816C111.102 46.546 111.572 45.952 112 42.717C112.275 40.636 112.838 38.949 113.25 38.967C113.662 38.985 114.45 39 115 39C115.55 39 116 40.83 116 43.066C116 46.913 116.149 47.116 118.75 46.816L121.5 46.5L121.788 37.25L122.075 28H119.038C116.329 28 116 28.325 116 31C116 33.333 115.556 34 114 34C112.444 34 112 33.333 112 31C112 28.333 111.667 28 109 28H106V37.566ZM36 37.5C36 41.333 36.296 42 38 42C40.467 42 40.596 40.161 38.25 38.428C36.848 37.392 36.748 36.883 37.75 35.867C39.429 34.166 39.327 33 37.5 33C36.389 33 36 34.167 36 37.5ZM55.44 35.451C53.357 38.63 53.935 41.416 56.76 41.82C58.8 42.111 59 41.731 59 37.57C59 32.472 57.843 31.783 55.44 35.451ZM92.607 34.582C92.273 35.452 92 37.477 92 39.082C92 41.528 92.404 42 94.5 42C96.662 42 97 41.553 97 38.7C97 34.039 93.922 31.154 92.607 34.582Z"
 4 |     fill="black" />
 5 |   <path
 6 |     d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
 7 |     fill="black" />
 8 |   <path
 9 |     d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
10 |     fill="#D9261E" />
11 | </svg>
12 | 


--------------------------------------------------------------------------------
/apps/web/public/images/property-placeholder.webp:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/50d0c16275cb605178c736f789f43dfda0f99d82/apps/web/public/images/property-placeholder.webp


--------------------------------------------------------------------------------
/apps/web/public/vite.svg:
--------------------------------------------------------------------------------
1 | <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>


--------------------------------------------------------------------------------
/apps/web/src/App.css:
--------------------------------------------------------------------------------
 1 | #root {
 2 |   max-width: 1280px;
 3 |   margin: 0 auto;
 4 |   padding: 2rem;
 5 |   text-align: center;
 6 | }
 7 | 
 8 | .logo {
 9 |   height: 6em;
10 |   padding: 1.5em;
11 |   will-change: filter;
12 |   transition: filter 300ms;
13 | }
14 | .logo:hover {
15 |   filter: drop-shadow(0 0 2em #646cffaa);
16 | }
17 | .logo.react:hover {
18 |   filter: drop-shadow(0 0 2em #61dafbaa);
19 | }
20 | 
21 | @keyframes logo-spin {
22 |   from {
23 |     transform: rotate(0deg);
24 |   }
25 |   to {
26 |     transform: rotate(360deg);
27 |   }
28 | }
29 | 
30 | @media (prefers-reduced-motion: no-preference) {
31 |   a:nth-of-type(2) .logo {
32 |     animation: logo-spin infinite 20s linear;
33 |   }
34 | }
35 | 
36 | .card {
37 |   padding: 2em;
38 | }
39 | 
40 | .read-the-docs {
41 |   color: #888;
42 | }
43 | 


--------------------------------------------------------------------------------
/apps/web/src/App.tsx:
--------------------------------------------------------------------------------
 1 | import { BrowserRouter } from 'react-router-dom';
 2 | import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
 3 | import { ReactQueryDevtools } from '@tanstack/react-query-devtools';
 4 | import AppRoutes from './AppRoutes';
 5 | import { ThemeProvider } from './contexts/ThemeContext';
 6 | import { AuthProvider } from './contexts/auth';
 7 | 
 8 | const queryClient = new QueryClient({
 9 |   defaultOptions: {
10 |     queries: {
11 |       retry: 1,
12 |       refetchOnWindowFocus: false,
13 |     },
14 |   },
15 | });
16 | 
17 | export default function App() {
18 |   return (
19 |     <QueryClientProvider client={queryClient}>
20 |       <BrowserRouter>
21 |         <ThemeProvider>
22 |           <AuthProvider>
23 |             <AppRoutes />
24 |           </AuthProvider>
25 |         </ThemeProvider>
26 |       </BrowserRouter>
27 |       <ReactQueryDevtools />
28 |     </QueryClientProvider>
29 |   );
30 | }
31 | 


--------------------------------------------------------------------------------
/apps/web/src/AppRoutes.tsx:
--------------------------------------------------------------------------------
 1 | import { Routes, Route } from 'react-router-dom';
 2 | import Home from './pages/Home';
 3 | import About from './pages/About';
 4 | import Contact from './pages/Contact';
 5 | import PropertyDetails from './pages/PropertyDetails';
 6 | import Properties from './pages/Properties';
 7 | import AdminDashboard from './pages/admin/Dashboard';
 8 | import AdminProperties from './pages/admin/Properties';
 9 | import EditProperty from './pages/admin/EditProperty';
10 | import NewProperty from './pages/admin/NewProperty';
11 | import Messages from './pages/admin/Messages';
12 | import Users from './pages/admin/Users';
13 | import NewUser from './pages/admin/NewUser';
14 | import ProtectedRoute from './components/auth/ProtectedRoute';
15 | import AdminLayout from './components/admin/AdminLayout';
16 | import Layout from './components/layout/Layout';
17 | import Login from './pages/admin/Login';
18 | 
19 | export default function AppRoutes() {
20 |   return (
21 |     <Routes>
22 |       <Route element={<Layout />}>
23 |         <Route path="/" element={<Home />} />
24 |         <Route path="/about" element={<About />} />
25 |         <Route path="/contact" element={<Contact />} />
26 |         <Route path="/properties" element={<Properties />} />
27 |         <Route path="/properties/:id" element={<PropertyDetails />} />
28 |       </Route>
29 | 
30 |       {/* Admin Routes */}
31 |       <Route path="/admin/login" element={<Login />} />
32 |       
33 |       <Route
34 |         path="/admin"
35 |         element={
36 |           <ProtectedRoute>
37 |             <AdminLayout />
38 |           </ProtectedRoute>
39 |         }
40 |       >
41 |         <Route index element={<AdminDashboard />} />
42 |         <Route path="properties" element={<AdminProperties />} />
43 |         <Route path="properties/new" element={<NewProperty />} />
44 |         <Route path="properties/:id/edit" element={<EditProperty />} />
45 |         <Route path="messages" element={<Messages />} />
46 |         <Route path="users" element={<Users />} />
47 |         <Route path="users/new" element={<NewUser />} />
48 |       </Route>
49 |     </Routes>
50 |   );
51 | } 
52 | 


--------------------------------------------------------------------------------
/apps/web/src/assets/react.svg:
--------------------------------------------------------------------------------
1 | <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>


--------------------------------------------------------------------------------
/apps/web/src/components/LoadingSpinner.tsx:
--------------------------------------------------------------------------------
1 | export default function LoadingSpinner() {
2 |   return (
3 |     <div className="w-12 h-12 rounded-full border-4 border-gray-200 border-t-primary-600 animate-spin" />
4 |   );
5 | } 
6 | 


--------------------------------------------------------------------------------
/apps/web/src/components/Logo.tsx:
--------------------------------------------------------------------------------
 1 | import { useTheme } from '../hooks/useTheme';
 2 | 
 3 | export default function Logo({ className = '' }: { className?: string }) {
 4 |   const { isDark } = useTheme();
 5 | 
 6 |   return (
 7 |     <svg 
 8 |       className={className}
 9 |       width="125" 
10 |       height="49" 
11 |       viewBox="0 0 125 49" 
12 |       fill="none" 
13 |       xmlns="http://www.w3.org/2000/svg"
14 |     >
15 |       <path 
16 |         fillRule="evenodd" 
17 |         clipRule="evenodd"
18 |         className={`${isDark ? 'fill-gray-200' : 'fill-gray-900'}`}
19 |         d="M12.299 23.96C6.689 27.38 3.841 35.889 6.031 42.685C7.852 48.335 8.69 49.098 11.615 47.766C13.111 47.084 13.864 46.088 13.534 45.229C13.236 44.451 12.72 42.731 12.387 41.407C11.833 39.197 12.079 39 15.392 39C18.541 39 19 39.307 19 41.418C19 45.568 20.054 47 23.107 47H26V37.437V27.873L22.75 28.187C20.11 28.441 19.515 28.922 19.579 30.75C19.646 32.649 19.139 33 16.329 33C12.315 33 12.111 31.845 15.635 29.073C17.408 27.678 19.732 27 22.742 27C26.409 27 27.105 26.715 26.607 25.418C26.273 24.548 26 23.423 26 22.918C26 21.139 15.632 21.927 12.299 23.96ZM30 37.573V47.145L35.75 46.896C43.345 46.566 44.868 46.116 46.087 43.838C46.823 42.462 46.723 41.15 45.729 39.158C44.712 37.12 44.62 35.777 45.381 34.072C47.022 30.395 43.278 28 35.889 28H30V37.573ZM53.763 29.565C48.483 32.43 46.44 39.852 49.791 43.99C51.23 45.768 52.9 46.29 58.291 46.647L65 47.093V37.546V28L60.75 28.04C58.413 28.062 55.268 28.748 53.763 29.565ZM73.286 29.728C69.31 31.708 67 36.365 67 42.401C67 46.844 67.102 47 70 47C72.895 47 73 46.841 73 42.434C73 39.923 73.466 36.998 74.035 35.934C75.491 33.214 78.189 33.431 77.961 36.25C77.861 37.487 77.828 40.413 77.889 42.75C77.989 46.587 78.243 47 80.5 47C82.991 47 83 46.967 83 37.5V28L79.75 28.064C77.963 28.099 75.054 28.848 73.286 29.728ZM89.827 29.701C85.575 34.571 84.575 42.4 87.829 45.345C90.443 47.711 99.148 47.599 101.345 45.171C103.769 42.493 103.461 35.983 100.718 31.898C97.965 27.799 92.458 26.689 89.827 29.701ZM106 37.566V47.133L108.75 46.816C111.102 46.546 111.572 45.952 112 42.717C112.275 40.636 112.838 38.949 113.25 38.967C113.662 38.985 114.45 39 115 39C115.55 39 116 40.83 116 43.066C116 46.913 116.149 47.116 118.75 46.816L121.5 46.5L121.788 37.25L122.075 28H119.038C116.329 28 116 28.325 116 31C116 33.333 115.556 34 114 34C112.444 34 112 33.333 112 31C112 28.333 111.667 28 109 28H106V37.566ZM36 37.5C36 41.333 36.296 42 38 42C40.467 42 40.596 40.161 38.25 38.428C36.848 37.392 36.748 36.883 37.75 35.867C39.429 34.166 39.327 33 37.5 33C36.389 33 36 34.167 36 37.5ZM55.44 35.451C53.357 38.63 53.935 41.416 56.76 41.82C58.8 42.111 59 41.731 59 37.57C59 32.472 57.843 31.783 55.44 35.451ZM92.607 34.582C92.273 35.452 92 37.477 92 39.082C92 41.528 92.404 42 94.5 42C96.662 42 97 41.553 97 38.7C97 34.039 93.922 31.154 92.607 34.582Z"
20 |       />
21 |       <path
22 |         className="fill-primary-600"
23 |         d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
24 |       />
25 |     </svg>
26 |   );
27 | } 
28 | 


--------------------------------------------------------------------------------
/apps/web/src/components/ThemeToggle.tsx:
--------------------------------------------------------------------------------
 1 | import { Fragment } from 'react';
 2 | import { Menu, Transition } from '@headlessui/react';
 3 | import { SunIcon, MoonIcon, ComputerDesktopIcon } from '@heroicons/react/24/outline';
 4 | import { useTheme } from '../contexts/ThemeContext';
 5 | 
 6 | function classNames(...classes: string[]) {
 7 |   return classes.filter(Boolean).join(' ');
 8 | }
 9 | 
10 | export default function ThemeToggle() {
11 |   const { theme, setTheme } = useTheme();
12 | 
13 |   const getIcon = () => {
14 |     switch (theme) {
15 |       case 'light':
16 |         return <SunIcon className="h-5 w-5" aria-hidden="true" />;
17 |       case 'dark':
18 |         return <MoonIcon className="h-5 w-5" aria-hidden="true" />;
19 |       case 'gray':
20 |         return <ComputerDesktopIcon className="h-5 w-5" aria-hidden="true" />;
21 |       default:
22 |         return <SunIcon className="h-5 w-5" aria-hidden="true" />;
23 |     }
24 |   };
25 | 
26 |   const themes = [
27 |     { name: 'Light', value: 'light', icon: SunIcon },
28 |     { name: 'Dark', value: 'dark', icon: MoonIcon },
29 |     { name: 'Gray', value: 'gray', icon: ComputerDesktopIcon },
30 |   ];
31 | 
32 |   return (
33 |     <Menu as="div" className="relative">
34 |       <Menu.Button
35 |         className="rounded-md p-2 text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500"
36 |         aria-label="Select theme"
37 |       >
38 |         {getIcon()}
39 |       </Menu.Button>
40 |       <Transition
41 |         as={Fragment}
42 |         enter="transition ease-out duration-100"
43 |         enterFrom="transform opacity-0 scale-95"
44 |         enterTo="transform opacity-100 scale-100"
45 |         leave="transition ease-in duration-75"
46 |         leaveFrom="transform opacity-100 scale-100"
47 |         leaveTo="transform opacity-0 scale-95"
48 |       >
49 |         <Menu.Items className="absolute right-0 z-10 mt-2 w-36 origin-top-right rounded-md bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
50 |           <div className="py-1">
51 |             {themes.map((themeOption) => (
52 |               <Menu.Item key={themeOption.value}>
53 |                 {({ active }) => (
54 |                   <button
55 |                     onClick={() => setTheme(themeOption.value as 'light' | 'dark' | 'gray')}
56 |                     className={classNames(
57 |                       active ? 'bg-gray-100 dark:bg-[rgb(var(--color-dark-border))]' : '',
58 |                       theme === themeOption.value ? 'text-primary-600 dark:text-primary-500' : 'text-gray-700 dark:text-[rgb(var(--color-dark-text))]',
59 |                       'group flex w-full items-center px-4 py-2 text-sm'
60 |                     )}
61 |                   >
62 |                     <themeOption.icon
63 |                       className={classNames(
64 |                         'mr-3 h-5 w-5',
65 |                         theme === themeOption.value ? 'text-primary-600 dark:text-primary-500' : 'text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))]'
66 |                       )}
67 |                       aria-hidden="true"
68 |                     />
69 |                     {themeOption.name}
70 |                   </button>
71 |                 )}
72 |               </Menu.Item>
73 |             ))}
74 |           </div>
75 |         </Menu.Items>
76 |       </Transition>
77 |     </Menu>
78 |   );
79 | } 
80 | 


--------------------------------------------------------------------------------
/apps/web/src/components/admin/AdminLayout.tsx:
--------------------------------------------------------------------------------
  1 | import { Fragment, useState } from 'react';
  2 | import { Dialog, Menu, Transition } from '@headlessui/react';
  3 | import {
  4 |   Bars3Icon,
  5 |   HomeIcon,
  6 |   UsersIcon,
  7 |   BuildingOfficeIcon,
  8 |   XMarkIcon,
  9 |   EnvelopeIcon,
 10 | } from '@heroicons/react/24/outline';
 11 | import { Link, Outlet, useLocation } from 'react-router-dom';
 12 | import ThemeToggle from '../ThemeToggle';
 13 | import { useAuth } from '../../contexts/auth';
 14 | import { useTheme } from '../../hooks/useTheme';
 15 | import Logo from '../Logo';
 16 | 
 17 | const navigation = [
 18 |   { name: 'Dashboard', href: '/admin', icon: HomeIcon },
 19 |   { name: 'Properties', href: '/admin/properties', icon: BuildingOfficeIcon },
 20 |   { name: 'Users', href: '/admin/users', icon: UsersIcon },
 21 |   { name: 'Messages', href: '/admin/messages', icon: EnvelopeIcon },
 22 | ];
 23 | 
 24 | function classNames(...classes: string[]) {
 25 |   return classes.filter(Boolean).join(' ');
 26 | }
 27 | 
 28 | export default function AdminLayout() {
 29 |   const [sidebarOpen, setSidebarOpen] = useState(false);
 30 |   const location = useLocation();
 31 |   const { user, logout } = useAuth();
 32 |   const { isDark } = useTheme();
 33 | 
 34 |   return (
 35 |     <div className="min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 36 |       <Transition.Root show={sidebarOpen} as={Fragment}>
 37 |         <Dialog as="div" className="relative z-50 lg:hidden" onClose={setSidebarOpen}>
 38 |           <Transition.Child
 39 |             as={Fragment}
 40 |             enter="transition-opacity ease-linear duration-300"
 41 |             enterFrom="opacity-0"
 42 |             enterTo="opacity-100"
 43 |             leave="transition-opacity ease-linear duration-300"
 44 |             leaveFrom="opacity-100"
 45 |             leaveTo="opacity-0"
 46 |           >
 47 |             <div className="fixed inset-0 bg-[rgb(var(--color-dark-bg))]/80" />
 48 |           </Transition.Child>
 49 | 
 50 |           <div className="fixed inset-0 flex">
 51 |             <Transition.Child
 52 |               as={Fragment}
 53 |               enter="transition ease-in-out duration-300 transform"
 54 |               enterFrom="-translate-x-full"
 55 |               enterTo="translate-x-0"
 56 |               leave="transition ease-in-out duration-300 transform"
 57 |               leaveFrom="translate-x-0"
 58 |               leaveTo="-translate-x-full"
 59 |             >
 60 |               <Dialog.Panel className="relative flex flex-1 w-full max-w-xs mr-16">
 61 |                 <Transition.Child
 62 |                   as={Fragment}
 63 |                   enter="ease-in-out duration-300"
 64 |                   enterFrom="opacity-0"
 65 |                   enterTo="opacity-100"
 66 |                   leave="ease-in-out duration-300"
 67 |                   leaveFrom="opacity-100"
 68 |                   leaveTo="opacity-0"
 69 |                 >
 70 |                   <div className="absolute top-0 flex justify-center w-16 pt-5 left-full">
 71 |                     <button type="button" className="-m-2.5 p-2.5" onClick={() => setSidebarOpen(false)}>
 72 |                       <span className="sr-only">Close sidebar</span>
 73 |                       <XMarkIcon className="w-6 h-6 text-white" aria-hidden="true" />
 74 |                     </button>
 75 |                   </div>
 76 |                 </Transition.Child>
 77 |                 <div className="flex grow flex-col gap-y-5 overflow-y-auto bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 pb-4">
 78 |                   <div className="flex items-center h-16 shrink-0">
 79 |                     <Link to="/admin">
 80 |                       <Logo className="w-auto h-8" />
 81 |                     </Link>
 82 |                   </div>
 83 |                   <nav className="flex flex-col flex-1">
 84 |                     <ul role="list" className="flex flex-col flex-1 gap-y-7">
 85 |                       <li>
 86 |                         <ul role="list" className="-mx-2 space-y-1">
 87 |                           {navigation.map((item) => (
 88 |                             <li key={item.name}>
 89 |                               <Link
 90 |                                 to={item.href}
 91 |                                 className={classNames(
 92 |                                   item.href === location.pathname
 93 |                                     ? 'bg-gray-100 text-primary-600'
 94 |                                     : 'text-gray-600 hover:text-primary-600 hover:bg-gray-50 dark:text-[rgb(var(--color-dark-text))] dark:hover:bg-[rgb(var(--color-dark-border))]',
 95 |                                   'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'
 96 |                                 )}
 97 |                               >
 98 |                                 <item.icon
 99 |                                   className={classNames(
100 |                                     item.href === location.pathname
101 |                                       ? 'text-primary-600'
102 |                                       : 'text-gray-400 group-hover:text-primary-600 dark:text-[rgb(var(--color-dark-text-secondary))] dark:group-hover:text-primary-500',
103 |                                     'h-6 w-6 shrink-0'
104 |                                   )}
105 |                                   aria-hidden="true"
106 |                                 />
107 |                                 {item.name}
108 |                               </Link>
109 |                             </li>
110 |                           ))}
111 |                         </ul>
112 |                       </li>
113 |                     </ul>
114 |                   </nav>
115 |                 </div>
116 |               </Dialog.Panel>
117 |             </Transition.Child>
118 |           </div>
119 |         </Dialog>
120 |       </Transition.Root>
121 | 
122 |       {/* Static sidebar for desktop */}
123 |       <div className="hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col">
124 |         <div className="flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 pb-4">
125 |           <div className="flex items-center h-16 shrink-0">
126 |             <Link to="/admin">
127 |               <Logo className="w-auto h-8" />
128 |             </Link>
129 |           </div>
130 |           <nav className="flex flex-col flex-1">
131 |             <ul role="list" className="flex flex-col flex-1 gap-y-7">
132 |               <li>
133 |                 <ul role="list" className="-mx-2 space-y-1">
134 |                   {navigation.map((item) => (
135 |                     <li key={item.name}>
136 |                       <Link
137 |                         to={item.href}
138 |                         className={classNames(
139 |                           item.href === location.pathname
140 |                             ? 'bg-gray-100 text-primary-600'
141 |                             : 'text-gray-600 hover:text-primary-600 hover:bg-gray-50 dark:text-[rgb(var(--color-dark-text))] dark:hover:bg-[rgb(var(--color-dark-border))]',
142 |                           'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'
143 |                         )}
144 |                       >
145 |                         <item.icon
146 |                           className={classNames(
147 |                             item.href === location.pathname
148 |                               ? 'text-primary-600'
149 |                               : 'text-gray-400 group-hover:text-primary-600 dark:text-[rgb(var(--color-dark-text-secondary))] dark:group-hover:text-primary-500',
150 |                             'h-6 w-6 shrink-0'
151 |                           )}
152 |                           aria-hidden="true"
153 |                         />
154 |                         {item.name}
155 |                       </Link>
156 |                     </li>
157 |                   ))}
158 |                 </ul>
159 |               </li>
160 |             </ul>
161 |           </nav>
162 |         </div>
163 |       </div>
164 | 
165 |       <div className="lg:pl-72">
166 |         <div className="sticky top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8">
167 |           <button type="button" className="-m-2.5 p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))] lg:hidden" onClick={() => setSidebarOpen(true)}>
168 |             <span className="sr-only">Open sidebar</span>
169 |             <Bars3Icon className="w-6 h-6" aria-hidden="true" />
170 |           </button>
171 | 
172 |           <div className="flex self-stretch flex-1 gap-x-4 lg:gap-x-6">
173 |             <div className="flex flex-1" />
174 |             <div className="flex items-center gap-x-4 lg:gap-x-6">
175 |               <ThemeToggle />
176 |               <div className="hidden lg:block lg:h-6 lg:w-px lg:bg-gray-200 dark:lg:bg-[rgb(var(--color-dark-border))]" />
177 |               <Menu as="div" className="relative">
178 |                 <Menu.Button className="-m-1.5 flex items-center p-1.5">
179 |                   <span className="sr-only">Open user menu</span>
180 |                   <span className="hidden lg:flex lg:items-center">
181 |                     <span className="flex items-center justify-center w-8 h-8 text-sm font-medium text-white rounded-full bg-primary-600">
182 |                       {user?.name?.split(' ').map(n => n[0]).join('')}
183 |                     </span>
184 |                     <span className="ml-2 text-sm font-semibold leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]" aria-hidden="true">
185 |                       {user?.name}
186 |                     </span>
187 |                   </span>
188 |                 </Menu.Button>
189 |                 <Transition
190 |                   as={Fragment}
191 |                   enter="transition ease-out duration-100"
192 |                   enterFrom="transform opacity-0 scale-95"
193 |                   enterTo="transform opacity-100 scale-100"
194 |                   leave="transition ease-in duration-75"
195 |                   leaveFrom="transform opacity-100 scale-100"
196 |                   leaveTo="transform opacity-0 scale-95"
197 |                 >
198 |                   <Menu.Items className="absolute right-0 z-10 mt-2.5 w-32 origin-top-right rounded-md bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] py-2 shadow-lg ring-1 ring-gray-900/5 dark:ring-[rgb(var(--color-dark-border))] focus:outline-none">
199 |                     <Menu.Item>
200 |                       {({ active }) => (
201 |                         <button
202 |                           onClick={logout}
203 |                           className={classNames(
204 |                             active ? 'bg-gray-50 dark:bg-[rgb(var(--color-dark-border))]' : '',
205 |                             'block w-full px-3 py-1 text-left text-sm leading-6 text-gray-600 dark:text-[rgb(var(--color-dark-text))]'
206 |                           )}
207 |                         >
208 |                           Изход
209 |                         </button>
210 |                       )}
211 |                     </Menu.Item>
212 |                   </Menu.Items>
213 |                 </Transition>
214 |               </Menu>
215 |             </div>
216 |           </div>
217 |         </div>
218 | 
219 |         <main className="py-10">
220 |           <div className="px-4 sm:px-6 lg:px-8">
221 |             <Outlet />
222 |           </div>
223 |         </main>
224 |       </div>
225 |       <Link
226 |         to="/"
227 |         className="fixed z-50 flex items-center p-3 text-white transition-all duration-300 ease-in-out rounded-l-full shadow-lg bottom-24 -right-1 group bg-primary-600 hover:pr-6 hover:right-0 hover:bg-primary-700 hover:shadow-xl hover:translate-x-1"
228 |         title="Към сайта"
229 |       >
230 |         <HomeIcon className="w-6 h-6 transition-transform duration-300 ease-in-out transform group-hover:-rotate-90" aria-hidden="true" />
231 |         <span className="text-sm font-medium max-w-0 group-hover:max-w-[200px] opacity-0 group-hover:opacity-100 transition-all duration-300 ease-in-out whitespace-nowrap overflow-hidden">
232 |           Към сайта
233 |         </span>
234 |       </Link>
235 |     </div>
236 |   );
237 | } 
238 | 


--------------------------------------------------------------------------------
/apps/web/src/components/admin/PropertyForm.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import type { CreatePropertyData, Property } from '../../types/api';
  3 | import { XMarkIcon } from '@heroicons/react/24/outline';
  4 | import { useQuery } from '@tanstack/react-query';
  5 | import { getRegions, getNeighborhoods, getFeatures } from '../../services/locationService';
  6 | import { constructionTypes, furnishingTypes, propertyTypes, locationTypes, categories, currencies } from '../../constants/property';
  7 | 
  8 | interface PropertyFormProps {
  9 |   initialData?: Property;
 10 |   onSubmit: (data: CreatePropertyData, images: File[]) => Promise<void>;
 11 |   isSubmitting?: boolean;
 12 |   onCancel?: () => void;
 13 |   submitLabel?: string;
 14 | }
 15 | 
 16 | export default function PropertyForm({
 17 |   initialData,
 18 |   onSubmit,
 19 |   isSubmitting = false,
 20 |   onCancel,
 21 |   submitLabel = 'Запази'
 22 | }: PropertyFormProps) {
 23 |   // Prepare initial data by converting Property type to CreatePropertyData type
 24 |   const prepareInitialData = (data?: Property): Partial<CreatePropertyData> => {
 25 |     if (!data) return {};
 26 |     const { id, createdAt, updatedAt, features, ...rest } = data;
 27 |     return {
 28 |       ...rest,
 29 |       features: features?.map(f => f.featureId),
 30 |     };
 31 |   };
 32 | 
 33 |   const [data, setData] = useState<CreatePropertyData>({
 34 |     title: '',
 35 |     description: '',
 36 |     price: 0,
 37 |     currency: 'BGN',
 38 |     area_sqm: 0,
 39 |     land_area_sqm: undefined,
 40 |     floor: undefined,
 41 |     total_floors: undefined,
 42 |     construction_type: undefined,
 43 |     furnishing: undefined,
 44 |     location_type: 'CITY',
 45 |     regionId: undefined,
 46 |     neighborhoodId: undefined,
 47 |     has_regulation: false,
 48 |     category: 'SALE',
 49 |     type: 'APARTMENT',
 50 |     featured: false,
 51 |     contact_info: {
 52 |       phone: '',
 53 |       email: '',
 54 |     },
 55 |     ...prepareInitialData(initialData),
 56 |   });
 57 | 
 58 |   const [images, setImages] = useState<File[]>([]);
 59 |   const [errors, setErrors] = useState<Record<string, string>>({});
 60 |   const [selectedFeatures, setSelectedFeatures] = useState<number[]>(
 61 |     initialData?.features?.map(f => f.featureId) || []
 62 |   );
 63 | 
 64 |   const { 
 65 |     data: regions = [], 
 66 |     isLoading: regionsLoading, 
 67 |     error: regionsError 
 68 |   } = useQuery({
 69 |     queryKey: ['regions'],
 70 |     queryFn: getRegions,
 71 |     retry: 3,
 72 |     staleTime: 300000, // 5 minutes
 73 |   });
 74 | 
 75 |   const { 
 76 |     data: neighborhoods = [], 
 77 |     isLoading: neighborhoodsLoading, 
 78 |     error: neighborhoodsError 
 79 |   } = useQuery({
 80 |     queryKey: ['neighborhoods'],
 81 |     queryFn: getNeighborhoods,
 82 |     retry: 3,
 83 |     staleTime: 300000, // 5 minutes
 84 |   });
 85 | 
 86 |   const { 
 87 |     data: features = [], 
 88 |     isLoading: featuresLoading, 
 89 |     error: featuresError 
 90 |   } = useQuery({
 91 |     queryKey: ['features'],
 92 |     queryFn: getFeatures,
 93 |     retry: 3,
 94 |     staleTime: 300000, // 5 minutes
 95 |   });
 96 | 
 97 |   useEffect(() => {
 98 |     if (regionsError) console.error('Regions error:', regionsError);
 99 |     if (neighborhoodsError) console.error('Neighborhoods error:', neighborhoodsError);
100 |     if (featuresError) console.error('Features error:', featuresError);
101 |   }, [regionsError, neighborhoodsError, featuresError]);
102 | 
103 |   const handleSubmit = async (e: React.FormEvent) => {
104 |     e.preventDefault();
105 |     setErrors({});
106 | 
107 |     try {
108 |       await onSubmit({ ...data, features: selectedFeatures }, images);
109 |     } catch (error: any) {
110 |       if (error.response?.data?.errors) {
111 |         setErrors(error.response.data.errors);
112 |       } else {
113 |         setErrors({ general: error.response?.data?.message || 'Възникна грешка при запазването на имота' });
114 |       }
115 |     }
116 |   };
117 | 
118 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
119 |     const { name, value } = e.target;
120 |     if (name.startsWith('contact_info.')) {
121 |       const field = name.split('.')[1];
122 |       setData(prev => ({
123 |         ...prev,
124 |         contact_info: {
125 |           ...prev.contact_info,
126 |           [field]: value,
127 |         },
128 |       }));
129 |     } else if (name === 'has_regulation' || name === 'featured') {
130 |       setData(prev => ({ ...prev, [name]: (e.target as HTMLInputElement).checked }));
131 |     } else {
132 |       setData(prev => ({
133 |         ...prev,
134 |         [name]: value,
135 |       }));
136 |     }
137 |   };
138 | 
139 |   const handleFeatureChange = (featureId: number) => {
140 |     setSelectedFeatures(prev => {
141 |       if (prev.includes(featureId)) {
142 |         return prev.filter(id => id !== featureId);
143 |       }
144 |       return [...prev, featureId];
145 |     });
146 |   };
147 | 
148 |   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
149 |     if (e.target.files) {
150 |       setImages(Array.from(e.target.files));
151 |     }
152 |   };
153 | 
154 |   return (
155 |     <form onSubmit={handleSubmit} className="space-y-6">
156 |       {errors.general && (
157 |         <div className="p-4 text-sm text-red-700 bg-red-100 rounded-lg dark:text-red-200 dark:bg-red-900/50">
158 |           {errors.general}
159 |         </div>
160 |       )}
161 | 
162 |       <div className="space-y-4">
163 |         {/* Basic Info Section */}
164 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
165 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Основна информация</h3>
166 |           <div className="grid grid-cols-1 gap-6">
167 |           <div>
168 |               <label htmlFor="title" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
169 |               Заглавие
170 |             </label>
171 |             <input
172 |               type="text"
173 |               id="title"
174 |               name="title"
175 |                 value={data.title}
176 |                 onChange={handleChange}
177 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
178 |                   errors.title 
179 |                     ? 'border-red-500 dark:border-red-500' 
180 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
181 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
182 |               />
183 |               {errors.title && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.title}</p>}
184 |             </div>
185 | 
186 |             <div>
187 |               <label htmlFor="description" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
188 |                 Описание
189 |               </label>
190 |               <textarea
191 |                 id="description"
192 |                 name="description"
193 |                 value={data.description}
194 |               onChange={handleChange}
195 |                 rows={4}
196 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
197 |                   errors.description 
198 |                     ? 'border-red-500 dark:border-red-500' 
199 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
200 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
201 |               />
202 |               {errors.description && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.description}</p>}
203 |             </div>
204 |           </div>
205 |         </div>
206 | 
207 |         {/* Price & Area Section */}
208 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
209 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Цена и площ</h3>
210 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-3">
211 |             <div>
212 |               <label htmlFor="price" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
213 |                 Цена
214 |               </label>
215 |               <div className="flex mt-1 rounded-md shadow-sm">
216 |                 <input
217 |                   type="number"
218 |                   id="price"
219 |                   name="price"
220 |                   value={data.price}
221 |                   onChange={handleChange}
222 |                   className={`block w-full rounded-l-md shadow-sm sm:text-sm ${
223 |                     errors.price 
224 |                       ? 'border-red-500 dark:border-red-500' 
225 |                       : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
226 |                   } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
227 |                 />
228 |                 <select
229 |                   name="currency"
230 |                   value={data.currency}
231 |                   onChange={handleChange}
232 |                   className="border-l-0 border-gray-300 rounded-r-md dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:ring-primary-500 focus:border-primary-500"
233 |                 >
234 |                   {currencies.map(currency => (
235 |                     <option key={currency.value} value={currency.value}>{currency.label}</option>
236 |                   ))}
237 |                 </select>
238 |               </div>
239 |               {errors.price && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.price}</p>}
240 |             </div>
241 | 
242 |             <div>
243 |               <label htmlFor="area_sqm" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
244 |                 Площ (кв.м)
245 |               </label>
246 |               <input
247 |                 type="number"
248 |                 id="area_sqm"
249 |                 name="area_sqm"
250 |                 value={data.area_sqm}
251 |                 onChange={handleChange}
252 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
253 |                   errors.area_sqm 
254 |                     ? 'border-red-500 dark:border-red-500' 
255 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
256 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
257 |               />
258 |               {errors.area_sqm && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.area_sqm}</p>}
259 |           </div>
260 | 
261 |           <div>
262 |               <label htmlFor="land_area_sqm" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
263 |                 Площ на парцела (кв.м)
264 |             </label>
265 |             <input
266 |                 type="number"
267 |                 id="land_area_sqm"
268 |                 name="land_area_sqm"
269 |                 value={data.land_area_sqm || ''}
270 |               onChange={handleChange}
271 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
272 |               />
273 |             </div>
274 |           </div>
275 |         </div>
276 | 
277 |         {/* Location Section */}
278 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
279 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Локация</h3>
280 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-3">
281 |             <div>
282 |               <label htmlFor="location_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
283 |                 Тип локация
284 |               </label>
285 |               <select
286 |                 id="location_type"
287 |                 name="location_type"
288 |                 value={data.location_type}
289 |                 onChange={handleChange}
290 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
291 |                   errors.location_type 
292 |                     ? 'border-red-500 dark:border-red-500' 
293 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
294 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
295 |               >
296 |                 {locationTypes.map(type => (
297 |                   <option key={type.value} value={type.value}>{type.label}</option>
298 |                 ))}
299 |               </select>
300 |               {errors.location_type && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.location_type}</p>}
301 |             </div>
302 | 
303 |             <div>
304 |               <label htmlFor="regionId" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
305 |                 Регион
306 |               </label>
307 |               <select
308 |                 id="regionId"
309 |                 name="regionId"
310 |                 value={data.regionId || ''}
311 |                 onChange={handleChange}
312 |                 disabled={regionsLoading}
313 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
314 |               >
315 |                 <option value="">Изберете</option>
316 |                 {regionsLoading ? (
317 |                   <option disabled>Зареждане...</option>
318 |                 ) : regions?.map(region => (
319 |                   <option key={region.id} value={region.id}>{region.name}</option>
320 |                 ))}
321 |               </select>
322 |           </div>
323 | 
324 |           <div>
325 |               <label htmlFor="neighborhoodId" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
326 |                 Квартал
327 |               </label>
328 |               <select
329 |                 id="neighborhoodId"
330 |                 name="neighborhoodId"
331 |                 value={data.neighborhoodId || ''}
332 |                 onChange={handleChange}
333 |                 disabled={neighborhoodsLoading}
334 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
335 |               >
336 |                 <option value="">Изберете</option>
337 |                 {neighborhoodsLoading ? (
338 |                   <option disabled>Зареждане...</option>
339 |                 ) : neighborhoods?.map(neighborhood => (
340 |                   <option key={neighborhood.id} value={neighborhood.id}>{neighborhood.name}</option>
341 |                 ))}
342 |               </select>
343 |             </div>
344 |           </div>
345 |         </div>
346 | 
347 |         {/* Property Details Section */}
348 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
349 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Детайли за имота</h3>
350 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4">
351 |             <div>
352 |               <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
353 |               Тип имот
354 |             </label>
355 |             <select
356 |               id="type"
357 |               name="type"
358 |                 value={data.type}
359 |               onChange={handleChange}
360 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
361 |               >
362 |                 {propertyTypes.map(type => (
363 |                   <option key={type.value} value={type.value}>{type.label}</option>
364 |               ))}
365 |             </select>
366 |           </div>
367 | 
368 |           <div>
369 |               <label htmlFor="category" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
370 |               Категория
371 |             </label>
372 |             <select
373 |               id="category"
374 |               name="category"
375 |                 value={data.category}
376 |               onChange={handleChange}
377 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
378 |             >
379 |                 {categories.map(category => (
380 |                   <option key={category.value} value={category.value}>{category.label}</option>
381 |                 ))}
382 |             </select>
383 |           </div>
384 | 
385 |           <div>
386 |               <label htmlFor="construction_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
387 |                 Вид строителство
388 |             </label>
389 |             <select
390 |                 id="construction_type"
391 |                 name="construction_type"
392 |                 value={data.construction_type || ''}
393 |               onChange={handleChange}
394 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
395 |               >
396 |                 <option value="">Изберете</option>
397 |                 {constructionTypes.map(type => (
398 |                   <option key={type.value} value={type.value}>{type.label}</option>
399 |                 ))}
400 |             </select>
401 |           </div>
402 | 
403 |           <div>
404 |               <label htmlFor="furnishing" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
405 |                 Обзавеждане
406 |             </label>
407 |               <select
408 |                 id="furnishing"
409 |                 name="furnishing"
410 |                 value={data.furnishing || ''}
411 |                 onChange={handleChange}
412 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
413 |               >
414 |                 <option value="">Изберете</option>
415 |                 {furnishingTypes.map(type => (
416 |                   <option key={type.value} value={type.value}>{type.label}</option>
417 |                 ))}
418 |               </select>
419 |             </div>
420 |           </div>
421 |           </div>
422 | 
423 |         {/* Floor Info & Additional Info */}
424 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
425 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Етажност и допълнителна информация</h3>
426 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-4">
427 |           <div>
428 |               <label htmlFor="floor" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
429 |               Етаж
430 |             </label>
431 |             <input
432 |               type="number"
433 |               id="floor"
434 |               name="floor"
435 |                 value={data.floor || ''}
436 |                 onChange={handleChange}
437 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
438 |             />
439 |           </div>
440 | 
441 |           <div>
442 |               <label htmlFor="total_floors" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
443 |                 Общо етажи
444 |             </label>
445 |               <input
446 |                 type="number"
447 |                 id="total_floors"
448 |                 name="total_floors"
449 |                 value={data.total_floors || ''}
450 |               onChange={handleChange}
451 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
452 |               />
453 |           </div>
454 | 
455 |           <div>
456 |               <label htmlFor="has_regulation" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
457 |                 Има регулация
458 |             </label>
459 |             <select
460 |                 id="has_regulation"
461 |                 name="has_regulation"
462 |                 value={data.has_regulation ? 'yes' : 'no'}
463 |                 onChange={(e) => {
464 |                   setData(prev => ({
465 |                     ...prev,
466 |                     has_regulation: e.target.value === 'yes'
467 |                   }));
468 |                 }}
469 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
470 |               >
471 |                 <option value="yes">Да</option>
472 |                 <option value="no">Не</option>
473 |             </select>
474 |             </div>
475 | 
476 |             <div className="flex items-center pt-6">
477 |               <label className="flex items-center">
478 |                 <input
479 |                   type="checkbox"
480 |                   name="featured"
481 |                   checked={data.featured || false}
482 |                   onChange={handleChange}
483 |                   className="w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:border-[rgb(var(--color-dark-border))]"
484 |                 />
485 |                 <span className="ml-2 text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">Препоръчан</span>
486 |               </label>
487 |             </div>
488 |           </div>
489 |         </div>
490 | 
491 |         {/* Contact Info */}
492 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
493 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Контактна информация</h3>
494 |         <div className="grid grid-cols-1 gap-6 sm:grid-cols-2">
495 |           <div>
496 |               <label htmlFor="contact_info.phone" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
497 |               Телефон за контакт
498 |             </label>
499 |             <input
500 |               type="tel"
501 |               id="contact_info.phone"
502 |               name="contact_info.phone"
503 |                 value={data.contact_info.phone}
504 |               onChange={handleChange}
505 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
506 |                   errors['contact_info.phone'] 
507 |                     ? 'border-red-500 dark:border-red-500' 
508 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
509 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
510 |             />
511 |             {errors['contact_info.phone'] && (
512 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors['contact_info.phone']}</p>
513 |             )}
514 |           </div>
515 | 
516 |           <div>
517 |               <label htmlFor="contact_info.email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
518 |               Имейл за контакт
519 |             </label>
520 |             <input
521 |               type="email"
522 |               id="contact_info.email"
523 |               name="contact_info.email"
524 |                 value={data.contact_info.email}
525 |               onChange={handleChange}
526 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
527 |                   errors['contact_info.email'] 
528 |                     ? 'border-red-500 dark:border-red-500' 
529 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
530 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
531 |             />
532 |             {errors['contact_info.email'] && (
533 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors['contact_info.email']}</p>
534 |             )}
535 |             </div>
536 |           </div>
537 |         </div>
538 | 
539 |         {/* Features Section */}
540 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
541 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Характеристики</h3>
542 |           {featuresLoading ? (
543 |             <p className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Зареждане на характеристики...</p>
544 |           ) : (
545 |             <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5">
546 |               {features?.map(feature => (
547 |                 <div key={feature.id} className="flex items-center p-2 rounded-md hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))]">
548 |                   <input
549 |                     type="checkbox"
550 |                     id={`feature-${feature.id}`}
551 |                     checked={selectedFeatures.includes(feature.id)}
552 |                     onChange={(e) => {
553 |                       if (e.target.checked) {
554 |                         setSelectedFeatures(prev => [...prev, feature.id]);
555 |                       } else {
556 |                         setSelectedFeatures(prev => prev.filter(id => id !== feature.id));
557 |                       }
558 |                     }}
559 |                     className="w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:border-[rgb(var(--color-dark-border))]"
560 |                   />
561 |                   <label
562 |                     htmlFor={`feature-${feature.id}`}
563 |                     className="block ml-2 text-sm text-gray-700 cursor-pointer dark:text-[rgb(var(--color-dark-text-secondary))]"
564 |                   >
565 |                     {feature.name}
566 |                   </label>
567 |                 </div>
568 |               ))}
569 |             </div>
570 |           )}
571 |           {featuresError && (
572 |             <p className="mt-1 text-sm text-red-600 dark:text-red-400">Грешка при зареждане на характеристиките</p>
573 |           )}
574 |         </div>
575 | 
576 |         {/* Images Section */}
577 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
578 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Изображения</h3>
579 |           {initialData?.images && initialData.images.length > 0 && (
580 |             <div>
581 |               <label className="block mb-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
582 |                 Текущи изображения
583 |               </label>
584 |               <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4">
585 |                 {initialData.images.map((image) => (
586 |                   <div key={image.id} className="relative group">
587 |                     <img
588 |                       src={image.url}
589 |                       alt={initialData.title}
590 |                       className="object-cover w-full h-32 rounded-lg"
591 |                       onError={(e) => {
592 |                         const target = e.target as HTMLImageElement;
593 |                         target.onerror = null;
594 |                         target.src = '/images/property-placeholder.webp';
595 |                       }}
596 |                     />
597 |                   </div>
598 |                 ))}
599 |               </div>
600 |             </div>
601 |           )}
602 | 
603 |           {/* Image Upload */}
604 |           <div className="mt-6">
605 |             <label className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
606 |               {initialData?.images?.length ? 'Добави нови изображения' : 'Изображения'}
607 |             </label>
608 |             <div className="flex justify-center px-6 pt-5 pb-6 mt-1 rounded-md border-2 border-gray-300 border-dashed dark:border-gray-600">
609 |             <div className="space-y-1 text-center">
610 |                 <svg
611 |                   className="mx-auto w-12 h-12 text-gray-400"
612 |                   stroke="currentColor"
613 |                   fill="none"
614 |                   viewBox="0 0 48 48"
615 |                   aria-hidden="true"
616 |                 >
617 |                   <path
618 |                     d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
619 |                     strokeWidth={2}
620 |                     strokeLinecap="round"
621 |                     strokeLinejoin="round"
622 |                   />
623 |                 </svg>
624 |                 <div className="flex text-sm text-gray-600 dark:text-gray-400">
625 |                   <label
626 |                     htmlFor="images"
627 |                     className="relative font-medium rounded-md cursor-pointer text-primary-600 hover:text-primary-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500"
628 |                   >
629 |                     <span>Качи файлове</span>
630 |                   <input
631 |                       id="images"
632 |                       name="images"
633 |                     type="file"
634 |                     multiple
635 |                     accept="image/*"
636 |                     onChange={handleImageChange}
637 |                       className="sr-only"
638 |                   />
639 |                 </label>
640 |                 <p className="pl-1">или ги провлачете тук</p>
641 |                 </div>
642 |                 <p className="text-xs text-gray-500 dark:text-gray-400">
643 |                   PNG, JPG, WEBP до 10MB
644 |                 </p>
645 |               </div>
646 |             </div>
647 |             {images.length > 0 && (
648 |               <div className="mt-4">
649 |                 <h4 className="text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">Избрани файлове:</h4>
650 |                 <ul className="mt-2 divide-y divide-gray-200 dark:divide-gray-700">
651 |                   {Array.from(images).map((file, index) => (
652 |                     <li key={index} className="flex justify-between items-center py-2">
653 |                       <span className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">{file.name}</span>
654 |                   <button
655 |                     type="button"
656 |                         onClick={() => setImages(images.filter((_, i) => i !== index))}
657 |                         className="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300"
658 |                   >
659 |                         <XMarkIcon className="w-5 h-5" />
660 |                   </button>
661 |                     </li>
662 |               ))}
663 |                 </ul>
664 |             </div>
665 |           )}
666 |           </div>
667 |         </div>
668 | 
669 |         <div className="flex gap-3 justify-end sm:col-span-2">
670 |           {onCancel && (
671 |           <button
672 |             type="button"
673 |               onClick={onCancel}
674 |               className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] bg-white dark:bg-[rgb(var(--color-dark-bg))] border border-gray-300 dark:border-[rgb(var(--color-dark-border))] rounded-md shadow-sm hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
675 |           >
676 |             Отказ
677 |           </button>
678 |           )}
679 |           <button
680 |             type="submit"
681 |             disabled={isSubmitting || regionsLoading || neighborhoodsLoading || featuresLoading}
682 |             className="px-4 py-2 text-sm font-medium text-white rounded-md border border-transparent shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
683 |           >
684 |             {isSubmitting ? 'Запазване...' : submitLabel}
685 |           </button>
686 |         </div>
687 |       </div>
688 |     </form>
689 |   );
690 | } 
691 | 


--------------------------------------------------------------------------------
/apps/web/src/components/auth/ProtectedRoute.tsx:
--------------------------------------------------------------------------------
 1 | import { Navigate, useLocation } from 'react-router-dom';
 2 | import { useQuery } from '@tanstack/react-query';
 3 | import api from '../../lib/api';
 4 | import { useAuth } from '../../contexts/auth';
 5 | import LoadingSpinner from '../LoadingSpinner';
 6 | 
 7 | interface Props {
 8 |   children: React.ReactNode;
 9 |   requireAdmin?: boolean;
10 | }
11 | 
12 | export default function ProtectedRoute({ children, requireAdmin = true }: Props) {
13 |   const location = useLocation();
14 |   const { user, isLoading: authLoading } = useAuth();
15 | 
16 |   // Show loading state while checking auth
17 |   if (authLoading) {
18 |     return <LoadingSpinner />;
19 |   }
20 | 
21 |   // If no token exists, redirect to login
22 |   if (!localStorage.getItem('token')) {
23 |     return <Navigate to="/admin/login" state={{ from: location }} replace />;
24 |   }
25 | 
26 |   // If no user after loading, redirect to login
27 |   if (!user) {
28 |     return <Navigate to="/admin/login" state={{ from: location }} replace />;
29 |   }
30 | 
31 |   // Check admin access if required
32 |   if (requireAdmin && user.role !== 'ADMIN') {
33 |     return <Navigate to="/" replace />;
34 |   }
35 | 
36 |   return <>{children}</>;
37 | } 
38 | 


--------------------------------------------------------------------------------
/apps/web/src/components/layout/Layout.tsx:
--------------------------------------------------------------------------------
  1 | import { Link, Outlet, useLocation } from 'react-router-dom';
  2 | import { Dialog } from '@headlessui/react';
  3 | import { Bars3Icon, XMarkIcon, Cog6ToothIcon } from '@heroicons/react/24/outline';
  4 | import { useState, useEffect } from 'react';
  5 | import ThemeToggle from '../ThemeToggle';
  6 | import { useAuth } from '../../contexts/auth';
  7 | import { useTheme } from '../../hooks/useTheme';
  8 | import Logo from '../Logo';
  9 | 
 10 | const navigation = [
 11 |   { name: 'Начало', href: '/' },
 12 |   { name: 'Имоти', href: '/properties' },
 13 |   { name: 'За нас', href: '/about' },
 14 |   { name: 'Контакти', href: '/contact' },
 15 | ];
 16 | 
 17 | export default function Layout() {
 18 |   const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
 19 |   const [isScrolled, setIsScrolled] = useState(false);
 20 |   const location = useLocation();
 21 |   const { isAdmin } = useAuth();
 22 |   const { isDark } = useTheme();
 23 | 
 24 |   useEffect(() => {
 25 |     setMobileMenuOpen(false);
 26 |   }, [location]);
 27 | 
 28 |   useEffect(() => {
 29 |     const handleScroll = () => {
 30 |       setIsScrolled(window.scrollY > 10);
 31 |     };
 32 | 
 33 |     window.addEventListener('scroll', handleScroll);
 34 |     return () => window.removeEventListener('scroll', handleScroll);
 35 |   }, []);
 36 | 
 37 |   return (
 38 |     <div className="flex flex-col min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 39 |       <header className={`sticky top-0 z-50 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))] shadow-sm transition-all duration-300 ${isScrolled ? 'h-16' : 'h-20'}`}>
 40 |         <nav className="container flex justify-between items-center h-full transition-all duration-300">
 41 |           <div className="flex gap-8 items-center">
 42 |             <Link to="/" className="flex items-center">
 43 |               <Logo className={`w-auto transition-all duration-300 ${isScrolled ? 'h-12' : 'h-16'}`} />
 44 |             </Link>
 45 |             <div className="hidden md:flex md:gap-6">
 46 |               {navigation.map((item) => (
 47 |                 <Link
 48 |                   key={item.name}
 49 |                   to={item.href}
 50 |                   className="text-sm font-semibold leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))] hover:text-primary-600 dark:hover:text-primary-500"
 51 |                 >
 52 |                   {item.name}
 53 |                 </Link>
 54 |               ))}
 55 |             </div>
 56 |           </div>
 57 |           <div className="flex items-center gap-4">
 58 |             <ThemeToggle />
 59 |             <div className="flex md:hidden">
 60 |               <button
 61 |                 type="button"
 62 |                 className="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
 63 |                 onClick={() => setMobileMenuOpen(true)}
 64 |               >
 65 |                 <span className="sr-only">Open main menu</span>
 66 |                 <Bars3Icon className="h-6 w-6" aria-hidden="true" />
 67 |               </button>
 68 |             </div>
 69 |           </div>
 70 |         </nav>
 71 |       </header>
 72 | 
 73 |       <Dialog as="div" className="md:hidden" open={mobileMenuOpen} onClose={setMobileMenuOpen}>
 74 |         <div className="fixed inset-0 z-50" />
 75 |         <Dialog.Panel className="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10">
 76 |           <div className="flex items-center justify-between">
 77 |             <Link to="/" className="flex items-center" onClick={() => setMobileMenuOpen(false)}>
 78 |               <Logo className="w-auto h-12" />
 79 |             </Link>
 80 |             <button
 81 |               type="button"
 82 |               className="-m-2.5 rounded-md p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
 83 |               onClick={() => setMobileMenuOpen(false)}
 84 |             >
 85 |               <span className="sr-only">Close menu</span>
 86 |               <XMarkIcon className="h-6 w-6" aria-hidden="true" />
 87 |             </button>
 88 |           </div>
 89 |           <div className="mt-6 flow-root">
 90 |             <div className="-my-6 divide-y divide-gray-500/10">
 91 |               <div className="space-y-2 py-6">
 92 |                 {navigation.map((item) => (
 93 |                   <Link
 94 |                     key={item.name}
 95 |                     to={item.href}
 96 |                     className="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))]"
 97 |                     onClick={() => setMobileMenuOpen(false)}
 98 |                   >
 99 |                     {item.name}
100 |                   </Link>
101 |                 ))}
102 |               </div>
103 |               <div className="py-6">
104 |                 <ThemeToggle />
105 |               </div>
106 |             </div>
107 |           </div>
108 |         </Dialog.Panel>
109 |       </Dialog>
110 | 
111 |       <main className="flex-1">
112 |         <div className="container py-8">
113 |           <Outlet />
114 |         </div>
115 |       </main>
116 | 
117 |       <footer className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))]">
118 |         <div className="container py-8">
119 |           <div className="grid grid-cols-1 gap-8 md:grid-cols-3">
120 |             <div>
121 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Контакти</h3>
122 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
123 |                 <li>Телефон: +359 82 82 82 82</li>
124 |                 <li>Имейл: office@propertyai.bg</li>
125 |                 <li>Адрес: Русе, България</li>
126 |               </ul>
127 |             </div>
128 |             <div>
129 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
130 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
131 |                 <li>Понеделник - Петък: 9:00 - 18:00</li>
132 |                 <li>Събота: 10:00 - 14:00</li>
133 |                 <li>Неделя: Затворено</li>
134 |               </ul>
135 |             </div>
136 |             <div>
137 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Последвайте ни</h3>
138 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
139 |                 <li>
140 |                   <a href="#" className="hover:text-gray-900 dark:hover:text-[rgb(var(--color-dark-text))]">
141 |                     Facebook
142 |                   </a>
143 |                 </li>
144 |                 <li>
145 |                   <a href="#" className="hover:text-gray-900 dark:hover:text-[rgb(var(--color-dark-text))]">
146 |                     Instagram
147 |                   </a>
148 |                 </li>
149 |               </ul>
150 |             </div>
151 |           </div>
152 |           <div className="pt-8 mt-8 text-sm text-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))]">
153 |             © {new Date().getFullYear()} Property AI. All rights reserved.
154 |           </div>
155 |         </div>
156 |       </footer>
157 |       {isAdmin && (
158 |         <Link
159 |           to="/admin"
160 |           className="fixed bottom-24 -right-1 group flex items-center p-3 bg-primary-600 text-white shadow-lg transition-all duration-300 ease-in-out z-50 rounded-l-full hover:pr-6 hover:right-0 hover:bg-primary-700 hover:shadow-xl hover:translate-x-1"
161 |           title="Admin Panel"
162 |         >
163 |           <Cog6ToothIcon className="h-6 w-6 transform transition-transform duration-300 ease-in-out group-hover:rotate-90" aria-hidden="true" />
164 |           <span className="text-sm font-medium max-w-0 group-hover:max-w-[200px] opacity-0 group-hover:opacity-100 transition-all duration-300 ease-in-out whitespace-nowrap overflow-hidden">
165 |             Admin Panel
166 |           </span>
167 |         </Link>
168 |       )}
169 |     </div>
170 |   );
171 | } 
172 | 


--------------------------------------------------------------------------------
/apps/web/src/components/maps/GoogleMap.tsx:
--------------------------------------------------------------------------------
 1 | import { useCallback, useMemo } from 'react';
 2 | import { GoogleMap as GoogleMapComponent, useLoadScript, Marker } from '@react-google-maps/api';
 3 | 
 4 | interface GoogleMapProps {
 5 |   center: {
 6 |     lat: number;
 7 |     lng: number;
 8 |   };
 9 |   zoom?: number;
10 | }
11 | 
12 | const containerStyle = {
13 |   width: '100%',
14 |   height: '100%',
15 |   borderRadius: '0.5rem'
16 | };
17 | 
18 | export default function GoogleMap({ center, zoom = 15 }: GoogleMapProps) {
19 |   const { isLoaded, loadError } = useLoadScript({
20 |     googleMapsApiKey: import.meta.env.VITE_GOOGLE_MAPS_API_KEY || '',
21 |   });
22 | 
23 |   const options = useMemo(() => ({
24 |     disableDefaultUI: false,
25 |     clickableIcons: true,
26 |     scrollwheel: true,
27 |   }), []);
28 | 
29 |   const onLoad = useCallback((map: google.maps.Map) => {
30 |     const bounds = new window.google.maps.LatLngBounds(center);
31 |     map.fitBounds(bounds);
32 |   }, [center]);
33 | 
34 |   if (loadError) {
35 |     return (
36 |       <div className="flex items-center justify-center w-full h-full text-red-600 dark:text-red-500">
37 |         Error loading maps
38 |       </div>
39 |     );
40 |   }
41 | 
42 |   if (!isLoaded) {
43 |     return (
44 |       <div className="flex items-center justify-center w-full h-full text-gray-600 dark:text-gray-400">
45 |         Loading maps...
46 |       </div>
47 |     );
48 |   }
49 | 
50 |   return (
51 |     <GoogleMapComponent
52 |       mapContainerStyle={containerStyle}
53 |       center={center}
54 |       zoom={zoom}
55 |       options={options}
56 |       onLoad={onLoad}
57 |     >
58 |       <Marker position={center} />
59 |     </GoogleMapComponent>
60 |   );
61 | } 
62 | 


--------------------------------------------------------------------------------
/apps/web/src/components/properties/PropertyCard.tsx:
--------------------------------------------------------------------------------
 1 | import { Link } from 'react-router-dom';
 2 | import { propertyTypeLabels, locationTypeLabels, categoryLabels } from '../../constants/property';
 3 | import type { Property, PropertyType, PropertyCategory, LocationType, Currency, ConstructionType, FurnishingType } from '@avalon/shared-types';
 4 | 
 5 | export type PropertyCardProps = {
 6 |   id: string;
 7 |   title: string;
 8 |   description: string;
 9 |   price: number;
10 |   currency: Currency;
11 |   area_sqm: number;
12 |   type: PropertyType;
13 |   category: PropertyCategory;
14 |   location_type: LocationType;
15 |   images?: { url: string }[];
16 |   floor?: number;
17 |   total_floors?: number;
18 |   construction_type?: ConstructionType;
19 |   furnishing?: FurnishingType;
20 |   has_regulation?: boolean;
21 |   land_area_sqm?: number;
22 | };
23 | 
24 | export default function PropertyCard({
25 |   id,
26 |   title,
27 |   description,
28 |   price,
29 |   currency,
30 |   area_sqm,
31 |   type,
32 |   category,
33 |   location_type,
34 |   images,
35 | }: PropertyCardProps) {
36 |   const formattedPrice = new Intl.NumberFormat('bg-BG', {
37 |     style: 'currency',
38 |     currency: currency || 'BGN',
39 |     maximumFractionDigits: 0,
40 |   }).format(price);
41 | 
42 |   return (
43 |     <Link
44 |       to={`/properties/${id}`}
45 |       className="flex flex-col overflow-hidden transition-all bg-white rounded-lg shadow-lg hover:shadow-xl dark:shadow-[rgb(var(--color-dark-bg))] dark:bg-[rgb(var(--color-dark-bg-secondary))] group"
46 |     >
47 |       <div className="relative flex-shrink-0 h-48 overflow-hidden">
48 |         <img
49 |           src={images?.[0]?.url || '/images/property-placeholder.webp'}
50 |           alt={title}
51 |           className="object-cover w-full h-full transition-transform duration-300 ease-in-out group-hover:scale-110"
52 |           onError={(e) => {
53 |             const target = e.target as HTMLImageElement;
54 |             target.onerror = null;
55 |             target.src = '/images/property-placeholder.webp';
56 |           }}
57 |         />
58 |       </div>
59 |       <div className="z-10 mr-3 -mt-3 text-right">
60 |         <span className="inline-flex px-3 py-1 text-sm font-medium text-white bg-red-600 rounded-md shadow-sm">
61 |           {categoryLabels[category] || category}
62 |         </span>
63 |       </div>
64 |       <div className="flex flex-col flex-1 p-4">
65 |         <div className="flex-1">
66 |           <h3 className="text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
67 |             {title}
68 |           </h3>
69 |         </div>
70 |         <div className="mt-4">
71 |           <div className="flex items-center justify-between">
72 |             <span className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
73 |               {formattedPrice}
74 |             </span>
75 |             <span className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
76 |               {area_sqm} м²
77 |             </span>
78 |           </div>
79 |           <div className="flex items-center justify-between mt-2 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
80 |             <span>{propertyTypeLabels[type] || type}</span>
81 |             <span>{locationTypeLabels[location_type] || location_type}</span>
82 |           </div>
83 |         </div>
84 |       </div>
85 |     </Link>
86 |   );
87 | } 
88 | 


--------------------------------------------------------------------------------
/apps/web/src/components/properties/PropertyCardSkeleton.tsx:
--------------------------------------------------------------------------------
 1 | import React from 'react';
 2 | 
 3 | export default function PropertyCardSkeleton() {
 4 |   return (
 5 |     <div className="flex flex-col overflow-hidden bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-lg">
 6 |       <div className="relative flex-shrink-0 h-48">
 7 |         <div className="absolute inset-0 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] animate-pulse" />
 8 |       </div>
 9 |       <div className="flex flex-col flex-1 p-4">
10 |         <div className="flex-1">
11 |           <div className="h-6 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-3/4 animate-pulse" />
12 |         </div>
13 |         <div className="mt-4">
14 |           <div className="flex items-center justify-between">
15 |             <div className="h-5 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/3 animate-pulse" />
16 |             <div className="h-5 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
17 |           </div>
18 |           <div className="flex items-center justify-between mt-2">
19 |             <div className="h-4 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
20 |             <div className="h-4 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
21 |           </div>
22 |         </div>
23 |       </div>
24 |     </div>
25 |   );
26 | } 
27 | 


--------------------------------------------------------------------------------
/apps/web/src/constants/property.ts:
--------------------------------------------------------------------------------
 1 | export const constructionTypes = [
 2 |   { value: 'BRICK', label: 'Тухла' },
 3 |   { value: 'EPK', label: 'ЕПК' },
 4 |   { value: 'PK', label: 'ПК' },
 5 |   { value: 'PANEL', label: 'Панел' },
 6 |   { value: 'WOOD_FLOOR', label: 'Дървен гредоред' },
 7 | ] as const;
 8 | 
 9 | export const furnishingTypes = [
10 |   { value: 'FURNISHED', label: 'Обзаведен' },
11 |   { value: 'PARTIALLY_FURNISHED', label: 'Частично обзаведен' },
12 |   { value: 'UNFURNISHED', label: 'Необзаведен' },
13 | ] as const;
14 | 
15 | export const propertyTypes = [
16 |   { value: 'APARTMENT', label: 'Апартамент' },
17 |   { value: 'HOUSE', label: 'Къща' },
18 |   { value: 'PLOT', label: 'Парцел' },
19 |   { value: 'COMMERCIAL', label: 'Търговски имот' },
20 |   { value: 'INDUSTRIAL', label: 'Индустриален имот' },
21 | ] as const;
22 | 
23 | export const locationTypes = [
24 |   { value: 'CITY', label: 'Град' },
25 |   { value: 'REGION', label: 'Регион' },
26 | ] as const;
27 | 
28 | export const categories = [
29 |   { value: 'SALE', label: 'Продажба' },
30 |   { value: 'RENT', label: 'Наем' },
31 | ] as const;
32 | 
33 | export const currencies = [
34 |   { value: 'BGN', label: 'лв.' },
35 |   { value: 'EUR', label: '€' },
36 | ] as const;
37 | 
38 | // Label mappings for direct access
39 | export const propertyTypeLabels: Record<string, string> = Object.fromEntries(
40 |   propertyTypes.map(type => [type.value, type.label])
41 | );
42 | 
43 | export const locationTypeLabels: Record<string, string> = Object.fromEntries(
44 |   locationTypes.map(type => [type.value, type.label])
45 | );
46 | 
47 | export const categoryLabels: Record<string, string> = Object.fromEntries(
48 |   categories.map(category => [category.value, category.label])
49 | );
50 | 
51 | export const constructionTypeLabels: Record<string, string> = Object.fromEntries(
52 |   constructionTypes.map(type => [type.value, type.label])
53 | );
54 | 
55 | export const furnishingTypeLabels: Record<string, string> = Object.fromEntries(
56 |   furnishingTypes.map(type => [type.value, type.label])
57 | );
58 | 
59 | export const currencyLabels: Record<string, string> = Object.fromEntries(
60 |   currencies.map(currency => [currency.value, currency.label])
61 | ); 
62 | 


--------------------------------------------------------------------------------
/apps/web/src/contexts/ThemeContext.tsx:
--------------------------------------------------------------------------------
 1 | import { createContext, useContext, useEffect, useState } from 'react';
 2 | 
 3 | type Theme = 'light' | 'dark' | 'gray';
 4 | 
 5 | interface ThemeContextType {
 6 |   theme: Theme;
 7 |   setTheme: (theme: Theme) => void;
 8 |   toggleTheme: () => void;
 9 | }
10 | 
11 | const ThemeContext = createContext<ThemeContextType | undefined>(undefined);
12 | 
13 | export function ThemeProvider({ children }: { children: React.ReactNode }) {
14 |   const [theme, setTheme] = useState<Theme>(() => {
15 |     const savedTheme = localStorage.getItem('theme');
16 |     if (savedTheme === 'light' || savedTheme === 'dark' || savedTheme === 'gray') {
17 |       return savedTheme as Theme;
18 |     }
19 |     if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
20 |       return 'dark';
21 |     }
22 |     return 'light';
23 |   });
24 | 
25 |   useEffect(() => {
26 |     localStorage.setItem('theme', theme);
27 |     const root = document.documentElement;
28 |     root.classList.remove('light', 'dark', 'gray');
29 |     
30 |     if (theme === 'gray') {
31 |       root.classList.add('dark', 'gray');
32 |     } else {
33 |       root.classList.add(theme);
34 |     }
35 |   }, [theme]);
36 | 
37 |   useEffect(() => {
38 |     const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
39 |     const handleChange = (e: MediaQueryListEvent) => {
40 |       setTheme(e.matches ? 'dark' : 'light');
41 |     };
42 |     mediaQuery.addEventListener('change', handleChange);
43 |     return () => mediaQuery.removeEventListener('change', handleChange);
44 |   }, []);
45 | 
46 |   const toggleTheme = () => {
47 |     setTheme((prevTheme) => {
48 |       switch (prevTheme) {
49 |         case 'light':
50 |           return 'dark';
51 |         case 'dark':
52 |           return 'gray';
53 |         case 'gray':
54 |           return 'light';
55 |         default:
56 |           return 'light';
57 |       }
58 |     });
59 |   };
60 | 
61 |   return (
62 |     <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>
63 |       {children}
64 |     </ThemeContext.Provider>
65 |   );
66 | }
67 | 
68 | export function useTheme() {
69 |   const context = useContext(ThemeContext);
70 |   if (context === undefined) {
71 |     throw new Error('useTheme must be used within a ThemeProvider');
72 |   }
73 |   return {
74 |     ...context,
75 |     isDark: context.theme === 'dark' || context.theme === 'gray'
76 |   };
77 | } 
78 | 


--------------------------------------------------------------------------------
/apps/web/src/contexts/auth.tsx:
--------------------------------------------------------------------------------
  1 | import { createContext, useContext, useState, useEffect, ReactNode } from 'react';
  2 | import { useNavigate } from 'react-router-dom';
  3 | import type { User } from '../types/api';
  4 | import { getCurrentUser, login as loginApi, register as registerApi, logout as logoutApi } from '../services/auth';
  5 | import type { LoginData, RegisterData } from '../services/auth';
  6 | 
  7 | interface AuthContextType {
  8 |   user: User | null;
  9 |   isLoading: boolean;
 10 |   isAuthenticated: boolean;
 11 |   isAdmin: boolean;
 12 |   login: (data: LoginData) => Promise<void>;
 13 |   register: (data: RegisterData) => Promise<void>;
 14 |   logout: () => void;
 15 |   setUser: (user: User | null) => void;
 16 | }
 17 | 
 18 | const AuthContext = createContext<AuthContextType | null>(null);
 19 | 
 20 | export const AuthProvider = ({ children }: { children: ReactNode }) => {
 21 |   const navigate = useNavigate();
 22 |   const [user, setUser] = useState<User | null>(null);
 23 |   const [isLoading, setIsLoading] = useState(true);
 24 |   const [authVerified, setAuthVerified] = useState(false);
 25 | 
 26 |   // Initial auth check
 27 |   useEffect(() => {
 28 |     const token = localStorage.getItem('token');
 29 |     if (!token) {
 30 |       setIsLoading(false);
 31 |       setAuthVerified(true);
 32 |       return;
 33 |     }
 34 | 
 35 |     const verifyAuth = async () => {
 36 |       try {
 37 |         console.log('Verifying authentication...');
 38 |         const userData = await getCurrentUser();
 39 |         console.log('User data received:', userData);
 40 |         setUser(userData);
 41 |         
 42 |         // Only redirect if we haven't verified auth yet
 43 |         if (!authVerified && window.location.pathname === '/admin/login') {
 44 |           navigate('/admin');
 45 |         }
 46 |       } catch (error) {
 47 |         console.error('Auth verification failed:', error);
 48 |         localStorage.removeItem('token');
 49 |         setUser(null);
 50 |         
 51 |         // Only redirect if we haven't verified auth yet
 52 |         if (!authVerified && window.location.pathname.startsWith('/admin') && window.location.pathname !== '/admin/login') {
 53 |           navigate('/admin/login');
 54 |         }
 55 |       } finally {
 56 |         setIsLoading(false);
 57 |         setAuthVerified(true);
 58 |       }
 59 |     };
 60 | 
 61 |     verifyAuth();
 62 |   }, [navigate, authVerified]);
 63 | 
 64 |   const login = async (data: LoginData) => {
 65 |     try {
 66 |       console.log('Logging in...');
 67 |       const response = await loginApi(data);
 68 |       console.log('Login successful:', response);
 69 |       
 70 |       // Set token first
 71 |       localStorage.setItem('token', response.token);
 72 |       // Then update user state
 73 |       setUser(response.user);
 74 |       // Reset auth verification flag
 75 |       setAuthVerified(false);
 76 |       navigate('/admin');
 77 |     } catch (error) {
 78 |       console.error('Login failed:', error);
 79 |       localStorage.removeItem('token');
 80 |       setUser(null);
 81 |       throw error;
 82 |     }
 83 |   };
 84 | 
 85 |   const register = async (data: RegisterData) => {
 86 |     try {
 87 |       console.log('Registering...');
 88 |       const response = await registerApi(data);
 89 |       console.log('Registration successful:', response);
 90 |       localStorage.setItem('token', response.token);
 91 |       setUser(response.user);
 92 |       // Reset auth verification flag
 93 |       setAuthVerified(false);
 94 |       navigate('/');
 95 |     } catch (error) {
 96 |       console.error('Registration failed:', error);
 97 |       localStorage.removeItem('token');
 98 |       setUser(null);
 99 |       throw error;
100 |     }
101 |   };
102 | 
103 |   const logout = () => {
104 |     console.log('Logging out...');
105 |     logoutApi();
106 |     localStorage.removeItem('token');
107 |     setUser(null);
108 |     // Reset auth verification flag
109 |     setAuthVerified(false);
110 |     navigate('/admin/login');
111 |   };
112 | 
113 |   const value = {
114 |     user,
115 |     isLoading,
116 |     isAuthenticated: !!user,
117 |     isAdmin: user?.role === 'ADMIN',
118 |     login,
119 |     register,
120 |     logout,
121 |     setUser,
122 |   };
123 | 
124 |   return (
125 |     <AuthContext.Provider value={value}>
126 |       <div data-testid="auth-provider" data-user={JSON.stringify({ user })}>
127 |         {children}
128 |       </div>
129 |     </AuthContext.Provider>
130 |   );
131 | };
132 | 
133 | export const useAuth = () => {
134 |   const context = useContext(AuthContext);
135 |   if (!context) {
136 |     throw new Error('useAuth must be used within an AuthProvider');
137 |   }
138 |   return context;
139 | }; 
140 | 


--------------------------------------------------------------------------------
/apps/web/src/hooks/useDebounce.ts:
--------------------------------------------------------------------------------
 1 | import { useState, useEffect } from 'react';
 2 | 
 3 | export function useDebounce<T>(value: T, delay: number): T {
 4 |   const [debouncedValue, setDebouncedValue] = useState<T>(value);
 5 | 
 6 |   useEffect(() => {
 7 |     const timer = setTimeout(() => {
 8 |       setDebouncedValue(value);
 9 |     }, delay);
10 | 
11 |     return () => {
12 |       clearTimeout(timer);
13 |     };
14 |   }, [value, delay]);
15 | 
16 |   return debouncedValue;
17 | } 
18 | 


--------------------------------------------------------------------------------
/apps/web/src/hooks/useTheme.ts:
--------------------------------------------------------------------------------
 1 | import { useState, useEffect } from 'react';
 2 | 
 3 | export function useTheme() {
 4 |   const [isDark, setIsDark] = useState(() => 
 5 |     document.documentElement.classList.contains('dark')
 6 |   );
 7 | 
 8 |   useEffect(() => {
 9 |     const observer = new MutationObserver((mutations) => {
10 |       mutations.forEach((mutation) => {
11 |         if (mutation.attributeName === 'class') {
12 |           setIsDark(document.documentElement.classList.contains('dark'));
13 |         }
14 |       });
15 |     });
16 | 
17 |     observer.observe(document.documentElement, {
18 |       attributes: true,
19 |       attributeFilter: ['class'],
20 |     });
21 | 
22 |     return () => observer.disconnect();
23 |   }, []);
24 | 
25 |   return { isDark };
26 | } 
27 | 


--------------------------------------------------------------------------------
/apps/web/src/index.css:
--------------------------------------------------------------------------------
  1 | @tailwind base;
  2 | @tailwind components;
  3 | @tailwind utilities;
  4 | 
  5 | @layer base {
  6 |   :root {
  7 |     --color-primary-50: 254 242 242;
  8 |     --color-primary-100: 254 226 226;
  9 |     --color-primary-200: 254 202 202;
 10 |     --color-primary-300: 252 165 165;
 11 |     --color-primary-400: 248 113 113;
 12 |     --color-primary-500: 239 68 68;
 13 |     --color-primary-600: 220 38 38;
 14 |     --color-primary-700: 185 28 28;
 15 |     --color-primary-800: 153 27 27;
 16 |     --color-primary-900: 127 29 29;
 17 |     --color-primary-950: 69 10 10;
 18 | 
 19 |     /* Default light theme colors */
 20 |     --color-dark-bg: 255 255 255;
 21 |     --color-dark-bg-secondary: 249 250 251;
 22 |     --color-dark-text: 17 24 39;
 23 |     --color-dark-text-secondary: 107 114 128;
 24 |     --color-dark-border: 229 231 235;
 25 |   }
 26 | 
 27 |   /* Dark theme - Vercel-like */
 28 |   :root.dark:not(.gray) {
 29 |     --color-dark-bg: 0 0 0;
 30 |     --color-dark-bg-secondary: 17 17 17;
 31 |     --color-dark-text: 255 255 255;
 32 |     --color-dark-text-secondary: 153 153 153;
 33 |     --color-dark-border: 38 38 38;
 34 |   }
 35 | 
 36 |   /* YouTube Dark Theme Colors */
 37 |   :root.dark.gray {
 38 |     --color-dark-bg: 15 15 15;
 39 |     --color-dark-bg-secondary: 33 33 33;
 40 |     --color-dark-text: 241 241 241;
 41 |     --color-dark-text-secondary: 170 170 170;
 42 |     --color-dark-border: 48 48 48;
 43 |   }
 44 | 
 45 |   html {
 46 |     @apply antialiased;
 47 |   }
 48 | 
 49 |   body {
 50 |     @apply bg-white text-gray-900 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))];
 51 |   }
 52 | 
 53 |   .container {
 54 |     @apply px-4 mx-auto max-w-7xl sm:px-6 lg:px-8;
 55 |   }
 56 | }
 57 | 
 58 | @layer components {
 59 |   .btn {
 60 |     @apply inline-flex items-center justify-center px-4 py-2 text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed;
 61 |   }
 62 | 
 63 |   .btn-primary {
 64 |     @apply text-white bg-primary-600 hover:bg-primary-700 focus:ring-primary-500;
 65 |   }
 66 | 
 67 |   .btn-secondary {
 68 |     @apply text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 focus:ring-primary-500 
 69 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 70 |            dark:border-[rgb(var(--color-dark-border))] dark:hover:bg-[rgb(var(--color-dark-border))];
 71 |   }
 72 | 
 73 |   .btn-danger {
 74 |     @apply text-white bg-red-600 hover:bg-red-700 focus:ring-red-500;
 75 |   }
 76 | 
 77 |   .input {
 78 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 79 |            placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6 
 80 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 81 |            dark:ring-[rgb(var(--color-dark-border))] dark:placeholder:text-[rgb(var(--color-dark-text-secondary))];
 82 |   }
 83 | 
 84 |   .select {
 85 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 86 |            focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:max-w-xs sm:text-sm sm:leading-6 
 87 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 88 |            dark:ring-[rgb(var(--color-dark-border))];
 89 |   }
 90 | 
 91 |   .textarea {
 92 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 93 |            placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6 
 94 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 95 |            dark:ring-[rgb(var(--color-dark-border))] dark:placeholder:text-[rgb(var(--color-dark-text-secondary))];
 96 |   }
 97 | 
 98 |   .checkbox {
 99 |     @apply w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-600 
100 |            dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg-secondary))];
101 |   }
102 | 
103 |   .radio {
104 |     @apply w-4 h-4 border-gray-300 text-primary-600 focus:ring-primary-600 
105 |            dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg-secondary))];
106 |   }
107 | 
108 |   .label {
109 |     @apply block text-sm font-medium leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))];
110 |   }
111 | 
112 |   .help-text {
113 |     @apply mt-2 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))];
114 |   }
115 | 
116 |   .error-text {
117 |     @apply mt-2 text-sm text-red-600;
118 |   }
119 | }
120 | 
121 | @layer utilities {
122 |   .scrollbar-hide {
123 |     -ms-overflow-style: none;
124 |     scrollbar-width: none;
125 |   }
126 | 
127 |   .scrollbar-hide::-webkit-scrollbar {
128 |     display: none;
129 |   }
130 | }
131 | 


--------------------------------------------------------------------------------
/apps/web/src/lib/analytics.ts:
--------------------------------------------------------------------------------
 1 | import { useEffect } from 'react';
 2 | import { useLocation } from 'react-router-dom';
 3 | 
 4 | declare global {
 5 |   interface Window {
 6 |     gtag: (command: string, ...args: any[]) => void;
 7 |     dataLayer: any[];
 8 |   }
 9 | }
10 | 
11 | export const GA_TRACKING_ID = import.meta.env.VITE_GA_TRACKING_ID;
12 | 
13 | // Initialize Google Analytics
14 | export const initGA = () => {
15 |   // Skip if tracking ID is not configured
16 |   if (!GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
17 |     console.warn('Google Analytics tracking ID not configured');
18 |     return;
19 |   }
20 | 
21 |   const script = document.createElement('script');
22 |   script.async = true;
23 |   script.src = `https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`;
24 |   document.head.appendChild(script);
25 | 
26 |   window.dataLayer = window.dataLayer || [];
27 |   window.gtag = function gtag() {
28 |     window.dataLayer.push(arguments);
29 |   };
30 |   window.gtag('js', new Date());
31 |   window.gtag('config', GA_TRACKING_ID);
32 | };
33 | 
34 | // Track page views
35 | export const pageview = (url: string) => {
36 |   if (!window.gtag || !GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
37 |     return;
38 |   }
39 |   
40 |   window.gtag('config', GA_TRACKING_ID, {
41 |     page_path: url,
42 |   });
43 | };
44 | 
45 | // Track events
46 | export const event = ({ action, category, label, value }: {
47 |   action: string;
48 |   category: string;
49 |   label: string;
50 |   value?: number;
51 | }) => {
52 |   if (!window.gtag || !GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
53 |     return;
54 |   }
55 | 
56 |   window.gtag('event', action, {
57 |     event_category: category,
58 |     event_label: label,
59 |     value: value,
60 |   });
61 | };
62 | 
63 | // Hook to track page views
64 | export const usePageTracking = () => {
65 |   const location = useLocation();
66 | 
67 |   useEffect(() => {
68 |     pageview(location.pathname + location.search);
69 |   }, [location]);
70 | }; 
71 | 


--------------------------------------------------------------------------------
/apps/web/src/lib/api.ts:
--------------------------------------------------------------------------------
 1 | import axios from 'axios';
 2 | 
 3 | const api = axios.create({
 4 |   baseURL: import.meta.env.VITE_API_URL || 'http://localhost:3001/api',
 5 |   headers: {
 6 |     'Content-Type': 'application/json',
 7 |   },
 8 | });
 9 | 
10 | // Add a request interceptor to add the auth token
11 | api.interceptors.request.use((config) => {
12 |   const token = localStorage.getItem('token');
13 |   if (token) {
14 |     config.headers.Authorization = `Bearer ${token}`;
15 |   }
16 |   return config;
17 | }, (error) => {
18 |   return Promise.reject(error);
19 | });
20 | 
21 | // Add a response interceptor to handle errors
22 | api.interceptors.response.use(
23 |   (response) => {
24 |     // Return the entire response data
25 |     return response.data;
26 |   },
27 |   (error) => {
28 |     // Handle 401 Unauthorized errors
29 |     if (error.response?.status === 401) {
30 |       // Clear token but don't redirect - let the auth context handle navigation
31 |       localStorage.removeItem('token');
32 |       return Promise.reject(new Error('Unauthorized - Please log in'));
33 |     }
34 |     
35 |     // Handle network errors
36 |     if (!error.response) {
37 |       return Promise.reject(new Error('Network error - Please check your connection'));
38 |     }
39 |     
40 |     // Handle other API errors
41 |     const errorMessage = error.response.data?.message || 'An error occurred';
42 |     console.error('API Error:', {
43 |       status: error.response.status,
44 |       message: errorMessage,
45 |       path: error.config?.url,
46 |       method: error.config?.method
47 |     });
48 |     
49 |     return Promise.reject(new Error(errorMessage));
50 |   }
51 | );
52 | 
53 | export default api; 
54 | 


--------------------------------------------------------------------------------
/apps/web/src/lib/schemas/property.ts:
--------------------------------------------------------------------------------
 1 | import { z } from 'zod';
 2 | import type { PropertyType, PropertyCategory, LocationType, Currency, ConstructionType, FurnishingType } from '@avalon/shared-types';
 3 | 
 4 | export const propertySchema = z.object({
 5 |   title: z.string().min(1),
 6 |   description: z.string().min(1),
 7 |   price: z.coerce.number().min(0),
 8 |   currency: z.string() as z.ZodType<Currency>,
 9 |   area_sqm: z.coerce.number().min(0),
10 |   land_area_sqm: z.coerce.number().optional(),
11 |   floor: z.coerce.number().optional(),
12 |   total_floors: z.coerce.number().optional(),
13 |   construction_type: z.string().optional() as z.ZodType<ConstructionType | undefined>,
14 |   furnishing: z.string().optional() as z.ZodType<FurnishingType | undefined>,
15 |   location_type: z.string() as z.ZodType<LocationType>,
16 |   regionId: z.coerce.number().optional(),
17 |   neighborhoodId: z.coerce.number().optional(),
18 |   has_regulation: z.boolean().optional(),
19 |   category: z.string() as z.ZodType<PropertyCategory>,
20 |   type: z.string() as z.ZodType<PropertyType>,
21 |   featured: z.boolean().default(false),
22 |   contact_info: z.object({
23 |     phone: z.string().min(1),
24 |     email: z.string().email(),
25 |   }),
26 | });
27 | 
28 | export type PropertyFormData = z.infer<typeof propertySchema>;
29 | 
30 | export const createPropertySchema = propertySchema;
31 | 
32 | export const updatePropertySchema = propertySchema.partial();
33 | 
34 | export const propertySearchSchema = z.object({
35 |   category: z.string().optional() as z.ZodType<PropertyCategory | undefined>,
36 |   type: z.string().optional() as z.ZodType<PropertyType | undefined>,
37 |   minPrice: z.coerce.number().optional(),
38 |   maxPrice: z.coerce.number().optional(),
39 |   minArea: z.coerce.number().optional(),
40 |   maxArea: z.coerce.number().optional(),
41 |   location: z.string().optional(),
42 |   currency: z.string().optional() as z.ZodType<Currency | undefined>,
43 | });
44 | 
45 | export type PropertySearchParams = z.infer<typeof propertySearchSchema>;
46 | 
47 | export const propertyResponseSchema = propertySchema.extend({
48 |   id: z.string(),
49 |   createdAt: z.string().or(z.date()),
50 |   updatedAt: z.string().or(z.date()),
51 |   images: z.array(z.object({
52 |     id: z.string(),
53 |     url: z.string(),
54 |   })),
55 |   contact_info: z.object({
56 |     id: z.string(),
57 |     phone: z.string(),
58 |     email: z.string(),
59 |   }),
60 | });
61 | 
62 | export type PropertyResponse = z.infer<typeof propertyResponseSchema>; 
63 | 


--------------------------------------------------------------------------------
/apps/web/src/main.tsx:
--------------------------------------------------------------------------------
 1 | import { StrictMode } from 'react'
 2 | import { createRoot } from 'react-dom/client'
 3 | import './index.css'
 4 | import App from './App.tsx'
 5 | 
 6 | createRoot(document.getElementById('root')!).render(
 7 |   <StrictMode>
 8 |     <App />
 9 |   </StrictMode>,
10 | )
11 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/About.tsx:
--------------------------------------------------------------------------------
  1 | export default function About() {
  2 |   return (
  3 |     <div className="min-h-screen bg-white dark:bg-[rgb(var(--color-dark-bg))]">
  4 |       <div className="container mx-auto px-4 py-12">
  5 |         <div className="max-w-4xl mx-auto">
  6 |           {/* Hero Section with Image */}
  7 |           <div className="relative rounded-2xl overflow-hidden mb-12 shadow-xl">
  8 |             <img
  9 |               src="/images/about-us.jpg"
 10 |               alt="Авалон Недвижими Имоти Office"
 11 |               className="w-full h-[400px] object-cover"
 12 |             />
 13 |             <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent" />
 14 |             <div className="absolute bottom-0 left-0 right-0 p-8">
 15 |               <h1 className="text-4xl font-bold text-white mb-4">
 16 |                 Авалон Недвижими Имоти
 17 |               </h1>
 18 |               <p className="text-xl text-gray-200">
 19 |                 Една от водещите агенции за недвижими имоти в София
 20 |               </p>
 21 |             </div>
 22 |           </div>
 23 | 
 24 |           <div className="prose prose-lg max-w-none dark:prose-invert">
 25 |             <p className="text-lg leading-relaxed mb-8 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 26 |               Нашата мисия е да предоставяме професионални услуги в областта на недвижимите имоти,
 27 |               съобразени с индивидуалните нужди на всеки клиент. Ние се стремим да бъдем надежден
 28 |               партньор при покупката, продажбата или наемането на имот.
 29 |             </p>
 30 | 
 31 |             <h2 className="text-3xl font-semibold mt-12 mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Нашите услуги</h2>
 32 |             <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
 33 |               <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 34 |                 <ul className="space-y-3">
 35 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 36 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 37 |                     Продажба на жилищни имоти
 38 |                   </li>
 39 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 40 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 41 |                     Отдаване под наем на жилищни имоти
 42 |                   </li>
 43 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 44 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 45 |                     Продажба и наем на търговски площи
 46 |                   </li>
 47 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 48 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 49 |                     Продажба и наем на офис площи
 50 |                   </li>
 51 |                 </ul>
 52 |               </div>
 53 |               <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 54 |                 <ul className="space-y-3">
 55 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 56 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 57 |                     Продажба на парцели и терени
 58 |                   </li>
 59 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 60 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 61 |                     Консултации при сделки с недвижими имоти
 62 |                   </li>
 63 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 64 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 65 |                     Съдействие при ипотечно кредитиране
 66 |                   </li>
 67 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 68 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 69 |                     Правни консултации
 70 |                   </li>
 71 |                 </ul>
 72 |               </div>
 73 |             </div>
 74 | 
 75 |             <h2 className="text-3xl font-semibold mt-12 mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Информационни системи</h2>
 76 |             <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 77 |               <p className="mb-4 text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 78 |                 Ние използваме съвременни информационни системи за управление на нашите имоти и клиенти:
 79 |               </p>
 80 |               <ul className="space-y-4">
 81 |                 <li>
 82 |                   <a
 83 |                     href="https://avalon.bg"
 84 |                     target="_blank"
 85 |                     rel="noopener noreferrer"
 86 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
 87 |                   >
 88 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 89 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">www.avalon.bg - Официален уебсайт на Авалон Недвижими Имоти</span>
 90 |                   </a>
 91 |                 </li>
 92 |                 <li>
 93 |                   <a
 94 |                     href="https://naemi.avalon.bg"
 95 |                     target="_blank"
 96 |                     rel="noopener noreferrer"
 97 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
 98 |                   >
 99 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
100 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">naemi.avalon.bg - Специализиран портал за наеми</span>
101 |                   </a>
102 |                 </li>
103 |                 <li>
104 |                   <a
105 |                     href="https://prodajbi.avalon.bg"
106 |                     target="_blank"
107 |                     rel="noopener noreferrer"
108 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
109 |                   >
110 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
111 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">prodajbi.avalon.bg - Специализиран портал за продажби</span>
112 |                   </a>
113 |                 </li>
114 |               </ul>
115 |             </div>
116 | 
117 |             <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-8 rounded-lg mt-12">
118 |               <h2 className="text-3xl font-semibold mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Контакти</h2>
119 |               <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
120 |                 <div className="space-y-4">
121 |                   <div>
122 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Адрес</h3>
123 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">ул. "Цар Асен" 95, София</p>
124 |                   </div>
125 |                   <div>
126 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Телефони</h3>
127 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">+359 888 123 456</p>
128 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">+359 2 123 4567</p>
129 |                   </div>
130 |                 </div>
131 |                 <div className="space-y-4">
132 |                   <div>
133 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Имейл</h3>
134 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">office@avalon.bg</p>
135 |                   </div>
136 |                   <div>
137 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
138 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Понеделник - Петък: 9:00 - 18:00</p>
139 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Събота: 10:00 - 14:00</p>
140 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Неделя: Почивен ден</p>
141 |                   </div>
142 |                 </div>
143 |               </div>
144 |             </div>
145 |           </div>
146 |         </div>
147 |       </div>
148 |     </div>
149 |   );
150 | } 
151 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/Contact.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useMutation } from '@tanstack/react-query';
  3 | import { submitContactForm } from '../services/contact';
  4 | import { event } from '../lib/analytics';
  5 | 
  6 | export default function Contact() {
  7 |   const [formData, setFormData] = useState({
  8 |     name: '',
  9 |     email: '',
 10 |     message: '',
 11 |   });
 12 | 
 13 |   const [errors, setErrors] = useState<{
 14 |     name?: string;
 15 |     email?: string;
 16 |     message?: string;
 17 |     general?: string;
 18 |   }>({});
 19 | 
 20 |   const [success, setSuccess] = useState(false);
 21 | 
 22 |   const mutation = useMutation({
 23 |     mutationFn: submitContactForm,
 24 |     onSuccess: () => {
 25 |       setSuccess(true);
 26 |       setFormData({ name: '', email: '', message: '' });
 27 |       event({
 28 |         action: 'contact_form_submit',
 29 |         category: 'Contact',
 30 |         label: 'Success',
 31 |         value: 1
 32 |       });
 33 |     },
 34 |     onError: (error: any) => {
 35 |       if (error.response?.data?.errors) {
 36 |         setErrors(error.response.data.errors);
 37 |       } else {
 38 |         setErrors({ general: 'Възникна грешка. Моля, опитайте отново.' });
 39 |       }
 40 |       event({
 41 |         action: 'contact_form_error',
 42 |         category: 'Contact',
 43 |         label: error.response?.data?.message || 'Unknown error'
 44 |       });
 45 |     },
 46 |   });
 47 | 
 48 |   const handleSubmit = async (e: React.FormEvent) => {
 49 |     e.preventDefault();
 50 |     setErrors({});
 51 |     setSuccess(false);
 52 |     mutation.mutate(formData);
 53 |   };
 54 | 
 55 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
 56 |     const { name, value } = e.target;
 57 |     setFormData(prev => ({ ...prev, [name]: value }));
 58 |     if (errors[name as keyof typeof errors]) {
 59 |       setErrors(prev => ({ ...prev, [name]: '' }));
 60 |     }
 61 |   };
 62 | 
 63 |   return (
 64 |     <div className="min-h-screen bg-white dark:bg-[rgb(var(--color-dark-bg))]">
 65 |       <div className="container mx-auto px-4 py-12">
 66 |         <div className="max-w-6xl mx-auto space-y-12">
 67 |           {/* Header Section with Office Image */}
 68 |           <div className="relative h-[300px] rounded-xl overflow-hidden shadow-xl">
 69 |             <img
 70 |               src="/images/contact.jpg"
 71 |               alt="Авалон Недвижими Имоти Office Entrance"
 72 |               className="w-full h-full object-cover"
 73 |             />
 74 |             <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent" />
 75 |             <div className="absolute bottom-0 left-0 right-0 p-8">
 76 |               <h1 className="text-4xl font-bold text-white mb-2">
 77 |                 Свържете се с нас
 78 |               </h1>
 79 |               <p className="text-xl text-gray-200">
 80 |                 Посетете нашия офис или се свържете с нас онлайн
 81 |               </p>
 82 |             </div>
 83 |           </div>
 84 | 
 85 |           {/* Google Maps Embed */}
 86 |           <div className="w-full h-[400px] rounded-xl overflow-hidden shadow-xl border-4 border-white dark:border-[rgb(var(--color-dark-border))]">
 87 |             <iframe
 88 |               src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2932.8747368506897!2d23.321409776882714!3d42.69580097116491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40aa8682cb317bf5%3A0x9cfae3249632c7f4!2sul.%20%22Tsar%20Asen%22%2095%2C%201463%20Sofia%20Center%2C%20Sofia!5e0!3m2!1sen!2sbg!4v1709305169089!5m2!1sen!2sbg"
 89 |               width="100%"
 90 |               height="100%"
 91 |               style={{ border: 0 }}
 92 |               allowFullScreen
 93 |               loading="lazy"
 94 |               referrerPolicy="no-referrer-when-downgrade"
 95 |               title="Office Location"
 96 |               className="rounded-lg"
 97 |             />
 98 |           </div>
 99 | 
100 |           <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
101 |             {/* Contact Form */}
102 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-xl shadow-xl p-8 transform transition-all duration-300 hover:shadow-2xl">
103 |               <h2 className="text-2xl font-semibold mb-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
104 |                 Свържете се с нас
105 |               </h2>
106 |               <form onSubmit={handleSubmit} className="space-y-5">
107 |                 <div>
108 |                   <label htmlFor="name" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
109 |                     Име
110 |                   </label>
111 |                   <input
112 |                     type="text"
113 |                     id="name"
114 |                     name="name"
115 |                     value={formData.name}
116 |                     onChange={handleChange}
117 |                     className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm bg-white dark:bg-[rgb(var(--color-dark-bg))] text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
118 |                   />
119 |                   {errors.name && (
120 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.name}</p>
121 |                   )}
122 |                 </div>
123 | 
124 |                 <div>
125 |                   <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
126 |                     Имейл
127 |                   </label>
128 |                   <input
129 |                     type="email"
130 |                     id="email"
131 |                     name="email"
132 |                     value={formData.email}
133 |                     onChange={handleChange}
134 |                     className={`mt-1 block w-full rounded-lg shadow-sm sm:text-sm transition-colors duration-200
135 |                       ${errors.email 
136 |                         ? 'border-red-500 focus:border-red-500 focus:ring-red-500' 
137 |                         : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:ring-primary-500'
138 |                       } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))]`}
139 |                   />
140 |                   {errors.email && (
141 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.email}</p>
142 |                   )}
143 |                 </div>
144 | 
145 |                 <div>
146 |                   <label htmlFor="message" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
147 |                     Съобщение
148 |                   </label>
149 |                   <textarea
150 |                     id="message"
151 |                     name="message"
152 |                     rows={4}
153 |                     value={formData.message}
154 |                     onChange={handleChange}
155 |                     className={`mt-1 block w-full rounded-lg shadow-sm sm:text-sm transition-colors duration-200
156 |                       ${errors.message 
157 |                         ? 'border-red-500 focus:border-red-500 focus:ring-red-500' 
158 |                         : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:ring-primary-500'
159 |                       } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))]`}
160 |                   />
161 |                   {errors.message && (
162 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.message}</p>
163 |                   )}
164 |                 </div>
165 | 
166 |                 {errors.general && (
167 |                   <p className="text-sm text-red-600 dark:text-red-400">{errors.general}</p>
168 |                 )}
169 | 
170 |                 {success && (
171 |                   <div className="p-4 bg-green-50 dark:bg-green-900/30 rounded-lg border border-green-200 dark:border-green-800">
172 |                     <p className="text-sm text-green-700 dark:text-green-300">
173 |                       Благодарим ви! Ще се свържем с вас възможно най-скоро.
174 |                     </p>
175 |                   </div>
176 |                 )}
177 | 
178 |                 <button
179 |                   type="submit"
180 |                   disabled={mutation.isPending}
181 |                   className="w-full px-4 py-3 text-sm font-medium text-white bg-primary-600 rounded-lg hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transition-all duration-200 transform hover:-translate-y-0.5"
182 |                 >
183 |                   {mutation.isPending ? 'Изпращане...' : 'Изпрати'}
184 |                 </button>
185 |               </form>
186 |             </div>
187 | 
188 |             {/* Contact Information */}
189 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-xl shadow-xl p-8 transform transition-all duration-300 hover:shadow-2xl">
190 |               <h2 className="text-2xl font-semibold mb-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
191 |                 Информация за контакт
192 |               </h2>
193 |               <div className="space-y-6">
194 |                 <div>
195 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Адрес</h3>
196 |                   <p className="mt-2 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
197 |                     ул. "Цар Асен" 95<br />
198 |                     София 1000<br />
199 |                     България
200 |                   </p>
201 |                 </div>
202 | 
203 |                 <div>
204 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Телефони</h3>
205 |                   <div className="mt-2 space-y-2">
206 |                     <a 
207 |                       href="tel:+35921234567"
208 |                       className="block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
209 |                     >
210 |                       +359 2 123 4567
211 |                     </a>
212 |                     <a 
213 |                       href="tel:+359888123456"
214 |                       className="block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
215 |                     >
216 |                       +359 888 123 456
217 |                     </a>
218 |                   </div>
219 |                 </div>
220 | 
221 |                 <div>
222 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имейл</h3>
223 |                   <a 
224 |                     href="mailto:office@avalon.bg"
225 |                     className="mt-2 block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
226 |                   >
227 |                     office@avalon.bg
228 |                   </a>
229 |                 </div>
230 | 
231 |                 <div>
232 |                   <h3 className="text-lg font-medium text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
233 |                   <div className="mt-2 space-y-2">
234 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
235 |                       Понеделник - Петък: 9:00 - 18:00
236 |                     </p>
237 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
238 |                       Събота: 10:00 - 14:00
239 |                     </p>
240 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
241 |                       Неделя: Затворено
242 |                     </p>
243 |                   </div>
244 |                 </div>
245 |               </div>
246 |             </div>
247 |           </div>
248 |         </div>
249 |       </div>
250 |     </div>
251 |   );
252 | } 
253 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/Home.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import { Link } from 'react-router-dom';
  3 | import { MagnifyingGlassIcon } from '@heroicons/react/24/outline';
  4 | import { getFeaturedProperties } from '../services/propertyService';
  5 | import type { Property } from '@avalon/shared-types';
  6 | import PropertyCard from '../components/properties/PropertyCard';
  7 | 
  8 | const propertyTypes = [
  9 |   'Всички типове',
 10 |   'Апартамент',
 11 |   'Къща',
 12 |   'Парцел',
 13 |   'Търговски имот',
 14 |   'Индустриален имот'
 15 | ];
 16 | 
 17 | const regions = [
 18 |   'Всички райони',
 19 |   'Русе център',
 20 |   'Здравец',
 21 |   'Дружба',
 22 |   'Възраждане',
 23 |   'Чародейка',
 24 |   'Ялта',
 25 |   'Родина',
 26 |   'Цветница',
 27 |   'Централна градска част',
 28 | ];
 29 | 
 30 | export default function Home() {
 31 |   const [selectedType, setSelectedType] = useState('Всички типове');
 32 |   const [selectedRegion, setSelectedRegion] = useState('Всички райони');
 33 |   const [featuredProperties, setFeaturedProperties] = useState<Property[]>([]);
 34 |   const [loading, setLoading] = useState(true);
 35 |   const [error, setError] = useState<string | null>(null);
 36 | 
 37 |   useEffect(() => {
 38 |     const loadFeaturedProperties = async () => {
 39 |       try {
 40 |         const properties = await getFeaturedProperties();
 41 |         setFeaturedProperties(properties);
 42 |       } catch (err) {
 43 |         setError('Failed to load featured properties');
 44 |         console.error(err);
 45 |       } finally {
 46 |         setLoading(false);
 47 |       }
 48 |     };
 49 | 
 50 |     loadFeaturedProperties();
 51 |   }, []);
 52 | 
 53 |   const handleSearch = () => {
 54 |     const params = new URLSearchParams();
 55 |     if (selectedType !== 'Всички типове') params.append('type', selectedType);
 56 |     if (selectedRegion !== 'Всички райони') params.append('region', selectedRegion);
 57 |     window.location.href = `/properties?${params.toString()}`;
 58 |   };
 59 | 
 60 |   return (
 61 |     <div className="flex flex-col">
 62 |       {/* Hero Section with Search Overlay */}
 63 |       <div className="relative">
 64 |         {/* Hero Background */}
 65 |         <div className="relative h-[50vh] min-h-[500px] max-h-[600px] bg-gray-900">
 66 |           <img
 67 |             src="/images/homepage-hero.webp"
 68 |             alt="Luxury Real Estate"
 69 |             className="object-cover object-center absolute inset-0 w-full h-full opacity-60"
 70 |             loading="eager"
 71 |             fetchPriority="high"
 72 |           />
 73 |           <div className="absolute inset-0 bg-gradient-to-b from-gray-900/30 via-gray-900/50 to-gray-900/80" />
 74 |           
 75 |           {/* Hero Content */}
 76 |           <div className="relative h-full flex flex-col justify-center">
 77 |             <div className="px-4 mx-auto max-w-7xl sm:px-6 lg:px-8 text-center">
 78 |               <h1 className="text-3xl font-bold tracking-tight text-white sm:text-4xl lg:text-5xl">
 79 |                 Намерете своя перфектен дом
 80 |               </h1>
 81 |               <p className="mx-auto mt-4 max-w-lg text-lg text-gray-100 sm:max-w-3xl">
 82 |                 Авалон Недвижими Имоти - Вашият надежден партньор в света на недвижимите имоти от 2008 година.
 83 |               </p>
 84 |             </div>
 85 |           </div>
 86 |         </div>
 87 | 
 88 |         {/* Search Box Overlay */}
 89 |         <div className="absolute inset-x-0 bottom-0 z-10 transform translate-y-1/2">
 90 |           <div className="px-4 mx-auto max-w-4xl sm:px-6 lg:px-8">
 91 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-xl backdrop-blur-sm">
 92 |               <div className="p-6">
 93 |                 <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
 94 |                   <div>
 95 |                     <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 96 |                       Тип имот
 97 |                     </label>
 98 |                     <select
 99 |                       id="type"
100 |                       value={selectedType}
101 |                       onChange={(e) => setSelectedType(e.target.value)}
102 |                       className="block py-2 pr-10 pl-3 mt-1 w-full text-base rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:outline-none focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
103 |                     >
104 |                       {propertyTypes.map((type) => (
105 |                         <option key={type} value={type}>
106 |                           {type}
107 |                         </option>
108 |                       ))}
109 |                     </select>
110 |                   </div>
111 |                   <div>
112 |                     <label htmlFor="region" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
113 |                       Район
114 |                     </label>
115 |                     <select
116 |                       id="region"
117 |                       value={selectedRegion}
118 |                       onChange={(e) => setSelectedRegion(e.target.value)}
119 |                       className="block py-2 pr-10 pl-3 mt-1 w-full text-base rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:outline-none focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
120 |                     >
121 |                       {regions.map((region) => (
122 |                         <option key={region} value={region}>
123 |                           {region}
124 |                         </option>
125 |                       ))}
126 |                     </select>
127 |                   </div>
128 |                 </div>
129 |                 <div className="mt-6">
130 |                   <button
131 |                     onClick={handleSearch}
132 |                     className="px-4 py-3 w-full text-sm font-semibold text-white bg-primary-600 rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
133 |                   >
134 |                     <div className="flex justify-center items-center">
135 |                       <MagnifyingGlassIcon className="w-5 h-5" />
136 |                       <span className="ml-2">Търсене</span>
137 |                     </div>
138 |                   </button>
139 |                 </div>
140 |               </div>
141 |             </div>
142 |           </div>
143 |         </div>
144 |       </div>
145 | 
146 |       {/* Featured Properties Section */}
147 |       <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
148 |         <div className="px-4 pt-32 pb-16 mx-auto max-w-7xl sm:px-6 lg:px-8">
149 |           <h2 className="text-3xl font-bold text-center text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
150 |             Топ Оферти
151 |           </h2>
152 |           <div className="grid gap-8 mt-12 sm:grid-cols-2 lg:grid-cols-3">
153 |             {loading ? (
154 |               // Loading skeletons
155 |               [...Array(3)].map((_, index) => (
156 |                 <div key={index} className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-lg animate-pulse">
157 |                   <div className="bg-gray-200 aspect-w-16 aspect-h-9 dark:bg-[rgb(var(--color-dark-border))]" />
158 |                   <div className="p-4">
159 |                     <div className="w-3/4 h-4 bg-gray-200 rounded dark:bg-[rgb(var(--color-dark-border))]" />
160 |                     <div className="mt-4 w-1/2 h-4 bg-gray-200 rounded dark:bg-[rgb(var(--color-dark-border))]" />
161 |                   </div>
162 |                 </div>
163 |               ))
164 |             ) : error ? (
165 |               <div className="col-span-full p-4 bg-red-50 dark:bg-red-900/30 rounded-lg">
166 |                 <p className="text-sm text-center text-red-700 dark:text-red-300">{error}</p>
167 |               </div>
168 |             ) : featuredProperties.length > 0 ? (
169 |               featuredProperties.map((property) => (
170 |                 <PropertyCard key={property.id} {...property} />
171 |               ))
172 |             ) : (
173 |               <div className="col-span-full text-center text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
174 |                 Няма намерени оферти
175 |               </div>
176 |             )}
177 |           </div>
178 |           {featuredProperties.length > 0 && (
179 |             <div className="mt-12 text-center">
180 |               <Link
181 |                 to="/properties"
182 |                 className="inline-flex items-center px-6 py-3 text-base font-semibold text-white bg-primary-600 rounded-md shadow-sm hover:bg-primary-700"
183 |               >
184 |                 Разгледайте всички имоти
185 |               </Link>
186 |             </div>
187 |           )}
188 |         </div>
189 |       </div>
190 |     </div>
191 |   );
192 | } 
193 | 
194 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/NotFound.tsx:
--------------------------------------------------------------------------------
 1 | import { Link } from 'react-router-dom';
 2 | 
 3 | export default function NotFound() {
 4 |   return (
 5 |     <div className="min-h-screen flex flex-col items-center justify-center px-4">
 6 |       <div className="text-center">
 7 |         <p className="text-6xl font-bold text-primary-600 mb-4">404</p>
 8 |         <h1 className="text-3xl font-semibold text-gray-900 mb-4">
 9 |           Страницата не е намерена
10 |         </h1>
11 |         <p className="text-lg text-gray-600 mb-8">
12 |           Страницата, която търсите, не съществува или е била преместена.
13 |         </p>
14 |         <div className="space-x-4">
15 |           <Link
16 |             to="/"
17 |             className="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
18 |           >
19 |             Към началната страница
20 |           </Link>
21 |           <Link
22 |             to="/contact"
23 |             className="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
24 |           >
25 |             Свържете се с нас
26 |           </Link>
27 |         </div>
28 |       </div>
29 |     </div>
30 |   );
31 | } 
32 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/Properties.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import { useSearchParams } from 'react-router-dom';
  3 | import { ChevronLeftIcon, ChevronRightIcon, FunnelIcon } from '@heroicons/react/24/outline';
  4 | import { CSSTransition, TransitionGroup } from 'react-transition-group';
  5 | import PropertyCard from '../components/properties/PropertyCard';
  6 | import PropertyCardSkeleton from '../components/properties/PropertyCardSkeleton';
  7 | import { getProperties } from '../services/propertyService';
  8 | import type { Property, GetPropertiesParams, LocationType } from '@avalon/shared-types';
  9 | import { propertyTypeLabels, locationTypeLabels, categoryLabels, locationTypes } from '../constants/property';
 10 | 
 11 | declare module 'react-transition-group';
 12 | 
 13 | const regions = [
 14 |   'Всички райони',
 15 |   'Русе център',
 16 |   'Здравец',
 17 |   'Дружба',
 18 |   'Възраждане',
 19 |   'Чародейка',
 20 |   'Ялта',
 21 |   'Родина',
 22 |   'Цветница',
 23 |   'Централна градска част',
 24 | ];
 25 | 
 26 | export default function Properties() {
 27 |   const [searchParams, setSearchParams] = useSearchParams();
 28 |   const [properties, setProperties] = useState<Property[]>([]);
 29 |   const [isLoading, setIsLoading] = useState(true);
 30 |   const [error, setError] = useState<string | null>(null);
 31 |   const [currentPage, setCurrentPage] = useState(1);
 32 |   const [totalPages, setTotalPages] = useState(1);
 33 | 
 34 |   const handleFilterChange = (key: string, value: string | undefined) => {
 35 |     const newParams = new URLSearchParams(searchParams);
 36 |     if (value) {
 37 |       newParams.set(key, value);
 38 |     } else {
 39 |       newParams.delete(key);
 40 |     }
 41 |     setSearchParams(newParams);
 42 |   };
 43 | 
 44 |   const handlePageChange = (page: number) => {
 45 |     const newParams = new URLSearchParams(searchParams);
 46 |     newParams.set('page', page.toString());
 47 |     setSearchParams(newParams);
 48 |   };
 49 | 
 50 |   useEffect(() => {
 51 |     const fetchProperties = async () => {
 52 |       setIsLoading(true);
 53 |       setError(null);
 54 | 
 55 |       try {
 56 |         const filters: GetPropertiesParams = {};
 57 |         const type = searchParams.get('type') || undefined;
 58 |         const category = searchParams.get('category') || undefined;
 59 |         const location_type = searchParams.get('location_type') || undefined;
 60 |         const min_price = searchParams.get('min_price') || undefined;
 61 |         const max_price = searchParams.get('max_price') || undefined;
 62 | 
 63 |         if (type) filters.type = type as any;
 64 |         if (category) filters.category = category as any;
 65 |         if (location_type) filters.location_type = location_type as any;
 66 |         if (min_price) filters.min_price = min_price;
 67 |         if (max_price) filters.max_price = max_price;
 68 | 
 69 |         const response = await getProperties(filters, currentPage);
 70 |         setProperties(response.data);
 71 |         setTotalPages(response.meta.totalPages);
 72 |       } catch (error) {
 73 |         setError(error instanceof Error ? error.message : 'Failed to fetch properties');
 74 |       } finally {
 75 |         setIsLoading(false);
 76 |       }
 77 |     };
 78 | 
 79 |     fetchProperties();
 80 |   }, [searchParams, currentPage]);
 81 | 
 82 |   return (
 83 |     <div className="min-h-screen bg-gray-100 dark:bg-[rgb(var(--color-dark-bg))]">
 84 |       <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
 85 |         <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow sm:rounded-lg">
 86 |           <div className="px-4 py-5 sm:p-6">
 87 |             <div className="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
 88 |               <div className="sm:col-span-2">
 89 |                 <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 90 |                   Тип имот
 91 |                 </label>
 92 |                 <select
 93 |                   id="type"
 94 |                   value={searchParams.get('type') || ''}
 95 |                   onChange={(e) => handleFilterChange('type', e.target.value || undefined)}
 96 |                   className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
 97 |                 >
 98 |                   <option value="">Всички типове</option>
 99 |                   {Object.entries(propertyTypeLabels).map(([value, label]) => (
100 |                     <option key={value} value={value}>
101 |                       {label}
102 |                     </option>
103 |                   ))}
104 |                 </select>
105 |               </div>
106 | 
107 |               <div className="sm:col-span-2">
108 |                 <label htmlFor="category" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
109 |                   Категория
110 |                 </label>
111 |                 <select
112 |                   id="category"
113 |                   value={searchParams.get('category') || ''}
114 |                   onChange={(e) => handleFilterChange('category', e.target.value || undefined)}
115 |                   className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
116 |                 >
117 |                   <option value="">Всички категории</option>
118 |                   {Object.entries(categoryLabels).map(([value, label]) => (
119 |                     <option key={value} value={value}>
120 |                       {label}
121 |                     </option>
122 |                   ))}
123 |                 </select>
124 |               </div>
125 | 
126 |               <div className="sm:col-span-2">
127 |                 <label htmlFor="location_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
128 |                   Локация
129 |                 </label>
130 |                 <select
131 |                   id="location_type"
132 |                   value={searchParams.get('location_type') || ''}
133 |                   onChange={(e) => handleFilterChange('location_type', e.target.value || undefined)}
134 |                   className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
135 |                 >
136 |                   <option value="">Всички локации</option>
137 |                   {Object.entries(locationTypeLabels).map(([value, label]) => (
138 |                     <option key={value} value={value}>
139 |                       {label}
140 |                     </option>
141 |                   ))}
142 |                 </select>
143 |               </div>
144 | 
145 |               <div className="sm:col-span-3">
146 |                 <label htmlFor="min_price" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
147 |                   Минимална цена
148 |                 </label>
149 |                 <input
150 |                   type="number"
151 |                   id="min_price"
152 |                   value={searchParams.get('min_price') || ''}
153 |                   onChange={(e) => handleFilterChange('min_price', e.target.value || undefined)}
154 |                   className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
155 |                 />
156 |               </div>
157 | 
158 |               <div className="sm:col-span-3">
159 |                 <label htmlFor="max_price" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
160 |                   Максимална цена
161 |                 </label>
162 |                 <input
163 |                   type="number"
164 |                   id="max_price"
165 |                   value={searchParams.get('max_price') || ''}
166 |                   onChange={(e) => handleFilterChange('max_price', e.target.value || undefined)}
167 |                   className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
168 |                 />
169 |               </div>
170 |             </div>
171 |           </div>
172 |         </div>
173 | 
174 |         <div className="mt-8">
175 |           {isLoading ? (
176 |             <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
177 |               {[...Array(6)].map((_, i) => (
178 |                 <PropertyCardSkeleton key={i} />
179 |               ))}
180 |             </div>
181 |           ) : error ? (
182 |             <div className="text-center">
183 |               <p className="text-red-600 dark:text-red-400">{error}</p>
184 |             </div>
185 |           ) : properties.length ? (
186 |             <div>
187 |               <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
188 |                 <TransitionGroup component={null}>
189 |                   {properties.map((property) => (
190 |                     <CSSTransition key={property.id} timeout={500} classNames="fade">
191 |                       <PropertyCard {...property} />
192 |                     </CSSTransition>
193 |                   ))}
194 |                 </TransitionGroup>
195 |               </div>
196 | 
197 |               <div className="mt-8">
198 |                 <div className="flex justify-between flex-1 sm:hidden">
199 |                   <button
200 |                     onClick={() => handlePageChange(currentPage - 1)}
201 |                     disabled={currentPage === 1}
202 |                     className="btn btn-secondary"
203 |                   >
204 |                     Предишна
205 |                   </button>
206 |                   <button
207 |                     onClick={() => handlePageChange(currentPage + 1)}
208 |                     disabled={currentPage === totalPages}
209 |                     className="btn btn-secondary"
210 |                   >
211 |                     Следваща
212 |                   </button>
213 |                 </div>
214 |                 <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
215 |                   <div>
216 |                     <p className="text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
217 |                       Страница <span className="font-medium">{currentPage}</span> от{' '}
218 |                       <span className="font-medium">{totalPages}</span>
219 |                     </p>
220 |                   </div>
221 |                   <div>
222 |                     <nav className="inline-flex -space-x-px rounded-md shadow-sm isolate" aria-label="Pagination">
223 |                       <button
224 |                         onClick={() => handlePageChange(currentPage - 1)}
225 |                         disabled={currentPage === 1}
226 |                         className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:z-20 focus:outline-offset-0 disabled:opacity-50"
227 |                       >
228 |                         <span className="sr-only">Предишна</span>
229 |                         <ChevronLeftIcon className="h-5 w-5" aria-hidden="true" />
230 |                       </button>
231 |                       <button
232 |                         onClick={() => handlePageChange(currentPage + 1)}
233 |                         disabled={currentPage === totalPages}
234 |                         className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:z-20 focus:outline-offset-0 disabled:opacity-50"
235 |                       >
236 |                         <span className="sr-only">Следваща</span>
237 |                         <ChevronRightIcon className="h-5 w-5" aria-hidden="true" />
238 |                       </button>
239 |                     </nav>
240 |                   </div>
241 |                 </div>
242 |               </div>
243 |             </div>
244 |           ) : (
245 |             <div className="text-center">
246 |               <p className="text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Няма намерени имоти</p>
247 |             </div>
248 |           )}
249 |         </div>
250 |       </div>
251 |     </div>
252 |   );
253 | } 
254 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/PropertyDetails.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import { useParams, Link, useNavigate } from 'react-router-dom';
  3 | import { 
  4 |   BuildingOfficeIcon, 
  5 |   HomeIcon, 
  6 |   MapPinIcon,
  7 |   PhoneIcon,
  8 |   EnvelopeIcon,
  9 |   ArrowLeftIcon,
 10 |   ChevronLeftIcon,
 11 |   ChevronRightIcon,
 12 |   XMarkIcon,
 13 | } from '@heroicons/react/24/outline';
 14 | import { getPropertyById } from '../services/propertyService';
 15 | import type { Property } from '@avalon/shared-types';
 16 | import GoogleMap from '../components/maps/GoogleMap';
 17 | import { useQuery } from '@tanstack/react-query';
 18 | import { propertyTypeLabels, locationTypeLabels, categoryLabels } from '../constants/property';
 19 | 
 20 | function formatPrice(price: number) {
 21 |   return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
 22 | }
 23 | 
 24 | export default function PropertyDetails() {
 25 |   const { id } = useParams();
 26 |   const navigate = useNavigate();
 27 |   const [showContactForm, setShowContactForm] = useState(false);
 28 |   const [activeImage, setActiveImage] = useState(0);
 29 |   const [showFullscreen, setShowFullscreen] = useState(false);
 30 |   const [formData, setFormData] = useState({
 31 |     name: '',
 32 |     email: '',
 33 |     phone: '',
 34 |     message: '',
 35 |   });
 36 | 
 37 |   // Validate ID and navigate if invalid
 38 |   useEffect(() => {
 39 |     if (!id) {
 40 |       navigate('/404');
 41 |     }
 42 |   }, [id, navigate]);
 43 | 
 44 |   // Only proceed with the query if we have a valid ID
 45 |   const { data: property, isLoading, error } = useQuery({
 46 |     queryKey: ['property', id],
 47 |     queryFn: () => getPropertyById(id!),
 48 |     enabled: !!id, // Only run query if ID exists
 49 |   });
 50 | 
 51 |   const handleContactSubmit = async (e: React.FormEvent) => {
 52 |     e.preventDefault();
 53 |     // TODO: Implement contact form submission
 54 |     console.log('Contact form submitted:', formData);
 55 |     setShowContactForm(false);
 56 |   };
 57 | 
 58 |   const handleImageClick = (index: number) => {
 59 |     setActiveImage(index);
 60 |     setShowFullscreen(true);
 61 |   };
 62 | 
 63 |   const handleFullscreenClose = (e: React.MouseEvent) => {
 64 |     // Only close if clicking the backdrop, not the image
 65 |     if (e.target === e.currentTarget) {
 66 |       setShowFullscreen(false);
 67 |     }
 68 |   };
 69 | 
 70 |   const handleKeyDown = (e: KeyboardEvent) => {
 71 |     if (!showFullscreen || !property?.images) return;
 72 |     
 73 |     if (e.key === 'Escape') {
 74 |       setShowFullscreen(false);
 75 |     } else if (e.key === 'ArrowLeft') {
 76 |       setActiveImage((prev) => (prev === 0 ? property.images.length - 1 : prev - 1));
 77 |     } else if (e.key === 'ArrowRight') {
 78 |       setActiveImage((prev) => (prev === property.images.length - 1 ? 0 : prev + 1));
 79 |     }
 80 |   };
 81 | 
 82 |   useEffect(() => {
 83 |     window.addEventListener('keydown', handleKeyDown);
 84 |     return () => window.removeEventListener('keydown', handleKeyDown);
 85 |   }, [showFullscreen, property]);
 86 | 
 87 |   if (isLoading) {
 88 |     return (
 89 |       <div className="flex justify-center items-center min-h-screen">
 90 |         <div className="w-12 h-12 rounded-full border-t-2 border-b-2 animate-spin border-primary-600"></div>
 91 |       </div>
 92 |     );
 93 |   }
 94 | 
 95 |   if (error) {
 96 |     return (
 97 |       <div className="flex flex-col justify-center items-center min-h-screen">
 98 |         <h2 className="mb-4 text-2xl font-semibold text-gray-900">Failed to load property details</h2>
 99 |         <button 
100 |           onClick={() => navigate(-1)}
101 |           className="px-4 py-2 text-white rounded bg-primary-600 hover:bg-primary-700"
102 |         >
103 |           Go Back
104 |         </button>
105 |       </div>
106 |     );
107 |   }
108 | 
109 |   if (!property) {
110 |     return (
111 |       <div className="flex flex-col justify-center items-center min-h-screen">
112 |         <h2 className="mb-4 text-2xl font-semibold text-gray-900">Property not found</h2>
113 |         <Link 
114 |           to="/properties"
115 |           className="px-4 py-2 text-white rounded bg-primary-600 hover:bg-primary-700"
116 |         >
117 |           View All Properties
118 |         </Link>
119 |       </div>
120 |     );
121 |   }
122 | 
123 |   return (
124 |     <div className="min-h-full bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
125 |       <div className="px-4 py-8 mx-auto max-w-7xl sm:px-6 lg:px-8">
126 |         {/* Back button */}
127 |         <Link
128 |           to="/properties"
129 |           className="inline-flex items-center mb-6 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
130 |         >
131 |           <ArrowLeftIcon className="mr-2 w-5 h-5" />
132 |           Обратно към всички имоти
133 |         </Link>
134 | 
135 |         {/* Property Title */}
136 |         <h1 className="mb-6 text-3xl font-bold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
137 |           {property.title}
138 |         </h1>
139 | 
140 |         {/* Property Description */}
141 |         <div className="mb-8">
142 |           <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-pre-wrap">
143 |             {property.description}
144 |           </p>
145 |         </div>
146 | 
147 |         <div className="grid grid-cols-1 gap-8 lg:grid-cols-3">
148 |           <div className="lg:col-span-2">
149 |             {/* Image Gallery */}
150 |             <div className="space-y-4">
151 |             <div className="overflow-hidden relative w-full rounded-lg" onClick={() => setShowFullscreen(true)}>
152 |                 <img
153 |                   src={property.images?.[activeImage]?.url || '/images/property-placeholder.webp'}
154 |                   alt={property.title}
155 |                   className="object-cover w-full h-auto rounded-lg cursor-pointer"
156 |                   onError={(e) => {
157 |                     const target = e.target as HTMLImageElement;
158 |                     target.onerror = null;
159 |                     target.src = '/images/property-placeholder.webp';
160 |                   }}
161 |                 />
162 |                 {property.images && property.images.length > 1 && (
163 |                   <>
164 |                     <button
165 |                       onClick={(e) => {
166 |                         e.stopPropagation();
167 |                         setActiveImage((prev) => (prev === 0 ? (property.images?.length || 1) - 1 : prev - 1));
168 |                       }}
169 |                       className="absolute left-2 top-1/2 p-2 text-white rounded-full transition-colors -translate-y-1/2 bg-black/50 hover:bg-black/75"
170 |                     >
171 |                       <ChevronLeftIcon className="w-6 h-6" />
172 |                     </button>
173 |                     <button
174 |                       onClick={(e) => {
175 |                         e.stopPropagation();
176 |                         setActiveImage((prev) => (prev === (property.images?.length || 1) - 1 ? 0 : prev + 1));
177 |                       }}
178 |                       className="absolute right-2 top-1/2 p-2 text-white rounded-full transition-colors -translate-y-1/2 bg-black/50 hover:bg-black/75"
179 |                     >
180 |                       <ChevronRightIcon className="w-6 h-6" />
181 |                     </button>
182 |                     <div className="absolute bottom-4 left-1/2 px-3 py-1 text-sm text-white rounded-full -translate-x-1/2 bg-black/50">
183 |                       {activeImage + 1} / {property.images.length}
184 |                     </div>
185 |                   </>
186 |                 )}
187 |               </div>
188 |               {property.images && property.images.length > 1 && (
189 |                 <div className="grid grid-cols-6 gap-2">
190 |                   {property.images.map((img: PropertyImage, index: number) => (
191 |                     <button
192 |                       key={index}
193 |                       onClick={() => handleImageClick(index)}
194 |                       className={`relative aspect-w-16 aspect-h-9 overflow-hidden rounded-lg transition-all ${
195 |                         index === activeImage ? 'ring-2 ring-primary-600 opacity-100' : 'opacity-60 hover:opacity-100'
196 |                       }`}
197 |                     >
198 |                       <img
199 |                         src={img.url}
200 |                         alt={`Property view ${index + 1}`}
201 |                         className="object-cover w-full h-full"
202 |                         onError={(e) => {
203 |                           const target = e.target as HTMLImageElement;
204 |                           target.onerror = null;
205 |                           target.src = '/images/property-placeholder.webp';
206 |                         }}
207 |                       />
208 |                     </button>
209 |                   ))}
210 |                 </div>
211 |               )}
212 |             </div>
213 | 
214 |             {/* Property Details */}
215 |             <div className="mt-8 p-6 bg-white rounded-lg shadow dark:bg-[rgb(var(--color-dark-bg-secondary))]">
216 |               <h2 className="mb-4 text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Детайли за имота</h2>
217 |               <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
218 |                 <div>
219 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Тип имот</h3>
220 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
221 |                     {propertyTypeLabels[property.type] || property.type}
222 |                   </p>
223 |                 </div>
224 |                 <div>
225 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Категория</h3>
226 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
227 |                     {categoryLabels[property.category] || property.category}
228 |                   </p>
229 |                 </div>
230 |                 <div>
231 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Тип локация</h3>
232 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
233 |                     {locationTypeLabels[property.location_type] || property.location_type}
234 |                   </p>
235 |                 </div>
236 |                 <div>
237 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Площ</h3>
238 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.area_sqm} м²</p>
239 |                 </div>
240 |                 {property.land_area_sqm && (
241 |                   <div>
242 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Площ на парцела</h3>
243 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.land_area_sqm} м²</p>
244 |                   </div>
245 |                 )}
246 |                 {property.floor && (
247 |                   <div>
248 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Етаж</h3>
249 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.floor} от {property.total_floors || '?'}</p>
250 |                   </div>
251 |                 )}
252 |                 {property.construction_type && (
253 |                   <div>
254 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Строителство</h3>
255 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.construction_type}</p>
256 |                   </div>
257 |                 )}
258 |                 {property.furnishing && (
259 |                   <div>
260 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Обзавеждане</h3>
261 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.furnishing}</p>
262 |                   </div>
263 |                 )}
264 |                 {property.has_regulation !== undefined && (
265 |                   <div>
266 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Регулация</h3>
267 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.has_regulation ? 'Да' : 'Не'}</p>
268 |                   </div>
269 |                 )}
270 |                 {property.features && property.features.length > 0 && (
271 |                   <div className="sm:col-span-2">
272 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Характеристики</h3>
273 |                     <div className="mt-1 flex flex-wrap gap-2">
274 |                       {property.features.map((feature: Feature) => (
275 |                         <span 
276 |                           key={feature.featureId} 
277 |                           className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200"
278 |                         >
279 |                           {feature.name}
280 |                         </span>
281 |                       ))}
282 |                     </div>
283 |                   </div>
284 |                 )}
285 |               </div>
286 |             </div>
287 |           </div>
288 | 
289 |           {/* Sidebar */}
290 |           <div className="space-y-6">
291 |             {/* Price Card */}
292 |             <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
293 |               <div className="mb-4 text-3xl font-bold text-primary-600">
294 |                 {formatPrice(property.price)}
295 |                 <span className="ml-1 text-xl">{property.currency}</span>
296 |               </div>
297 |               <div className="space-y-4">
298 |                 <button
299 |                   onClick={() => setShowContactForm(true)}
300 |                   className="px-4 py-2 w-full text-white bg-primary-600 rounded-md transition-colors hover:bg-primary-700"
301 |                 >
302 |                   Изпратете запитване
303 |                 </button>
304 |                 <div className="space-y-2">
305 |                   <a
306 |                     href="tel:082519851"
307 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
308 |                   >
309 |                     <PhoneIcon className="w-5 h-5" />
310 |                     082/51-98-51
311 |                   </a>
312 |                   <a
313 |                     href="tel:0895606165"
314 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
315 |                   >
316 |                     <PhoneIcon className="w-5 h-5" />
317 |                     0895606165
318 |                   </a>
319 |                   <a
320 |                     href="mailto:avalon_ds@abv.bg"
321 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
322 |                   >
323 |                     <EnvelopeIcon className="w-5 h-5" />
324 |                     avalon_ds@abv.bg
325 |                   </a>
326 |                 </div>
327 |               </div>
328 |             </div>
329 | 
330 |             {/* Location Map */}
331 |             <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
332 |               <h3 className="mb-4 text-lg font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
333 |                 Локация
334 |               </h3>
335 |               <div className="h-[300px] bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded-lg overflow-hidden">
336 |                 <GoogleMap
337 |                   center={{
338 |                     lat: 43.849699,
339 |                     lng: 25.954861,
340 |                   }}
341 |                 />
342 |               </div>
343 |             </div>
344 |           </div>
345 |         </div>
346 | 
347 |         {/* Contact Form Modal */}
348 |         {showContactForm && (
349 |           <div className="flex fixed inset-0 z-50 justify-center items-center p-4 bg-black bg-opacity-50">
350 |             <div className="p-6 w-full max-w-md bg-white rounded-lg dark:bg-[rgb(var(--color-dark-bg-secondary))]">
351 |               <h3 className="mb-4 text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
352 |                 Изпратете запитване
353 |               </h3>
354 |               <form onSubmit={handleContactSubmit} className="space-y-4">
355 |                 <div>
356 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
357 |                     Име
358 |                   </label>
359 |                   <input
360 |                     type="text"
361 |                     required
362 |                     value={formData.name}
363 |                     onChange={(e) => setFormData({ ...formData, name: e.target.value })}
364 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
365 |                   />
366 |                 </div>
367 |                 <div>
368 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
369 |                     Имейл
370 |                   </label>
371 |                   <input
372 |                     type="email"
373 |                     required
374 |                     value={formData.email}
375 |                     onChange={(e) => setFormData({ ...formData, email: e.target.value })}
376 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
377 |                   />
378 |                 </div>
379 |                 <div>
380 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
381 |                     Телефон
382 |                   </label>
383 |                   <input
384 |                     type="tel"
385 |                     required
386 |                     value={formData.phone}
387 |                     onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
388 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
389 |                   />
390 |                 </div>
391 |                 <div>
392 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
393 |                     Съобщение
394 |                   </label>
395 |                   <textarea
396 |                     required
397 |                     rows={4}
398 |                     value={formData.message}
399 |                     onChange={(e) => setFormData({ ...formData, message: e.target.value })}
400 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
401 |                   />
402 |                 </div>
403 |                 <div className="flex gap-4 justify-end">
404 |                   <button
405 |                     type="button"
406 |                     onClick={() => setShowContactForm(false)}
407 |                     className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
408 |                   >
409 |                     Отказ
410 |                   </button>
411 |                   <button
412 |                     type="submit"
413 |                     className="px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
414 |                   >
415 |                     Изпрати
416 |                   </button>
417 |                 </div>
418 |               </form>
419 |             </div>
420 |           </div>
421 |         )}
422 | 
423 |         {/* Fullscreen Image Modal */}
424 |         {showFullscreen && property.images && (
425 |           <div 
426 |             className="flex fixed inset-0 z-50 justify-center items-center bg-black/90"
427 |             onClick={handleFullscreenClose}
428 |           >
429 |             <div className="flex relative justify-center items-center w-full h-full">
430 |               {/* Close button */}
431 |               <button
432 |                 onClick={() => setShowFullscreen(false)}
433 |                 className="absolute top-4 right-4 z-50 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
434 |               >
435 |                 <XMarkIcon className="w-6 h-6" />
436 |               </button>
437 | 
438 |               {/* Main Image */}
439 |               <div className="flex relative justify-center items-center p-4 w-full h-full">
440 |                 <img
441 |                   src={property.images[activeImage]?.url || '/images/property-placeholder.webp'}
442 |                   alt={`Property view ${activeImage + 1}`}
443 |                   className="object-contain max-w-full max-h-full"
444 |                   onError={(e) => {
445 |                     const target = e.target as HTMLImageElement;
446 |                     target.onerror = null;
447 |                     target.src = '/images/property-placeholder.webp';
448 |                   }}
449 |                 />
450 | 
451 |                 {property.images.length > 1 && (
452 |                   <>
453 |                     {/* Previous Button */}
454 |                     <button
455 |                       onClick={(e) => {
456 |                         e.stopPropagation();
457 |                         setActiveImage((prev) => (prev === 0 ? property.images!.length - 1 : prev - 1));
458 |                       }}
459 |                       className="absolute left-4 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
460 |                     >
461 |                       <ChevronLeftIcon className="w-8 h-8" />
462 |                     </button>
463 | 
464 |                     {/* Next Button */}
465 |                     <button
466 |                       onClick={(e) => {
467 |                         e.stopPropagation();
468 |                         setActiveImage((prev) => (prev === property.images!.length - 1 ? 0 : prev + 1));
469 |                       }}
470 |                       className="absolute right-4 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
471 |                     >
472 |                       <ChevronRightIcon className="w-8 h-8" />
473 |                     </button>
474 | 
475 |                     {/* Image Counter */}
476 |                     <div className="absolute bottom-4 left-1/2 px-4 py-2 text-white rounded-full -translate-x-1/2 bg-black/50">
477 |                       {activeImage + 1} / {property.images.length}
478 |                     </div>
479 |                   </>
480 |                 )}
481 |               </div>
482 | 
483 |               {/* Thumbnails */}
484 |               <div className="absolute right-0 bottom-0 left-0 p-4">
485 |                 <div className="flex overflow-x-auto gap-2 justify-center pb-2">
486 |                   {property.images.map((img: PropertyImage, index: number) => (
487 |                     <button
488 |                       key={index}
489 |                       onClick={(e) => {
490 |                         e.stopPropagation();
491 |                         setActiveImage(index);
492 |                       }}
493 |                       className={`relative flex-shrink-0 w-20 h-20 rounded-lg overflow-hidden transition-all ${
494 |                         index === activeImage ? 'ring-2 ring-white opacity-100' : 'opacity-50 hover:opacity-100'
495 |                       }`}
496 |                     >
497 |                       <img
498 |                         src={img.url}
499 |                         alt={`Thumbnail ${index + 1}`}
500 |                         className="object-cover w-full h-full"
501 |                         onError={(e) => {
502 |                           const target = e.target as HTMLImageElement;
503 |                           target.onerror = null;
504 |                           target.src = '/images/property-placeholder.webp';
505 |                         }}
506 |                       />
507 |                     </button>
508 |                   ))}
509 |                 </div>
510 |               </div>
511 |             </div>
512 |           </div>
513 |         )}
514 |       </div>
515 |     </div>
516 |   );
517 | } 
518 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Dashboard.tsx:
--------------------------------------------------------------------------------
  1 | import { useQuery } from '@tanstack/react-query';
  2 | import { Link } from 'react-router-dom';
  3 | import {
  4 |   HomeIcon,
  5 |   ChatBubbleLeftRightIcon,
  6 |   UsersIcon,
  7 | } from '@heroicons/react/24/outline';
  8 | import api from '../../lib/api';
  9 | import type { ApiResponse } from '../../types/api';
 10 | 
 11 | interface Stats {
 12 |   properties: number;
 13 |   messages: number;
 14 |   users: number;
 15 | }
 16 | 
 17 | export default function Dashboard() {
 18 |   const { data: stats, isLoading, error } = useQuery<Stats>({
 19 |     queryKey: ['admin', 'stats'],
 20 |     queryFn: async () => {
 21 |       const response = await api.get<Stats>('/admin/stats');
 22 |       console.log('Stats:', response.data);
 23 |       return response.data;
 24 |     }
 25 |   });
 26 | 
 27 |   const cards = [
 28 |     {
 29 |       name: 'Имоти',
 30 |       value: stats?.properties || 0,
 31 |       icon: HomeIcon,
 32 |       to: '/admin/properties',
 33 |       color: 'bg-red-500',
 34 |     },
 35 |     {
 36 |       name: 'Съобщения',
 37 |       value: stats?.messages || 0,
 38 |       icon: ChatBubbleLeftRightIcon,
 39 |       to: '/admin/messages',
 40 |       color: 'bg-blue-500',
 41 |     },
 42 |     {
 43 |       name: 'Потребители',
 44 |       value: stats?.users || 0,
 45 |       icon: UsersIcon,
 46 |       to: '/admin/users',
 47 |       color: 'bg-green-500',
 48 |     },
 49 |   ];
 50 | 
 51 |   if (isLoading) {
 52 |     return (
 53 |       <div className="min-h-screen flex items-center justify-center">
 54 |         <div className="animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-red-600" />
 55 |       </div>
 56 |     );
 57 |   }
 58 | 
 59 |   return (
 60 |     <div className="p-6">
 61 |       <h1 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Табло</h1>
 62 | 
 63 |       <div className="mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
 64 |         {cards.map((card) => (
 65 |           <Link
 66 |             key={card.name}
 67 |             to={card.to}
 68 |             className="relative overflow-hidden rounded-lg bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-5 shadow sm:px-6 hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] transition-colors duration-200"
 69 |           >
 70 |             <dt>
 71 |               <div className={`absolute rounded-md p-3 ${card.color}`}>
 72 |                 <card.icon className="h-6 w-6 text-white" aria-hidden="true" />
 73 |               </div>
 74 |               <p className="ml-16 truncate text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 75 |                 {card.name}
 76 |               </p>
 77 |             </dt>
 78 |             <dd className="ml-16 flex items-baseline">
 79 |               <p className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{card.value}</p>
 80 |             </dd>
 81 |           </Link>
 82 |         ))}
 83 |       </div>
 84 | 
 85 |       {/* Recent Activity */}
 86 |       <div className="mt-8">
 87 |         <h2 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Последна активност</h2>
 88 |         <div className="mt-4 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow overflow-hidden sm:rounded-md">
 89 |           <ul className="divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))]">
 90 |             {/* Add recent activity items here */}
 91 |             <li className="px-4 py-4 sm:px-6">
 92 |               <div className="flex items-center justify-between">
 93 |                 <p className="text-sm font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))] truncate">
 94 |                   Скоро ще бъде добавена информация за последната активност
 95 |                 </p>
 96 |               </div>
 97 |             </li>
 98 |           </ul>
 99 |         </div>
100 |       </div>
101 |     </div>
102 |   );
103 | } 
104 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/EditProperty.tsx:
--------------------------------------------------------------------------------
  1 | import { useNavigate, useParams, Link } from 'react-router-dom';
  2 | import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
  3 | import { getProperty, updateProperty } from '../../services/properties';
  4 | import PropertyForm from '../../components/admin/PropertyForm';
  5 | import type { CreatePropertyData } from '../../types/api';
  6 | import LoadingSpinner from '../../components/LoadingSpinner';
  7 | import { ArrowLeftIcon } from '@heroicons/react/24/outline';
  8 | 
  9 | export default function EditProperty() {
 10 |   const { id } = useParams<{ id: string }>();
 11 |   const navigate = useNavigate();
 12 |   const queryClient = useQueryClient();
 13 | 
 14 |   const { data: property, isLoading } = useQuery({
 15 |     queryKey: ['property', id],
 16 |     queryFn: () => getProperty(id!),
 17 |     enabled: !!id,
 18 |   });
 19 | 
 20 |   const { mutate, isPending } = useMutation({
 21 |     mutationFn: async ({ data, images }: { data: CreatePropertyData; images: File[] }) => {
 22 |       const formData = new FormData();
 23 |       
 24 |       // Append property data
 25 |       Object.entries(data).forEach(([key, value]) => {
 26 |         if (key === 'contact_info') {
 27 |           formData.append(key, JSON.stringify(value));
 28 |         } else if (value !== undefined && value !== null) {
 29 |           formData.append(key, String(value));
 30 |         }
 31 |       });
 32 | 
 33 |       // Append images
 34 |       images.forEach((file) => {
 35 |         formData.append('image', file);
 36 |       });
 37 | 
 38 |       return updateProperty(id!, formData);
 39 |     },
 40 |     onSuccess: () => {
 41 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
 42 |       queryClient.invalidateQueries({ queryKey: ['property', id] });
 43 |       navigate('/admin/properties');
 44 |     },
 45 |   });
 46 | 
 47 |   const handleSubmit = async (data: CreatePropertyData, images: File[]) => {
 48 |     mutate({ data, images });
 49 |   };
 50 | 
 51 |   if (isLoading) {
 52 |     return (
 53 |       <div className="flex justify-center items-center h-96">
 54 |         <LoadingSpinner />
 55 |       </div>
 56 |     );
 57 |   }
 58 | 
 59 |   if (!property) {
 60 |     return (
 61 |       <div className="text-center py-12">
 62 |         <h2 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имотът не е намерен</h2>
 63 |         <p className="mt-2 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Този имот не съществува или е бил изтрит</p>
 64 |         <button
 65 |           onClick={() => navigate('/admin/properties')}
 66 |           className="mt-4 px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
 67 |         >
 68 |           Към списъка с имоти
 69 |         </button>
 70 |       </div>
 71 |     );
 72 |   }
 73 | 
 74 |   return (
 75 |     <div className="container mx-auto px-4 py-8">
 76 |       <div className="mb-8">
 77 |         <Link
 78 |           to="/admin/properties"
 79 |           className="inline-flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900 dark:text-[rgb(var(--color-dark-text-secondary))] dark:hover:text-[rgb(var(--color-dark-text))]"
 80 |         >
 81 |           <ArrowLeftIcon className="w-4 h-4" />
 82 |           Назад
 83 |         </Link>
 84 |         <h1 className="mt-2 text-2xl font-bold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Редактиране на имот</h1>
 85 |         <div className="flex items-center mt-2">
 86 |           <p className="text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 87 |             Редактирайте информацията за имота
 88 |           </p>
 89 |           <Link
 90 |             to={`/properties/${id}`}
 91 |             target="_blank"
 92 |             className="ml-4 inline-flex items-center px-3 py-1 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] bg-gray-100 dark:bg-[rgb(var(--color-dark-border))] rounded-md hover:bg-gray-200 dark:hover:bg-[rgb(var(--color-dark-bg))] transition-colors"
 93 |           >
 94 |             <span>Преглед на имота</span>
 95 |             <svg xmlns="http://www.w3.org/2000/svg" className="ml-1.5 w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 96 |               <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
 97 |             </svg>
 98 |           </Link>
 99 |         </div>
100 |       </div>
101 | 
102 |       <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-md rounded-lg p-6">
103 |         <PropertyForm
104 |           initialData={property}
105 |           onSubmit={handleSubmit}
106 |           isSubmitting={isPending}
107 |           onCancel={() => navigate('/admin/properties')}
108 |           submitLabel="Запази промените"
109 |         />
110 |       </div>
111 |     </div>
112 |   );
113 | } 
114 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Login.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useMutation } from '@tanstack/react-query';
  3 | import { useNavigate, useLocation } from 'react-router-dom';
  4 | import { z } from 'zod';
  5 | import { useAuth } from '../../contexts/auth';
  6 | import type { LoginData } from '../../services/auth';
  7 | 
  8 | const loginSchema = z.object({
  9 |   email: z.string().email('Невалиден имейл адрес'),
 10 |   password: z.string().min(6, 'Паролата трябва да е поне 6 символа'),
 11 | });
 12 | 
 13 | type LoginForm = z.infer<typeof loginSchema>;
 14 | 
 15 | export default function Login() {
 16 |   const navigate = useNavigate();
 17 |   const location = useLocation();
 18 |   const { login } = useAuth();
 19 |   const from = (location.state as { from?: { pathname: string } })?.from?.pathname || '/admin';
 20 | 
 21 |   const [formData, setFormData] = useState<LoginForm>({
 22 |     email: '',
 23 |     password: '',
 24 |   });
 25 | 
 26 |   const [errors, setErrors] = useState<Partial<LoginForm>>({});
 27 | 
 28 |   const { mutate, isPending } = useMutation<void, Error, LoginData>({
 29 |     mutationFn: login,
 30 |     onSuccess: () => {
 31 |       navigate(from);
 32 |     },
 33 |     onError: (error) => {
 34 |       console.error('Login error:', error);
 35 |       setErrors({
 36 |         email: 'Невалиден имейл или парола',
 37 |         password: 'Невалиден имейл или парола',
 38 |       });
 39 |     },
 40 |   });
 41 | 
 42 |   const handleSubmit = async (e: React.FormEvent) => {
 43 |     e.preventDefault();
 44 |     setErrors({});
 45 | 
 46 |     try {
 47 |       const validatedData = loginSchema.parse(formData);
 48 |       mutate(validatedData);
 49 |     } catch (err) {
 50 |       if (err instanceof z.ZodError) {
 51 |         const fieldErrors: Partial<LoginForm> = {};
 52 |         err.errors.forEach((error) => {
 53 |           if (error.path[0]) {
 54 |             fieldErrors[error.path[0] as keyof LoginForm] = error.message;
 55 |           }
 56 |         });
 57 |         setErrors(fieldErrors);
 58 |       }
 59 |     }
 60 |   };
 61 | 
 62 |   return (
 63 |     <div className="flex items-center justify-center min-h-screen px-4 py-12 bg-white dark:bg-[rgb(var(--color-dark-bg))] sm:px-6 lg:px-8">
 64 |       <div className="w-full max-w-md space-y-8">
 65 |         <div>
 66 |           <h2 className="mt-6 text-3xl font-bold text-center text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 67 |             Вход в администрацията
 68 |           </h2>
 69 |         </div>
 70 |         <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
 71 |           <div className="-space-y-px rounded-md shadow-sm">
 72 |             <div>
 73 |               <label htmlFor="email" className="sr-only">
 74 |                 Имейл
 75 |               </label>
 76 |               <input
 77 |                 id="email"
 78 |                 name="email"
 79 |                 type="email"
 80 |                 autoComplete="email"
 81 |                 required
 82 |                 value={formData.email}
 83 |                 onChange={(e) => setFormData({ ...formData, email: e.target.value })}
 84 |                 className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${
 85 |                   errors.email
 86 |                     ? 'border-red-300 dark:border-red-500 focus:ring-red-500 focus:border-red-500'
 87 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:ring-primary-500 focus:border-primary-500'
 88 |                 } placeholder-gray-500 dark:placeholder-[rgb(var(--color-dark-text-secondary))] text-gray-900 dark:text-[rgb(var(--color-dark-text))] dark:bg-[rgb(var(--color-dark-bg))] rounded-t-md focus:outline-none focus:z-10 sm:text-sm`}
 89 |                 placeholder="Имейл адрес"
 90 |               />
 91 |               {errors.email && (
 92 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.email}</p>
 93 |               )}
 94 |             </div>
 95 |             <div>
 96 |               <label htmlFor="password" className="sr-only">
 97 |                 Парола
 98 |               </label>
 99 |               <input
100 |                 id="password"
101 |                 name="password"
102 |                 type="password"
103 |                 autoComplete="current-password"
104 |                 required
105 |                 value={formData.password}
106 |                 onChange={(e) => setFormData({ ...formData, password: e.target.value })}
107 |                 className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${
108 |                   errors.password
109 |                     ? 'border-red-300 dark:border-red-500 focus:ring-red-500 focus:border-red-500'
110 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:ring-primary-500 focus:border-primary-500'
111 |                 } placeholder-gray-500 dark:placeholder-[rgb(var(--color-dark-text-secondary))] text-gray-900 dark:text-[rgb(var(--color-dark-text))] dark:bg-[rgb(var(--color-dark-bg))] rounded-b-md focus:outline-none focus:z-10 sm:text-sm`}
112 |                 placeholder="Парола"
113 |               />
114 |               {errors.password && (
115 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.password}</p>
116 |               )}
117 |             </div>
118 |           </div>
119 | 
120 |           <div>
121 |             <button
122 |               type="submit"
123 |               disabled={isPending}
124 |               className="relative flex justify-center w-full px-3 py-2 text-sm font-semibold text-white rounded-md group bg-primary-600 hover:bg-primary-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600 disabled:opacity-50 dark:focus-visible:outline-offset-[rgb(var(--color-dark-bg))]"
125 |             >
126 |               {isPending ? 'Влизане...' : 'Вход'}
127 |             </button>
128 |           </div>
129 |         </form>
130 |       </div>
131 |     </div>
132 |   );
133 | } 
134 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Messages.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  3 | import { getMessages, markMessageAsRead, deleteMessage } from '../../services/messages';
  4 | import type { ContactMessage } from '@avalon/shared-types';
  5 | 
  6 | export default function Messages() {
  7 |   const [page, setPage] = useState(1);
  8 |   const limit = 10;
  9 | 
 10 |   const queryClient = useQueryClient();
 11 | 
 12 |   const { data, isLoading, error } = useQuery({
 13 |     queryKey: ['messages', page],
 14 |     queryFn: () => getMessages(page, limit),
 15 |   });
 16 | 
 17 |   const markAsReadMutation = useMutation({
 18 |     mutationFn: markMessageAsRead,
 19 |     onSuccess: () => {
 20 |       queryClient.invalidateQueries({ queryKey: ['messages'] });
 21 |     }
 22 |   });
 23 | 
 24 |   const deleteMutation = useMutation({
 25 |     mutationFn: deleteMessage,
 26 |     onSuccess: () => {
 27 |       queryClient.invalidateQueries({ queryKey: ['messages'] });
 28 |     }
 29 |   });
 30 | 
 31 |   const handleMarkAsRead = async (id: string) => {
 32 |     markAsReadMutation.mutate(id);
 33 |   };
 34 | 
 35 |   const handleDelete = async (id: string) => {
 36 |     if (window.confirm('Сигурни ли сте, че искате да изтриете това съобщение?')) {
 37 |       deleteMutation.mutate(id);
 38 |     }
 39 |   };
 40 | 
 41 |   if (isLoading) {
 42 |     return (
 43 |       <div className="flex justify-center items-center h-64">
 44 |         <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
 45 |       </div>
 46 |     );
 47 |   }
 48 | 
 49 |   if (error) {
 50 |     return (
 51 |       <div className="text-center text-red-600 p-4">
 52 |         Възникна грешка при зареждането на съобщенията
 53 |       </div>
 54 |     );
 55 |   }
 56 | 
 57 |   const messages = data?.data?.data?.data || [];
 58 |   const { total, hasNextPage, hasPreviousPage } = data?.data?.data?.meta || { total: 0, hasNextPage: false, hasPreviousPage: false };
 59 | 
 60 |   return (
 61 |     <div className="px-4 sm:px-6 lg:px-8">
 62 |       <div className="sm:flex sm:items-center">
 63 |         <div className="sm:flex-auto">
 64 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Съобщения</h1>
 65 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 66 |             Списък с всички съобщения от контактната форма
 67 |           </p>
 68 |         </div>
 69 |       </div>
 70 | 
 71 |       <div className="mt-8 flex flex-col">
 72 |         <div className="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
 73 |           <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
 74 |             <div className="overflow-hidden shadow ring-1 ring-black/5 dark:ring-[rgb(var(--color-dark-border))] md:rounded-lg">
 75 |               <table className="min-w-full divide-y divide-gray-300 dark:divide-[rgb(var(--color-dark-border))]">
 76 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
 77 |                   <tr>
 78 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 79 |                       Име
 80 |                     </th>
 81 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 82 |                       Имейл
 83 |                     </th>
 84 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 85 |                       Съобщение
 86 |                     </th>
 87 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 88 |                       Дата
 89 |                     </th>
 90 |                     <th scope="col" className="relative py-3.5 pl-3 pr-4 sm:pr-6">
 91 |                       <span className="sr-only">Действия</span>
 92 |                     </th>
 93 |                   </tr>
 94 |                 </thead>
 95 |                 <tbody className="bg-white divide-y divide-gray-200 dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:divide-[rgb(var(--color-dark-border))]">
 96 |                   {messages.map((message: ContactMessage) => (
 97 |                     <tr key={message.id} className={message.isRead ? 'bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]' : 'bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))]'}>
 98 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 99 |                         {message.name}
100 |                       </td>
101 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
102 |                         {message.email}
103 |                       </td>
104 |                       <td className="px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
105 |                         {message.message}
106 |                       </td>
107 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
108 |                         {new Date(message.createdAt).toLocaleDateString('bg-BG', {
109 |                           year: 'numeric',
110 |                           month: 'long',
111 |                           day: 'numeric',
112 |                           hour: '2-digit',
113 |                           minute: '2-digit'
114 |                         })}
115 |                       </td>
116 |                       <td className="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
117 |                         <div className="flex justify-end space-x-4">
118 |                           <button
119 |                             onClick={() => handleMarkAsRead(message.id)}
120 |                             className={`${
121 |                               message.isRead 
122 |                                 ? 'text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))]' 
123 |                                 : 'text-primary-600 dark:text-primary-500 hover:text-primary-700 dark:hover:text-primary-400'
124 |                             }`}
125 |                           >
126 |                             {message.isRead ? 'Прочетено' : 'Маркирай като прочетено'}
127 |                           </button>
128 |                           <button
129 |                             onClick={() => handleDelete(message.id)}
130 |                             className="text-red-600 hover:text-red-700"
131 |                           >
132 |                             Изтрий
133 |                           </button>
134 |                         </div>
135 |                       </td>
136 |                     </tr>
137 |                   ))}
138 |                 </tbody>
139 |               </table>
140 |             </div>
141 |           </div>
142 |         </div>
143 |       </div>
144 | 
145 |       <div className="mt-4 flex items-center justify-between">
146 |         <div className="flex flex-1 justify-between sm:hidden">
147 |           <button
148 |             onClick={() => setPage(p => Math.max(1, p - 1))}
149 |             disabled={!hasPreviousPage}
150 |             className="relative inline-flex items-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50"
151 |           >
152 |             Предишна
153 |           </button>
154 |           <button
155 |             onClick={() => setPage(p => p + 1)}
156 |             disabled={!hasNextPage}
157 |             className="relative ml-3 inline-flex items-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50"
158 |           >
159 |             Следваща
160 |           </button>
161 |         </div>
162 |         <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
163 |           <div>
164 |             <p className="text-sm text-gray-700 dark:text-gray-300">
165 |               Показване на <span className="font-medium">{((page - 1) * limit) + 1}</span> до{' '}
166 |               <span className="font-medium">
167 |                 {Math.min(page * limit, total)}
168 |               </span>{' '}
169 |               от <span className="font-medium">{total}</span> резултата
170 |             </p>
171 |           </div>
172 |           <div>
173 |             <nav className="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
174 |               <button
175 |                 onClick={() => setPage(p => Math.max(1, p - 1))}
176 |                 disabled={!hasPreviousPage}
177 |                 className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 focus:z-20 focus:outline-offset-0 disabled:opacity-50"
178 |               >
179 |                 <span className="sr-only">Предишна</span>
180 |                 <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
181 |                   <path fillRule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clipRule="evenodd" />
182 |                 </svg>
183 |               </button>
184 |               <button
185 |                 onClick={() => setPage(p => p + 1)}
186 |                 disabled={!hasNextPage}
187 |                 className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 focus:z-20 focus:outline-offset-0 disabled:opacity-50"
188 |               >
189 |                 <span className="sr-only">Следваща</span>
190 |                 <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
191 |                   <path fillRule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clipRule="evenodd" />
192 |                 </svg>
193 |               </button>
194 |             </nav>
195 |           </div>
196 |         </div>
197 |       </div>
198 |     </div>
199 |   );
200 | } 
201 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/NewProperty.tsx:
--------------------------------------------------------------------------------
 1 | import { useNavigate } from 'react-router-dom';
 2 | import { useMutation, useQueryClient } from '@tanstack/react-query';
 3 | import { createProperty } from '../../services/properties';
 4 | import PropertyForm from '../../components/admin/PropertyForm';
 5 | import type { CreatePropertyData } from '../../types/api';
 6 | import { XCircleIcon } from '@heroicons/react/24/outline';
 7 | import { event } from '../../lib/analytics';
 8 | 
 9 | export default function NewProperty() {
10 |   const navigate = useNavigate();
11 |   const queryClient = useQueryClient();
12 | 
13 |   const { mutate, isPending, error } = useMutation({
14 |     mutationFn: async ({ data, images }: { data: CreatePropertyData; images: File[] }) => {
15 |       const formData = new FormData();
16 |       formData.append('data', JSON.stringify(data));
17 |       images.forEach((image) => {
18 |         formData.append('images', image);
19 |       });
20 |       return createProperty(formData);
21 |     },
22 |     onSuccess: () => {
23 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
24 |       navigate('/admin/properties');
25 |       
26 |       event({
27 |         action: 'property_create',
28 |         category: 'Admin',
29 |         label: 'Success'
30 |       });
31 |     },
32 |     onError: (error: any) => {
33 |       event({
34 |         action: 'property_create_error',
35 |         category: 'Admin',
36 |         label: error.message || 'Unknown error'
37 |       });
38 |     }
39 |   });
40 | 
41 |   const handleSubmit = async (data: CreatePropertyData, images: File[]) => {
42 |     mutate({ data, images });
43 |   };
44 | 
45 |   return (
46 |     <div className="px-4 py-6 sm:px-6 lg:px-8">
47 |       <div className="sm:flex sm:items-center">
48 |         <div className="sm:flex-auto">
49 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Нов имот</h1>
50 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
51 |             Добавете нов имот в системата
52 |           </p>
53 |         </div>
54 |       </div>
55 | 
56 |       <div className="mt-8">
57 |         <div>
58 |           <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow sm:rounded-md">
59 |             <div className="px-4 py-5 sm:p-6">
60 |               {error && (
61 |                 <div className="mb-4 p-4 rounded-md bg-red-50 dark:bg-red-900/50">
62 |                   <div className="flex">
63 |                     <div className="flex-shrink-0">
64 |                       <XCircleIcon className="h-5 w-5 text-red-400" aria-hidden="true" />
65 |                     </div>
66 |                     <div className="ml-3">
67 |                       <h3 className="text-sm font-medium text-red-800 dark:text-[rgb(var(--color-dark-text))]">
68 |                         Възникна грешка при създаването на имота
69 |                       </h3>
70 |                       <div className="mt-2 text-sm text-red-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
71 |                         {error instanceof Error ? error.message : 'Unknown error'}
72 |                       </div>
73 |                     </div>
74 |                   </div>
75 |                 </div>
76 |               )}
77 | 
78 |               <PropertyForm
79 |                 onSubmit={handleSubmit}
80 |                 isSubmitting={isPending}
81 |                 submitLabel="Създай"
82 |                 onCancel={() => navigate('/admin/properties')}
83 |               />
84 |             </div>
85 |           </div>
86 |         </div>
87 |       </div>
88 |     </div>
89 |   );
90 | } 
91 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/NewUser.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useNavigate } from 'react-router-dom';
  3 | import { useMutation, useQueryClient } from '@tanstack/react-query';
  4 | import { createUser } from '../../services/users';
  5 | import type { CreateUserData } from '../../types/api';
  6 | import { event } from '../../lib/analytics';
  7 | import { XCircleIcon } from '@heroicons/react/24/outline';
  8 | 
  9 | type UserFormProps = {
 10 |   onSubmit: (data: CreateUserData) => void;
 11 |   isSubmitting: boolean;
 12 |   submitLabel: string;
 13 |   onCancel: () => void;
 14 | };
 15 | 
 16 | function UserForm({ onSubmit, isSubmitting, submitLabel, onCancel }: UserFormProps) {
 17 |   const [formData, setFormData] = useState<CreateUserData>({
 18 |     name: '',
 19 |     email: '',
 20 |     password: '',
 21 |     role: 'USER'
 22 |   });
 23 |   const [errors, setErrors] = useState<Record<string, string>>({});
 24 | 
 25 |   const handleSubmit = (e: React.FormEvent) => {
 26 |     e.preventDefault();
 27 |     onSubmit(formData);
 28 |   };
 29 | 
 30 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
 31 |     const { name, value } = e.target;
 32 |     setFormData(prev => ({ ...prev, [name]: value }));
 33 |     if (errors[name]) {
 34 |       setErrors(prev => ({ ...prev, [name]: '' }));
 35 |     }
 36 |   };
 37 | 
 38 |   return (
 39 |     <form className="space-y-6" onSubmit={handleSubmit}>
 40 |       <div>
 41 |         <label htmlFor="name" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 42 |           Име
 43 |         </label>
 44 |         <input
 45 |           type="text"
 46 |           id="name"
 47 |           name="name"
 48 |           value={formData.name}
 49 |           onChange={handleChange}
 50 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 51 |           required
 52 |         />
 53 |       </div>
 54 | 
 55 |       <div>
 56 |         <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 57 |           Имейл
 58 |         </label>
 59 |         <input
 60 |           type="email"
 61 |           id="email"
 62 |           name="email"
 63 |           value={formData.email}
 64 |           onChange={handleChange}
 65 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 66 |           required
 67 |         />
 68 |       </div>
 69 | 
 70 |       <div>
 71 |         <label htmlFor="password" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 72 |           Парола
 73 |         </label>
 74 |         <input
 75 |           type="password"
 76 |           id="password"
 77 |           name="password"
 78 |           value={formData.password}
 79 |           onChange={handleChange}
 80 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 81 |           required
 82 |         />
 83 |       </div>
 84 | 
 85 |       <div>
 86 |         <label htmlFor="role" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 87 |           Роля
 88 |         </label>
 89 |         <select
 90 |           id="role"
 91 |           name="role"
 92 |           value={formData.role}
 93 |           onChange={handleChange}
 94 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 95 |           required
 96 |         >
 97 |           <option value="USER">Потребител</option>
 98 |           <option value="ADMIN">Администратор</option>
 99 |         </select>
100 |       </div>
101 | 
102 |       <div className="flex justify-end space-x-3">
103 |         <button
104 |           type="button"
105 |           onClick={onCancel}
106 |           className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] bg-white dark:bg-[rgb(var(--color-dark-bg))] border border-gray-300 dark:border-[rgb(var(--color-dark-border))] rounded-md shadow-sm hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
107 |         >
108 |           Отказ
109 |         </button>
110 |         <button
111 |           type="submit"
112 |           disabled={isSubmitting}
113 |           className="px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50"
114 |         >
115 |           {submitLabel}
116 |         </button>
117 |       </div>
118 |     </form>
119 |   );
120 | }
121 | 
122 | export default function NewUser() {
123 |   const navigate = useNavigate();
124 |   const queryClient = useQueryClient();
125 | 
126 |   const { mutate, isPending, error } = useMutation({
127 |     mutationFn: (data: CreateUserData) => createUser({ ...data, updatedAt: new Date() }),
128 |     onSuccess: () => {
129 |       queryClient.invalidateQueries({ queryKey: ['users'] });
130 |       navigate('/admin/users');
131 |       
132 |       event({
133 |         action: 'user_create',
134 |         category: 'Admin',
135 |         label: 'Success'
136 |       });
137 |     },
138 |     onError: (error: any) => {
139 |       event({
140 |         action: 'user_create_error',
141 |         category: 'Admin',
142 |         label: error.message || 'Unknown error'
143 |       });
144 |     }
145 |   });
146 | 
147 |   const handleSubmit = async (data: CreateUserData) => {
148 |     mutate(data);
149 |   };
150 | 
151 |   return (
152 |     <div className="px-4 py-6 sm:px-6 lg:px-8">
153 |       <div className="sm:flex sm:items-center">
154 |         <div className="sm:flex-auto">
155 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Нов потребител</h1>
156 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
157 |             Добавете нов потребител в системата
158 |           </p>
159 |         </div>
160 |       </div>
161 | 
162 |       <div className="mt-8">
163 |         <div className="md:grid md:grid-cols-3 md:gap-6">
164 |           <div className="md:col-span-1">
165 |             <div className="px-4 sm:px-0">
166 |               <h3 className="text-lg font-medium leading-6 text-gray-900 dark:text-gray-100">Информация за потребителя</h3>
167 |               <p className="mt-1 text-sm text-gray-600 dark:text-gray-400">
168 |                 Попълнете информацията за потребителя. Всички полета са задължителни.
169 |               </p>
170 |             </div>
171 |           </div>
172 |           <div className="mt-5 md:col-span-2 md:mt-0">
173 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow sm:rounded-md">
174 |               <div className="px-4 py-5 sm:p-6">
175 |                 {error && (
176 |                   <div className="mb-4 p-4 rounded-md bg-red-50 dark:bg-red-900/50">
177 |                     <div className="flex">
178 |                       <div className="flex-shrink-0">
179 |                         <XCircleIcon className="h-5 w-5 text-red-400" aria-hidden="true" />
180 |                       </div>
181 |                       <div className="ml-3">
182 |                         <h3 className="text-sm font-medium text-red-800 dark:text-red-200">
183 |                           Възникна грешка при създаването на потребителя
184 |                         </h3>
185 |                         <div className="mt-2 text-sm text-red-700 dark:text-red-300">
186 |                           {error instanceof Error ? error.message : 'Unknown error'}
187 |                         </div>
188 |                       </div>
189 |                     </div>
190 |                   </div>
191 |                 )}
192 | 
193 |                 <UserForm
194 |                   onSubmit={handleSubmit}
195 |                   isSubmitting={isPending}
196 |                   submitLabel="Създай"
197 |                   onCancel={() => navigate('/admin/users')}
198 |                 />
199 |               </div>
200 |             </div>
201 |           </div>
202 |         </div>
203 |       </div>
204 |     </div>
205 |   );
206 | } 
207 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Properties.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect, useMemo } from 'react';
  2 | import { Link } from 'react-router-dom';
  3 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  4 | import { PencilIcon, TrashIcon, PlusIcon, ArrowLeftIcon, MagnifyingGlassIcon, ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';
  5 | import { getProperties, deleteProperty } from '../../services/propertyService';
  6 | import type { GetPropertiesParams } from '@avalon/shared-types';
  7 | import { event } from '../../lib/analytics';
  8 | import LoadingSpinner from '../../components/LoadingSpinner';
  9 | import { propertyTypeLabels, locationTypeLabels, categoryLabels, currencyLabels } from '../../constants/property';
 10 | import { useDebounce } from '../../hooks/useDebounce';
 11 | 
 12 | function formatPrice(price: number) {
 13 |   return new Intl.NumberFormat('bg-BG', {
 14 |     maximumFractionDigits: 0,
 15 |   }).format(price);
 16 | }
 17 | 
 18 | export default function Properties() {
 19 |   const [currentPage, setCurrentPage] = useState(1);
 20 |   const [searchQuery, setSearchQuery] = useState('');
 21 |   const debouncedSearch = useDebounce(searchQuery, 300);
 22 |   const queryClient = useQueryClient();
 23 | 
 24 |   const filters = useMemo<GetPropertiesParams>(() => ({}), []);
 25 | 
 26 |   const { data, isLoading, error, refetch } = useQuery({
 27 |     queryKey: ['properties', currentPage],
 28 |     queryFn: () => getProperties(filters, currentPage),
 29 |   });
 30 | 
 31 |   const properties = data?.data || [];
 32 |   const totalPages = data?.meta.totalPages || 1;
 33 | 
 34 |   const deleteMutation = useMutation({
 35 |     mutationFn: deleteProperty,
 36 |     onSuccess: () => {
 37 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
 38 |     },
 39 |   });
 40 | 
 41 |   const handleDelete = async (id: string) => {
 42 |     if (window.confirm('Сигурни ли сте, че искате да изтриете този имот?')) {
 43 |       try {
 44 |         await deleteMutation.mutateAsync(id);
 45 |       } catch (error) {
 46 |         console.error('Failed to delete property:', error);
 47 |         alert('Възникна грешка при изтриването на имота');
 48 |       }
 49 |     }
 50 |   };
 51 | 
 52 |   return (
 53 |     <div className="py-6">
 54 |       <div className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
 55 |         <div className="flex justify-between items-center mb-6">
 56 |           <h1 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имоти</h1>
 57 |           <Link
 58 |             to="/admin/properties/new"
 59 |             className="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
 60 |           >
 61 |             <PlusIcon className="w-5 h-5 mr-2" />
 62 |             Добави имот
 63 |           </Link>
 64 |         </div>
 65 | 
 66 |         <div className="mb-6">
 67 |           <div className="relative">
 68 |             <input
 69 |               type="text"
 70 |               value={searchQuery}
 71 |               onChange={(e) => setSearchQuery(e.target.value)}
 72 |               placeholder="Търси по заглавие..."
 73 |               className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 74 |             />
 75 |             <div className="absolute inset-y-0 right-0 flex items-center pr-3">
 76 |               <MagnifyingGlassIcon className="w-5 h-5 text-gray-400" />
 77 |             </div>
 78 |           </div>
 79 |         </div>
 80 | 
 81 |         {isLoading ? (
 82 |           <div className="flex justify-center items-center min-h-[400px]">
 83 |             <LoadingSpinner />
 84 |           </div>
 85 |         ) : error ? (
 86 |           <div className="flex flex-col items-center justify-center min-h-[400px] p-4">
 87 |             <p className="mb-4 text-center text-red-600">
 88 |               {error instanceof Error ? error.message : 'Възникна грешка при зареждането на имотите'}
 89 |             </p>
 90 |             <button
 91 |               onClick={() => refetch()}
 92 |               className="px-4 py-2 text-white bg-red-600 rounded transition-colors hover:bg-red-700"
 93 |             >
 94 |               Опитайте отново
 95 |             </button>
 96 |           </div>
 97 |         ) : properties.length === 0 ? (
 98 |           <div className="p-8 text-center">
 99 |             <h3 className="mb-4 text-lg font-medium text-gray-900">Няма намерени имоти</h3>
100 |             <Link
101 |               to="/admin/properties/new"
102 |               className="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md border border-transparent shadow-sm hover:bg-red-700"
103 |             >
104 |               <PlusIcon className="mr-2 -ml-1 w-5 h-5" aria-hidden="true" />
105 |               Добави нов имот
106 |             </Link>
107 |           </div>
108 |         ) : (
109 |           <div className="overflow-hidden bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-sm sm:rounded-lg">
110 |             <div className="overflow-x-auto">
111 |               <table className="min-w-full divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))]">
112 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
113 |                   <tr>
114 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
115 |                       Снимка
116 |                     </th>
117 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
118 |                       Заглавие
119 |                     </th>
120 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
121 |                       Тип
122 |                     </th>
123 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
124 |                       Локация
125 |                     </th>
126 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
127 |                       Цена
128 |                     </th>
129 |                     <th className="relative py-3.5 pl-3 pr-4 sm:pr-6">
130 |                       <span className="sr-only">Действия</span>
131 |                     </th>
132 |                   </tr>
133 |                 </thead>
134 |                 <tbody className="divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))]">
135 |                   {properties.map((property) => (
136 |                     <tr key={property.id}>
137 |                       <td className="whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6">
138 |                         <div className="h-10 w-10 flex-shrink-0">
139 |                           <img
140 |                             src={property.images?.[0]?.url || '/images/property-placeholder.webp'}
141 |                             alt=""
142 |                             className="h-10 w-10 rounded-full object-cover"
143 |                             onError={(e) => {
144 |                               const target = e.target as HTMLImageElement;
145 |                               target.onerror = null;
146 |                               target.src = '/images/property-placeholder.webp';
147 |                             }}
148 |                           />
149 |                         </div>
150 |                       </td>
151 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
152 |                         <Link
153 |                           to={`/admin/properties/${property.id}/edit`}
154 |                           className="hover:text-primary-600 dark:hover:text-primary-500"
155 |                         >
156 |                           {property.title}
157 |                         </Link>
158 |                       </td>
159 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
160 |                         {propertyTypeLabels[property.type]}
161 |                       </td>
162 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
163 |                         {property.region?.name || property.neighborhood?.name}
164 |                       </td>
165 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
166 |                         {formatPrice(property.price)} {currencyLabels[property.currency]}
167 |                       </td>
168 |                       <td className="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
169 |                         <div className="flex items-center justify-end gap-2">
170 |                           <Link
171 |                             to={`/admin/properties/${property.id}/edit`}
172 |                             className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
173 |                           >
174 |                             <PencilIcon className="h-5 w-5" aria-hidden="true" />
175 |                           </Link>
176 |                           <button
177 |                             onClick={() => handleDelete(property.id)}
178 |                             className="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300"
179 |                           >
180 |                             <TrashIcon className="h-5 w-5" aria-hidden="true" />
181 |                           </button>
182 |                         </div>
183 |                       </td>
184 |                     </tr>
185 |                   ))}
186 |                 </tbody>
187 |               </table>
188 |             </div>
189 |           </div>
190 |         )}
191 | 
192 |         {totalPages > 1 && (
193 |           <div className="mt-4 flex items-center justify-between border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))] pt-4">
194 |             <div className="flex flex-1 justify-between sm:hidden">
195 |               <button
196 |                 onClick={() => setCurrentPage(currentPage - 1)}
197 |                 disabled={currentPage === 1}
198 |                 className="relative inline-flex items-center rounded-md border border-gray-300 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))]"
199 |               >
200 |                 Предишна
201 |               </button>
202 |               <button
203 |                 onClick={() => setCurrentPage(currentPage + 1)}
204 |                 disabled={currentPage === totalPages}
205 |                 className="relative ml-3 inline-flex items-center rounded-md border border-gray-300 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))]"
206 |               >
207 |                 Следваща
208 |               </button>
209 |             </div>
210 |             <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
211 |               <div>
212 |                 <p className="text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
213 |                   Показване на страница <span className="font-medium">{currentPage}</span> от{' '}
214 |                   <span className="font-medium">{totalPages}</span>
215 |                 </p>
216 |               </div>
217 |               <div>
218 |                 <nav className="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
219 |                   <button
220 |                     onClick={() => setCurrentPage(currentPage - 1)}
221 |                     disabled={currentPage === 1}
222 |                     className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))] ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))] focus:z-20 focus:outline-offset-0"
223 |                   >
224 |                     <span className="sr-only">Предишна</span>
225 |                     <ChevronLeftIcon className="h-5 w-5" aria-hidden="true" />
226 |                   </button>
227 |                   <button
228 |                     onClick={() => setCurrentPage(currentPage + 1)}
229 |                     disabled={currentPage === totalPages}
230 |                     className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))] ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))] focus:z-20 focus:outline-offset-0"
231 |                   >
232 |                     <span className="sr-only">Следваща</span>
233 |                     <ChevronRightIcon className="h-5 w-5" aria-hidden="true" />
234 |                   </button>
235 |                 </nav>
236 |               </div>
237 |             </div>
238 |           </div>
239 |         )}
240 |       </div>
241 |     </div>
242 |   );
243 | } 
244 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Users.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  3 | import { PlusIcon } from '@heroicons/react/24/outline';
  4 | import { Link } from 'react-router-dom';
  5 | import { getUsers, deleteUser } from '../../services/users';
  6 | import { event } from '../../lib/analytics';
  7 | import type { User } from '@avalon/shared-types';
  8 | import { PencilIcon, TrashIcon } from '@heroicons/react/24/outline';
  9 | 
 10 | export default function Users() {
 11 |   const [page, setPage] = useState(1);
 12 |   const limit = 10;
 13 | 
 14 |   const queryClient = useQueryClient();
 15 | 
 16 |   const { data, isLoading, isError, error } = useQuery({
 17 |     queryKey: ['users', page],
 18 |     queryFn: () => getUsers(page, limit),
 19 |     // Add staleTime to prevent unnecessary refetches
 20 |     staleTime: 1000 * 60 * 5, // 5 minutes
 21 |   });
 22 | 
 23 |   const deleteMutation = useMutation({
 24 |     mutationFn: deleteUser,
 25 |     onSuccess: () => {
 26 |       event({
 27 |         action: 'delete_user',
 28 |         category: 'users',
 29 |         label: 'User deleted successfully'
 30 |       });
 31 |       queryClient.invalidateQueries({ queryKey: ['users'] });
 32 |     },
 33 |     onError: (error) => {
 34 |       event({
 35 |         action: 'delete_user_error',
 36 |         category: 'users',
 37 |         label: error instanceof Error ? error.message : 'Unknown error'
 38 |       });
 39 |     },
 40 |   });
 41 | 
 42 |   const handleDelete = async (id: string) => {
 43 |     if (window.confirm('Сигурни ли сте, че искате да изтриете този потребител?')) {
 44 |       deleteMutation.mutate(id);
 45 |     }
 46 |   };
 47 | 
 48 |   const handleNewUserClick = () => {
 49 |     event({
 50 |       action: 'user_create_click',
 51 |       category: 'Admin',
 52 |       label: 'New User Button Click'
 53 |     });
 54 |   };
 55 | 
 56 |   // Show loading state
 57 |   if (isLoading || !data) {
 58 |     return (
 59 |       <div className="px-4 sm:px-6 lg:px-8">
 60 |         <div className="sm:flex sm:items-center">
 61 |           <div className="sm:flex-auto">
 62 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 63 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 64 |               Списък с всички потребители в системата
 65 |             </p>
 66 |           </div>
 67 |         </div>
 68 |         <div className="p-4 text-center text-gray-600 dark:text-gray-400">
 69 |           Зареждане на потребители...
 70 |         </div>
 71 |       </div>
 72 |     );
 73 |   }
 74 | 
 75 |   // Show error state
 76 |   if (isError) {
 77 |     return (
 78 |       <div className="px-4 sm:px-6 lg:px-8">
 79 |         <div className="sm:flex sm:items-center">
 80 |           <div className="sm:flex-auto">
 81 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 82 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 83 |               Списък с всички потребители в системата
 84 |             </p>
 85 |           </div>
 86 |         </div>
 87 |         <div className="p-4 text-center text-red-600 dark:text-red-400">
 88 |           Възникна грешка при зареждането на потребителите: {error instanceof Error ? error.message : 'Unknown error'}
 89 |         </div>
 90 |       </div>
 91 |     );
 92 |   }
 93 | 
 94 |   // Show empty state
 95 |   if (!data?.data?.users?.length) {
 96 |     return (
 97 |       <div className="px-4 sm:px-6 lg:px-8">
 98 |         <div className="sm:flex sm:items-center">
 99 |           <div className="sm:flex-auto">
100 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
101 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
102 |               Списък с всички потребители в системата
103 |             </p>
104 |           </div>
105 |           <div className="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
106 |             <Link
107 |               to="new"
108 |               onClick={handleNewUserClick}
109 |               className="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:w-auto"
110 |             >
111 |               <PlusIcon className="w-5 h-5 mr-2 -ml-1" aria-hidden="true" />
112 |               Нов потребител
113 |             </Link>
114 |           </div>
115 |         </div>
116 |         <div className="p-4 text-center text-gray-600 dark:text-gray-400">
117 |           Няма намерени потребители
118 |         </div>
119 |       </div>
120 |     );
121 |   }
122 | 
123 |   // Show users table
124 |   return (
125 |     <div className="px-4 sm:px-6 lg:px-8">
126 |       <div className="sm:flex sm:items-center">
127 |         <div className="sm:flex-auto">
128 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
129 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
130 |             Списък с всички потребители в системата
131 |           </p>
132 |         </div>
133 |         <div className="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
134 |           <Link
135 |             to="new"
136 |             onClick={handleNewUserClick}
137 |             className="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:w-auto"
138 |           >
139 |             <PlusIcon className="w-5 h-5 mr-2 -ml-1" aria-hidden="true" />
140 |             Нов потребител
141 |           </Link>
142 |         </div>
143 |       </div>
144 | 
145 |       <div className="flex flex-col mt-8">
146 |         <div className="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
147 |           <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
148 |             <div className="overflow-hidden shadow ring-1 ring-black/5 dark:ring-[rgb(var(--color-dark-border))] md:rounded-lg">
149 |               <table className="min-w-full divide-y divide-gray-300 dark:divide-[rgb(var(--color-dark-border))]">
150 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
151 |                   <tr>
152 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
153 |                       Име
154 |                     </th>
155 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
156 |                       Имейл
157 |                     </th>
158 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
159 |                       Роля
160 |                     </th>
161 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
162 |                       Дата на регистрация
163 |                     </th>
164 |                     <th scope="col" className="relative py-3.5 pl-3 pr-4 sm:pr-6">
165 |                       <span className="sr-only">Действия</span>
166 |                     </th>
167 |                   </tr>
168 |                 </thead>
169 |                 <tbody className="bg-white divide-y divide-gray-200 dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:divide-[rgb(var(--color-dark-border))]">
170 |                   {data?.data?.users.map((user: User) => (
171 |                     <tr key={user.id}>
172 |                       <td className="px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))] whitespace-nowrap">
173 |                         {user.name}
174 |                       </td>
175 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
176 |                         {user.email}
177 |                       </td>
178 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
179 |                         {user.role === 'ADMIN' ? 'Администратор' : 'Потребител'}
180 |                       </td>
181 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
182 |                         {new Date(user.createdAt).toLocaleDateString('bg-BG')}
183 |                       </td>
184 |                       <td className="relative py-4 pl-3 pr-4 text-sm font-medium text-right whitespace-nowrap sm:pr-6">
185 |                         <div className="flex items-center justify-end gap-2">
186 |                           <Link
187 |                             to={`/admin/users/${user.id}/edit`}
188 |                             className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
189 |                           >
190 |                             <PencilIcon className="w-5 h-5" aria-hidden="true" />
191 |                           </Link>
192 |                           <button
193 |                             onClick={() => handleDelete(user.id)}
194 |                             className="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300"
195 |                           >
196 |                             <TrashIcon className="w-5 h-5" aria-hidden="true" />
197 |                           </button>
198 |                         </div>
199 |                       </td>
200 |                     </tr>
201 |                   ))}
202 |                 </tbody>
203 |               </table>
204 |             </div>
205 |           </div>
206 |         </div>
207 |       </div>
208 |     </div>
209 |   );
210 | } 
211 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/__tests__/Login.test.tsx:
--------------------------------------------------------------------------------
  1 | import { render, screen, fireEvent, waitFor, act } from '@testing-library/react';
  2 | import { vi, describe, it, expect, beforeEach, afterEach } from 'vitest';
  3 | import { BrowserRouter } from 'react-router-dom';
  4 | import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
  5 | import Login from '../Login';
  6 | import { AuthProvider } from '../../../contexts/auth';
  7 | import type { User } from '../../../types/api';
  8 | 
  9 | // Mock the auth service
 10 | vi.mock('../../../services/auth', () => ({
 11 |   login: vi.fn(),
 12 |   getCurrentUser: vi.fn(),
 13 | }));
 14 | 
 15 | // Mock the useNavigate hook
 16 | const mockNavigate = vi.fn();
 17 | vi.mock('react-router-dom', async () => {
 18 |   const actual = await vi.importActual('react-router-dom');
 19 |   return {
 20 |     ...actual,
 21 |     useNavigate: () => mockNavigate,
 22 |   };
 23 | });
 24 | 
 25 | const mockUserData: User = {
 26 |   id: 'test-id',
 27 |   email: 'admin@avalon.bg',
 28 |   name: 'Admin',
 29 |   role: 'ADMIN',
 30 |   createdAt: '2025-01-13T20:16:21.392Z',
 31 | };
 32 | 
 33 | const mockToken = 'mock-jwt-token';
 34 | 
 35 | // Mock localStorage
 36 | const mockStorage: { [key: string]: string } = {};
 37 | const mockLocalStorage = {
 38 |   getItem: vi.fn((key: string) => {
 39 |     console.log('Getting from localStorage:', key, mockStorage[key]);
 40 |     return mockStorage[key] || null;
 41 |   }),
 42 |   setItem: vi.fn((key: string, value: string) => {
 43 |     console.log('Setting in localStorage:', key, value);
 44 |     mockStorage[key] = value;
 45 |   }),
 46 |   removeItem: vi.fn((key: string) => {
 47 |     console.log('Removing from localStorage:', key);
 48 |     delete mockStorage[key];
 49 |   }),
 50 |   clear: vi.fn(() => {
 51 |     console.log('Clearing localStorage');
 52 |     Object.keys(mockStorage).forEach(key => delete mockStorage[key]);
 53 |   }),
 54 |   length: 0,
 55 |   key: vi.fn(),
 56 | };
 57 | Object.defineProperty(window, 'localStorage', {
 58 |   value: mockLocalStorage,
 59 | });
 60 | 
 61 | describe('Login Component', () => {
 62 |   let queryClient: QueryClient;
 63 | 
 64 |   beforeEach(() => {
 65 |     queryClient = new QueryClient({
 66 |       defaultOptions: {
 67 |         queries: {
 68 |           retry: false,
 69 |         },
 70 |       },
 71 |     });
 72 |     // Clear localStorage and reset user state before each test
 73 |     mockLocalStorage.clear();
 74 |     // Reset all mocks
 75 |     vi.clearAllMocks();
 76 |     console.log('Test setup complete - localStorage cleared');
 77 |   });
 78 | 
 79 |   afterEach(() => {
 80 |     mockLocalStorage.clear();
 81 |     vi.clearAllMocks();
 82 |     console.log('Test cleanup complete');
 83 |   });
 84 | 
 85 |   const renderLogin = async () => {
 86 |     console.log('Rendering Login component');
 87 |     let component: ReturnType<typeof render>;
 88 |     await act(async () => {
 89 |       component = render(
 90 |         <BrowserRouter>
 91 |           <QueryClientProvider client={queryClient}>
 92 |             <AuthProvider>
 93 |               <Login />
 94 |             </AuthProvider>
 95 |           </QueryClientProvider>
 96 |         </BrowserRouter>
 97 |       );
 98 |     });
 99 |     return component!;
100 |   };
101 | 
102 |   it('should successfully log in and persist user data', async () => {
103 |     const { login } = await import('../../../services/auth');
104 |     console.log('Setting up login test');
105 |     
106 |     // Mock successful login response
107 |     (login as any).mockResolvedValueOnce({
108 |       user: mockUserData,
109 |       token: mockToken,
110 |     });
111 | 
112 |     await renderLogin();
113 | 
114 |     // Fill in the login form
115 |     const emailInput = screen.getByLabelText(/имейл/i);
116 |     const passwordInput = screen.getByLabelText(/парола/i);
117 |     const submitButton = screen.getByRole('button', { name: /вход/i });
118 | 
119 |     fireEvent.change(emailInput, { target: { value: 'admin@avalon.bg' } });
120 |     fireEvent.change(passwordInput, { target: { value: 'password123' } });
121 |     console.log('Submitting login form');
122 |     
123 |     await act(async () => {
124 |       fireEvent.submit(submitButton);
125 |     });
126 | 
127 |     // Wait for the login to complete and check all effects
128 |     await waitFor(() => {
129 |       expect(login).toHaveBeenCalledWith({
130 |         email: 'admin@avalon.bg',
131 |         password: 'password123',
132 |       });
133 |       expect(mockLocalStorage.setItem).toHaveBeenCalledWith('token', mockToken);
134 |       expect(mockNavigate).toHaveBeenCalledWith('/admin');
135 |     });
136 |     console.log('Login test complete');
137 |   });
138 | 
139 |   it('should persist login state after page refresh', async () => {
140 |     const { getCurrentUser } = await import('../../../services/auth');
141 |     console.log('Setting up persistence test');
142 |     
143 |     // Set up initial auth state with token
144 |     mockStorage['token'] = mockToken;
145 |     
146 |     // Set window.location.pathname to /admin/login
147 |     window.location.pathname = '/admin/login';
148 |     
149 |     // Mock getCurrentUser to return user data in the format expected by the auth context
150 |     (getCurrentUser as any).mockImplementation(async () => {
151 |       console.log('getCurrentUser called with token:', mockStorage['token']);
152 |       if (!mockStorage['token']) {
153 |         throw new Error('No token found');
154 |       }
155 |       // Return the user data directly as the auth context expects
156 |       return mockUserData;
157 |     });
158 |     
159 |     console.log('Initial state set:', { token: mockToken, user: mockUserData });
160 | 
161 |     // Render component which should trigger getCurrentUser
162 |     const { container } = await renderLogin();
163 | 
164 |     // Wait for getCurrentUser to be called and return data
165 |     await waitFor(() => {
166 |       expect(getCurrentUser).toHaveBeenCalled();
167 |     });
168 | 
169 |     // Wait for user state to be updated and navigation to occur
170 |     await waitFor(() => {
171 |       const authProvider = container.querySelector('[data-testid="auth-provider"]');
172 |       expect(authProvider).toHaveAttribute('data-user', JSON.stringify({ user: mockUserData }));
173 |       expect(mockNavigate).toHaveBeenCalledWith('/admin');
174 |     }, { timeout: 3000 });
175 | 
176 |     // Verify token remains in localStorage
177 |     expect(mockStorage['token']).toBe(mockToken);
178 |     
179 |     console.log('Persistence test complete');
180 |   });
181 | 
182 |   it('should handle login failure', async () => {
183 |     const { login } = await import('../../../services/auth');
184 |     console.log('Setting up failure test');
185 |     
186 |     // Mock login failure
187 |     (login as any).mockRejectedValueOnce(new Error('Invalid credentials'));
188 | 
189 |     await renderLogin();
190 | 
191 |     // Fill in the login form
192 |     const emailInput = screen.getByLabelText(/имейл/i);
193 |     const passwordInput = screen.getByLabelText(/парола/i);
194 |     const submitButton = screen.getByRole('button', { name: /вход/i });
195 | 
196 |     fireEvent.change(emailInput, { target: { value: 'wrong@email.com' } });
197 |     fireEvent.change(passwordInput, { target: { value: 'wrongpass' } });
198 |     console.log('Submitting invalid credentials');
199 |     
200 |     await act(async () => {
201 |       fireEvent.submit(submitButton);
202 |     });
203 | 
204 |     // Wait for error messages to appear
205 |     await waitFor(() => {
206 |       const errorMessages = screen.getAllByText(/невалиден имейл или парола/i);
207 |       expect(errorMessages).toHaveLength(2);
208 |       expect(mockNavigate).not.toHaveBeenCalled();
209 |       expect(mockLocalStorage.getItem('token')).toBeNull();
210 |     });
211 |     console.log('Failure test complete');
212 |   });
213 | 
214 |   it('should validate form inputs before submission', async () => {
215 |     const { login } = await import('../../../services/auth');
216 |     console.log('Setting up validation test');
217 |     await renderLogin();
218 | 
219 |     const submitButton = screen.getByRole('button', { name: /вход/i });
220 | 
221 |     // Try to submit empty form
222 |     console.log('Submitting empty form');
223 |     await act(async () => {
224 |       fireEvent.submit(submitButton);
225 |     });
226 | 
227 |     // Check for validation messages
228 |     const emailInput = screen.getByLabelText(/имейл/i);
229 |     fireEvent.change(emailInput, { target: { value: 'invalid-email' } });
230 |     console.log('Entered invalid email');
231 |     
232 |     await waitFor(() => {
233 |       expect(screen.getByText('Невалиден имейл адрес')).toBeInTheDocument();
234 |       expect(login).not.toHaveBeenCalled();
235 |     });
236 |     console.log('Validation test complete');
237 |   });
238 | }); 
239 | 


--------------------------------------------------------------------------------
/apps/web/src/services/auth.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { ApiResponse, AuthResponse, User } from '../types/api';
 3 | 
 4 | export interface LoginData {
 5 |   email: string;
 6 |   password: string;
 7 | }
 8 | 
 9 | export interface RegisterData {
10 |   name: string;
11 |   email: string;
12 |   password: string;
13 | }
14 | 
15 | export const login = async (data: LoginData): Promise<AuthResponse> => {
16 |   const response = await api.post<{ user: User; token: string }>('/auth/login', data);
17 |   console.log('Raw API Response:', response);
18 |   console.log('Response data:', response.data);
19 |   return response.data;
20 | };
21 | 
22 | export const register = async (data: RegisterData): Promise<AuthResponse> => {
23 |   const response = await api.post<ApiResponse<AuthResponse>>('/auth/register', data);
24 |   return response.data.data;
25 | };
26 | 
27 | export const getCurrentUser = async (): Promise<User> => {
28 |   try {
29 |     const response = await api.get<{ user: User }>('/auth/me');
30 |     console.log('Get current user response:', response);
31 |     return response.data.user;
32 |   } catch (error) {
33 |     console.error('Failed to get current user:', error);
34 |     throw error;
35 |   }
36 | };
37 | 
38 | export const logout = () => {
39 |   localStorage.removeItem('token');
40 |   window.location.href = '/admin/login';
41 | }; 
42 | 


--------------------------------------------------------------------------------
/apps/web/src/services/contact.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { ApiResponse, ContactMessage, PaginatedResponse } from '../types/api';
 3 | 
 4 | export interface ContactFormData {
 5 |   name: string;
 6 |   email: string;
 7 |   message: string;
 8 | }
 9 | 
10 | export interface MessageFilters {
11 |   page?: number;
12 |   limit?: number;
13 | }
14 | 
15 | export const submitContactForm = async (data: ContactFormData): Promise<ContactMessage> => {
16 |   const response = await api.post<ApiResponse<{ message: ContactMessage }>>('/contact', data);
17 |   return response.data.data.message;
18 | };
19 | 
20 | export const getMessages = async (filters: MessageFilters = {}): Promise<PaginatedResponse<ContactMessage>> => {
21 |   const params = new URLSearchParams();
22 |   if (filters.page) params.append('page', filters.page.toString());
23 |   if (filters.limit) params.append('limit', filters.limit.toString());
24 | 
25 |   const response = await api.get<ApiResponse<PaginatedResponse<ContactMessage>>>(`/contact/messages?${params}`);
26 |   return response.data.data;
27 | };
28 | 
29 | export const markMessageAsRead = async (id: string): Promise<ContactMessage> => {
30 |   const response = await api.patch<ApiResponse<{ message: ContactMessage }>>(`/contact/messages/${id}/read`);
31 |   return response.data.data.message;
32 | };
33 | 
34 | export const deleteMessage = async (id: string): Promise<void> => {
35 |   await api.delete<ApiResponse<null>>(`/contact/messages/${id}`);
36 | }; 
37 | 


--------------------------------------------------------------------------------
/apps/web/src/services/locationService.ts:
--------------------------------------------------------------------------------
 1 | import { ApiResponse } from '../types/api';
 2 | import api from '../lib/api';
 3 | 
 4 | export interface Region {
 5 |   id: number;
 6 |   name: string;
 7 | }
 8 | 
 9 | export interface Neighborhood {
10 |   id: number;
11 |   name: string;
12 | }
13 | 
14 | export interface Feature {
15 |   id: number;
16 |   name: string;
17 |   type: 'INFRASTRUCTURE' | 'BUILDING';
18 | }
19 | 
20 | type RegionsData = {
21 |   regions: Region[];
22 | }
23 | 
24 | type NeighborhoodsData = {
25 |   neighborhoods: Neighborhood[];
26 | }
27 | 
28 | type FeaturesData = {
29 |   features: Feature[];
30 | }
31 | 
32 | export async function getRegions(): Promise<Region[]> {
33 |   try {
34 |     const { data } = await api.get<RegionsData>('/locations/regions');
35 |     return data.regions;
36 |   } catch (error) {
37 |     console.error('Error fetching regions:', error);
38 |     return [];
39 |   }
40 | }
41 | 
42 | export async function getNeighborhoods(): Promise<Neighborhood[]> {
43 |   try {
44 |     const { data } = await api.get<NeighborhoodsData>('/locations/neighborhoods');
45 |     return data.neighborhoods;
46 |   } catch (error) {
47 |     console.error('Error fetching neighborhoods:', error);
48 |     return [];
49 |   }
50 | }
51 | 
52 | export async function getFeatures(): Promise<Feature[]> {
53 |   try {
54 |     const { data } = await api.get<FeaturesData>('/locations/features');
55 |     return data.features;
56 |   } catch (error) {
57 |     console.error('Error fetching features:', error);
58 |     return [];
59 |   }
60 | } 
61 | 


--------------------------------------------------------------------------------
/apps/web/src/services/messages.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { ApiSuccessResponse, ContactMessage, ContactMessageResponse, ContactMessagesResponse } from '@avalon/shared-types';
 3 | 
 4 | export async function getMessages(page = 1, limit = 10) {
 5 |   const response = await api.get<ApiSuccessResponse<ContactMessagesResponse>>(`/contact/messages?page=${page}&limit=${limit}`);
 6 |   return response;
 7 | }
 8 | 
 9 | export async function markMessageAsRead(id: string) {
10 |   const response = await api.patch<ApiSuccessResponse<ContactMessageResponse>>(`/contact/messages/${id}/read`);
11 |   return response;
12 | }
13 | 
14 | export async function deleteMessage(id: string) {
15 |   const response = await api.delete<ApiSuccessResponse<null>>(`/contact/messages/${id}`);
16 |   return response;
17 | } 
18 | 


--------------------------------------------------------------------------------
/apps/web/src/services/properties.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { Property, CreatePropertyData, PropertiesResponse, PropertyResponse } from '../types/api';
 3 | 
 4 | export async function getProperties(page: number, limit: number): Promise<PropertiesResponse> {
 5 |   const response = await api.get(`/properties?page=${page}&limit=${limit}`);
 6 |   return response.data;
 7 | }
 8 | 
 9 | export async function getProperty(id: string): Promise<Property> {
10 |   const response = await api.get(`/properties/${id}`);
11 |   return response.data.property;
12 | }
13 | 
14 | export async function createProperty(data: FormData): Promise<Property> {
15 |   const response = await api.post('/properties', data, {
16 |     headers: {
17 |       'Content-Type': 'multipart/form-data',
18 |     },
19 |   });
20 |   return response.data.property;
21 | }
22 | 
23 | export async function updateProperty(id: string, data: FormData): Promise<Property> {
24 |   const response = await api.patch(`/properties/${id}`, data, {
25 |     headers: {
26 |       'Content-Type': 'multipart/form-data',
27 |     },
28 |   });
29 |   return response.data.property;
30 | }
31 | 
32 | export async function deleteProperty(id: string): Promise<void> {
33 |   await api.delete(`/properties/${id}`);
34 | } 
35 | 


--------------------------------------------------------------------------------
/apps/web/src/services/propertyService.ts:
--------------------------------------------------------------------------------
  1 | import type {
  2 |   Property,
  3 |   PropertyResponse,
  4 |   PropertiesResponse,
  5 |   GetPropertiesParams,
  6 |   PropertyType,
  7 |   PropertyCategory,
  8 |   LocationType,
  9 |   Currency
 10 | } from '@avalon/shared-types';
 11 | 
 12 | const API_URL = import.meta.env.VITE_API_URL;
 13 | 
 14 | export type { Property, PropertyResponse, PropertiesResponse, GetPropertiesParams, PropertyType, PropertyCategory, LocationType, Currency };
 15 | 
 16 | export async function getProperties(
 17 |   filters: GetPropertiesParams = {},
 18 |   page = 1,
 19 |   pageSize = 9
 20 | ): Promise<PropertiesResponse> {
 21 |   const params = new URLSearchParams();
 22 |   
 23 |   // Add filters to query params
 24 |   if (filters.type) params.append('type', filters.type);
 25 |   if (filters.min_price) params.append('min_price', filters.min_price);
 26 |   if (filters.max_price) params.append('max_price', filters.max_price);
 27 |   if (filters.min_area) params.append('min_area', filters.min_area);
 28 |   if (filters.max_area) params.append('max_area', filters.max_area);
 29 |   if (filters.category) params.append('category', filters.category);
 30 |   if (filters.location_type) params.append('location_type', filters.location_type);
 31 |   if (filters.construction_type) params.append('construction_type', filters.construction_type);
 32 |   if (filters.furnishing) params.append('furnishing', filters.furnishing);
 33 |   if (filters.featured) params.append('featured', filters.featured.toString());
 34 |   
 35 |   // Add pagination params
 36 |   params.append('page', page.toString());
 37 |   params.append('limit', pageSize.toString());
 38 | 
 39 |   try {
 40 |     const response = await fetch(`${API_URL}/properties?${params.toString()}`);
 41 |     if (!response.ok) {
 42 |       throw new Error('Failed to fetch properties');
 43 |     }
 44 |     const data = await response.json();
 45 |     return data.data;
 46 |   } catch (error) {
 47 |     console.error('Error fetching properties:', error);
 48 |     throw error;
 49 |   }
 50 | }
 51 | 
 52 | export async function getFeaturedProperties(): Promise<Property[]> {
 53 |   try {
 54 |     const response = await fetch(`${API_URL}/properties/featured`);
 55 |     if (!response.ok) {
 56 |       throw new Error('Failed to fetch featured properties');
 57 |     }
 58 |     const data = await response.json();
 59 |     return data.data.data;
 60 |   } catch (error) {
 61 |     console.error('Error fetching featured properties:', error);
 62 |     throw error;
 63 |   }
 64 | }
 65 | 
 66 | export async function getPropertyById(id: string): Promise<Property> {
 67 |   if (!id) {
 68 |     throw new Error('Invalid property ID');
 69 |   }
 70 | 
 71 |   try {
 72 |     const response = await fetch(`${API_URL}/properties/${id}`);
 73 |     const data = await response.json();
 74 | 
 75 |     if (!response.ok) {
 76 |       throw new Error(data.message || 'Failed to fetch property');
 77 |     }
 78 | 
 79 |     if (data.status === 'error') {
 80 |       throw new Error(data.message);
 81 |     }
 82 | 
 83 |     if (!data.data?.property) {
 84 |       throw new Error('Property not found');
 85 |     }
 86 | 
 87 |     return data.data.property;
 88 |   } catch (error) {
 89 |     console.error('Failed to fetch property:', error);
 90 |     throw error instanceof Error ? error : new Error('Failed to fetch property details');
 91 |   }
 92 | }
 93 | 
 94 | export async function deleteProperty(id: string): Promise<void> {
 95 |   if (!id) {
 96 |     throw new Error('Invalid property ID');
 97 |   }
 98 | 
 99 |   try {
100 |     const response = await fetch(`${API_URL}/properties/${id}`, {
101 |       method: 'DELETE',
102 |       headers: {
103 |         'Content-Type': 'application/json',
104 |       },
105 |     });
106 | 
107 |     if (!response.ok) {
108 |       const data = await response.json();
109 |       throw new Error(data.message || 'Failed to delete property');
110 |     }
111 |   } catch (error) {
112 |     console.error('Failed to delete property:', error);
113 |     throw error instanceof Error ? error : new Error('Failed to delete property');
114 |   }
115 | } 
116 | 


--------------------------------------------------------------------------------
/apps/web/src/services/users.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { User } from '@avalon/shared-types';
 3 | 
 4 | // The shape of data returned by the API
 5 | interface UsersResponse {
 6 |   users: User[];
 7 |   total: number;
 8 |   page: number;
 9 |   pages: number;
10 | }
11 | 
12 | interface UserResponse {
13 |   user: User;
14 | }
15 | 
16 | export async function getUsers(page: number, limit: number) {
17 |   // The axios interceptor transforms response to be the data property from the API response
18 |   return api.get<UsersResponse>(`/admin/users?page=${page}&limit=${limit}`);
19 | }
20 | 
21 | export async function getUser(id: string): Promise<User> {
22 |   const response = await api.get<UserResponse>(`/admin/users/${id}`);
23 |   return response.data.user;
24 | }
25 | 
26 | export async function createUser(data: Omit<User, 'id' | 'createdAt'>): Promise<User> {
27 |   const response = await api.post<UserResponse>('/admin/users', data);
28 |   return response.data.user;
29 | }
30 | 
31 | export async function updateUser(id: string, data: Partial<Omit<User, 'id' | 'createdAt'>>): Promise<User> {
32 |   const response = await api.patch<UserResponse>(`/admin/users/${id}`, data);
33 |   return response.data.user;
34 | }
35 | 
36 | export async function deleteUser(id: string): Promise<void> {
37 |   await api.delete(`/admin/users/${id}`);
38 | } 
39 | 


--------------------------------------------------------------------------------
/apps/web/src/test/setup.ts:
--------------------------------------------------------------------------------
 1 | import '@testing-library/jest-dom';
 2 | import { vi } from 'vitest';
 3 | 
 4 | // Mock localStorage
 5 | const localStorageMock = {
 6 |   getItem: vi.fn(),
 7 |   setItem: vi.fn(),
 8 |   removeItem: vi.fn(),
 9 |   clear: vi.fn(),
10 |   length: 0,
11 |   key: vi.fn(),
12 | } as Storage;
13 | 
14 | global.localStorage = localStorageMock;
15 | 
16 | // Mock window.location
17 | Object.defineProperty(window, 'location', {
18 |   value: {
19 |     href: '',
20 |     assign: vi.fn(),
21 |     replace: vi.fn(),
22 |     reload: vi.fn(),
23 |     toString: vi.fn(),
24 |   },
25 |   writable: true,
26 | }); 
27 | 


--------------------------------------------------------------------------------
/apps/web/src/types/api.ts:
--------------------------------------------------------------------------------
 1 | export {
 2 |   type ApiResponse,
 3 |   type ApiSuccessResponse,
 4 |   type ApiErrorResponse,
 5 |   type User,
 6 |   type AuthResponse,
 7 |   type Property,
 8 |   type CreatePropertyInput as CreatePropertyData,
 9 |   type PropertyResponse,
10 |   type PropertiesResponse,
11 |   type Image,
12 |   type ContactInfo,
13 |   type ContactMessage,
14 |   type PaginatedResponse,
15 |   type CreateContactMessageInput as ContactFormData,
16 |   type CreateUserInput as CreateUserData,
17 |   type CreatePropertyInput as PropertyFormData
18 | } from '@avalon/shared-types'; 
19 | 


--------------------------------------------------------------------------------
/apps/web/src/vite-env.d.ts:
--------------------------------------------------------------------------------
1 | /// <reference types="vite/client" />
2 | 


--------------------------------------------------------------------------------
/apps/web/tailwind.config.js:
--------------------------------------------------------------------------------
 1 | /** @type {import('tailwindcss').Config} */
 2 | export default {
 3 |   content: [
 4 |     "./index.html",
 5 |     "./src/**/*.{js,ts,jsx,tsx}",
 6 |     "./src/components/**/*.{js,ts,jsx,tsx}",
 7 |     "./src/pages/**/*.{js,ts,jsx,tsx}",
 8 |     "./src/layout/**/*.{js,ts,jsx,tsx}"
 9 |   ],
10 |   darkMode: "class",
11 |   theme: {
12 |     extend: {
13 |       colors: {
14 |         primary: {
15 |           50: "rgb(var(--color-primary-50) / <alpha-value>)",
16 |           100: "rgb(var(--color-primary-100) / <alpha-value>)",
17 |           200: "rgb(var(--color-primary-200) / <alpha-value>)",
18 |           300: "rgb(var(--color-primary-300) / <alpha-value>)",
19 |           400: "rgb(var(--color-primary-400) / <alpha-value>)",
20 |           500: "rgb(var(--color-primary-500) / <alpha-value>)",
21 |           600: "rgb(var(--color-primary-600) / <alpha-value>)",
22 |           700: "rgb(var(--color-primary-700) / <alpha-value>)",
23 |           800: "rgb(var(--color-primary-800) / <alpha-value>)",
24 |           900: "rgb(var(--color-primary-900) / <alpha-value>)",
25 |           950: "rgb(var(--color-primary-950) / <alpha-value>)"
26 |         }
27 |       },
28 |       fontFamily: {
29 |         sans: ["Inter var", "system-ui", "sans-serif"]
30 |       }
31 |     }
32 |   },
33 |   plugins: [require("@tailwindcss/forms"), require("@tailwindcss/aspect-ratio")]
34 | };
35 | 


--------------------------------------------------------------------------------
/apps/web/tsconfig.app.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
 4 |     "target": "ES2020",
 5 |     "useDefineForClassFields": true,
 6 |     "lib": ["ES2020", "DOM", "DOM.Iterable"],
 7 |     "module": "ESNext",
 8 |     "skipLibCheck": true,
 9 | 
10 |     /* Bundler mode */
11 |     "moduleResolution": "bundler",
12 |     "allowImportingTsExtensions": true,
13 |     "isolatedModules": true,
14 |     "moduleDetection": "force",
15 |     "noEmit": true,
16 |     "jsx": "react-jsx",
17 | 
18 |     /* Linting */
19 |     "strict": true,
20 |     "noUnusedLocals": true,
21 |     "noUnusedParameters": true,
22 |     "noFallthroughCasesInSwitch": true,
23 |     "noUncheckedSideEffectImports": true
24 |   },
25 |   "include": ["src"]
26 | }
27 | 


--------------------------------------------------------------------------------
/apps/web/tsconfig.json:
--------------------------------------------------------------------------------
1 | {
2 |   "files": [],
3 |   "references": [
4 |     { "path": "./tsconfig.app.json" },
5 |     { "path": "./tsconfig.node.json" }
6 |   ]
7 | }
8 | 


--------------------------------------------------------------------------------
/apps/web/tsconfig.node.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
 4 |     "target": "ES2022",
 5 |     "lib": ["ES2023"],
 6 |     "module": "ESNext",
 7 |     "skipLibCheck": true,
 8 | 
 9 |     /* Bundler mode */
10 |     "moduleResolution": "bundler",
11 |     "allowImportingTsExtensions": true,
12 |     "isolatedModules": true,
13 |     "moduleDetection": "force",
14 |     "noEmit": true,
15 | 
16 |     /* Linting */
17 |     "strict": true,
18 |     "noUnusedLocals": true,
19 |     "noUnusedParameters": true,
20 |     "noFallthroughCasesInSwitch": true,
21 |     "noUncheckedSideEffectImports": true
22 |   },
23 |   "include": ["vite.config.ts"]
24 | }
25 | 


--------------------------------------------------------------------------------
/apps/web/vite.config.ts:
--------------------------------------------------------------------------------
 1 | import { defineConfig } from 'vite'
 2 | import react from '@vitejs/plugin-react-swc'
 3 | import path from 'path'
 4 | 
 5 | // https://vitejs.dev/config/
 6 | export default defineConfig({
 7 |   plugins: [react()],
 8 |   css: {
 9 |     postcss: './postcss.config.js',
10 |   },
11 |   resolve: {
12 |     alias: {
13 |       '@': path.resolve(__dirname, './src'),
14 |     },
15 |   },
16 | })
17 | 


--------------------------------------------------------------------------------
/apps/web/vitest.config.ts:
--------------------------------------------------------------------------------
 1 | /// <reference types="vitest" />
 2 | /// <reference types="vite/client" />
 3 | 
 4 | import { defineConfig } from 'vitest/config';
 5 | import react from '@vitejs/plugin-react';
 6 | 
 7 | export default defineConfig({
 8 |   plugins: [react()],
 9 |   test: {
10 |     globals: true,
11 |     environment: 'happy-dom',
12 |     setupFiles: ['./src/test/setup.ts'],
13 |     include: ['**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
14 |     coverage: {
15 |       provider: 'v8',
16 |       reporter: ['text', 'json', 'html'],
17 |     },
18 |   },
19 | }); 
20 | 


--------------------------------------------------------------------------------
/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "avalon-real-estate",
 3 |   "version": "1.0.0",
 4 |   "private": true,
 5 |   "scripts": {
 6 |     "dev": "turbo run dev",
 7 |     "build": "turbo run build",
 8 |     "lint": "turbo run lint",
 9 |     "format": "prettier --write \"**/*.{ts,tsx,md}\""
10 |   },
11 |   "devDependencies": {
12 |     "@typescript-eslint/eslint-plugin": "^6.19.0",
13 |     "@typescript-eslint/parser": "^6.19.0",
14 |     "eslint": "^8.56.0",
15 |     "eslint-config-prettier": "^9.1.0",
16 |     "prettier": "^3.2.4",
17 |     "turbo": "^1.11.3",
18 |     "typescript": "^5.3.3"
19 |   },
20 |   "engines": {
21 |     "node": ">=18.0.0"
22 |   },
23 |   "packageManager": "pnpm@8.14.1"
24 | }
25 | 


--------------------------------------------------------------------------------
/packages/shared-types/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "@avalon/shared-types",
 3 |   "version": "1.0.0",
 4 |   "private": true,
 5 |   "type": "module",
 6 |   "main": "./dist/index.js",
 7 |   "module": "./dist/index.js",
 8 |   "types": "./dist/index.d.ts",
 9 |   "scripts": {
10 |     "build": "tsup",
11 |     "dev": "tsup --watch",
12 |     "clean": "rm -rf dist"
13 |   },
14 |   "devDependencies": {
15 |     "tsup": "^8.0.0",
16 |     "typescript": "^5.4.2"
17 |   }
18 | }
19 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/admin/index.ts:
--------------------------------------------------------------------------------
1 | export interface AdminStatsResponse {
2 |   properties: number;
3 |   messages: number;
4 |   users: number;
5 | } 
6 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/auth/index.ts:
--------------------------------------------------------------------------------
 1 | import type { User } from '../user';
 2 | 
 3 | export interface RegisterInput {
 4 |   name: string;
 5 |   email: string;
 6 |   password: string;
 7 |   passwordConfirm: string;
 8 | }
 9 | 
10 | export interface LoginInput {
11 |   email: string;
12 |   password: string;
13 | }
14 | 
15 | export interface AuthResponse {
16 |   user: User;
17 |   token: string;
18 | }
19 | 
20 | export interface MeResponse {
21 |   user: User;
22 | } 
23 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/common/api.ts:
--------------------------------------------------------------------------------
 1 | /**
 2 |  * Standard API success response
 3 |  */
 4 | export interface ApiSuccessResponse<T> {
 5 |   status: 'success';
 6 |   data: T;
 7 | }
 8 | 
 9 | /**
10 |  * Standard API error response
11 |  */
12 | export interface ApiErrorResponse {
13 |   status: 'error';
14 |   message: string;
15 |   code?: string;
16 |   errors?: Record<string, string[]>;
17 | }
18 | 
19 | /**
20 |  * Union type for all API responses
21 |  */
22 | export type ApiResponse<T> = ApiSuccessResponse<T> | ApiErrorResponse;
23 | 
24 | /**
25 |  * Common error codes
26 |  */
27 | export enum ApiErrorCode {
28 |   VALIDATION_ERROR = 'VALIDATION_ERROR',
29 |   NOT_FOUND = 'NOT_FOUND',
30 |   UNAUTHORIZED = 'UNAUTHORIZED',
31 |   FORBIDDEN = 'FORBIDDEN',
32 |   INTERNAL_ERROR = 'INTERNAL_ERROR'
33 | } 
34 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/common/pagination.ts:
--------------------------------------------------------------------------------
 1 | /**
 2 |  * Common pagination parameters for requests
 3 |  */
 4 | export interface PaginationParams {
 5 |   page?: number;
 6 |   pageSize?: number;
 7 | }
 8 | 
 9 | /**
10 |  * Common pagination metadata for responses
11 |  */
12 | export interface PaginationMeta {
13 |   total: number;
14 |   page: number;
15 |   pageSize: number;
16 |   totalPages: number;
17 |   hasNextPage: boolean;
18 |   hasPreviousPage: boolean;
19 | }
20 | 
21 | /**
22 |  * Base interface for paginated responses
23 |  */
24 | export interface PaginatedResponse<T> {
25 |   data: T[];
26 |   meta: PaginationMeta;
27 | } 
28 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/contact/index.ts:
--------------------------------------------------------------------------------
 1 | import { PaginationParams, PaginatedResponse } from '../common/pagination';
 2 | 
 3 | /**
 4 |  * Contact message
 5 |  */
 6 | export interface ContactMessage {
 7 |   id: string;
 8 |   name: string;
 9 |   email: string;
10 |   message: string;
11 |   isRead: boolean;
12 |   createdAt: string;
13 |   updatedAt: string;
14 | }
15 | 
16 | /**
17 |  * Contact message creation input
18 |  */
19 | export interface CreateContactMessageInput {
20 |   name: string;
21 |   email: string;
22 |   message: string;
23 | }
24 | 
25 | /**
26 |  * Contact message response
27 |  */
28 | export interface ContactMessageResponse {
29 |   message: ContactMessage;
30 | }
31 | 
32 | /**
33 |  * Contact messages list response
34 |  */
35 | export interface ContactMessagesResponse extends PaginatedResponse<ContactMessage> {} 
36 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/index.ts:
--------------------------------------------------------------------------------
 1 | // Common exports
 2 | export * from './common/api';
 3 | export * from './common/pagination';
 4 | 
 5 | // Location exports
 6 | export type {
 7 |   Region,
 8 |   Neighborhood,
 9 |   Location,
10 |   Feature,
11 |   CreateLocationInput,
12 |   CreateFeatureInput,
13 |   RegionResponse,
14 |   RegionsResponse,
15 |   NeighborhoodResponse,
16 |   NeighborhoodsResponse,
17 |   FeatureResponse,
18 |   FeaturesResponse
19 | } from './location';
20 | export { FeatureType } from './location';
21 | 
22 | // Property exports
23 | export * from './property/enums';
24 | export type {
25 |   ContactInfo,
26 |   Image,
27 |   Property,
28 |   CreatePropertyInput,
29 |   UpdatePropertyInput
30 | } from './property/base';
31 | export type { GetPropertiesParams } from './property/requests';
32 | export type { PropertyResponse, PropertiesResponse } from './property/responses';
33 | 
34 | // Contact exports
35 | export * from './contact';
36 | 
37 | // User exports
38 | export { UserRole } from './user';
39 | export type {
40 |   User,
41 |   CreateUserInput,
42 |   UpdateUserInput,
43 |   UserResponse,
44 |   UsersResponse
45 | } from './user';
46 | 
47 | // Admin exports
48 | export * from './admin';
49 | 
50 | // Auth exports
51 | export type {
52 |   RegisterInput,
53 |   LoginInput,
54 |   AuthResponse,
55 |   MeResponse
56 | } from './auth'; 
57 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/location/index.ts:
--------------------------------------------------------------------------------
 1 | import { PaginatedResponse } from '../common/pagination';
 2 | 
 3 | /**
 4 |  * Feature type
 5 |  */
 6 | export enum FeatureType {
 7 |   INFRASTRUCTURE = 'INFRASTRUCTURE',
 8 |   BUILDING = 'BUILDING'
 9 | }
10 | 
11 | /**
12 |  * Base location interface
13 |  */
14 | export interface Location {
15 |   id: number;
16 |   name: string;
17 |   createdAt: string;
18 |   updatedAt: string;
19 | }
20 | 
21 | /**
22 |  * Region interface
23 |  */
24 | export interface Region extends Location {}
25 | 
26 | /**
27 |  * Neighborhood interface
28 |  */
29 | export interface Neighborhood extends Location {}
30 | 
31 | /**
32 |  * Feature interface
33 |  */
34 | export interface Feature {
35 |   id: number;
36 |   name: string;
37 |   type: FeatureType;
38 |   createdAt: string;
39 |   updatedAt: string;
40 | }
41 | 
42 | /**
43 |  * Location creation input
44 |  */
45 | export interface CreateLocationInput {
46 |   name: string;
47 | }
48 | 
49 | /**
50 |  * Feature creation input
51 |  */
52 | export interface CreateFeatureInput {
53 |   name: string;
54 |   type: FeatureType;
55 | }
56 | 
57 | /**
58 |  * Region response
59 |  */
60 | export interface RegionResponse {
61 |   region: Region;
62 | }
63 | 
64 | /**
65 |  * Regions list response
66 |  */
67 | export interface RegionsResponse {
68 |   regions: Region[];
69 | }
70 | 
71 | /**
72 |  * Neighborhood response
73 |  */
74 | export interface NeighborhoodResponse {
75 |   neighborhood: Neighborhood;
76 | }
77 | 
78 | /**
79 |  * Neighborhoods list response
80 |  */
81 | export interface NeighborhoodsResponse {
82 |   neighborhoods: Neighborhood[];
83 | }
84 | 
85 | /**
86 |  * Feature response
87 |  */
88 | export interface FeatureResponse {
89 |   feature: Feature;
90 | }
91 | 
92 | /**
93 |  * Features list response
94 |  */
95 | export interface FeaturesResponse {
96 |   features: Feature[];
97 | } 
98 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/base.ts:
--------------------------------------------------------------------------------
 1 | import { 
 2 |   PropertyType, 
 3 |   PropertyCategory, 
 4 |   LocationType, 
 5 |   Currency, 
 6 |   ConstructionType, 
 7 |   FurnishingType 
 8 | } from './enums';
 9 | import type { Location } from '../location';
10 | 
11 | export interface ContactInfo {
12 |   id: string;
13 |   phone: string;
14 |   email: string;
15 |   createdAt: string;
16 |   updatedAt: string;
17 | }
18 | 
19 | export interface Image {
20 |   id: string;
21 |   url: string;
22 |   createdAt: string;
23 |   updatedAt: string;
24 | }
25 | 
26 | export interface Property {
27 |   id: string;
28 |   title: string;
29 |   description: string;
30 |   price: number;
31 |   currency: Currency;
32 |   area_sqm: number;
33 |   floor?: number;
34 |   construction_type?: ConstructionType;
35 |   furnishing?: FurnishingType;
36 |   location_type: LocationType;
37 |   category: PropertyCategory;
38 |   type: PropertyType;
39 |   featured?: boolean;
40 |   contact_info?: ContactInfo;
41 |   images?: Image[];
42 |   region_id?: number;
43 |   neighborhood_id?: number;
44 |   createdAt: string;
45 |   updatedAt: string;
46 | }
47 | 
48 | export interface CreatePropertyInput {
49 |   title: string;
50 |   description: string;
51 |   price: number;
52 |   currency: Currency;
53 |   area_sqm: number;
54 |   floor?: number;
55 |   construction_type?: ConstructionType;
56 |   furnishing?: FurnishingType;
57 |   location_type?: LocationType;
58 |   category?: PropertyCategory;
59 |   type?: PropertyType;
60 |   featured?: boolean;
61 |   contact_info?: {
62 |     phone: string;
63 |     email: string;
64 |   };
65 |   region_id?: number;
66 |   neighborhood_id?: number;
67 | }
68 | 
69 | export interface UpdatePropertyInput extends Partial<CreatePropertyInput> {} 
70 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/enums.ts:
--------------------------------------------------------------------------------
 1 | /**
 2 |  * Type of property
 3 |  */
 4 | export enum PropertyType {
 5 |   APARTMENT = 'APARTMENT',
 6 |   HOUSE = 'HOUSE',
 7 |   VILLA = 'VILLA',
 8 |   OFFICE = 'OFFICE',
 9 |   SHOP = 'SHOP',
10 |   WAREHOUSE = 'WAREHOUSE',
11 |   LAND = 'LAND'
12 | }
13 | 
14 | /**
15 |  * Category of property listing
16 |  */
17 | export enum PropertyCategory {
18 |   SALE = 'SALE',
19 |   RENT = 'RENT'
20 | }
21 | 
22 | /**
23 |  * Type of location
24 |  */
25 | export enum LocationType {
26 |   CITY = 'CITY',
27 |   SUBURB = 'SUBURB',
28 |   VILLAGE = 'VILLAGE',
29 |   SEASIDE = 'SEASIDE',
30 |   MOUNTAIN = 'MOUNTAIN'
31 | }
32 | 
33 | /**
34 |  * Supported currencies
35 |  */
36 | export enum Currency {
37 |   EUR = 'EUR',
38 |   USD = 'USD',
39 |   BGN = 'BGN'
40 | }
41 | 
42 | /**
43 |  * Construction types
44 |  */
45 | export enum ConstructionType {
46 |   BRICK = 'BRICK',
47 |   PANEL = 'PANEL',
48 |   EPK = 'EPK',
49 |   CONCRETE = 'CONCRETE',
50 |   STEEL = 'STEEL',
51 |   WOOD = 'WOOD'
52 | }
53 | 
54 | /**
55 |  * Furnishing status
56 |  */
57 | export enum FurnishingType {
58 |   UNFURNISHED = 'UNFURNISHED',
59 |   SEMI_FURNISHED = 'SEMI_FURNISHED',
60 |   FULLY_FURNISHED = 'FULLY_FURNISHED'
61 | } 
62 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/requests.ts:
--------------------------------------------------------------------------------
 1 | import { 
 2 |   PropertyType, 
 3 |   PropertyCategory, 
 4 |   LocationType, 
 5 |   ConstructionType, 
 6 |   FurnishingType 
 7 | } from './enums';
 8 | 
 9 | export interface GetPropertiesParams {
10 |   page?: string;
11 |   limit?: string;
12 |   min_price?: string;
13 |   max_price?: string;
14 |   min_area?: string;
15 |   max_area?: string;
16 |   type?: PropertyType;
17 |   category?: PropertyCategory;
18 |   location_type?: LocationType;
19 |   construction_type?: ConstructionType;
20 |   furnishing?: FurnishingType;
21 |   featured?: string;
22 | } 
23 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/responses.ts:
--------------------------------------------------------------------------------
 1 | import { PaginatedResponse } from '../common/pagination';
 2 | import { Property } from './base';
 3 | 
 4 | /**
 5 |  * Response for a single property
 6 |  */
 7 | export interface PropertyResponse {
 8 |   property: Property;
 9 | }
10 | 
11 | /**
12 |  * Response for multiple properties
13 |  */
14 | export interface PropertiesResponse extends PaginatedResponse<Property> {} 
15 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/user/index.ts:
--------------------------------------------------------------------------------
 1 | import { PaginatedResponse } from '../common/pagination';
 2 | 
 3 | export enum UserRole {
 4 |   ADMIN = 'ADMIN',
 5 |   USER = 'USER'
 6 | }
 7 | 
 8 | export interface User {
 9 |   id: string;
10 |   name: string;
11 |   email: string;
12 |   role: UserRole;
13 |   createdAt: string;
14 | }
15 | 
16 | export interface CreateUserInput {
17 |   name: string;
18 |   email: string;
19 |   password: string;
20 |   role?: UserRole;
21 | }
22 | 
23 | export interface UpdateUserInput extends Partial<CreateUserInput> {}
24 | 
25 | export interface UserResponse {
26 |   user: User;
27 | }
28 | 
29 | export interface UsersResponse {
30 |   users: User[];
31 |   meta: {
32 |     total: number;
33 |     page: number;
34 |     pageSize: number;
35 |     totalPages: number;
36 |     hasNextPage: boolean;
37 |     hasPreviousPage: boolean;
38 |   };
39 | } 
40 | 


--------------------------------------------------------------------------------
/packages/shared-types/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "target": "ES2020",
 4 |     "module": "ESNext",
 5 |     "moduleResolution": "Bundler",
 6 |     "esModuleInterop": true,
 7 |     "strict": true,
 8 |     "skipLibCheck": true,
 9 |     "forceConsistentCasingInFileNames": true,
10 |     "declaration": true,
11 |     "outDir": "dist",
12 |     "rootDir": "src"
13 |   },
14 |   "include": ["src/**/*"],
15 |   "exclude": ["node_modules", "dist"]
16 | }
17 | 


--------------------------------------------------------------------------------
/packages/shared-types/tsup.config.ts:
--------------------------------------------------------------------------------
 1 | import { defineConfig } from 'tsup'
 2 | 
 3 | export default defineConfig({
 4 |   entry: ['src/index.ts'],
 5 |   format: ['esm'],
 6 |   dts: true,
 7 |   splitting: false,
 8 |   sourcemap: true,
 9 |   clean: true,
10 |   treeshake: true
11 | }) 
12 | 


--------------------------------------------------------------------------------
/pnpm-lock.yaml:
--------------------------------------------------------------------------------
   1 | lockfileVersion: '9.0'
   2 | 
   3 | settings:
   4 |   autoInstallPeers: true
   5 |   excludeLinksFromLockfile: false
   6 | 
   7 | importers:
   8 | 
   9 |   .:
  10 |     devDependencies:
  11 |       '@typescript-eslint/eslint-plugin':
  12 |         specifier: ^6.19.0
  13 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
  14 |       '@typescript-eslint/parser':
  15 |         specifier: ^6.19.0
  16 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
  17 |       eslint:
  18 |         specifier: ^8.56.0
  19 |         version: 8.57.1
  20 |       eslint-config-prettier:
  21 |         specifier: ^9.1.0
  22 |         version: 9.1.0(eslint@8.57.1)
  23 |       prettier:
  24 |         specifier: ^3.2.4
  25 |         version: 3.4.2
  26 |       turbo:
  27 |         specifier: ^1.11.3
  28 |         version: 1.13.4
  29 |       typescript:
  30 |         specifier: ^5.3.3
  31 |         version: 5.7.3
  32 | 
  33 |   apps/api:
  34 |     dependencies:
  35 |       '@avalon/shared-types':
  36 |         specifier: workspace:*
  37 |         version: link:../../packages/shared-types
  38 |       '@prisma/client':
  39 |         specifier: ^5.22.0
  40 |         version: 5.22.0(prisma@5.22.0)
  41 |       '@types/nodemailer':
  42 |         specifier: ^6.4.17
  43 |         version: 6.4.17
  44 |       bcryptjs:
  45 |         specifier: ^2.4.3
  46 |         version: 2.4.3
  47 |       cors:
  48 |         specifier: ^2.8.5
  49 |         version: 2.8.5
  50 |       dotenv:
  51 |         specifier: ^16.4.5
  52 |         version: 16.4.7
  53 |       express:
  54 |         specifier: ^4.18.3
  55 |         version: 4.21.2
  56 |       express-rate-limit:
  57 |         specifier: ^7.5.0
  58 |         version: 7.5.0(express@4.21.2)
  59 |       jsonwebtoken:
  60 |         specifier: ^9.0.2
  61 |         version: 9.0.2
  62 |       morgan:
  63 |         specifier: ^1.10.0
  64 |         version: 1.10.0
  65 |       multer:
  66 |         specifier: ^1.4.5-lts.1
  67 |         version: 1.4.5-lts.1
  68 |       nodemailer:
  69 |         specifier: ^6.9.16
  70 |         version: 6.9.16
  71 |       winston:
  72 |         specifier: ^3.17.0
  73 |         version: 3.17.0
  74 |       zod:
  75 |         specifier: ^3.22.4
  76 |         version: 3.24.1
  77 |     devDependencies:
  78 |       '@jest/globals':
  79 |         specifier: ^29.7.0
  80 |         version: 29.7.0
  81 |       '@jest/types':
  82 |         specifier: ^29.6.3
  83 |         version: 29.6.3
  84 |       '@types/bcryptjs':
  85 |         specifier: ^2.4.6
  86 |         version: 2.4.6
  87 |       '@types/cors':
  88 |         specifier: ^2.8.17
  89 |         version: 2.8.17
  90 |       '@types/express':
  91 |         specifier: ^4.17.21
  92 |         version: 4.17.21
  93 |       '@types/jest':
  94 |         specifier: ^29.5.14
  95 |         version: 29.5.14
  96 |       '@types/jsonwebtoken':
  97 |         specifier: ^9.0.5
  98 |         version: 9.0.7
  99 |       '@types/morgan':
 100 |         specifier: ^1.9.9
 101 |         version: 1.9.9
 102 |       '@types/multer':
 103 |         specifier: ^1.4.11
 104 |         version: 1.4.12
 105 |       '@types/node':
 106 |         specifier: ^20.17.12
 107 |         version: 20.17.12
 108 |       '@types/supertest':
 109 |         specifier: ^6.0.2
 110 |         version: 6.0.2
 111 |       '@typescript-eslint/eslint-plugin':
 112 |         specifier: ^6.21.0
 113 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
 114 |       '@typescript-eslint/parser':
 115 |         specifier: ^6.21.0
 116 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
 117 |       cross-env:
 118 |         specifier: ^7.0.3
 119 |         version: 7.0.3
 120 |       jest:
 121 |         specifier: ^29.7.0
 122 |         version: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
 123 |       prisma:
 124 |         specifier: ^5.22.0
 125 |         version: 5.22.0
 126 |       supertest:
 127 |         specifier: ^7.0.0
 128 |         version: 7.0.0
 129 |       ts-jest:
 130 |         specifier: ^29.2.5
 131 |         version: 29.2.5(@babel/core@7.26.0)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.0))(esbuild@0.24.2)(jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))(typescript@5.7.3)
 132 |       ts-node:
 133 |         specifier: ^10.9.2
 134 |         version: 10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)
 135 |       tsup:
 136 |         specifier: ^8.3.5
 137 |         version: 8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0)
 138 |       tsx:
 139 |         specifier: ^4.7.1
 140 |         version: 4.19.2
 141 |       typescript:
 142 |         specifier: ^5.7.3
 143 |         version: 5.7.3
 144 | 
 145 |   apps/web:
 146 |     dependencies:
 147 |       '@avalon/shared-types':
 148 |         specifier: workspace:*
 149 |         version: link:../../packages/shared-types
 150 |       '@headlessui/react':
 151 |         specifier: ^1.7.17
 152 |         version: 1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 153 |       '@heroicons/react':
 154 |         specifier: ^2.0.18
 155 |         version: 2.2.0(react@18.3.1)
 156 |       '@react-google-maps/api':
 157 |         specifier: ^2.20.5
 158 |         version: 2.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 159 |       '@tanstack/react-query':
 160 |         specifier: ^5.64.1
 161 |         version: 5.64.1(react@18.3.1)
 162 |       '@tanstack/react-query-devtools':
 163 |         specifier: ^5.64.1
 164 |         version: 5.64.1(@tanstack/react-query@5.64.1(react@18.3.1))(react@18.3.1)
 165 |       axios:
 166 |         specifier: ^1.6.2
 167 |         version: 1.7.9
 168 |       clsx:
 169 |         specifier: ^2.0.0
 170 |         version: 2.1.1
 171 |       react:
 172 |         specifier: ^18.2.0
 173 |         version: 18.3.1
 174 |       react-dom:
 175 |         specifier: ^18.2.0
 176 |         version: 18.3.1(react@18.3.1)
 177 |       react-router-dom:
 178 |         specifier: ^6.20.1
 179 |         version: 6.28.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 180 |       react-transition-group:
 181 |         specifier: ^4.4.5
 182 |         version: 4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 183 |       zod:
 184 |         specifier: ^3.22.4
 185 |         version: 3.24.1
 186 |     devDependencies:
 187 |       '@tailwindcss/aspect-ratio':
 188 |         specifier: ^0.4.2
 189 |         version: 0.4.2(tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))
 190 |       '@tailwindcss/forms':
 191 |         specifier: ^0.5.7
 192 |         version: 0.5.10(tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))
 193 |       '@testing-library/jest-dom':
 194 |         specifier: ^6.1.5
 195 |         version: 6.6.3
 196 |       '@testing-library/react':
 197 |         specifier: ^14.1.2
 198 |         version: 14.3.1(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 199 |       '@testing-library/user-event':
 200 |         specifier: ^14.5.1
 201 |         version: 14.5.2(@testing-library/dom@9.3.4)
 202 |       '@types/react':
 203 |         specifier: ^18.2.37
 204 |         version: 18.3.18
 205 |       '@types/react-dom':
 206 |         specifier: ^18.2.15
 207 |         version: 18.3.5(@types/react@18.3.18)
 208 |       '@types/react-transition-group':
 209 |         specifier: ^4.4.12
 210 |         version: 4.4.12(@types/react@18.3.18)
 211 |       '@typescript-eslint/eslint-plugin':
 212 |         specifier: ^6.10.0
 213 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
 214 |       '@typescript-eslint/parser':
 215 |         specifier: ^6.10.0
 216 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
 217 |       '@vitejs/plugin-react':
 218 |         specifier: ^4.2.0
 219 |         version: 4.3.4(vite@5.4.11(@types/node@20.17.12))
 220 |       '@vitejs/plugin-react-swc':
 221 |         specifier: ^3.7.2
 222 |         version: 3.7.2(vite@5.4.11(@types/node@20.17.12))
 223 |       '@vitest/coverage-v8':
 224 |         specifier: ^1.0.4
 225 |         version: 1.6.0(vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3))
 226 |       autoprefixer:
 227 |         specifier: ^10.4.16
 228 |         version: 10.4.20(postcss@8.4.49)
 229 |       eslint:
 230 |         specifier: ^8.53.0
 231 |         version: 8.57.1
 232 |       eslint-plugin-react-hooks:
 233 |         specifier: ^4.6.0
 234 |         version: 4.6.2(eslint@8.57.1)
 235 |       eslint-plugin-react-refresh:
 236 |         specifier: ^0.4.4
 237 |         version: 0.4.18(eslint@8.57.1)
 238 |       happy-dom:
 239 |         specifier: ^12.10.3
 240 |         version: 12.10.3
 241 |       postcss:
 242 |         specifier: ^8.4.32
 243 |         version: 8.4.49
 244 |       tailwindcss:
 245 |         specifier: ^3.3.6
 246 |         version: 3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
 247 |       typescript:
 248 |         specifier: ^5.2.2
 249 |         version: 5.7.3
 250 |       vite:
 251 |         specifier: ^5.0.0
 252 |         version: 5.4.11(@types/node@20.17.12)
 253 |       vitest:
 254 |         specifier: ^1.0.4
 255 |         version: 1.6.0(@types/node@20.17.12)(happy-dom@12.10.3)
 256 | 
 257 |   packages/shared-types:
 258 |     devDependencies:
 259 |       tsup:
 260 |         specifier: ^8.0.0
 261 |         version: 8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0)
 262 |       typescript:
 263 |         specifier: ^5.4.2
 264 |         version: 5.7.3
 265 | 
 266 | packages:
 267 | 
 268 |   '@adobe/css-tools@4.4.1':
 269 |     resolution: {integrity: sha512-12WGKBQzjUAI4ayyF4IAtfw2QR/IDoqk6jTddXDhtYTJF9ASmoE1zst7cVtP0aL/F1jUJL5r+JxKXKEgHNbEUQ==}
 270 | 
 271 |   '@alloc/quick-lru@5.2.0':
 272 |     resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
 273 |     engines: {node: '>=10'}
 274 | 
 275 |   '@ampproject/remapping@2.3.0':
 276 |     resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
 277 |     engines: {node: '>=6.0.0'}
 278 | 
 279 |   '@babel/code-frame@7.26.2':
 280 |     resolution: {integrity: sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==}
 281 |     engines: {node: '>=6.9.0'}
 282 | 
 283 |   '@babel/compat-data@7.26.5':
 284 |     resolution: {integrity: sha512-XvcZi1KWf88RVbF9wn8MN6tYFloU5qX8KjuF3E1PVBmJ9eypXfs4GRiJwLuTZL0iSnJUKn1BFPa5BPZZJyFzPg==}
 285 |     engines: {node: '>=6.9.0'}
 286 | 
 287 |   '@babel/core@7.26.0':
 288 |     resolution: {integrity: sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==}
 289 |     engines: {node: '>=6.9.0'}
 290 | 
 291 |   '@babel/generator@7.26.5':
 292 |     resolution: {integrity: sha512-2caSP6fN9I7HOe6nqhtft7V4g7/V/gfDsC3Ag4W7kEzzvRGKqiv0pu0HogPiZ3KaVSoNDhUws6IJjDjpfmYIXw==}
 293 |     engines: {node: '>=6.9.0'}
 294 | 
 295 |   '@babel/helper-compilation-targets@7.26.5':
 296 |     resolution: {integrity: sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==}
 297 |     engines: {node: '>=6.9.0'}
 298 | 
 299 |   '@babel/helper-module-imports@7.25.9':
 300 |     resolution: {integrity: sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==}
 301 |     engines: {node: '>=6.9.0'}
 302 | 
 303 |   '@babel/helper-module-transforms@7.26.0':
 304 |     resolution: {integrity: sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==}
 305 |     engines: {node: '>=6.9.0'}
 306 |     peerDependencies:
 307 |       '@babel/core': ^7.0.0
 308 | 
 309 |   '@babel/helper-plugin-utils@7.26.5':
 310 |     resolution: {integrity: sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==}
 311 |     engines: {node: '>=6.9.0'}
 312 | 
 313 |   '@babel/helper-string-parser@7.25.9':
 314 |     resolution: {integrity: sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==}
 315 |     engines: {node: '>=6.9.0'}
 316 | 
 317 |   '@babel/helper-validator-identifier@7.25.9':
 318 |     resolution: {integrity: sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==}
 319 |     engines: {node: '>=6.9.0'}
 320 | 
 321 |   '@babel/helper-validator-option@7.25.9':
 322 |     resolution: {integrity: sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==}
 323 |     engines: {node: '>=6.9.0'}
 324 | 
 325 |   '@babel/helpers@7.26.0':
 326 |     resolution: {integrity: sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==}
 327 |     engines: {node: '>=6.9.0'}
 328 | 
 329 |   '@babel/parser@7.26.5':
 330 |     resolution: {integrity: sha512-SRJ4jYmXRqV1/Xc+TIVG84WjHBXKlxO9sHQnA2Pf12QQEAp1LOh6kDzNHXcUnbH1QI0FDoPPVOt+vyUDucxpaw==}
 331 |     engines: {node: '>=6.0.0'}
 332 |     hasBin: true
 333 | 
 334 |   '@babel/plugin-syntax-async-generators@7.8.4':
 335 |     resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}
 336 |     peerDependencies:
 337 |       '@babel/core': ^7.0.0-0
 338 | 
 339 |   '@babel/plugin-syntax-bigint@7.8.3':
 340 |     resolution: {integrity: sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==}
 341 |     peerDependencies:
 342 |       '@babel/core': ^7.0.0-0
 343 | 
 344 |   '@babel/plugin-syntax-class-properties@7.12.13':
 345 |     resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}
 346 |     peerDependencies:
 347 |       '@babel/core': ^7.0.0-0
 348 | 
 349 |   '@babel/plugin-syntax-class-static-block@7.14.5':
 350 |     resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}
 351 |     engines: {node: '>=6.9.0'}
 352 |     peerDependencies:
 353 |       '@babel/core': ^7.0.0-0
 354 | 
 355 |   '@babel/plugin-syntax-import-attributes@7.26.0':
 356 |     resolution: {integrity: sha512-e2dttdsJ1ZTpi3B9UYGLw41hifAubg19AtCu/2I/F1QNVclOBr1dYpTdmdyZ84Xiz43BS/tCUkMAZNLv12Pi+A==}
 357 |     engines: {node: '>=6.9.0'}
 358 |     peerDependencies:
 359 |       '@babel/core': ^7.0.0-0
 360 | 
 361 |   '@babel/plugin-syntax-import-meta@7.10.4':
 362 |     resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}
 363 |     peerDependencies:
 364 |       '@babel/core': ^7.0.0-0
 365 | 
 366 |   '@babel/plugin-syntax-json-strings@7.8.3':
 367 |     resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}
 368 |     peerDependencies:
 369 |       '@babel/core': ^7.0.0-0
 370 | 
 371 |   '@babel/plugin-syntax-jsx@7.25.9':
 372 |     resolution: {integrity: sha512-ld6oezHQMZsZfp6pWtbjaNDF2tiiCYYDqQszHt5VV437lewP9aSi2Of99CK0D0XB21k7FLgnLcmQKyKzynfeAA==}
 373 |     engines: {node: '>=6.9.0'}
 374 |     peerDependencies:
 375 |       '@babel/core': ^7.0.0-0
 376 | 
 377 |   '@babel/plugin-syntax-logical-assignment-operators@7.10.4':
 378 |     resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}
 379 |     peerDependencies:
 380 |       '@babel/core': ^7.0.0-0
 381 | 
 382 |   '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3':
 383 |     resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}
 384 |     peerDependencies:
 385 |       '@babel/core': ^7.0.0-0
 386 | 
 387 |   '@babel/plugin-syntax-numeric-separator@7.10.4':
 388 |     resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}
 389 |     peerDependencies:
 390 |       '@babel/core': ^7.0.0-0
 391 | 
 392 |   '@babel/plugin-syntax-object-rest-spread@7.8.3':
 393 |     resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}
 394 |     peerDependencies:
 395 |       '@babel/core': ^7.0.0-0
 396 | 
 397 |   '@babel/plugin-syntax-optional-catch-binding@7.8.3':
 398 |     resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}
 399 |     peerDependencies:
 400 |       '@babel/core': ^7.0.0-0
 401 | 
 402 |   '@babel/plugin-syntax-optional-chaining@7.8.3':
 403 |     resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}
 404 |     peerDependencies:
 405 |       '@babel/core': ^7.0.0-0
 406 | 
 407 |   '@babel/plugin-syntax-private-property-in-object@7.14.5':
 408 |     resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}
 409 |     engines: {node: '>=6.9.0'}
 410 |     peerDependencies:
 411 |       '@babel/core': ^7.0.0-0
 412 | 
 413 |   '@babel/plugin-syntax-top-level-await@7.14.5':
 414 |     resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}
 415 |     engines: {node: '>=6.9.0'}
 416 |     peerDependencies:
 417 |       '@babel/core': ^7.0.0-0
 418 | 
 419 |   '@babel/plugin-syntax-typescript@7.25.9':
 420 |     resolution: {integrity: sha512-hjMgRy5hb8uJJjUcdWunWVcoi9bGpJp8p5Ol1229PoN6aytsLwNMgmdftO23wnCLMfVmTwZDWMPNq/D1SY60JQ==}
 421 |     engines: {node: '>=6.9.0'}
 422 |     peerDependencies:
 423 |       '@babel/core': ^7.0.0-0
 424 | 
 425 |   '@babel/plugin-transform-react-jsx-self@7.25.9':
 426 |     resolution: {integrity: sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==}
 427 |     engines: {node: '>=6.9.0'}
 428 |     peerDependencies:
 429 |       '@babel/core': ^7.0.0-0
 430 | 
 431 |   '@babel/plugin-transform-react-jsx-source@7.25.9':
 432 |     resolution: {integrity: sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==}
 433 |     engines: {node: '>=6.9.0'}
 434 |     peerDependencies:
 435 |       '@babel/core': ^7.0.0-0
 436 | 
 437 |   '@babel/runtime@7.26.0':
 438 |     resolution: {integrity: sha512-FDSOghenHTiToteC/QRlv2q3DhPZ/oOXTBoirfWNx1Cx3TMVcGWQtMMmQcSvb/JjpNeGzx8Pq/b4fKEJuWm1sw==}
 439 |     engines: {node: '>=6.9.0'}
 440 | 
 441 |   '@babel/template@7.25.9':
 442 |     resolution: {integrity: sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==}
 443 |     engines: {node: '>=6.9.0'}
 444 | 
 445 |   '@babel/traverse@7.26.5':
 446 |     resolution: {integrity: sha512-rkOSPOw+AXbgtwUga3U4u8RpoK9FEFWBNAlTpcnkLFjL5CT+oyHNuUUC/xx6XefEJ16r38r8Bc/lfp6rYuHeJQ==}
 447 |     engines: {node: '>=6.9.0'}
 448 | 
 449 |   '@babel/types@7.26.5':
 450 |     resolution: {integrity: sha512-L6mZmwFDK6Cjh1nRCLXpa6no13ZIioJDz7mdkzHv399pThrTa/k0nUlNaenOeh2kWu/iaOQYElEpKPUswUa9Vg==}
 451 |     engines: {node: '>=6.9.0'}
 452 | 
 453 |   '@bcoe/v8-coverage@0.2.3':
 454 |     resolution: {integrity: sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==}
 455 | 
 456 |   '@colors/colors@1.6.0':
 457 |     resolution: {integrity: sha512-Ir+AOibqzrIsL6ajt3Rz3LskB7OiMVHqltZmspbW/TJuTVuyOMirVqAkjfY6JISiLHgyNqicAC8AyHHGzNd/dA==}
 458 |     engines: {node: '>=0.1.90'}
 459 | 
 460 |   '@cspotcode/source-map-support@0.8.1':
 461 |     resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}
 462 |     engines: {node: '>=12'}
 463 | 
 464 |   '@dabh/diagnostics@2.0.3':
 465 |     resolution: {integrity: sha512-hrlQOIi7hAfzsMqlGSFyVucrx38O+j6wiGOf//H2ecvIEqYN4ADBSS2iLMh5UFyDunCNniUIPk/q3riFv45xRA==}
 466 | 
 467 |   '@esbuild/aix-ppc64@0.21.5':
 468 |     resolution: {integrity: sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==}
 469 |     engines: {node: '>=12'}
 470 |     cpu: [ppc64]
 471 |     os: [aix]
 472 | 
 473 |   '@esbuild/aix-ppc64@0.23.1':
 474 |     resolution: {integrity: sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==}
 475 |     engines: {node: '>=18'}
 476 |     cpu: [ppc64]
 477 |     os: [aix]
 478 | 
 479 |   '@esbuild/aix-ppc64@0.24.2':
 480 |     resolution: {integrity: sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==}
 481 |     engines: {node: '>=18'}
 482 |     cpu: [ppc64]
 483 |     os: [aix]
 484 | 
 485 |   '@esbuild/android-arm64@0.21.5':
 486 |     resolution: {integrity: sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==}
 487 |     engines: {node: '>=12'}
 488 |     cpu: [arm64]
 489 |     os: [android]
 490 | 
 491 |   '@esbuild/android-arm64@0.23.1':
 492 |     resolution: {integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==}
 493 |     engines: {node: '>=18'}
 494 |     cpu: [arm64]
 495 |     os: [android]
 496 | 
 497 |   '@esbuild/android-arm64@0.24.2':
 498 |     resolution: {integrity: sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==}
 499 |     engines: {node: '>=18'}
 500 |     cpu: [arm64]
 501 |     os: [android]
 502 | 
 503 |   '@esbuild/android-arm@0.21.5':
 504 |     resolution: {integrity: sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==}
 505 |     engines: {node: '>=12'}
 506 |     cpu: [arm]
 507 |     os: [android]
 508 | 
 509 |   '@esbuild/android-arm@0.23.1':
 510 |     resolution: {integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==}
 511 |     engines: {node: '>=18'}
 512 |     cpu: [arm]
 513 |     os: [android]
 514 | 
 515 |   '@esbuild/android-arm@0.24.2':
 516 |     resolution: {integrity: sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==}
 517 |     engines: {node: '>=18'}
 518 |     cpu: [arm]
 519 |     os: [android]
 520 | 
 521 |   '@esbuild/android-x64@0.21.5':
 522 |     resolution: {integrity: sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==}
 523 |     engines: {node: '>=12'}
 524 |     cpu: [x64]
 525 |     os: [android]
 526 | 
 527 |   '@esbuild/android-x64@0.23.1':
 528 |     resolution: {integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==}
 529 |     engines: {node: '>=18'}
 530 |     cpu: [x64]
 531 |     os: [android]
 532 | 
 533 |   '@esbuild/android-x64@0.24.2':
 534 |     resolution: {integrity: sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==}
 535 |     engines: {node: '>=18'}
 536 |     cpu: [x64]
 537 |     os: [android]
 538 | 
 539 |   '@esbuild/darwin-arm64@0.21.5':
 540 |     resolution: {integrity: sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==}
 541 |     engines: {node: '>=12'}
 542 |     cpu: [arm64]
 543 |     os: [darwin]
 544 | 
 545 |   '@esbuild/darwin-arm64@0.23.1':
 546 |     resolution: {integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==}
 547 |     engines: {node: '>=18'}
 548 |     cpu: [arm64]
 549 |     os: [darwin]
 550 | 
 551 |   '@esbuild/darwin-arm64@0.24.2':
 552 |     resolution: {integrity: sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==}
 553 |     engines: {node: '>=18'}
 554 |     cpu: [arm64]
 555 |     os: [darwin]
 556 | 
 557 |   '@esbuild/darwin-x64@0.21.5':
 558 |     resolution: {integrity: sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==}
 559 |     engines: {node: '>=12'}
 560 |     cpu: [x64]
 561 |     os: [darwin]
 562 | 
 563 |   '@esbuild/darwin-x64@0.23.1':
 564 |     resolution: {integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==}
 565 |     engines: {node: '>=18'}
 566 |     cpu: [x64]
 567 |     os: [darwin]
 568 | 
 569 |   '@esbuild/darwin-x64@0.24.2':
 570 |     resolution: {integrity: sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==}
 571 |     engines: {node: '>=18'}
 572 |     cpu: [x64]
 573 |     os: [darwin]
 574 | 
 575 |   '@esbuild/freebsd-arm64@0.21.5':
 576 |     resolution: {integrity: sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==}
 577 |     engines: {node: '>=12'}
 578 |     cpu: [arm64]
 579 |     os: [freebsd]
 580 | 
 581 |   '@esbuild/freebsd-arm64@0.23.1':
 582 |     resolution: {integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==}
 583 |     engines: {node: '>=18'}
 584 |     cpu: [arm64]
 585 |     os: [freebsd]
 586 | 
 587 |   '@esbuild/freebsd-arm64@0.24.2':
 588 |     resolution: {integrity: sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==}
 589 |     engines: {node: '>=18'}
 590 |     cpu: [arm64]
 591 |     os: [freebsd]
 592 | 
 593 |   '@esbuild/freebsd-x64@0.21.5':
 594 |     resolution: {integrity: sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==}
 595 |     engines: {node: '>=12'}
 596 |     cpu: [x64]
 597 |     os: [freebsd]
 598 | 
 599 |   '@esbuild/freebsd-x64@0.23.1':
 600 |     resolution: {integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==}
 601 |     engines: {node: '>=18'}
 602 |     cpu: [x64]
 603 |     os: [freebsd]
 604 | 
 605 |   '@esbuild/freebsd-x64@0.24.2':
 606 |     resolution: {integrity: sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==}
 607 |     engines: {node: '>=18'}
 608 |     cpu: [x64]
 609 |     os: [freebsd]
 610 | 
 611 |   '@esbuild/linux-arm64@0.21.5':
 612 |     resolution: {integrity: sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==}
 613 |     engines: {node: '>=12'}
 614 |     cpu: [arm64]
 615 |     os: [linux]
 616 | 
 617 |   '@esbuild/linux-arm64@0.23.1':
 618 |     resolution: {integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==}
 619 |     engines: {node: '>=18'}
 620 |     cpu: [arm64]
 621 |     os: [linux]
 622 | 
 623 |   '@esbuild/linux-arm64@0.24.2':
 624 |     resolution: {integrity: sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==}
 625 |     engines: {node: '>=18'}
 626 |     cpu: [arm64]
 627 |     os: [linux]
 628 | 
 629 |   '@esbuild/linux-arm@0.21.5':
 630 |     resolution: {integrity: sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==}
 631 |     engines: {node: '>=12'}
 632 |     cpu: [arm]
 633 |     os: [linux]
 634 | 
 635 |   '@esbuild/linux-arm@0.23.1':
 636 |     resolution: {integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==}
 637 |     engines: {node: '>=18'}
 638 |     cpu: [arm]
 639 |     os: [linux]
 640 | 
 641 |   '@esbuild/linux-arm@0.24.2':
 642 |     resolution: {integrity: sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==}
 643 |     engines: {node: '>=18'}
 644 |     cpu: [arm]
 645 |     os: [linux]
 646 | 
 647 |   '@esbuild/linux-ia32@0.21.5':
 648 |     resolution: {integrity: sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==}
 649 |     engines: {node: '>=12'}
 650 |     cpu: [ia32]
 651 |     os: [linux]
 652 | 
 653 |   '@esbuild/linux-ia32@0.23.1':
 654 |     resolution: {integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==}
 655 |     engines: {node: '>=18'}
 656 |     cpu: [ia32]
 657 |     os: [linux]
 658 | 
 659 |   '@esbuild/linux-ia32@0.24.2':
 660 |     resolution: {integrity: sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==}
 661 |     engines: {node: '>=18'}
 662 |     cpu: [ia32]
 663 |     os: [linux]
 664 | 
 665 |   '@esbuild/linux-loong64@0.21.5':
 666 |     resolution: {integrity: sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==}
 667 |     engines: {node: '>=12'}
 668 |     cpu: [loong64]
 669 |     os: [linux]
 670 | 
 671 |   '@esbuild/linux-loong64@0.23.1':
 672 |     resolution: {integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==}
 673 |     engines: {node: '>=18'}
 674 |     cpu: [loong64]
 675 |     os: [linux]
 676 | 
 677 |   '@esbuild/linux-loong64@0.24.2':
 678 |     resolution: {integrity: sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==}
 679 |     engines: {node: '>=18'}
 680 |     cpu: [loong64]
 681 |     os: [linux]
 682 | 
 683 |   '@esbuild/linux-mips64el@0.21.5':
 684 |     resolution: {integrity: sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==}
 685 |     engines: {node: '>=12'}
 686 |     cpu: [mips64el]
 687 |     os: [linux]
 688 | 
 689 |   '@esbuild/linux-mips64el@0.23.1':
 690 |     resolution: {integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==}
 691 |     engines: {node: '>=18'}
 692 |     cpu: [mips64el]
 693 |     os: [linux]
 694 | 
 695 |   '@esbuild/linux-mips64el@0.24.2':
 696 |     resolution: {integrity: sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==}
 697 |     engines: {node: '>=18'}
 698 |     cpu: [mips64el]
 699 |     os: [linux]
 700 | 
 701 |   '@esbuild/linux-ppc64@0.21.5':
 702 |     resolution: {integrity: sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==}
 703 |     engines: {node: '>=12'}
 704 |     cpu: [ppc64]
 705 |     os: [linux]
 706 | 
 707 |   '@esbuild/linux-ppc64@0.23.1':
 708 |     resolution: {integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==}
 709 |     engines: {node: '>=18'}
 710 |     cpu: [ppc64]
 711 |     os: [linux]
 712 | 
 713 |   '@esbuild/linux-ppc64@0.24.2':
 714 |     resolution: {integrity: sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==}
 715 |     engines: {node: '>=18'}
 716 |     cpu: [ppc64]
 717 |     os: [linux]
 718 | 
 719 |   '@esbuild/linux-riscv64@0.21.5':
 720 |     resolution: {integrity: sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==}
 721 |     engines: {node: '>=12'}
 722 |     cpu: [riscv64]
 723 |     os: [linux]
 724 | 
 725 |   '@esbuild/linux-riscv64@0.23.1':
 726 |     resolution: {integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==}
 727 |     engines: {node: '>=18'}
 728 |     cpu: [riscv64]
 729 |     os: [linux]
 730 | 
 731 |   '@esbuild/linux-riscv64@0.24.2':
 732 |     resolution: {integrity: sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==}
 733 |     engines: {node: '>=18'}
 734 |     cpu: [riscv64]
 735 |     os: [linux]
 736 | 
 737 |   '@esbuild/linux-s390x@0.21.5':
 738 |     resolution: {integrity: sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==}
 739 |     engines: {node: '>=12'}
 740 |     cpu: [s390x]
 741 |     os: [linux]
 742 | 
 743 |   '@esbuild/linux-s390x@0.23.1':
 744 |     resolution: {integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==}
 745 |     engines: {node: '>=18'}
 746 |     cpu: [s390x]
 747 |     os: [linux]
 748 | 
 749 |   '@esbuild/linux-s390x@0.24.2':
 750 |     resolution: {integrity: sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==}
 751 |     engines: {node: '>=18'}
 752 |     cpu: [s390x]
 753 |     os: [linux]
 754 | 
 755 |   '@esbuild/linux-x64@0.21.5':
 756 |     resolution: {integrity: sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==}
 757 |     engines: {node: '>=12'}
 758 |     cpu: [x64]
 759 |     os: [linux]
 760 | 
 761 |   '@esbuild/linux-x64@0.23.1':
 762 |     resolution: {integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==}
 763 |     engines: {node: '>=18'}
 764 |     cpu: [x64]
 765 |     os: [linux]
 766 | 
 767 |   '@esbuild/linux-x64@0.24.2':
 768 |     resolution: {integrity: sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==}
 769 |     engines: {node: '>=18'}
 770 |     cpu: [x64]
 771 |     os: [linux]
 772 | 
 773 |   '@esbuild/netbsd-arm64@0.24.2':
 774 |     resolution: {integrity: sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==}
 775 |     engines: {node: '>=18'}
 776 |     cpu: [arm64]
 777 |     os: [netbsd]
 778 | 
 779 |   '@esbuild/netbsd-x64@0.21.5':
 780 |     resolution: {integrity: sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==}
 781 |     engines: {node: '>=12'}
 782 |     cpu: [x64]
 783 |     os: [netbsd]
 784 | 
 785 |   '@esbuild/netbsd-x64@0.23.1':
 786 |     resolution: {integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==}
 787 |     engines: {node: '>=18'}
 788 |     cpu: [x64]
 789 |     os: [netbsd]
 790 | 
 791 |   '@esbuild/netbsd-x64@0.24.2':
 792 |     resolution: {integrity: sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==}
 793 |     engines: {node: '>=18'}
 794 |     cpu: [x64]
 795 |     os: [netbsd]
 796 | 
 797 |   '@esbuild/openbsd-arm64@0.23.1':
 798 |     resolution: {integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==}
 799 |     engines: {node: '>=18'}
 800 |     cpu: [arm64]
 801 |     os: [openbsd]
 802 | 
 803 |   '@esbuild/openbsd-arm64@0.24.2':
 804 |     resolution: {integrity: sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==}
 805 |     engines: {node: '>=18'}
 806 |     cpu: [arm64]
 807 |     os: [openbsd]
 808 | 
 809 |   '@esbuild/openbsd-x64@0.21.5':
 810 |     resolution: {integrity: sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==}
 811 |     engines: {node: '>=12'}
 812 |     cpu: [x64]
 813 |     os: [openbsd]
 814 | 
 815 |   '@esbuild/openbsd-x64@0.23.1':
 816 |     resolution: {integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==}
 817 |     engines: {node: '>=18'}
 818 |     cpu: [x64]
 819 |     os: [openbsd]
 820 | 
 821 |   '@esbuild/openbsd-x64@0.24.2':
 822 |     resolution: {integrity: sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==}
 823 |     engines: {node: '>=18'}
 824 |     cpu: [x64]
 825 |     os: [openbsd]
 826 | 
 827 |   '@esbuild/sunos-x64@0.21.5':
 828 |     resolution: {integrity: sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==}
 829 |     engines: {node: '>=12'}
 830 |     cpu: [x64]
 831 |     os: [sunos]
 832 | 
 833 |   '@esbuild/sunos-x64@0.23.1':
 834 |     resolution: {integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==}
 835 |     engines: {node: '>=18'}
 836 |     cpu: [x64]
 837 |     os: [sunos]
 838 | 
 839 |   '@esbuild/sunos-x64@0.24.2':
 840 |     resolution: {integrity: sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==}
 841 |     engines: {node: '>=18'}
 842 |     cpu: [x64]
 843 |     os: [sunos]
 844 | 
 845 |   '@esbuild/win32-arm64@0.21.5':
 846 |     resolution: {integrity: sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==}
 847 |     engines: {node: '>=12'}
 848 |     cpu: [arm64]
 849 |     os: [win32]
 850 | 
 851 |   '@esbuild/win32-arm64@0.23.1':
 852 |     resolution: {integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==}
 853 |     engines: {node: '>=18'}
 854 |     cpu: [arm64]
 855 |     os: [win32]
 856 | 
 857 |   '@esbuild/win32-arm64@0.24.2':
 858 |     resolution: {integrity: sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==}
 859 |     engines: {node: '>=18'}
 860 |     cpu: [arm64]
 861 |     os: [win32]
 862 | 
 863 |   '@esbuild/win32-ia32@0.21.5':
 864 |     resolution: {integrity: sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==}
 865 |     engines: {node: '>=12'}
 866 |     cpu: [ia32]
 867 |     os: [win32]
 868 | 
 869 |   '@esbuild/win32-ia32@0.23.1':
 870 |     resolution: {integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==}
 871 |     engines: {node: '>=18'}
 872 |     cpu: [ia32]
 873 |     os: [win32]
 874 | 
 875 |   '@esbuild/win32-ia32@0.24.2':
 876 |     resolution: {integrity: sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==}
 877 |     engines: {node: '>=18'}
 878 |     cpu: [ia32]
 879 |     os: [win32]
 880 | 
 881 |   '@esbuild/win32-x64@0.21.5':
 882 |     resolution: {integrity: sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==}
 883 |     engines: {node: '>=12'}
 884 |     cpu: [x64]
 885 |     os: [win32]
 886 | 
 887 |   '@esbuild/win32-x64@0.23.1':
 888 |     resolution: {integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==}
 889 |     engines: {node: '>=18'}
 890 |     cpu: [x64]
 891 |     os: [win32]
 892 | 
 893 |   '@esbuild/win32-x64@0.24.2':
 894 |     resolution: {integrity: sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==}
 895 |     engines: {node: '>=18'}
 896 |     cpu: [x64]
 897 |     os: [win32]
 898 | 
 899 |   '@eslint-community/eslint-utils@4.4.1':
 900 |     resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}
 901 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
 902 |     peerDependencies:
 903 |       eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
 904 | 
 905 |   '@eslint-community/regexpp@4.12.1':
 906 |     resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
 907 |     engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}
 908 | 
 909 |   '@eslint/eslintrc@2.1.4':
 910 |     resolution: {integrity: sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==}
 911 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
 912 | 
 913 |   '@eslint/js@8.57.1':
 914 |     resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}
 915 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
 916 | 
 917 |   '@googlemaps/js-api-loader@1.16.8':
 918 |     resolution: {integrity: sha512-CROqqwfKotdO6EBjZO/gQGVTbeDps5V7Mt9+8+5Q+jTg5CRMi3Ii/L9PmV3USROrt2uWxtGzJHORmByxyo9pSQ==}
 919 | 
 920 |   '@googlemaps/markerclusterer@2.5.3':
 921 |     resolution: {integrity: sha512-x7lX0R5yYOoiNectr10wLgCBasNcXFHiADIBdmn7jQllF2B5ENQw5XtZK+hIw4xnV0Df0xhN4LN98XqA5jaiOw==}
 922 | 
 923 |   '@headlessui/react@1.7.19':
 924 |     resolution: {integrity: sha512-Ll+8q3OlMJfJbAKM/+/Y2q6PPYbryqNTXDbryx7SXLIDamkF6iQFbriYHga0dY44PvDhvvBWCx1Xj4U5+G4hOw==}
 925 |     engines: {node: '>=10'}
 926 |     peerDependencies:
 927 |       react: ^16 || ^17 || ^18
 928 |       react-dom: ^16 || ^17 || ^18
 929 | 
 930 |   '@heroicons/react@2.2.0':
 931 |     resolution: {integrity: sha512-LMcepvRaS9LYHJGsF0zzmgKCUim/X3N/DQKc4jepAXJ7l8QxJ1PmxJzqplF2Z3FE4PqBAIGyJAQ/w4B5dsqbtQ==}
 932 |     peerDependencies:
 933 |       react: '>= 16 || ^19.0.0-rc'
 934 | 
 935 |   '@humanwhocodes/config-array@0.13.0':
 936 |     resolution: {integrity: sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==}
 937 |     engines: {node: '>=10.10.0'}
 938 |     deprecated: Use @eslint/config-array instead
 939 | 
 940 |   '@humanwhocodes/module-importer@1.0.1':
 941 |     resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
 942 |     engines: {node: '>=12.22'}
 943 | 
 944 |   '@humanwhocodes/object-schema@2.0.3':
 945 |     resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}
 946 |     deprecated: Use @eslint/object-schema instead
 947 | 
 948 |   '@isaacs/cliui@8.0.2':
 949 |     resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}
 950 |     engines: {node: '>=12'}
 951 | 
 952 |   '@istanbuljs/load-nyc-config@1.1.0':
 953 |     resolution: {integrity: sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==}
 954 |     engines: {node: '>=8'}
 955 | 
 956 |   '@istanbuljs/schema@0.1.3':
 957 |     resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}
 958 |     engines: {node: '>=8'}
 959 | 
 960 |   '@jest/console@29.7.0':
 961 |     resolution: {integrity: sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==}
 962 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 963 | 
 964 |   '@jest/core@29.7.0':
 965 |     resolution: {integrity: sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==}
 966 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 967 |     peerDependencies:
 968 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
 969 |     peerDependenciesMeta:
 970 |       node-notifier:
 971 |         optional: true
 972 | 
 973 |   '@jest/environment@29.7.0':
 974 |     resolution: {integrity: sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==}
 975 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 976 | 
 977 |   '@jest/expect-utils@29.7.0':
 978 |     resolution: {integrity: sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==}
 979 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 980 | 
 981 |   '@jest/expect@29.7.0':
 982 |     resolution: {integrity: sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==}
 983 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 984 | 
 985 |   '@jest/fake-timers@29.7.0':
 986 |     resolution: {integrity: sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==}
 987 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 988 | 
 989 |   '@jest/globals@29.7.0':
 990 |     resolution: {integrity: sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==}
 991 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 992 | 
 993 |   '@jest/reporters@29.7.0':
 994 |     resolution: {integrity: sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==}
 995 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 996 |     peerDependencies:
 997 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
 998 |     peerDependenciesMeta:
 999 |       node-notifier:
1000 |         optional: true
1001 | 
1002 |   '@jest/schemas@29.6.3':
1003 |     resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}
1004 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1005 | 
1006 |   '@jest/source-map@29.6.3':
1007 |     resolution: {integrity: sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==}
1008 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1009 | 
1010 |   '@jest/test-result@29.7.0':
1011 |     resolution: {integrity: sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==}
1012 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1013 | 
1014 |   '@jest/test-sequencer@29.7.0':
1015 |     resolution: {integrity: sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==}
1016 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1017 | 
1018 |   '@jest/transform@29.7.0':
1019 |     resolution: {integrity: sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==}
1020 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1021 | 
1022 |   '@jest/types@29.6.3':
1023 |     resolution: {integrity: sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==}
1024 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1025 | 
1026 |   '@jridgewell/gen-mapping@0.3.8':
1027 |     resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}
1028 |     engines: {node: '>=6.0.0'}
1029 | 
1030 |   '@jridgewell/resolve-uri@3.1.2':
1031 |     resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
1032 |     engines: {node: '>=6.0.0'}
1033 | 
1034 |   '@jridgewell/set-array@1.2.1':
1035 |     resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
1036 |     engines: {node: '>=6.0.0'}
1037 | 
1038 |   '@jridgewell/sourcemap-codec@1.5.0':
1039 |     resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}
1040 | 
1041 |   '@jridgewell/trace-mapping@0.3.25':
1042 |     resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}
1043 | 
1044 |   '@jridgewell/trace-mapping@0.3.9':
1045 |     resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}
1046 | 
1047 |   '@nodelib/fs.scandir@2.1.5':
1048 |     resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
1049 |     engines: {node: '>= 8'}
1050 | 
1051 |   '@nodelib/fs.stat@2.0.5':
1052 |     resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
1053 |     engines: {node: '>= 8'}
1054 | 
1055 |   '@nodelib/fs.walk@1.2.8':
1056 |     resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
1057 |     engines: {node: '>= 8'}
1058 | 
1059 |   '@pkgjs/parseargs@0.11.0':
1060 |     resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}
1061 |     engines: {node: '>=14'}
1062 | 
1063 |   '@prisma/client@5.22.0':
1064 |     resolution: {integrity: sha512-M0SVXfyHnQREBKxCgyo7sffrKttwE6R8PMq330MIUF0pTwjUhLbW84pFDlf06B27XyCR++VtjugEnIHdr07SVA==}
1065 |     engines: {node: '>=16.13'}
1066 |     peerDependencies:
1067 |       prisma: '*'
1068 |     peerDependenciesMeta:
1069 |       prisma:
1070 |         optional: true
1071 | 
1072 |   '@prisma/debug@5.22.0':
1073 |     resolution: {integrity: sha512-AUt44v3YJeggO2ZU5BkXI7M4hu9BF2zzH2iF2V5pyXT/lRTyWiElZ7It+bRH1EshoMRxHgpYg4VB6rCM+mG5jQ==}
1074 | 
1075 |   '@prisma/engines-version@5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2':
1076 |     resolution: {integrity: sha512-2PTmxFR2yHW/eB3uqWtcgRcgAbG1rwG9ZriSvQw+nnb7c4uCr3RAcGMb6/zfE88SKlC1Nj2ziUvc96Z379mHgQ==}
1077 | 
1078 |   '@prisma/engines@5.22.0':
1079 |     resolution: {integrity: sha512-UNjfslWhAt06kVL3CjkuYpHAWSO6L4kDCVPegV6itt7nD1kSJavd3vhgAEhjglLJJKEdJ7oIqDJ+yHk6qO8gPA==}
1080 | 
1081 |   '@prisma/fetch-engine@5.22.0':
1082 |     resolution: {integrity: sha512-bkrD/Mc2fSvkQBV5EpoFcZ87AvOgDxbG99488a5cexp5Ccny+UM6MAe/UFkUC0wLYD9+9befNOqGiIJhhq+HbA==}
1083 | 
1084 |   '@prisma/get-platform@5.22.0':
1085 |     resolution: {integrity: sha512-pHhpQdr1UPFpt+zFfnPazhulaZYCUqeIcPpJViYoq9R+D/yw4fjE+CtnsnKzPYm0ddUbeXUzjGVGIRVgPDCk4Q==}
1086 | 
1087 |   '@react-google-maps/api@2.20.5':
1088 |     resolution: {integrity: sha512-Dx3faV4d7JXFSD7SB8ePIt5LOB72mNGHKFp/hIQVaPEsLJlEi4ID+XL6HM3Xw10AzGbr4KS/eQSi3OAaN7YttQ==}
1089 |     peerDependencies:
1090 |       react: ^16.8 || ^17 || ^18 || ^19
1091 |       react-dom: ^16.8 || ^17 || ^18 || ^19
1092 | 
1093 |   '@react-google-maps/infobox@2.20.0':
1094 |     resolution: {integrity: sha512-03PJHjohhaVLkX6+NHhlr8CIlvUxWaXhryqDjyaZ8iIqqix/nV8GFdz9O3m5OsjtxtNho09F/15j14yV0nuyLQ==}
1095 | 
1096 |   '@react-google-maps/marker-clusterer@2.20.0':
1097 |     resolution: {integrity: sha512-tieX9Va5w1yP88vMgfH1pHTacDQ9TgDTjox3tLlisKDXRQWdjw+QeVVghhf5XqqIxXHgPdcGwBvKY6UP+SIvLw==}
1098 | 
1099 |   '@remix-run/router@1.21.0':
1100 |     resolution: {integrity: sha512-xfSkCAchbdG5PnbrKqFWwia4Bi61nH+wm8wLEqfHDyp7Y3dZzgqS2itV8i4gAq9pC2HsTpwyBC6Ds8VHZ96JlA==}
1101 |     engines: {node: '>=14.0.0'}
1102 | 
1103 |   '@rollup/rollup-android-arm-eabi@4.30.1':
1104 |     resolution: {integrity: sha512-pSWY+EVt3rJ9fQ3IqlrEUtXh3cGqGtPDH1FQlNZehO2yYxCHEX1SPsz1M//NXwYfbTlcKr9WObLnJX9FsS9K1Q==}
1105 |     cpu: [arm]
1106 |     os: [android]
1107 | 
1108 |   '@rollup/rollup-android-arm64@4.30.1':
1109 |     resolution: {integrity: sha512-/NA2qXxE3D/BRjOJM8wQblmArQq1YoBVJjrjoTSBS09jgUisq7bqxNHJ8kjCHeV21W/9WDGwJEWSN0KQ2mtD/w==}
1110 |     cpu: [arm64]
1111 |     os: [android]
1112 | 
1113 |   '@rollup/rollup-darwin-arm64@4.30.1':
1114 |     resolution: {integrity: sha512-r7FQIXD7gB0WJ5mokTUgUWPl0eYIH0wnxqeSAhuIwvnnpjdVB8cRRClyKLQr7lgzjctkbp5KmswWszlwYln03Q==}
1115 |     cpu: [arm64]
1116 |     os: [darwin]
1117 | 
1118 |   '@rollup/rollup-darwin-x64@4.30.1':
1119 |     resolution: {integrity: sha512-x78BavIwSH6sqfP2xeI1hd1GpHL8J4W2BXcVM/5KYKoAD3nNsfitQhvWSw+TFtQTLZ9OmlF+FEInEHyubut2OA==}
1120 |     cpu: [x64]
1121 |     os: [darwin]
1122 | 
1123 |   '@rollup/rollup-freebsd-arm64@4.30.1':
1124 |     resolution: {integrity: sha512-HYTlUAjbO1z8ywxsDFWADfTRfTIIy/oUlfIDmlHYmjUP2QRDTzBuWXc9O4CXM+bo9qfiCclmHk1x4ogBjOUpUQ==}
1125 |     cpu: [arm64]
1126 |     os: [freebsd]
1127 | 
1128 |   '@rollup/rollup-freebsd-x64@4.30.1':
1129 |     resolution: {integrity: sha512-1MEdGqogQLccphhX5myCJqeGNYTNcmTyaic9S7CG3JhwuIByJ7J05vGbZxsizQthP1xpVx7kd3o31eOogfEirw==}
1130 |     cpu: [x64]
1131 |     os: [freebsd]
1132 | 
1133 |   '@rollup/rollup-linux-arm-gnueabihf@4.30.1':
1134 |     resolution: {integrity: sha512-PaMRNBSqCx7K3Wc9QZkFx5+CX27WFpAMxJNiYGAXfmMIKC7jstlr32UhTgK6T07OtqR+wYlWm9IxzennjnvdJg==}
1135 |     cpu: [arm]
1136 |     os: [linux]
1137 | 
1138 |   '@rollup/rollup-linux-arm-musleabihf@4.30.1':
1139 |     resolution: {integrity: sha512-B8Rcyj9AV7ZlEFqvB5BubG5iO6ANDsRKlhIxySXcF1axXYUyqwBok+XZPgIYGBgs7LDXfWfifxhw0Ik57T0Yug==}
1140 |     cpu: [arm]
1141 |     os: [linux]
1142 | 
1143 |   '@rollup/rollup-linux-arm64-gnu@4.30.1':
1144 |     resolution: {integrity: sha512-hqVyueGxAj3cBKrAI4aFHLV+h0Lv5VgWZs9CUGqr1z0fZtlADVV1YPOij6AhcK5An33EXaxnDLmJdQikcn5NEw==}
1145 |     cpu: [arm64]
1146 |     os: [linux]
1147 | 
1148 |   '@rollup/rollup-linux-arm64-musl@4.30.1':
1149 |     resolution: {integrity: sha512-i4Ab2vnvS1AE1PyOIGp2kXni69gU2DAUVt6FSXeIqUCPIR3ZlheMW3oP2JkukDfu3PsexYRbOiJrY+yVNSk9oA==}
1150 |     cpu: [arm64]
1151 |     os: [linux]
1152 | 
1153 |   '@rollup/rollup-linux-loongarch64-gnu@4.30.1':
1154 |     resolution: {integrity: sha512-fARcF5g296snX0oLGkVxPmysetwUk2zmHcca+e9ObOovBR++9ZPOhqFUM61UUZ2EYpXVPN1redgqVoBB34nTpQ==}
1155 |     cpu: [loong64]
1156 |     os: [linux]
1157 | 
1158 |   '@rollup/rollup-linux-powerpc64le-gnu@4.30.1':
1159 |     resolution: {integrity: sha512-GLrZraoO3wVT4uFXh67ElpwQY0DIygxdv0BNW9Hkm3X34wu+BkqrDrkcsIapAY+N2ATEbvak0XQ9gxZtCIA5Rw==}
1160 |     cpu: [ppc64]
1161 |     os: [linux]
1162 | 
1163 |   '@rollup/rollup-linux-riscv64-gnu@4.30.1':
1164 |     resolution: {integrity: sha512-0WKLaAUUHKBtll0wvOmh6yh3S0wSU9+yas923JIChfxOaaBarmb/lBKPF0w/+jTVozFnOXJeRGZ8NvOxvk/jcw==}
1165 |     cpu: [riscv64]
1166 |     os: [linux]
1167 | 
1168 |   '@rollup/rollup-linux-s390x-gnu@4.30.1':
1169 |     resolution: {integrity: sha512-GWFs97Ruxo5Bt+cvVTQkOJ6TIx0xJDD/bMAOXWJg8TCSTEK8RnFeOeiFTxKniTc4vMIaWvCplMAFBt9miGxgkA==}
1170 |     cpu: [s390x]
1171 |     os: [linux]
1172 | 
1173 |   '@rollup/rollup-linux-x64-gnu@4.30.1':
1174 |     resolution: {integrity: sha512-UtgGb7QGgXDIO+tqqJ5oZRGHsDLO8SlpE4MhqpY9Llpzi5rJMvrK6ZGhsRCST2abZdBqIBeXW6WPD5fGK5SDwg==}
1175 |     cpu: [x64]
1176 |     os: [linux]
1177 | 
1178 |   '@rollup/rollup-linux-x64-musl@4.30.1':
1179 |     resolution: {integrity: sha512-V9U8Ey2UqmQsBT+xTOeMzPzwDzyXmnAoO4edZhL7INkwQcaW1Ckv3WJX3qrrp/VHaDkEWIBWhRwP47r8cdrOow==}
1180 |     cpu: [x64]
1181 |     os: [linux]
1182 | 
1183 |   '@rollup/rollup-win32-arm64-msvc@4.30.1':
1184 |     resolution: {integrity: sha512-WabtHWiPaFF47W3PkHnjbmWawnX/aE57K47ZDT1BXTS5GgrBUEpvOzq0FI0V/UYzQJgdb8XlhVNH8/fwV8xDjw==}
1185 |     cpu: [arm64]
1186 |     os: [win32]
1187 | 
1188 |   '@rollup/rollup-win32-ia32-msvc@4.30.1':
1189 |     resolution: {integrity: sha512-pxHAU+Zv39hLUTdQQHUVHf4P+0C47y/ZloorHpzs2SXMRqeAWmGghzAhfOlzFHHwjvgokdFAhC4V+6kC1lRRfw==}
1190 |     cpu: [ia32]
1191 |     os: [win32]
1192 | 
1193 |   '@rollup/rollup-win32-x64-msvc@4.30.1':
1194 |     resolution: {integrity: sha512-D6qjsXGcvhTjv0kI4fU8tUuBDF/Ueee4SVX79VfNDXZa64TfCW1Slkb6Z7O1p7vflqZjcmOVdZlqf8gvJxc6og==}
1195 |     cpu: [x64]
1196 |     os: [win32]
1197 | 
1198 |   '@sinclair/typebox@0.27.8':
1199 |     resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}
1200 | 
1201 |   '@sinonjs/commons@3.0.1':
1202 |     resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}
1203 | 
1204 |   '@sinonjs/fake-timers@10.3.0':
1205 |     resolution: {integrity: sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==}
1206 | 
1207 |   '@swc/core-darwin-arm64@1.10.7':
1208 |     resolution: {integrity: sha512-SI0OFg987P6hcyT0Dbng3YRISPS9uhLX1dzW4qRrfqQdb0i75lPJ2YWe9CN47HBazrIA5COuTzrD2Dc0TcVsSQ==}
1209 |     engines: {node: '>=10'}
1210 |     cpu: [arm64]
1211 |     os: [darwin]
1212 | 
1213 |   '@swc/core-darwin-x64@1.10.7':
1214 |     resolution: {integrity: sha512-RFIAmWVicD/l3RzxgHW0R/G1ya/6nyMspE2cAeDcTbjHi0I5qgdhBWd6ieXOaqwEwiCd0Mot1g2VZrLGoBLsjQ==}
1215 |     engines: {node: '>=10'}
1216 |     cpu: [x64]
1217 |     os: [darwin]
1218 | 
1219 |   '@swc/core-linux-arm-gnueabihf@1.10.7':
1220 |     resolution: {integrity: sha512-QP8vz7yELWfop5mM5foN6KkLylVO7ZUgWSF2cA0owwIaziactB2hCPZY5QU690coJouk9KmdFsPWDnaCFUP8tg==}
1221 |     engines: {node: '>=10'}
1222 |     cpu: [arm]
1223 |     os: [linux]
1224 | 
1225 |   '@swc/core-linux-arm64-gnu@1.10.7':
1226 |     resolution: {integrity: sha512-NgUDBGQcOeLNR+EOpmUvSDIP/F7i/OVOKxst4wOvT5FTxhnkWrW+StJGKj+DcUVSK5eWOYboSXr1y+Hlywwokw==}
1227 |     engines: {node: '>=10'}
1228 |     cpu: [arm64]
1229 |     os: [linux]
1230 | 
1231 |   '@swc/core-linux-arm64-musl@1.10.7':
1232 |     resolution: {integrity: sha512-gp5Un3EbeSThBIh6oac5ZArV/CsSmTKj5jNuuUAuEsML3VF9vqPO+25VuxCvsRf/z3py+xOWRaN2HY/rjMeZog==}
1233 |     engines: {node: '>=10'}
1234 |     cpu: [arm64]
1235 |     os: [linux]
1236 | 
1237 |   '@swc/core-linux-x64-gnu@1.10.7':
1238 |     resolution: {integrity: sha512-k/OxLLMl/edYqbZyUNg6/bqEHTXJT15l9WGqsl/2QaIGwWGvles8YjruQYQ9d4h/thSXLT9gd8bExU2D0N+bUA==}
1239 |     engines: {node: '>=10'}
1240 |     cpu: [x64]
1241 |     os: [linux]
1242 | 
1243 |   '@swc/core-linux-x64-musl@1.10.7':
1244 |     resolution: {integrity: sha512-XeDoURdWt/ybYmXLCEE8aSiTOzEn0o3Dx5l9hgt0IZEmTts7HgHHVeRgzGXbR4yDo0MfRuX5nE1dYpTmCz0uyA==}
1245 |     engines: {node: '>=10'}
1246 |     cpu: [x64]
1247 |     os: [linux]
1248 | 
1249 |   '@swc/core-win32-arm64-msvc@1.10.7':
1250 |     resolution: {integrity: sha512-nYAbi/uLS+CU0wFtBx8TquJw2uIMKBnl04LBmiVoFrsIhqSl+0MklaA9FVMGA35NcxSJfcm92Prl2W2LfSnTqQ==}
1251 |     engines: {node: '>=10'}
1252 |     cpu: [arm64]
1253 |     os: [win32]
1254 | 
1255 |   '@swc/core-win32-ia32-msvc@1.10.7':
1256 |     resolution: {integrity: sha512-+aGAbsDsIxeLxw0IzyQLtvtAcI1ctlXVvVcXZMNXIXtTURM876yNrufRo4ngoXB3jnb1MLjIIjgXfFs/eZTUSw==}
1257 |     engines: {node: '>=10'}
1258 |     cpu: [ia32]
1259 |     os: [win32]
1260 | 
1261 |   '@swc/core-win32-x64-msvc@1.10.7':
1262 |     resolution: {integrity: sha512-TBf4clpDBjF/UUnkKrT0/th76/zwvudk5wwobiTFqDywMApHip5O0VpBgZ+4raY2TM8k5+ujoy7bfHb22zu17Q==}
1263 |     engines: {node: '>=10'}
1264 |     cpu: [x64]
1265 |     os: [win32]
1266 | 
1267 |   '@swc/core@1.10.7':
1268 |     resolution: {integrity: sha512-py91kjI1jV5D5W/Q+PurBdGsdU5TFbrzamP7zSCqLdMcHkKi3rQEM5jkQcZr0MXXSJTaayLxS3MWYTBIkzPDrg==}
1269 |     engines: {node: '>=10'}
1270 |     peerDependencies:
1271 |       '@swc/helpers': '*'
1272 |     peerDependenciesMeta:
1273 |       '@swc/helpers':
1274 |         optional: true
1275 | 
1276 |   '@swc/counter@0.1.3':
1277 |     resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}
1278 | 
1279 |   '@swc/types@0.1.17':
1280 |     resolution: {integrity: sha512-V5gRru+aD8YVyCOMAjMpWR1Ui577DD5KSJsHP8RAxopAH22jFz6GZd/qxqjO6MJHQhcsjvjOFXyDhyLQUnMveQ==}
1281 | 
1282 |   '@tailwindcss/aspect-ratio@0.4.2':
1283 |     resolution: {integrity: sha512-8QPrypskfBa7QIMuKHg2TA7BqES6vhBrDLOv8Unb6FcFyd3TjKbc6lcmb9UPQHxfl24sXoJ41ux/H7qQQvfaSQ==}
1284 |     peerDependencies:
1285 |       tailwindcss: '>=2.0.0 || >=3.0.0 || >=3.0.0-alpha.1'
1286 | 
1287 |   '@tailwindcss/forms@0.5.10':
1288 |     resolution: {integrity: sha512-utI1ONF6uf/pPNO68kmN1b8rEwNXv3czukalo8VtJH8ksIkZXr3Q3VYudZLkCsDd4Wku120uF02hYK25XGPorw==}
1289 |     peerDependencies:
1290 |       tailwindcss: '>=3.0.0 || >= 3.0.0-alpha.1 || >= 4.0.0-alpha.20 || >= 4.0.0-beta.1'
1291 | 
1292 |   '@tanstack/query-core@5.64.1':
1293 |     resolution: {integrity: sha512-978Wx4Wl4UJZbmvU/rkaM9cQtXXrbhK0lsz/UZhYIbyKYA8E4LdomTwyh2GHZ4oU0BKKoDH4YlKk2VscCUgNmg==}
1294 | 
1295 |   '@tanstack/query-devtools@5.62.16':
1296 |     resolution: {integrity: sha512-3ff6UBJr0H3nIhfLSl9911rvKqXf0u4B58jl0uYdDWLqPk9pCvYIbxC35cGxK2+8INl4IaFVUHb/IdgWrNkg3Q==}
1297 | 
1298 |   '@tanstack/react-query-devtools@5.64.1':
1299 |     resolution: {integrity: sha512-8ajcGE3wXYlb4KuJnkFYkJwJKc/qmPNTpQD7YTgLRMBPTGGp1xk7VMzxL87DoXuweO8luplUUblJJ3noVs/luQ==}
1300 |     peerDependencies:
1301 |       '@tanstack/react-query': ^5.64.1
1302 |       react: ^18 || ^19
1303 | 
1304 |   '@tanstack/react-query@5.64.1':
1305 |     resolution: {integrity: sha512-vW5ggHpIO2Yjj44b4sB+Fd3cdnlMJppXRBJkEHvld6FXh3j5dwWJoQo7mGtKI2RbSFyiyu/PhGAy0+Vv5ev9Eg==}
1306 |     peerDependencies:
1307 |       react: ^18 || ^19
1308 | 
1309 |   '@tanstack/react-virtual@3.11.2':
1310 |     resolution: {integrity: sha512-OuFzMXPF4+xZgx8UzJha0AieuMihhhaWG0tCqpp6tDzlFwOmNBPYMuLOtMJ1Tr4pXLHmgjcWhG6RlknY2oNTdQ==}
1311 |     peerDependencies:
1312 |       react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
1313 |       react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
1314 | 
1315 |   '@tanstack/virtual-core@3.11.2':
1316 |     resolution: {integrity: sha512-vTtpNt7mKCiZ1pwU9hfKPhpdVO2sVzFQsxoVBGtOSHxlrRRzYr8iQ2TlwbAcRYCcEiZ9ECAM8kBzH0v2+VzfKw==}
1317 | 
1318 |   '@testing-library/dom@9.3.4':
1319 |     resolution: {integrity: sha512-FlS4ZWlp97iiNWig0Muq8p+3rVDjRiYE+YKGbAqXOu9nwJFFOdL00kFpz42M+4huzYi86vAK1sOOfyOG45muIQ==}
1320 |     engines: {node: '>=14'}
1321 | 
1322 |   '@testing-library/jest-dom@6.6.3':
1323 |     resolution: {integrity: sha512-IteBhl4XqYNkM54f4ejhLRJiZNqcSCoXUOG2CPK7qbD322KjQozM4kHQOfkG2oln9b9HTYqs+Sae8vBATubxxA==}
1324 |     engines: {node: '>=14', npm: '>=6', yarn: '>=1'}
1325 | 
1326 |   '@testing-library/react@14.3.1':
1327 |     resolution: {integrity: sha512-H99XjUhWQw0lTgyMN05W3xQG1Nh4lq574D8keFf1dDoNTJgp66VbJozRaczoF+wsiaPJNt/TcnfpLGufGxSrZQ==}
1328 |     engines: {node: '>=14'}
1329 |     peerDependencies:
1330 |       react: ^18.0.0
1331 |       react-dom: ^18.0.0
1332 | 
1333 |   '@testing-library/user-event@14.5.2':
1334 |     resolution: {integrity: sha512-YAh82Wh4TIrxYLmfGcixwD18oIjyC1pFQC2Y01F2lzV2HTMiYrI0nze0FD0ocB//CKS/7jIUgae+adPqxK5yCQ==}
1335 |     engines: {node: '>=12', npm: '>=6'}
1336 |     peerDependencies:
1337 |       '@testing-library/dom': '>=7.21.4'
1338 | 
1339 |   '@tsconfig/node10@1.0.11':
1340 |     resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}
1341 | 
1342 |   '@tsconfig/node12@1.0.11':
1343 |     resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}
1344 | 
1345 |   '@tsconfig/node14@1.0.3':
1346 |     resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}
1347 | 
1348 |   '@tsconfig/node16@1.0.4':
1349 |     resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}
1350 | 
1351 |   '@types/aria-query@5.0.4':
1352 |     resolution: {integrity: sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==}
1353 | 
1354 |   '@types/babel__core@7.20.5':
1355 |     resolution: {integrity: sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==}
1356 | 
1357 |   '@types/babel__generator@7.6.8':
1358 |     resolution: {integrity: sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==}
1359 | 
1360 |   '@types/babel__template@7.4.4':
1361 |     resolution: {integrity: sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==}
1362 | 
1363 |   '@types/babel__traverse@7.20.6':
1364 |     resolution: {integrity: sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==}
1365 | 
1366 |   '@types/bcryptjs@2.4.6':
1367 |     resolution: {integrity: sha512-9xlo6R2qDs5uixm0bcIqCeMCE6HiQsIyel9KQySStiyqNl2tnj2mP3DX1Nf56MD6KMenNNlBBsy3LJ7gUEQPXQ==}
1368 | 
1369 |   '@types/body-parser@1.19.5':
1370 |     resolution: {integrity: sha512-fB3Zu92ucau0iQ0JMCFQE7b/dv8Ot07NI3KaZIkIUNXq82k4eBAqUaneXfleGY9JWskeS9y+u0nXMyspcuQrCg==}
1371 | 
1372 |   '@types/connect@3.4.38':
1373 |     resolution: {integrity: sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==}
1374 | 
1375 |   '@types/cookiejar@2.1.5':
1376 |     resolution: {integrity: sha512-he+DHOWReW0nghN24E1WUqM0efK4kI9oTqDm6XmK8ZPe2djZ90BSNdGnIyCLzCPw7/pogPlGbzI2wHGGmi4O/Q==}
1377 | 
1378 |   '@types/cors@2.8.17':
1379 |     resolution: {integrity: sha512-8CGDvrBj1zgo2qE+oS3pOCyYNqCPryMWY2bGfwA0dcfopWGgxs+78df0Rs3rc9THP4JkOhLsAa+15VdpAqkcUA==}
1380 | 
1381 |   '@types/estree@1.0.6':
1382 |     resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}
1383 | 
1384 |   '@types/express-serve-static-core@4.19.6':
1385 |     resolution: {integrity: sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==}
1386 | 
1387 |   '@types/express@4.17.21':
1388 |     resolution: {integrity: sha512-ejlPM315qwLpaQlQDTjPdsUFSc6ZsP4AN6AlWnogPjQ7CVi7PYF3YVz+CY3jE2pwYf7E/7HlDAN0rV2GxTG0HQ==}
1389 | 
1390 |   '@types/google.maps@3.58.1':
1391 |     resolution: {integrity: sha512-X9QTSvGJ0nCfMzYOnaVs/k6/4L+7F5uCS+4iUmkLEls6J9S/Phv+m/i3mDeyc49ZBgwab3EFO1HEoBY7k98EGQ==}
1392 | 
1393 |   '@types/graceful-fs@4.1.9':
1394 |     resolution: {integrity: sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==}
1395 | 
1396 |   '@types/http-errors@2.0.4':
1397 |     resolution: {integrity: sha512-D0CFMMtydbJAegzOyHjtiKPLlvnm3iTZyZRSZoLq2mRhDdmLfIWOCYPfQJ4cu2erKghU++QvjcUjp/5h7hESpA==}
1398 | 
1399 |   '@types/istanbul-lib-coverage@2.0.6':
1400 |     resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}
1401 | 
1402 |   '@types/istanbul-lib-report@3.0.3':
1403 |     resolution: {integrity: sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==}
1404 | 
1405 |   '@types/istanbul-reports@3.0.4':
1406 |     resolution: {integrity: sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==}
1407 | 
1408 |   '@types/jest@29.5.14':
1409 |     resolution: {integrity: sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==}
1410 | 
1411 |   '@types/json-schema@7.0.15':
1412 |     resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
1413 | 
1414 |   '@types/jsonwebtoken@9.0.7':
1415 |     resolution: {integrity: sha512-ugo316mmTYBl2g81zDFnZ7cfxlut3o+/EQdaP7J8QN2kY6lJ22hmQYCK5EHcJHbrW+dkCGSCPgbG8JtYj6qSrg==}
1416 | 
1417 |   '@types/methods@1.1.4':
1418 |     resolution: {integrity: sha512-ymXWVrDiCxTBE3+RIrrP533E70eA+9qu7zdWoHuOmGujkYtzf4HQF96b8nwHLqhuf4ykX61IGRIB38CC6/sImQ==}
1419 | 
1420 |   '@types/mime@1.3.5':
1421 |     resolution: {integrity: sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==}
1422 | 
1423 |   '@types/morgan@1.9.9':
1424 |     resolution: {integrity: sha512-iRYSDKVaC6FkGSpEVVIvrRGw0DfJMiQzIn3qr2G5B3C//AWkulhXgaBd7tS9/J79GWSYMTHGs7PfI5b3Y8m+RQ==}
1425 | 
1426 |   '@types/multer@1.4.12':
1427 |     resolution: {integrity: sha512-pQ2hoqvXiJt2FP9WQVLPRO+AmiIm/ZYkavPlIQnx282u4ZrVdztx0pkh3jjpQt0Kz+YI0YhSG264y08UJKoUQg==}
1428 | 
1429 |   '@types/node@20.17.12':
1430 |     resolution: {integrity: sha512-vo/wmBgMIiEA23A/knMfn/cf37VnuF52nZh5ZoW0GWt4e4sxNquibrMRJ7UQsA06+MBx9r/H1jsI9grYjQCQlw==}
1431 | 
1432 |   '@types/nodemailer@6.4.17':
1433 |     resolution: {integrity: sha512-I9CCaIp6DTldEg7vyUTZi8+9Vo0hi1/T8gv3C89yk1rSAAzoKQ8H8ki/jBYJSFoH/BisgLP8tkZMlQ91CIquww==}
1434 | 
1435 |   '@types/prop-types@15.7.14':
1436 |     resolution: {integrity: sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==}
1437 | 
1438 |   '@types/qs@6.9.17':
1439 |     resolution: {integrity: sha512-rX4/bPcfmvxHDv0XjfJELTTr+iB+tn032nPILqHm5wbthUUUuVtNGGqzhya9XUxjTP8Fpr0qYgSZZKxGY++svQ==}
1440 | 
1441 |   '@types/range-parser@1.2.7':
1442 |     resolution: {integrity: sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==}
1443 | 
1444 |   '@types/react-dom@18.3.5':
1445 |     resolution: {integrity: sha512-P4t6saawp+b/dFrUr2cvkVsfvPguwsxtH6dNIYRllMsefqFzkZk5UIjzyDOv5g1dXIPdG4Sp1yCR4Z6RCUsG/Q==}
1446 |     peerDependencies:
1447 |       '@types/react': ^18.0.0
1448 | 
1449 |   '@types/react-transition-group@4.4.12':
1450 |     resolution: {integrity: sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==}
1451 |     peerDependencies:
1452 |       '@types/react': '*'
1453 | 
1454 |   '@types/react@18.3.18':
1455 |     resolution: {integrity: sha512-t4yC+vtgnkYjNSKlFx1jkAhH8LgTo2N/7Qvi83kdEaUtMDiwpbLAktKDaAMlRcJ5eSxZkH74eEGt1ky31d7kfQ==}
1456 | 
1457 |   '@types/semver@7.5.8':
1458 |     resolution: {integrity: sha512-I8EUhyrgfLrcTkzV3TSsGyl1tSuPrEDzr0yd5m90UgNxQkyDXULk3b6MlQqTCpZpNtWe1K0hzclnZkTcLBe2UQ==}
1459 | 
1460 |   '@types/send@0.17.4':
1461 |     resolution: {integrity: sha512-x2EM6TJOybec7c52BX0ZspPodMsQUd5L6PRwOunVyVUhXiBSKf3AezDL8Dgvgt5o0UfKNfuA0eMLr2wLT4AiBA==}
1462 | 
1463 |   '@types/serve-static@1.15.7':
1464 |     resolution: {integrity: sha512-W8Ym+h8nhuRwaKPaDw34QUkwsGi6Rc4yYqvKFo5rm2FUEhCFbzVWrxXUxuKK8TASjWsysJY0nsmNCGhCOIsrOw==}
1465 | 
1466 |   '@types/stack-utils@2.0.3':
1467 |     resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}
1468 | 
1469 |   '@types/superagent@8.1.9':
1470 |     resolution: {integrity: sha512-pTVjI73witn+9ILmoJdajHGW2jkSaOzhiFYF1Rd3EQ94kymLqB9PjD9ISg7WaALC7+dCHT0FGe9T2LktLq/3GQ==}
1471 | 
1472 |   '@types/supertest@6.0.2':
1473 |     resolution: {integrity: sha512-137ypx2lk/wTQbW6An6safu9hXmajAifU/s7szAHLN/FeIm5w7yR0Wkl9fdJMRSHwOn4HLAI0DaB2TOORuhPDg==}
1474 | 
1475 |   '@types/triple-beam@1.3.5':
1476 |     resolution: {integrity: sha512-6WaYesThRMCl19iryMYP7/x2OVgCtbIVflDGFpWnb9irXI3UjYE4AzmYuiUKY1AJstGijoY+MgUszMgRxIYTYw==}
1477 | 
1478 |   '@types/yargs-parser@21.0.3':
1479 |     resolution: {integrity: sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==}
1480 | 
1481 |   '@types/yargs@17.0.33':
1482 |     resolution: {integrity: sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==}
1483 | 
1484 |   '@typescript-eslint/eslint-plugin@6.21.0':
1485 |     resolution: {integrity: sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==}
1486 |     engines: {node: ^16.0.0 || >=18.0.0}
1487 |     peerDependencies:
1488 |       '@typescript-eslint/parser': ^6.0.0 || ^6.0.0-alpha
1489 |       eslint: ^7.0.0 || ^8.0.0
1490 |       typescript: '*'
1491 |     peerDependenciesMeta:
1492 |       typescript:
1493 |         optional: true
1494 | 
1495 |   '@typescript-eslint/parser@6.21.0':
1496 |     resolution: {integrity: sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==}
1497 |     engines: {node: ^16.0.0 || >=18.0.0}
1498 |     peerDependencies:
1499 |       eslint: ^7.0.0 || ^8.0.0
1500 |       typescript: '*'
1501 |     peerDependenciesMeta:
1502 |       typescript:
1503 |         optional: true
1504 | 
1505 |   '@typescript-eslint/scope-manager@6.21.0':
1506 |     resolution: {integrity: sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==}
1507 |     engines: {node: ^16.0.0 || >=18.0.0}
1508 | 
1509 |   '@typescript-eslint/type-utils@6.21.0':
1510 |     resolution: {integrity: sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==}
1511 |     engines: {node: ^16.0.0 || >=18.0.0}
1512 |     peerDependencies:
1513 |       eslint: ^7.0.0 || ^8.0.0
1514 |       typescript: '*'
1515 |     peerDependenciesMeta:
1516 |       typescript:
1517 |         optional: true
1518 | 
1519 |   '@typescript-eslint/types@6.21.0':
1520 |     resolution: {integrity: sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==}
1521 |     engines: {node: ^16.0.0 || >=18.0.0}
1522 | 
1523 |   '@typescript-eslint/typescript-estree@6.21.0':
1524 |     resolution: {integrity: sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==}
1525 |     engines: {node: ^16.0.0 || >=18.0.0}
1526 |     peerDependencies:
1527 |       typescript: '*'
1528 |     peerDependenciesMeta:
1529 |       typescript:
1530 |         optional: true
1531 | 
1532 |   '@typescript-eslint/utils@6.21.0':
1533 |     resolution: {integrity: sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==}
1534 |     engines: {node: ^16.0.0 || >=18.0.0}
1535 |     peerDependencies:
1536 |       eslint: ^7.0.0 || ^8.0.0
1537 | 
1538 |   '@typescript-eslint/visitor-keys@6.21.0':
1539 |     resolution: {integrity: sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==}
1540 |     engines: {node: ^16.0.0 || >=18.0.0}
1541 | 
1542 |   '@ungap/structured-clone@1.2.1':
1543 |     resolution: {integrity: sha512-fEzPV3hSkSMltkw152tJKNARhOupqbH96MZWyRjNaYZOMIzbrTeQDG+MTc6Mr2pgzFQzFxAfmhGDNP5QK++2ZA==}
1544 | 
1545 |   '@vitejs/plugin-react-swc@3.7.2':
1546 |     resolution: {integrity: sha512-y0byko2b2tSVVf5Gpng1eEhX1OvPC7x8yns1Fx8jDzlJp4LS6CMkCPfLw47cjyoMrshQDoQw4qcgjsU9VvlCew==}
1547 |     peerDependencies:
1548 |       vite: ^4 || ^5 || ^6
1549 | 
1550 |   '@vitejs/plugin-react@4.3.4':
1551 |     resolution: {integrity: sha512-SCCPBJtYLdE8PX/7ZQAs1QAZ8Jqwih+0VBLum1EGqmCCQal+MIUqLCzj3ZUy8ufbC0cAM4LRlSTm7IQJwWT4ug==}
1552 |     engines: {node: ^14.18.0 || >=16.0.0}
1553 |     peerDependencies:
1554 |       vite: ^4.2.0 || ^5.0.0 || ^6.0.0
1555 | 
1556 |   '@vitest/coverage-v8@1.6.0':
1557 |     resolution: {integrity: sha512-KvapcbMY/8GYIG0rlwwOKCVNRc0OL20rrhFkg/CHNzncV03TE2XWvO5w9uZYoxNiMEBacAJt3unSOiZ7svePew==}
1558 |     peerDependencies:
1559 |       vitest: 1.6.0
1560 | 
1561 |   '@vitest/expect@1.6.0':
1562 |     resolution: {integrity: sha512-ixEvFVQjycy/oNgHjqsL6AZCDduC+tflRluaHIzKIsdbzkLn2U/iBnVeJwB6HsIjQBdfMR8Z0tRxKUsvFJEeWQ==}
1563 | 
1564 |   '@vitest/runner@1.6.0':
1565 |     resolution: {integrity: sha512-P4xgwPjwesuBiHisAVz/LSSZtDjOTPYZVmNAnpHHSR6ONrf8eCJOFRvUwdHn30F5M1fxhqtl7QZQUk2dprIXAg==}
1566 | 
1567 |   '@vitest/snapshot@1.6.0':
1568 |     resolution: {integrity: sha512-+Hx43f8Chus+DCmygqqfetcAZrDJwvTj0ymqjQq4CvmpKFSTVteEOBzCusu1x2tt4OJcvBflyHUE0DZSLgEMtQ==}
1569 | 
1570 |   '@vitest/spy@1.6.0':
1571 |     resolution: {integrity: sha512-leUTap6B/cqi/bQkXUu6bQV5TZPx7pmMBKBQiI0rJA8c3pB56ZsaTbREnF7CJfmvAS4V2cXIBAh/3rVwrrCYgw==}
1572 | 
1573 |   '@vitest/utils@1.6.0':
1574 |     resolution: {integrity: sha512-21cPiuGMoMZwiOHa2i4LXkMkMkCGzA+MVFV70jRwHo95dL4x/ts5GZhML1QWuy7yfp3WzK3lRvZi3JnXTYqrBw==}
1575 | 
1576 |   accepts@1.3.8:
1577 |     resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}
1578 |     engines: {node: '>= 0.6'}
1579 | 
1580 |   acorn-jsx@5.3.2:
1581 |     resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
1582 |     peerDependencies:
1583 |       acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
1584 | 
1585 |   acorn-walk@8.3.4:
1586 |     resolution: {integrity: sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==}
1587 |     engines: {node: '>=0.4.0'}
1588 | 
1589 |   acorn@8.14.0:
1590 |     resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}
1591 |     engines: {node: '>=0.4.0'}
1592 |     hasBin: true
1593 | 
1594 |   ajv@6.12.6:
1595 |     resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
1596 | 
1597 |   ansi-escapes@4.3.2:
1598 |     resolution: {integrity: sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==}
1599 |     engines: {node: '>=8'}
1600 | 
1601 |   ansi-regex@5.0.1:
1602 |     resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
1603 |     engines: {node: '>=8'}
1604 | 
1605 |   ansi-regex@6.1.0:
1606 |     resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}
1607 |     engines: {node: '>=12'}
1608 | 
1609 |   ansi-styles@4.3.0:
1610 |     resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
1611 |     engines: {node: '>=8'}
1612 | 
1613 |   ansi-styles@5.2.0:
1614 |     resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}
1615 |     engines: {node: '>=10'}
1616 | 
1617 |   ansi-styles@6.2.1:
1618 |     resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
1619 |     engines: {node: '>=12'}
1620 | 
1621 |   any-promise@1.3.0:
1622 |     resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}
1623 | 
1624 |   anymatch@3.1.3:
1625 |     resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
1626 |     engines: {node: '>= 8'}
1627 | 
1628 |   append-field@1.0.0:
1629 |     resolution: {integrity: sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==}
1630 | 
1631 |   arg@4.1.3:
1632 |     resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}
1633 | 
1634 |   arg@5.0.2:
1635 |     resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}
1636 | 
1637 |   argparse@1.0.10:
1638 |     resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}
1639 | 
1640 |   argparse@2.0.1:
1641 |     resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}
1642 | 
1643 |   aria-query@5.1.3:
1644 |     resolution: {integrity: sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==}
1645 | 
1646 |   aria-query@5.3.2:
1647 |     resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}
1648 |     engines: {node: '>= 0.4'}
1649 | 
1650 |   array-buffer-byte-length@1.0.2:
1651 |     resolution: {integrity: sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==}
1652 |     engines: {node: '>= 0.4'}
1653 | 
1654 |   array-flatten@1.1.1:
1655 |     resolution: {integrity: sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==}
1656 | 
1657 |   array-union@2.1.0:
1658 |     resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}
1659 |     engines: {node: '>=8'}
1660 | 
1661 |   asap@2.0.6:
1662 |     resolution: {integrity: sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==}
1663 | 
1664 |   assertion-error@1.1.0:
1665 |     resolution: {integrity: sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==}
1666 | 
1667 |   async@3.2.6:
1668 |     resolution: {integrity: sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==}
1669 | 
1670 |   asynckit@0.4.0:
1671 |     resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}
1672 | 
1673 |   autoprefixer@10.4.20:
1674 |     resolution: {integrity: sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==}
1675 |     engines: {node: ^10 || ^12 || >=14}
1676 |     hasBin: true
1677 |     peerDependencies:
1678 |       postcss: ^8.1.0
1679 | 
1680 |   available-typed-arrays@1.0.7:
1681 |     resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
1682 |     engines: {node: '>= 0.4'}
1683 | 
1684 |   axios@1.7.9:
1685 |     resolution: {integrity: sha512-LhLcE7Hbiryz8oMDdDptSrWowmB4Bl6RCt6sIJKpRB4XtVf0iEgewX3au/pJqm+Py1kCASkb/FFKjxQaLtxJvw==}
1686 | 
1687 |   babel-jest@29.7.0:
1688 |     resolution: {integrity: sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==}
1689 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1690 |     peerDependencies:
1691 |       '@babel/core': ^7.8.0
1692 | 
1693 |   babel-plugin-istanbul@6.1.1:
1694 |     resolution: {integrity: sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==}
1695 |     engines: {node: '>=8'}
1696 | 
1697 |   babel-plugin-jest-hoist@29.6.3:
1698 |     resolution: {integrity: sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==}
1699 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1700 | 
1701 |   babel-preset-current-node-syntax@1.1.0:
1702 |     resolution: {integrity: sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==}
1703 |     peerDependencies:
1704 |       '@babel/core': ^7.0.0
1705 | 
1706 |   babel-preset-jest@29.6.3:
1707 |     resolution: {integrity: sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==}
1708 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1709 |     peerDependencies:
1710 |       '@babel/core': ^7.0.0
1711 | 
1712 |   balanced-match@1.0.2:
1713 |     resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
1714 | 
1715 |   basic-auth@2.0.1:
1716 |     resolution: {integrity: sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==}
1717 |     engines: {node: '>= 0.8'}
1718 | 
1719 |   bcryptjs@2.4.3:
1720 |     resolution: {integrity: sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==}
1721 | 
1722 |   binary-extensions@2.3.0:
1723 |     resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
1724 |     engines: {node: '>=8'}
1725 | 
1726 |   body-parser@1.20.3:
1727 |     resolution: {integrity: sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==}
1728 |     engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}
1729 | 
1730 |   brace-expansion@1.1.11:
1731 |     resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}
1732 | 
1733 |   brace-expansion@2.0.1:
1734 |     resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}
1735 | 
1736 |   braces@3.0.3:
1737 |     resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
1738 |     engines: {node: '>=8'}
1739 | 
1740 |   browserslist@4.24.4:
1741 |     resolution: {integrity: sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==}
1742 |     engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
1743 |     hasBin: true
1744 | 
1745 |   bs-logger@0.2.6:
1746 |     resolution: {integrity: sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==}
1747 |     engines: {node: '>= 6'}
1748 | 
1749 |   bser@2.1.1:
1750 |     resolution: {integrity: sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==}
1751 | 
1752 |   buffer-equal-constant-time@1.0.1:
1753 |     resolution: {integrity: sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==}
1754 | 
1755 |   buffer-from@1.1.2:
1756 |     resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}
1757 | 
1758 |   bundle-require@5.1.0:
1759 |     resolution: {integrity: sha512-3WrrOuZiyaaZPWiEt4G3+IffISVC9HYlWueJEBWED4ZH4aIAC2PnkdnuRrR94M+w6yGWn4AglWtJtBI8YqvgoA==}
1760 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
1761 |     peerDependencies:
1762 |       esbuild: '>=0.18'
1763 | 
1764 |   busboy@1.6.0:
1765 |     resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}
1766 |     engines: {node: '>=10.16.0'}
1767 | 
1768 |   bytes@3.1.2:
1769 |     resolution: {integrity: sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==}
1770 |     engines: {node: '>= 0.8'}
1771 | 
1772 |   cac@6.7.14:
1773 |     resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}
1774 |     engines: {node: '>=8'}
1775 | 
1776 |   call-bind-apply-helpers@1.0.1:
1777 |     resolution: {integrity: sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==}
1778 |     engines: {node: '>= 0.4'}
1779 | 
1780 |   call-bind@1.0.8:
1781 |     resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}
1782 |     engines: {node: '>= 0.4'}
1783 | 
1784 |   call-bound@1.0.3:
1785 |     resolution: {integrity: sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==}
1786 |     engines: {node: '>= 0.4'}
1787 | 
1788 |   callsites@3.1.0:
1789 |     resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
1790 |     engines: {node: '>=6'}
1791 | 
1792 |   camelcase-css@2.0.1:
1793 |     resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
1794 |     engines: {node: '>= 6'}
1795 | 
1796 |   camelcase@5.3.1:
1797 |     resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}
1798 |     engines: {node: '>=6'}
1799 | 
1800 |   camelcase@6.3.0:
1801 |     resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}
1802 |     engines: {node: '>=10'}
1803 | 
1804 |   caniuse-lite@1.0.30001692:
1805 |     resolution: {integrity: sha512-A95VKan0kdtrsnMubMKxEKUKImOPSuCpYgxSQBo036P5YYgVIcOYJEgt/txJWqObiRQeISNCfef9nvlQ0vbV7A==}
1806 | 
1807 |   chai@4.5.0:
1808 |     resolution: {integrity: sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==}
1809 |     engines: {node: '>=4'}
1810 | 
1811 |   chalk@3.0.0:
1812 |     resolution: {integrity: sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==}
1813 |     engines: {node: '>=8'}
1814 | 
1815 |   chalk@4.1.2:
1816 |     resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
1817 |     engines: {node: '>=10'}
1818 | 
1819 |   char-regex@1.0.2:
1820 |     resolution: {integrity: sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==}
1821 |     engines: {node: '>=10'}
1822 | 
1823 |   check-error@1.0.3:
1824 |     resolution: {integrity: sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==}
1825 | 
1826 |   chokidar@3.6.0:
1827 |     resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
1828 |     engines: {node: '>= 8.10.0'}
1829 | 
1830 |   chokidar@4.0.3:
1831 |     resolution: {integrity: sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==}
1832 |     engines: {node: '>= 14.16.0'}
1833 | 
1834 |   ci-info@3.9.0:
1835 |     resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}
1836 |     engines: {node: '>=8'}
1837 | 
1838 |   cjs-module-lexer@1.4.1:
1839 |     resolution: {integrity: sha512-cuSVIHi9/9E/+821Qjdvngor+xpnlwnuwIyZOaLmHBVdXL+gP+I6QQB9VkO7RI77YIcTV+S1W9AreJ5eN63JBA==}
1840 | 
1841 |   client-only@0.0.1:
1842 |     resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}
1843 | 
1844 |   cliui@8.0.1:
1845 |     resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
1846 |     engines: {node: '>=12'}
1847 | 
1848 |   clsx@2.1.1:
1849 |     resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}
1850 |     engines: {node: '>=6'}
1851 | 
1852 |   co@4.6.0:
1853 |     resolution: {integrity: sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==}
1854 |     engines: {iojs: '>= 1.0.0', node: '>= 0.12.0'}
1855 | 
1856 |   collect-v8-coverage@1.0.2:
1857 |     resolution: {integrity: sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==}
1858 | 
1859 |   color-convert@1.9.3:
1860 |     resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}
1861 | 
1862 |   color-convert@2.0.1:
1863 |     resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
1864 |     engines: {node: '>=7.0.0'}
1865 | 
1866 |   color-name@1.1.3:
1867 |     resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}
1868 | 
1869 |   color-name@1.1.4:
1870 |     resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}
1871 | 
1872 |   color-string@1.9.1:
1873 |     resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}
1874 | 
1875 |   color@3.2.1:
1876 |     resolution: {integrity: sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==}
1877 | 
1878 |   colorspace@1.1.4:
1879 |     resolution: {integrity: sha512-BgvKJiuVu1igBUF2kEjRCZXol6wiiGbY5ipL/oVPwm0BL9sIpMIzM8IK7vwuxIIzOXMV3Ey5w+vxhm0rR/TN8w==}
1880 | 
1881 |   combined-stream@1.0.8:
1882 |     resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}
1883 |     engines: {node: '>= 0.8'}
1884 | 
1885 |   commander@4.1.1:
1886 |     resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}
1887 |     engines: {node: '>= 6'}
1888 | 
1889 |   component-emitter@1.3.1:
1890 |     resolution: {integrity: sha512-T0+barUSQRTUQASh8bx02dl+DhF54GtIDY13Y3m9oWTklKbb3Wv974meRpeZ3lp1JpLVECWWNHC4vaG2XHXouQ==}
1891 | 
1892 |   concat-map@0.0.1:
1893 |     resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
1894 | 
1895 |   concat-stream@1.6.2:
1896 |     resolution: {integrity: sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==}
1897 |     engines: {'0': node >= 0.8}
1898 | 
1899 |   confbox@0.1.8:
1900 |     resolution: {integrity: sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==}
1901 | 
1902 |   consola@3.4.0:
1903 |     resolution: {integrity: sha512-EiPU8G6dQG0GFHNR8ljnZFki/8a+cQwEQ+7wpxdChl02Q8HXlwEZWD5lqAF8vC2sEC3Tehr8hy7vErz88LHyUA==}
1904 |     engines: {node: ^14.18.0 || >=16.10.0}
1905 | 
1906 |   content-disposition@0.5.4:
1907 |     resolution: {integrity: sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==}
1908 |     engines: {node: '>= 0.6'}
1909 | 
1910 |   content-type@1.0.5:
1911 |     resolution: {integrity: sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==}
1912 |     engines: {node: '>= 0.6'}
1913 | 
1914 |   convert-source-map@2.0.0:
1915 |     resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}
1916 | 
1917 |   cookie-signature@1.0.6:
1918 |     resolution: {integrity: sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==}
1919 | 
1920 |   cookie@0.7.1:
1921 |     resolution: {integrity: sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==}
1922 |     engines: {node: '>= 0.6'}
1923 | 
1924 |   cookiejar@2.1.4:
1925 |     resolution: {integrity: sha512-LDx6oHrK+PhzLKJU9j5S7/Y3jM/mUHvD/DeI1WQmJn652iPC5Y4TBzC9l+5OMOXlyTTA+SmVUPm0HQUwpD5Jqw==}
1926 | 
1927 |   core-util-is@1.0.3:
1928 |     resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}
1929 | 
1930 |   cors@2.8.5:
1931 |     resolution: {integrity: sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==}
1932 |     engines: {node: '>= 0.10'}
1933 | 
1934 |   create-jest@29.7.0:
1935 |     resolution: {integrity: sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==}
1936 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1937 |     hasBin: true
1938 | 
1939 |   create-require@1.1.1:
1940 |     resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}
1941 | 
1942 |   cross-env@7.0.3:
1943 |     resolution: {integrity: sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==}
1944 |     engines: {node: '>=10.14', npm: '>=6', yarn: '>=1'}
1945 |     hasBin: true
1946 | 
1947 |   cross-spawn@7.0.6:
1948 |     resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
1949 |     engines: {node: '>= 8'}
1950 | 
1951 |   css.escape@1.5.1:
1952 |     resolution: {integrity: sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==}
1953 | 
1954 |   cssesc@3.0.0:
1955 |     resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
1956 |     engines: {node: '>=4'}
1957 |     hasBin: true
1958 | 
1959 |   csstype@3.1.3:
1960 |     resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
1961 | 
1962 |   debug@2.6.9:
1963 |     resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}
1964 |     peerDependencies:
1965 |       supports-color: '*'
1966 |     peerDependenciesMeta:
1967 |       supports-color:
1968 |         optional: true
1969 | 
1970 |   debug@4.4.0:
1971 |     resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}
1972 |     engines: {node: '>=6.0'}
1973 |     peerDependencies:
1974 |       supports-color: '*'
1975 |     peerDependenciesMeta:
1976 |       supports-color:
1977 |         optional: true
1978 | 
1979 |   dedent@1.5.3:
1980 |     resolution: {integrity: sha512-NHQtfOOW68WD8lgypbLA5oT+Bt0xXJhiYvoR6SmmNXZfpzOGXwdKWmcwG8N7PwVVWV3eF/68nmD9BaJSsTBhyQ==}
1981 |     peerDependencies:
1982 |       babel-plugin-macros: ^3.1.0
1983 |     peerDependenciesMeta:
1984 |       babel-plugin-macros:
1985 |         optional: true
1986 | 
1987 |   deep-eql@4.1.4:
1988 |     resolution: {integrity: sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==}
1989 |     engines: {node: '>=6'}
1990 | 
1991 |   deep-equal@2.2.3:
1992 |     resolution: {integrity: sha512-ZIwpnevOurS8bpT4192sqAowWM76JDKSHYzMLty3BZGSswgq6pBaH3DhCSW5xVAZICZyKdOBPjwww5wfgT/6PA==}
1993 |     engines: {node: '>= 0.4'}
1994 | 
1995 |   deep-is@0.1.4:
1996 |     resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
1997 | 
1998 |   deepmerge@4.3.1:
1999 |     resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}
2000 |     engines: {node: '>=0.10.0'}
2001 | 
2002 |   define-data-property@1.1.4:
2003 |     resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
2004 |     engines: {node: '>= 0.4'}
2005 | 
2006 |   define-properties@1.2.1:
2007 |     resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
2008 |     engines: {node: '>= 0.4'}
2009 | 
2010 |   delayed-stream@1.0.0:
2011 |     resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}
2012 |     engines: {node: '>=0.4.0'}
2013 | 
2014 |   depd@2.0.0:
2015 |     resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}
2016 |     engines: {node: '>= 0.8'}
2017 | 
2018 |   destroy@1.2.0:
2019 |     resolution: {integrity: sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==}
2020 |     engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}
2021 | 
2022 |   detect-newline@3.1.0:
2023 |     resolution: {integrity: sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==}
2024 |     engines: {node: '>=8'}
2025 | 
2026 |   dezalgo@1.0.4:
2027 |     resolution: {integrity: sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==}
2028 | 
2029 |   didyoumean@1.2.2:
2030 |     resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}
2031 | 
2032 |   diff-sequences@29.6.3:
2033 |     resolution: {integrity: sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==}
2034 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2035 | 
2036 |   diff@4.0.2:
2037 |     resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}
2038 |     engines: {node: '>=0.3.1'}
2039 | 
2040 |   dir-glob@3.0.1:
2041 |     resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}
2042 |     engines: {node: '>=8'}
2043 | 
2044 |   dlv@1.1.3:
2045 |     resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}
2046 | 
2047 |   doctrine@3.0.0:
2048 |     resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}
2049 |     engines: {node: '>=6.0.0'}
2050 | 
2051 |   dom-accessibility-api@0.5.16:
2052 |     resolution: {integrity: sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==}
2053 | 
2054 |   dom-accessibility-api@0.6.3:
2055 |     resolution: {integrity: sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==}
2056 | 
2057 |   dom-helpers@5.2.1:
2058 |     resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}
2059 | 
2060 |   dotenv@16.4.7:
2061 |     resolution: {integrity: sha512-47qPchRCykZC03FhkYAhrvwU4xDBFIj1QPqaarj6mdM/hgUzfPHcpkHJOn3mJAufFeeAxAzeGsr5X0M4k6fLZQ==}
2062 |     engines: {node: '>=12'}
2063 | 
2064 |   dunder-proto@1.0.1:
2065 |     resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
2066 |     engines: {node: '>= 0.4'}
2067 | 
2068 |   eastasianwidth@0.2.0:
2069 |     resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}
2070 | 
2071 |   ecdsa-sig-formatter@1.0.11:
2072 |     resolution: {integrity: sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==}
2073 | 
2074 |   ee-first@1.1.1:
2075 |     resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}
2076 | 
2077 |   ejs@3.1.10:
2078 |     resolution: {integrity: sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==}
2079 |     engines: {node: '>=0.10.0'}
2080 |     hasBin: true
2081 | 
2082 |   electron-to-chromium@1.5.80:
2083 |     resolution: {integrity: sha512-LTrKpW0AqIuHwmlVNV+cjFYTnXtM9K37OGhpe0ZI10ScPSxqVSryZHIY3WnCS5NSYbBODRTZyhRMS2h5FAEqAw==}
2084 | 
2085 |   emittery@0.13.1:
2086 |     resolution: {integrity: sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==}
2087 |     engines: {node: '>=12'}
2088 | 
2089 |   emoji-regex@8.0.0:
2090 |     resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}
2091 | 
2092 |   emoji-regex@9.2.2:
2093 |     resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}
2094 | 
2095 |   enabled@2.0.0:
2096 |     resolution: {integrity: sha512-AKrN98kuwOzMIdAizXGI86UFBoo26CL21UM763y1h/GMSJ4/OHU9k2YlsmBpyScFo/wbLzWQJBMCW4+IO3/+OQ==}
2097 | 
2098 |   encodeurl@1.0.2:
2099 |     resolution: {integrity: sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==}
2100 |     engines: {node: '>= 0.8'}
2101 | 
2102 |   encodeurl@2.0.0:
2103 |     resolution: {integrity: sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==}
2104 |     engines: {node: '>= 0.8'}
2105 | 
2106 |   entities@4.5.0:
2107 |     resolution: {integrity: sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==}
2108 |     engines: {node: '>=0.12'}
2109 | 
2110 |   error-ex@1.3.2:
2111 |     resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}
2112 | 
2113 |   es-define-property@1.0.1:
2114 |     resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}
2115 |     engines: {node: '>= 0.4'}
2116 | 
2117 |   es-errors@1.3.0:
2118 |     resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
2119 |     engines: {node: '>= 0.4'}
2120 | 
2121 |   es-get-iterator@1.1.3:
2122 |     resolution: {integrity: sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==}
2123 | 
2124 |   es-object-atoms@1.0.0:
2125 |     resolution: {integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==}
2126 |     engines: {node: '>= 0.4'}
2127 | 
2128 |   esbuild@0.21.5:
2129 |     resolution: {integrity: sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==}
2130 |     engines: {node: '>=12'}
2131 |     hasBin: true
2132 | 
2133 |   esbuild@0.23.1:
2134 |     resolution: {integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==}
2135 |     engines: {node: '>=18'}
2136 |     hasBin: true
2137 | 
2138 |   esbuild@0.24.2:
2139 |     resolution: {integrity: sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==}
2140 |     engines: {node: '>=18'}
2141 |     hasBin: true
2142 | 
2143 |   escalade@3.2.0:
2144 |     resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}
2145 |     engines: {node: '>=6'}
2146 | 
2147 |   escape-html@1.0.3:
2148 |     resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}
2149 | 
2150 |   escape-string-regexp@2.0.0:
2151 |     resolution: {integrity: sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==}
2152 |     engines: {node: '>=8'}
2153 | 
2154 |   escape-string-regexp@4.0.0:
2155 |     resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
2156 |     engines: {node: '>=10'}
2157 | 
2158 |   eslint-config-prettier@9.1.0:
2159 |     resolution: {integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==}
2160 |     hasBin: true
2161 |     peerDependencies:
2162 |       eslint: '>=7.0.0'
2163 | 
2164 |   eslint-plugin-react-hooks@4.6.2:
2165 |     resolution: {integrity: sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==}
2166 |     engines: {node: '>=10'}
2167 |     peerDependencies:
2168 |       eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0
2169 | 
2170 |   eslint-plugin-react-refresh@0.4.18:
2171 |     resolution: {integrity: sha512-IRGEoFn3OKalm3hjfolEWGqoF/jPqeEYFp+C8B0WMzwGwBMvlRDQd06kghDhF0C61uJ6WfSDhEZE/sAQjduKgw==}
2172 |     peerDependencies:
2173 |       eslint: '>=8.40'
2174 | 
2175 |   eslint-scope@7.2.2:
2176 |     resolution: {integrity: sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==}
2177 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2178 | 
2179 |   eslint-visitor-keys@3.4.3:
2180 |     resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
2181 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2182 | 
2183 |   eslint@8.57.1:
2184 |     resolution: {integrity: sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==}
2185 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2186 |     deprecated: This version is no longer supported. Please see https://eslint.org/version-support for other options.
2187 |     hasBin: true
2188 | 
2189 |   espree@9.6.1:
2190 |     resolution: {integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==}
2191 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2192 | 
2193 |   esprima@4.0.1:
2194 |     resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
2195 |     engines: {node: '>=4'}
2196 |     hasBin: true
2197 | 
2198 |   esquery@1.6.0:
2199 |     resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
2200 |     engines: {node: '>=0.10'}
2201 | 
2202 |   esrecurse@4.3.0:
2203 |     resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
2204 |     engines: {node: '>=4.0'}
2205 | 
2206 |   estraverse@5.3.0:
2207 |     resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
2208 |     engines: {node: '>=4.0'}
2209 | 
2210 |   estree-walker@3.0.3:
2211 |     resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}
2212 | 
2213 |   esutils@2.0.3:
2214 |     resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
2215 |     engines: {node: '>=0.10.0'}
2216 | 
2217 |   etag@1.8.1:
2218 |     resolution: {integrity: sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==}
2219 |     engines: {node: '>= 0.6'}
2220 | 
2221 |   execa@5.1.1:
2222 |     resolution: {integrity: sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==}
2223 |     engines: {node: '>=10'}
2224 | 
2225 |   execa@8.0.1:
2226 |     resolution: {integrity: sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==}
2227 |     engines: {node: '>=16.17'}
2228 | 
2229 |   exit@0.1.2:
2230 |     resolution: {integrity: sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==}
2231 |     engines: {node: '>= 0.8.0'}
2232 | 
2233 |   expect@29.7.0:
2234 |     resolution: {integrity: sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==}
2235 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2236 | 
2237 |   express-rate-limit@7.5.0:
2238 |     resolution: {integrity: sha512-eB5zbQh5h+VenMPM3fh+nw1YExi5nMr6HUCR62ELSP11huvxm/Uir1H1QEyTkk5QX6A58pX6NmaTMceKZ0Eodg==}
2239 |     engines: {node: '>= 16'}
2240 |     peerDependencies:
2241 |       express: ^4.11 || 5 || ^5.0.0-beta.1
2242 | 
2243 |   express@4.21.2:
2244 |     resolution: {integrity: sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==}
2245 |     engines: {node: '>= 0.10.0'}
2246 | 
2247 |   fast-deep-equal@3.1.3:
2248 |     resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
2249 | 
2250 |   fast-glob@3.3.3:
2251 |     resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
2252 |     engines: {node: '>=8.6.0'}
2253 | 
2254 |   fast-json-stable-stringify@2.1.0:
2255 |     resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
2256 | 
2257 |   fast-levenshtein@2.0.6:
2258 |     resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
2259 | 
2260 |   fast-safe-stringify@2.1.1:
2261 |     resolution: {integrity: sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==}
2262 | 
2263 |   fastq@1.18.0:
2264 |     resolution: {integrity: sha512-QKHXPW0hD8g4UET03SdOdunzSouc9N4AuHdsX8XNcTsuz+yYFILVNIX4l9yHABMhiEI9Db0JTTIpu0wB+Y1QQw==}
2265 | 
2266 |   fb-watchman@2.0.2:
2267 |     resolution: {integrity: sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==}
2268 | 
2269 |   fdir@6.4.2:
2270 |     resolution: {integrity: sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==}
2271 |     peerDependencies:
2272 |       picomatch: ^3 || ^4
2273 |     peerDependenciesMeta:
2274 |       picomatch:
2275 |         optional: true
2276 | 
2277 |   fecha@4.2.3:
2278 |     resolution: {integrity: sha512-OP2IUU6HeYKJi3i0z4A19kHMQoLVs4Hc+DPqqxI2h/DPZHTm/vjsfC6P0b4jCMy14XizLBqvndQ+UilD7707Jw==}
2279 | 
2280 |   file-entry-cache@6.0.1:
2281 |     resolution: {integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==}
2282 |     engines: {node: ^10.12.0 || >=12.0.0}
2283 | 
2284 |   filelist@1.0.4:
2285 |     resolution: {integrity: sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==}
2286 | 
2287 |   fill-range@7.1.1:
2288 |     resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
2289 |     engines: {node: '>=8'}
2290 | 
2291 |   finalhandler@1.3.1:
2292 |     resolution: {integrity: sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==}
2293 |     engines: {node: '>= 0.8'}
2294 | 
2295 |   find-up@4.1.0:
2296 |     resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}
2297 |     engines: {node: '>=8'}
2298 | 
2299 |   find-up@5.0.0:
2300 |     resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
2301 |     engines: {node: '>=10'}
2302 | 
2303 |   flat-cache@3.2.0:
2304 |     resolution: {integrity: sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==}
2305 |     engines: {node: ^10.12.0 || >=12.0.0}
2306 | 
2307 |   flatted@3.3.2:
2308 |     resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}
2309 | 
2310 |   fn.name@1.1.0:
2311 |     resolution: {integrity: sha512-GRnmB5gPyJpAhTQdSZTSp9uaPSvl09KoYcMQtsB9rQoOmzs9dH6ffeccH+Z+cv6P68Hu5bC6JjRh4Ah/mHSNRw==}
2312 | 
2313 |   follow-redirects@1.15.9:
2314 |     resolution: {integrity: sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==}
2315 |     engines: {node: '>=4.0'}
2316 |     peerDependencies:
2317 |       debug: '*'
2318 |     peerDependenciesMeta:
2319 |       debug:
2320 |         optional: true
2321 | 
2322 |   for-each@0.3.3:
2323 |     resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}
2324 | 
2325 |   foreground-child@3.3.0:
2326 |     resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}
2327 |     engines: {node: '>=14'}
2328 | 
2329 |   form-data@4.0.1:
2330 |     resolution: {integrity: sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==}
2331 |     engines: {node: '>= 6'}
2332 | 
2333 |   formidable@3.5.2:
2334 |     resolution: {integrity: sha512-Jqc1btCy3QzRbJaICGwKcBfGWuLADRerLzDqi2NwSt/UkXLsHJw2TVResiaoBufHVHy9aSgClOHCeJsSsFLTbg==}
2335 | 
2336 |   forwarded@0.2.0:
2337 |     resolution: {integrity: sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==}
2338 |     engines: {node: '>= 0.6'}
2339 | 
2340 |   fraction.js@4.3.7:
2341 |     resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}
2342 | 
2343 |   fresh@0.5.2:
2344 |     resolution: {integrity: sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==}
2345 |     engines: {node: '>= 0.6'}
2346 | 
2347 |   fs.realpath@1.0.0:
2348 |     resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}
2349 | 
2350 |   fsevents@2.3.3:
2351 |     resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
2352 |     engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
2353 |     os: [darwin]
2354 | 
2355 |   function-bind@1.1.2:
2356 |     resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
2357 | 
2358 |   functions-have-names@1.2.3:
2359 |     resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
2360 | 
2361 |   gensync@1.0.0-beta.2:
2362 |     resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
2363 |     engines: {node: '>=6.9.0'}
2364 | 
2365 |   get-caller-file@2.0.5:
2366 |     resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
2367 |     engines: {node: 6.* || 8.* || >= 10.*}
2368 | 
2369 |   get-func-name@2.0.2:
2370 |     resolution: {integrity: sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==}
2371 | 
2372 |   get-intrinsic@1.2.7:
2373 |     resolution: {integrity: sha512-VW6Pxhsrk0KAOqs3WEd0klDiF/+V7gQOpAvY1jVU/LHmaD/kQO4523aiJuikX/QAKYiW6x8Jh+RJej1almdtCA==}
2374 |     engines: {node: '>= 0.4'}
2375 | 
2376 |   get-package-type@0.1.0:
2377 |     resolution: {integrity: sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==}
2378 |     engines: {node: '>=8.0.0'}
2379 | 
2380 |   get-proto@1.0.1:
2381 |     resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}
2382 |     engines: {node: '>= 0.4'}
2383 | 
2384 |   get-stream@6.0.1:
2385 |     resolution: {integrity: sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==}
2386 |     engines: {node: '>=10'}
2387 | 
2388 |   get-stream@8.0.1:
2389 |     resolution: {integrity: sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==}
2390 |     engines: {node: '>=16'}
2391 | 
2392 |   get-tsconfig@4.8.1:
2393 |     resolution: {integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==}
2394 | 
2395 |   glob-parent@5.1.2:
2396 |     resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
2397 |     engines: {node: '>= 6'}
2398 | 
2399 |   glob-parent@6.0.2:
2400 |     resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
2401 |     engines: {node: '>=10.13.0'}
2402 | 
2403 |   glob@10.4.5:
2404 |     resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}
2405 |     hasBin: true
2406 | 
2407 |   glob@7.2.3:
2408 |     resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
2409 |     deprecated: Glob versions prior to v9 are no longer supported
2410 | 
2411 |   globals@11.12.0:
2412 |     resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
2413 |     engines: {node: '>=4'}
2414 | 
2415 |   globals@13.24.0:
2416 |     resolution: {integrity: sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==}
2417 |     engines: {node: '>=8'}
2418 | 
2419 |   globby@11.1.0:
2420 |     resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}
2421 |     engines: {node: '>=10'}
2422 | 
2423 |   gopd@1.2.0:
2424 |     resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
2425 |     engines: {node: '>= 0.4'}
2426 | 
2427 |   graceful-fs@4.2.11:
2428 |     resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}
2429 | 
2430 |   graphemer@1.4.0:
2431 |     resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}
2432 | 
2433 |   happy-dom@12.10.3:
2434 |     resolution: {integrity: sha512-JzUXOh0wdNGY54oKng5hliuBkq/+aT1V3YpTM+lrN/GoLQTANZsMaIvmHiHe612rauHvPJnDZkZ+5GZR++1Abg==}
2435 | 
2436 |   has-bigints@1.1.0:
2437 |     resolution: {integrity: sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==}
2438 |     engines: {node: '>= 0.4'}
2439 | 
2440 |   has-flag@4.0.0:
2441 |     resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
2442 |     engines: {node: '>=8'}
2443 | 
2444 |   has-property-descriptors@1.0.2:
2445 |     resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}
2446 | 
2447 |   has-symbols@1.1.0:
2448 |     resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
2449 |     engines: {node: '>= 0.4'}
2450 | 
2451 |   has-tostringtag@1.0.2:
2452 |     resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
2453 |     engines: {node: '>= 0.4'}
2454 | 
2455 |   hasown@2.0.2:
2456 |     resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
2457 |     engines: {node: '>= 0.4'}
2458 | 
2459 |   hexoid@2.0.0:
2460 |     resolution: {integrity: sha512-qlspKUK7IlSQv2o+5I7yhUd7TxlOG2Vr5LTa3ve2XSNVKAL/n/u/7KLvKmFNimomDIKvZFXWHv0T12mv7rT8Aw==}
2461 |     engines: {node: '>=8'}
2462 | 
2463 |   html-escaper@2.0.2:
2464 |     resolution: {integrity: sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==}
2465 | 
2466 |   http-errors@2.0.0:
2467 |     resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}
2468 |     engines: {node: '>= 0.8'}
2469 | 
2470 |   human-signals@2.1.0:
2471 |     resolution: {integrity: sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==}
2472 |     engines: {node: '>=10.17.0'}
2473 | 
2474 |   human-signals@5.0.0:
2475 |     resolution: {integrity: sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==}
2476 |     engines: {node: '>=16.17.0'}
2477 | 
2478 |   iconv-lite@0.4.24:
2479 |     resolution: {integrity: sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==}
2480 |     engines: {node: '>=0.10.0'}
2481 | 
2482 |   iconv-lite@0.6.3:
2483 |     resolution: {integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==}
2484 |     engines: {node: '>=0.10.0'}
2485 | 
2486 |   ignore@5.3.2:
2487 |     resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
2488 |     engines: {node: '>= 4'}
2489 | 
2490 |   import-fresh@3.3.0:
2491 |     resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}
2492 |     engines: {node: '>=6'}
2493 | 
2494 |   import-local@3.2.0:
2495 |     resolution: {integrity: sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==}
2496 |     engines: {node: '>=8'}
2497 |     hasBin: true
2498 | 
2499 |   imurmurhash@0.1.4:
2500 |     resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
2501 |     engines: {node: '>=0.8.19'}
2502 | 
2503 |   indent-string@4.0.0:
2504 |     resolution: {integrity: sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==}
2505 |     engines: {node: '>=8'}
2506 | 
2507 |   inflight@1.0.6:
2508 |     resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
2509 |     deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
2510 | 
2511 |   inherits@2.0.4:
2512 |     resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}
2513 | 
2514 |   internal-slot@1.1.0:
2515 |     resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
2516 |     engines: {node: '>= 0.4'}
2517 | 
2518 |   invariant@2.2.4:
2519 |     resolution: {integrity: sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==}
2520 | 
2521 |   ipaddr.js@1.9.1:
2522 |     resolution: {integrity: sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==}
2523 |     engines: {node: '>= 0.10'}
2524 | 
2525 |   is-arguments@1.2.0:
2526 |     resolution: {integrity: sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==}
2527 |     engines: {node: '>= 0.4'}
2528 | 
2529 |   is-array-buffer@3.0.5:
2530 |     resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
2531 |     engines: {node: '>= 0.4'}
2532 | 
2533 |   is-arrayish@0.2.1:
2534 |     resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}
2535 | 
2536 |   is-arrayish@0.3.2:
2537 |     resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}
2538 | 
2539 |   is-bigint@1.1.0:
2540 |     resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}
2541 |     engines: {node: '>= 0.4'}
2542 | 
2543 |   is-binary-path@2.1.0:
2544 |     resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
2545 |     engines: {node: '>=8'}
2546 | 
2547 |   is-boolean-object@1.2.1:
2548 |     resolution: {integrity: sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==}
2549 |     engines: {node: '>= 0.4'}
2550 | 
2551 |   is-callable@1.2.7:
2552 |     resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
2553 |     engines: {node: '>= 0.4'}
2554 | 
2555 |   is-core-module@2.16.1:
2556 |     resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
2557 |     engines: {node: '>= 0.4'}
2558 | 
2559 |   is-date-object@1.1.0:
2560 |     resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}
2561 |     engines: {node: '>= 0.4'}
2562 | 
2563 |   is-extglob@2.1.1:
2564 |     resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
2565 |     engines: {node: '>=0.10.0'}
2566 | 
2567 |   is-fullwidth-code-point@3.0.0:
2568 |     resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
2569 |     engines: {node: '>=8'}
2570 | 
2571 |   is-generator-fn@2.1.0:
2572 |     resolution: {integrity: sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==}
2573 |     engines: {node: '>=6'}
2574 | 
2575 |   is-glob@4.0.3:
2576 |     resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
2577 |     engines: {node: '>=0.10.0'}
2578 | 
2579 |   is-map@2.0.3:
2580 |     resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}
2581 |     engines: {node: '>= 0.4'}
2582 | 
2583 |   is-number-object@1.1.1:
2584 |     resolution: {integrity: sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==}
2585 |     engines: {node: '>= 0.4'}
2586 | 
2587 |   is-number@7.0.0:
2588 |     resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
2589 |     engines: {node: '>=0.12.0'}
2590 | 
2591 |   is-path-inside@3.0.3:
2592 |     resolution: {integrity: sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==}
2593 |     engines: {node: '>=8'}
2594 | 
2595 |   is-regex@1.2.1:
2596 |     resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}
2597 |     engines: {node: '>= 0.4'}
2598 | 
2599 |   is-set@2.0.3:
2600 |     resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}
2601 |     engines: {node: '>= 0.4'}
2602 | 
2603 |   is-shared-array-buffer@1.0.4:
2604 |     resolution: {integrity: sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==}
2605 |     engines: {node: '>= 0.4'}
2606 | 
2607 |   is-stream@2.0.1:
2608 |     resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}
2609 |     engines: {node: '>=8'}
2610 | 
2611 |   is-stream@3.0.0:
2612 |     resolution: {integrity: sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==}
2613 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
2614 | 
2615 |   is-string@1.1.1:
2616 |     resolution: {integrity: sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==}
2617 |     engines: {node: '>= 0.4'}
2618 | 
2619 |   is-symbol@1.1.1:
2620 |     resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}
2621 |     engines: {node: '>= 0.4'}
2622 | 
2623 |   is-weakmap@2.0.2:
2624 |     resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}
2625 |     engines: {node: '>= 0.4'}
2626 | 
2627 |   is-weakset@2.0.4:
2628 |     resolution: {integrity: sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==}
2629 |     engines: {node: '>= 0.4'}
2630 | 
2631 |   isarray@1.0.0:
2632 |     resolution: {integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==}
2633 | 
2634 |   isarray@2.0.5:
2635 |     resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}
2636 | 
2637 |   isexe@2.0.0:
2638 |     resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}
2639 | 
2640 |   istanbul-lib-coverage@3.2.2:
2641 |     resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}
2642 |     engines: {node: '>=8'}
2643 | 
2644 |   istanbul-lib-instrument@5.2.1:
2645 |     resolution: {integrity: sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==}
2646 |     engines: {node: '>=8'}
2647 | 
2648 |   istanbul-lib-instrument@6.0.3:
2649 |     resolution: {integrity: sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==}
2650 |     engines: {node: '>=10'}
2651 | 
2652 |   istanbul-lib-report@3.0.1:
2653 |     resolution: {integrity: sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==}
2654 |     engines: {node: '>=10'}
2655 | 
2656 |   istanbul-lib-source-maps@4.0.1:
2657 |     resolution: {integrity: sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==}
2658 |     engines: {node: '>=10'}
2659 | 
2660 |   istanbul-lib-source-maps@5.0.6:
2661 |     resolution: {integrity: sha512-yg2d+Em4KizZC5niWhQaIomgf5WlL4vOOjZ5xGCmF8SnPE/mDWWXgvRExdcpCgh9lLRRa1/fSYp2ymmbJ1pI+A==}
2662 |     engines: {node: '>=10'}
2663 | 
2664 |   istanbul-reports@3.1.7:
2665 |     resolution: {integrity: sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==}
2666 |     engines: {node: '>=8'}
2667 | 
2668 |   jackspeak@3.4.3:
2669 |     resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}
2670 | 
2671 |   jake@10.9.2:
2672 |     resolution: {integrity: sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==}
2673 |     engines: {node: '>=10'}
2674 |     hasBin: true
2675 | 
2676 |   jest-changed-files@29.7.0:
2677 |     resolution: {integrity: sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==}
2678 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2679 | 
2680 |   jest-circus@29.7.0:
2681 |     resolution: {integrity: sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==}
2682 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2683 | 
2684 |   jest-cli@29.7.0:
2685 |     resolution: {integrity: sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==}
2686 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2687 |     hasBin: true
2688 |     peerDependencies:
2689 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
2690 |     peerDependenciesMeta:
2691 |       node-notifier:
2692 |         optional: true
2693 | 
2694 |   jest-config@29.7.0:
2695 |     resolution: {integrity: sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==}
2696 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2697 |     peerDependencies:
2698 |       '@types/node': '*'
2699 |       ts-node: '>=9.0.0'
2700 |     peerDependenciesMeta:
2701 |       '@types/node':
2702 |         optional: true
2703 |       ts-node:
2704 |         optional: true
2705 | 
2706 |   jest-diff@29.7.0:
2707 |     resolution: {integrity: sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==}
2708 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2709 | 
2710 |   jest-docblock@29.7.0:
2711 |     resolution: {integrity: sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==}
2712 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2713 | 
2714 |   jest-each@29.7.0:
2715 |     resolution: {integrity: sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==}
2716 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2717 | 
2718 |   jest-environment-node@29.7.0:
2719 |     resolution: {integrity: sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==}
2720 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2721 | 
2722 |   jest-get-type@29.6.3:
2723 |     resolution: {integrity: sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==}
2724 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2725 | 
2726 |   jest-haste-map@29.7.0:
2727 |     resolution: {integrity: sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==}
2728 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2729 | 
2730 |   jest-leak-detector@29.7.0:
2731 |     resolution: {integrity: sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==}
2732 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2733 | 
2734 |   jest-matcher-utils@29.7.0:
2735 |     resolution: {integrity: sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==}
2736 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2737 | 
2738 |   jest-message-util@29.7.0:
2739 |     resolution: {integrity: sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==}
2740 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2741 | 
2742 |   jest-mock@29.7.0:
2743 |     resolution: {integrity: sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==}
2744 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2745 | 
2746 |   jest-pnp-resolver@1.2.3:
2747 |     resolution: {integrity: sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==}
2748 |     engines: {node: '>=6'}
2749 |     peerDependencies:
2750 |       jest-resolve: '*'
2751 |     peerDependenciesMeta:
2752 |       jest-resolve:
2753 |         optional: true
2754 | 
2755 |   jest-regex-util@29.6.3:
2756 |     resolution: {integrity: sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==}
2757 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2758 | 
2759 |   jest-resolve-dependencies@29.7.0:
2760 |     resolution: {integrity: sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==}
2761 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2762 | 
2763 |   jest-resolve@29.7.0:
2764 |     resolution: {integrity: sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==}
2765 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2766 | 
2767 |   jest-runner@29.7.0:
2768 |     resolution: {integrity: sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==}
2769 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2770 | 
2771 |   jest-runtime@29.7.0:
2772 |     resolution: {integrity: sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==}
2773 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2774 | 
2775 |   jest-snapshot@29.7.0:
2776 |     resolution: {integrity: sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==}
2777 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2778 | 
2779 |   jest-util@29.7.0:
2780 |     resolution: {integrity: sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==}
2781 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2782 | 
2783 |   jest-validate@29.7.0:
2784 |     resolution: {integrity: sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==}
2785 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2786 | 
2787 |   jest-watcher@29.7.0:
2788 |     resolution: {integrity: sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==}
2789 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2790 | 
2791 |   jest-worker@29.7.0:
2792 |     resolution: {integrity: sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==}
2793 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2794 | 
2795 |   jest@29.7.0:
2796 |     resolution: {integrity: sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==}
2797 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2798 |     hasBin: true
2799 |     peerDependencies:
2800 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
2801 |     peerDependenciesMeta:
2802 |       node-notifier:
2803 |         optional: true
2804 | 
2805 |   jiti@1.21.7:
2806 |     resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}
2807 |     hasBin: true
2808 | 
2809 |   joycon@3.1.1:
2810 |     resolution: {integrity: sha512-34wB/Y7MW7bzjKRjUKTa46I2Z7eV62Rkhva+KkopW7Qvv/OSWBqvkSY7vusOPrNuZcUG3tApvdVgNB8POj3SPw==}
2811 |     engines: {node: '>=10'}
2812 | 
2813 |   js-tokens@4.0.0:
2814 |     resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}
2815 | 
2816 |   js-tokens@9.0.1:
2817 |     resolution: {integrity: sha512-mxa9E9ITFOt0ban3j6L5MpjwegGz6lBQmM1IJkWeBZGcMxto50+eWdjC/52xDbS2vy0k7vIMK0Fe2wfL9OQSpQ==}
2818 | 
2819 |   js-yaml@3.14.1:
2820 |     resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
2821 |     hasBin: true
2822 | 
2823 |   js-yaml@4.1.0:
2824 |     resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
2825 |     hasBin: true
2826 | 
2827 |   jsesc@3.1.0:
2828 |     resolution: {integrity: sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==}
2829 |     engines: {node: '>=6'}
2830 |     hasBin: true
2831 | 
2832 |   json-buffer@3.0.1:
2833 |     resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}
2834 | 
2835 |   json-parse-even-better-errors@2.3.1:
2836 |     resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}
2837 | 
2838 |   json-schema-traverse@0.4.1:
2839 |     resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
2840 | 
2841 |   json-stable-stringify-without-jsonify@1.0.1:
2842 |     resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
2843 | 
2844 |   json5@2.2.3:
2845 |     resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
2846 |     engines: {node: '>=6'}
2847 |     hasBin: true
2848 | 
2849 |   jsonwebtoken@9.0.2:
2850 |     resolution: {integrity: sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==}
2851 |     engines: {node: '>=12', npm: '>=6'}
2852 | 
2853 |   jwa@1.4.1:
2854 |     resolution: {integrity: sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==}
2855 | 
2856 |   jws@3.2.2:
2857 |     resolution: {integrity: sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==}
2858 | 
2859 |   kdbush@4.0.2:
2860 |     resolution: {integrity: sha512-WbCVYJ27Sz8zi9Q7Q0xHC+05iwkm3Znipc2XTlrnJbsHMYktW4hPhXUE8Ys1engBrvffoSCqbil1JQAa7clRpA==}
2861 | 
2862 |   keyv@4.5.4:
2863 |     resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
2864 | 
2865 |   kleur@3.0.3:
2866 |     resolution: {integrity: sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==}
2867 |     engines: {node: '>=6'}
2868 | 
2869 |   kuler@2.0.0:
2870 |     resolution: {integrity: sha512-Xq9nH7KlWZmXAtodXDDRE7vs6DU1gTU8zYDHDiWLSip45Egwq3plLHzPn27NgvzL2r1LMPC1vdqh98sQxtqj4A==}
2871 | 
2872 |   leven@3.1.0:
2873 |     resolution: {integrity: sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==}
2874 |     engines: {node: '>=6'}
2875 | 
2876 |   levn@0.4.1:
2877 |     resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
2878 |     engines: {node: '>= 0.8.0'}
2879 | 
2880 |   lilconfig@3.1.3:
2881 |     resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}
2882 |     engines: {node: '>=14'}
2883 | 
2884 |   lines-and-columns@1.2.4:
2885 |     resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}
2886 | 
2887 |   load-tsconfig@0.2.5:
2888 |     resolution: {integrity: sha512-IXO6OCs9yg8tMKzfPZ1YmheJbZCiEsnBdcB03l0OcfK9prKnJb96siuHCr5Fl37/yo9DnKU+TLpxzTUspw9shg==}
2889 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
2890 | 
2891 |   local-pkg@0.5.1:
2892 |     resolution: {integrity: sha512-9rrA30MRRP3gBD3HTGnC6cDFpaE1kVDWxWgqWJUN0RvDNAo+Nz/9GxB+nHOH0ifbVFy0hSA1V6vFDvnx54lTEQ==}
2893 |     engines: {node: '>=14'}
2894 | 
2895 |   locate-path@5.0.0:
2896 |     resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}
2897 |     engines: {node: '>=8'}
2898 | 
2899 |   locate-path@6.0.0:
2900 |     resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
2901 |     engines: {node: '>=10'}
2902 | 
2903 |   lodash.includes@4.3.0:
2904 |     resolution: {integrity: sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==}
2905 | 
2906 |   lodash.isboolean@3.0.3:
2907 |     resolution: {integrity: sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==}
2908 | 
2909 |   lodash.isinteger@4.0.4:
2910 |     resolution: {integrity: sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==}
2911 | 
2912 |   lodash.isnumber@3.0.3:
2913 |     resolution: {integrity: sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==}
2914 | 
2915 |   lodash.isplainobject@4.0.6:
2916 |     resolution: {integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==}
2917 | 
2918 |   lodash.isstring@4.0.1:
2919 |     resolution: {integrity: sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==}
2920 | 
2921 |   lodash.memoize@4.1.2:
2922 |     resolution: {integrity: sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==}
2923 | 
2924 |   lodash.merge@4.6.2:
2925 |     resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
2926 | 
2927 |   lodash.once@4.1.1:
2928 |     resolution: {integrity: sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==}
2929 | 
2930 |   lodash.sortby@4.7.0:
2931 |     resolution: {integrity: sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA==}
2932 | 
2933 |   lodash@4.17.21:
2934 |     resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}
2935 | 
2936 |   logform@2.7.0:
2937 |     resolution: {integrity: sha512-TFYA4jnP7PVbmlBIfhlSe+WKxs9dklXMTEGcBCIvLhE/Tn3H6Gk1norupVW7m5Cnd4bLcr08AytbyV/xj7f/kQ==}
2938 |     engines: {node: '>= 12.0.0'}
2939 | 
2940 |   loose-envify@1.4.0:
2941 |     resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
2942 |     hasBin: true
2943 | 
2944 |   loupe@2.3.7:
2945 |     resolution: {integrity: sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==}
2946 | 
2947 |   lru-cache@10.4.3:
2948 |     resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}
2949 | 
2950 |   lru-cache@5.1.1:
2951 |     resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}
2952 | 
2953 |   lz-string@1.5.0:
2954 |     resolution: {integrity: sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==}
2955 |     hasBin: true
2956 | 
2957 |   magic-string@0.30.17:
2958 |     resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}
2959 | 
2960 |   magicast@0.3.5:
2961 |     resolution: {integrity: sha512-L0WhttDl+2BOsybvEOLK7fW3UA0OQ0IQ2d6Zl2x/a6vVRs3bAY0ECOSHHeL5jD+SbOpOCUEi0y1DgHEn9Qn1AQ==}
2962 | 
2963 |   make-dir@4.0.0:
2964 |     resolution: {integrity: sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==}
2965 |     engines: {node: '>=10'}
2966 | 
2967 |   make-error@1.3.6:
2968 |     resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}
2969 | 
2970 |   makeerror@1.0.12:
2971 |     resolution: {integrity: sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==}
2972 | 
2973 |   math-intrinsics@1.1.0:
2974 |     resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}
2975 |     engines: {node: '>= 0.4'}
2976 | 
2977 |   media-typer@0.3.0:
2978 |     resolution: {integrity: sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==}
2979 |     engines: {node: '>= 0.6'}
2980 | 
2981 |   merge-descriptors@1.0.3:
2982 |     resolution: {integrity: sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==}
2983 | 
2984 |   merge-stream@2.0.0:
2985 |     resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}
2986 | 
2987 |   merge2@1.4.1:
2988 |     resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
2989 |     engines: {node: '>= 8'}
2990 | 
2991 |   methods@1.1.2:
2992 |     resolution: {integrity: sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==}
2993 |     engines: {node: '>= 0.6'}
2994 | 
2995 |   micromatch@4.0.8:
2996 |     resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
2997 |     engines: {node: '>=8.6'}
2998 | 
2999 |   mime-db@1.52.0:
3000 |     resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
3001 |     engines: {node: '>= 0.6'}
3002 | 
3003 |   mime-types@2.1.35:
3004 |     resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
3005 |     engines: {node: '>= 0.6'}
3006 | 
3007 |   mime@1.6.0:
3008 |     resolution: {integrity: sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==}
3009 |     engines: {node: '>=4'}
3010 |     hasBin: true
3011 | 
3012 |   mime@2.6.0:
3013 |     resolution: {integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==}
3014 |     engines: {node: '>=4.0.0'}
3015 |     hasBin: true
3016 | 
3017 |   mimic-fn@2.1.0:
3018 |     resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}
3019 |     engines: {node: '>=6'}
3020 | 
3021 |   mimic-fn@4.0.0:
3022 |     resolution: {integrity: sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==}
3023 |     engines: {node: '>=12'}
3024 | 
3025 |   min-indent@1.0.1:
3026 |     resolution: {integrity: sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==}
3027 |     engines: {node: '>=4'}
3028 | 
3029 |   mini-svg-data-uri@1.4.4:
3030 |     resolution: {integrity: sha512-r9deDe9p5FJUPZAk3A59wGH7Ii9YrjjWw0jmw/liSbHl2CHiyXj6FcDXDu2K3TjVAXqiJdaw3xxwlZZr9E6nHg==}
3031 |     hasBin: true
3032 | 
3033 |   minimatch@3.1.2:
3034 |     resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
3035 | 
3036 |   minimatch@5.1.6:
3037 |     resolution: {integrity: sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==}
3038 |     engines: {node: '>=10'}
3039 | 
3040 |   minimatch@9.0.3:
3041 |     resolution: {integrity: sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==}
3042 |     engines: {node: '>=16 || 14 >=14.17'}
3043 | 
3044 |   minimatch@9.0.5:
3045 |     resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
3046 |     engines: {node: '>=16 || 14 >=14.17'}
3047 | 
3048 |   minimist@1.2.8:
3049 |     resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
3050 | 
3051 |   minipass@7.1.2:
3052 |     resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
3053 |     engines: {node: '>=16 || 14 >=14.17'}
3054 | 
3055 |   mkdirp@0.5.6:
3056 |     resolution: {integrity: sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==}
3057 |     hasBin: true
3058 | 
3059 |   mlly@1.7.4:
3060 |     resolution: {integrity: sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==}
3061 | 
3062 |   morgan@1.10.0:
3063 |     resolution: {integrity: sha512-AbegBVI4sh6El+1gNwvD5YIck7nSA36weD7xvIxG4in80j/UoK8AEGaWnnz8v1GxonMCltmlNs5ZKbGvl9b1XQ==}
3064 |     engines: {node: '>= 0.8.0'}
3065 | 
3066 |   ms@2.0.0:
3067 |     resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}
3068 | 
3069 |   ms@2.1.3:
3070 |     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
3071 | 
3072 |   multer@1.4.5-lts.1:
3073 |     resolution: {integrity: sha512-ywPWvcDMeH+z9gQq5qYHCCy+ethsk4goepZ45GLD63fOu0YcNecQxi64nDs3qluZB+murG3/D4dJ7+dGctcCQQ==}
3074 |     engines: {node: '>= 6.0.0'}
3075 | 
3076 |   mz@2.7.0:
3077 |     resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}
3078 | 
3079 |   nanoid@3.3.8:
3080 |     resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}
3081 |     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
3082 |     hasBin: true
3083 | 
3084 |   natural-compare@1.4.0:
3085 |     resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}
3086 | 
3087 |   negotiator@0.6.3:
3088 |     resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}
3089 |     engines: {node: '>= 0.6'}
3090 | 
3091 |   node-int64@0.4.0:
3092 |     resolution: {integrity: sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==}
3093 | 
3094 |   node-releases@2.0.19:
3095 |     resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}
3096 | 
3097 |   nodemailer@6.9.16:
3098 |     resolution: {integrity: sha512-psAuZdTIRN08HKVd/E8ObdV6NO7NTBY3KsC30F7M4H1OnmLCUNaS56FpYxyb26zWLSyYF9Ozch9KYHhHegsiOQ==}
3099 |     engines: {node: '>=6.0.0'}
3100 | 
3101 |   normalize-path@3.0.0:
3102 |     resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
3103 |     engines: {node: '>=0.10.0'}
3104 | 
3105 |   normalize-range@0.1.2:
3106 |     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}
3107 |     engines: {node: '>=0.10.0'}
3108 | 
3109 |   npm-run-path@4.0.1:
3110 |     resolution: {integrity: sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==}
3111 |     engines: {node: '>=8'}
3112 | 
3113 |   npm-run-path@5.3.0:
3114 |     resolution: {integrity: sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==}
3115 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
3116 | 
3117 |   object-assign@4.1.1:
3118 |     resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
3119 |     engines: {node: '>=0.10.0'}
3120 | 
3121 |   object-hash@3.0.0:
3122 |     resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}
3123 |     engines: {node: '>= 6'}
3124 | 
3125 |   object-inspect@1.13.3:
3126 |     resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}
3127 |     engines: {node: '>= 0.4'}
3128 | 
3129 |   object-is@1.1.6:
3130 |     resolution: {integrity: sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==}
3131 |     engines: {node: '>= 0.4'}
3132 | 
3133 |   object-keys@1.1.1:
3134 |     resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
3135 |     engines: {node: '>= 0.4'}
3136 | 
3137 |   object.assign@4.1.7:
3138 |     resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}
3139 |     engines: {node: '>= 0.4'}
3140 | 
3141 |   on-finished@2.3.0:
3142 |     resolution: {integrity: sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==}
3143 |     engines: {node: '>= 0.8'}
3144 | 
3145 |   on-finished@2.4.1:
3146 |     resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}
3147 |     engines: {node: '>= 0.8'}
3148 | 
3149 |   on-headers@1.0.2:
3150 |     resolution: {integrity: sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==}
3151 |     engines: {node: '>= 0.8'}
3152 | 
3153 |   once@1.4.0:
3154 |     resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}
3155 | 
3156 |   one-time@1.0.0:
3157 |     resolution: {integrity: sha512-5DXOiRKwuSEcQ/l0kGCF6Q3jcADFv5tSmRaJck/OqkVFcOzutB134KRSfF0xDrL39MNnqxbHBbUUcjZIhTgb2g==}
3158 | 
3159 |   onetime@5.1.2:
3160 |     resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}
3161 |     engines: {node: '>=6'}
3162 | 
3163 |   onetime@6.0.0:
3164 |     resolution: {integrity: sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==}
3165 |     engines: {node: '>=12'}
3166 | 
3167 |   optionator@0.9.4:
3168 |     resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
3169 |     engines: {node: '>= 0.8.0'}
3170 | 
3171 |   p-limit@2.3.0:
3172 |     resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}
3173 |     engines: {node: '>=6'}
3174 | 
3175 |   p-limit@3.1.0:
3176 |     resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
3177 |     engines: {node: '>=10'}
3178 | 
3179 |   p-limit@5.0.0:
3180 |     resolution: {integrity: sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==}
3181 |     engines: {node: '>=18'}
3182 | 
3183 |   p-locate@4.1.0:
3184 |     resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}
3185 |     engines: {node: '>=8'}
3186 | 
3187 |   p-locate@5.0.0:
3188 |     resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
3189 |     engines: {node: '>=10'}
3190 | 
3191 |   p-try@2.2.0:
3192 |     resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}
3193 |     engines: {node: '>=6'}
3194 | 
3195 |   package-json-from-dist@1.0.1:
3196 |     resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}
3197 | 
3198 |   parent-module@1.0.1:
3199 |     resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
3200 |     engines: {node: '>=6'}
3201 | 
3202 |   parse-json@5.2.0:
3203 |     resolution: {integrity: sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==}
3204 |     engines: {node: '>=8'}
3205 | 
3206 |   parseurl@1.3.3:
3207 |     resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}
3208 |     engines: {node: '>= 0.8'}
3209 | 
3210 |   path-exists@4.0.0:
3211 |     resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
3212 |     engines: {node: '>=8'}
3213 | 
3214 |   path-is-absolute@1.0.1:
3215 |     resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
3216 |     engines: {node: '>=0.10.0'}
3217 | 
3218 |   path-key@3.1.1:
3219 |     resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
3220 |     engines: {node: '>=8'}
3221 | 
3222 |   path-key@4.0.0:
3223 |     resolution: {integrity: sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==}
3224 |     engines: {node: '>=12'}
3225 | 
3226 |   path-parse@1.0.7:
3227 |     resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}
3228 | 
3229 |   path-scurry@1.11.1:
3230 |     resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}
3231 |     engines: {node: '>=16 || 14 >=14.18'}
3232 | 
3233 |   path-to-regexp@0.1.12:
3234 |     resolution: {integrity: sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==}
3235 | 
3236 |   path-type@4.0.0:
3237 |     resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}
3238 |     engines: {node: '>=8'}
3239 | 
3240 |   pathe@1.1.2:
3241 |     resolution: {integrity: sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==}
3242 | 
3243 |   pathe@2.0.1:
3244 |     resolution: {integrity: sha512-6jpjMpOth5S9ITVu5clZ7NOgHNsv5vRQdheL9ztp2vZmM6fRbLvyua1tiBIL4lk8SAe3ARzeXEly6siXCjDHDw==}
3245 | 
3246 |   pathval@1.1.1:
3247 |     resolution: {integrity: sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==}
3248 | 
3249 |   picocolors@1.1.1:
3250 |     resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}
3251 | 
3252 |   picomatch@2.3.1:
3253 |     resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
3254 |     engines: {node: '>=8.6'}
3255 | 
3256 |   picomatch@4.0.2:
3257 |     resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}
3258 |     engines: {node: '>=12'}
3259 | 
3260 |   pify@2.3.0:
3261 |     resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}
3262 |     engines: {node: '>=0.10.0'}
3263 | 
3264 |   pirates@4.0.6:
3265 |     resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}
3266 |     engines: {node: '>= 6'}
3267 | 
3268 |   pkg-dir@4.2.0:
3269 |     resolution: {integrity: sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==}
3270 |     engines: {node: '>=8'}
3271 | 
3272 |   pkg-types@1.3.0:
3273 |     resolution: {integrity: sha512-kS7yWjVFCkIw9hqdJBoMxDdzEngmkr5FXeWZZfQ6GoYacjVnsW6l2CcYW/0ThD0vF4LPJgVYnrg4d0uuhwYQbg==}
3274 | 
3275 |   possible-typed-array-names@1.0.0:
3276 |     resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}
3277 |     engines: {node: '>= 0.4'}
3278 | 
3279 |   postcss-import@15.1.0:
3280 |     resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}
3281 |     engines: {node: '>=14.0.0'}
3282 |     peerDependencies:
3283 |       postcss: ^8.0.0
3284 | 
3285 |   postcss-js@4.0.1:
3286 |     resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}
3287 |     engines: {node: ^12 || ^14 || >= 16}
3288 |     peerDependencies:
3289 |       postcss: ^8.4.21
3290 | 
3291 |   postcss-load-config@4.0.2:
3292 |     resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}
3293 |     engines: {node: '>= 14'}
3294 |     peerDependencies:
3295 |       postcss: '>=8.0.9'
3296 |       ts-node: '>=9.0.0'
3297 |     peerDependenciesMeta:
3298 |       postcss:
3299 |         optional: true
3300 |       ts-node:
3301 |         optional: true
3302 | 
3303 |   postcss-load-config@6.0.1:
3304 |     resolution: {integrity: sha512-oPtTM4oerL+UXmx+93ytZVN82RrlY/wPUV8IeDxFrzIjXOLF1pN+EmKPLbubvKHT2HC20xXsCAH2Z+CKV6Oz/g==}
3305 |     engines: {node: '>= 18'}
3306 |     peerDependencies:
3307 |       jiti: '>=1.21.0'
3308 |       postcss: '>=8.0.9'
3309 |       tsx: ^4.8.1
3310 |       yaml: ^2.4.2
3311 |     peerDependenciesMeta:
3312 |       jiti:
3313 |         optional: true
3314 |       postcss:
3315 |         optional: true
3316 |       tsx:
3317 |         optional: true
3318 |       yaml:
3319 |         optional: true
3320 | 
3321 |   postcss-nested@6.2.0:
3322 |     resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}
3323 |     engines: {node: '>=12.0'}
3324 |     peerDependencies:
3325 |       postcss: ^8.2.14
3326 | 
3327 |   postcss-selector-parser@6.1.2:
3328 |     resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}
3329 |     engines: {node: '>=4'}
3330 | 
3331 |   postcss-value-parser@4.2.0:
3332 |     resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}
3333 | 
3334 |   postcss@8.4.49:
3335 |     resolution: {integrity: sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==}
3336 |     engines: {node: ^10 || ^12 || >=14}
3337 | 
3338 |   prelude-ls@1.2.1:
3339 |     resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
3340 |     engines: {node: '>= 0.8.0'}
3341 | 
3342 |   prettier@3.4.2:
3343 |     resolution: {integrity: sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==}
3344 |     engines: {node: '>=14'}
3345 |     hasBin: true
3346 | 
3347 |   pretty-format@27.5.1:
3348 |     resolution: {integrity: sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==}
3349 |     engines: {node: ^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0}
3350 | 
3351 |   pretty-format@29.7.0:
3352 |     resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}
3353 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
3354 | 
3355 |   prisma@5.22.0:
3356 |     resolution: {integrity: sha512-vtpjW3XuYCSnMsNVBjLMNkTj6OZbudcPPTPYHqX0CJfpcdWciI1dM8uHETwmDxxiqEwCIE6WvXucWUetJgfu/A==}
3357 |     engines: {node: '>=16.13'}
3358 |     hasBin: true
3359 | 
3360 |   process-nextick-args@2.0.1:
3361 |     resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}
3362 | 
3363 |   prompts@2.4.2:
3364 |     resolution: {integrity: sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==}
3365 |     engines: {node: '>= 6'}
3366 | 
3367 |   prop-types@15.8.1:
3368 |     resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}
3369 | 
3370 |   proxy-addr@2.0.7:
3371 |     resolution: {integrity: sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==}
3372 |     engines: {node: '>= 0.10'}
3373 | 
3374 |   proxy-from-env@1.1.0:
3375 |     resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}
3376 | 
3377 |   punycode@2.3.1:
3378 |     resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
3379 |     engines: {node: '>=6'}
3380 | 
3381 |   pure-rand@6.1.0:
3382 |     resolution: {integrity: sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==}
3383 | 
3384 |   qs@6.13.0:
3385 |     resolution: {integrity: sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==}
3386 |     engines: {node: '>=0.6'}
3387 | 
3388 |   queue-microtask@1.2.3:
3389 |     resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
3390 | 
3391 |   range-parser@1.2.1:
3392 |     resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}
3393 |     engines: {node: '>= 0.6'}
3394 | 
3395 |   raw-body@2.5.2:
3396 |     resolution: {integrity: sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==}
3397 |     engines: {node: '>= 0.8'}
3398 | 
3399 |   react-dom@18.3.1:
3400 |     resolution: {integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==}
3401 |     peerDependencies:
3402 |       react: ^18.3.1
3403 | 
3404 |   react-is@16.13.1:
3405 |     resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
3406 | 
3407 |   react-is@17.0.2:
3408 |     resolution: {integrity: sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==}
3409 | 
3410 |   react-is@18.3.1:
3411 |     resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}
3412 | 
3413 |   react-refresh@0.14.2:
3414 |     resolution: {integrity: sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==}
3415 |     engines: {node: '>=0.10.0'}
3416 | 
3417 |   react-router-dom@6.28.1:
3418 |     resolution: {integrity: sha512-YraE27C/RdjcZwl5UCqF/ffXnZDxpJdk9Q6jw38SZHjXs7NNdpViq2l2c7fO7+4uWaEfcwfGCv3RSg4e1By/fQ==}
3419 |     engines: {node: '>=14.0.0'}
3420 |     peerDependencies:
3421 |       react: '>=16.8'
3422 |       react-dom: '>=16.8'
3423 | 
3424 |   react-router@6.28.1:
3425 |     resolution: {integrity: sha512-2omQTA3rkMljmrvvo6WtewGdVh45SpL9hGiCI9uUrwGGfNFDIvGK4gYJsKlJoNVi6AQZcopSCballL+QGOm7fA==}
3426 |     engines: {node: '>=14.0.0'}
3427 |     peerDependencies:
3428 |       react: '>=16.8'
3429 | 
3430 |   react-transition-group@4.4.5:
3431 |     resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}
3432 |     peerDependencies:
3433 |       react: '>=16.6.0'
3434 |       react-dom: '>=16.6.0'
3435 | 
3436 |   react@18.3.1:
3437 |     resolution: {integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==}
3438 |     engines: {node: '>=0.10.0'}
3439 | 
3440 |   read-cache@1.0.0:
3441 |     resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}
3442 | 
3443 |   readable-stream@2.3.8:
3444 |     resolution: {integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==}
3445 | 
3446 |   readable-stream@3.6.2:
3447 |     resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}
3448 |     engines: {node: '>= 6'}
3449 | 
3450 |   readdirp@3.6.0:
3451 |     resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
3452 |     engines: {node: '>=8.10.0'}
3453 | 
3454 |   readdirp@4.1.1:
3455 |     resolution: {integrity: sha512-h80JrZu/MHUZCyHu5ciuoI0+WxsCxzxJTILn6Fs8rxSnFPh+UVHYfeIxK1nVGugMqkfC4vJcBOYbkfkwYK0+gw==}
3456 |     engines: {node: '>= 14.18.0'}
3457 | 
3458 |   redent@3.0.0:
3459 |     resolution: {integrity: sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==}
3460 |     engines: {node: '>=8'}
3461 | 
3462 |   regenerator-runtime@0.14.1:
3463 |     resolution: {integrity: sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==}
3464 | 
3465 |   regexp.prototype.flags@1.5.4:
3466 |     resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}
3467 |     engines: {node: '>= 0.4'}
3468 | 
3469 |   require-directory@2.1.1:
3470 |     resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
3471 |     engines: {node: '>=0.10.0'}
3472 | 
3473 |   resolve-cwd@3.0.0:
3474 |     resolution: {integrity: sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==}
3475 |     engines: {node: '>=8'}
3476 | 
3477 |   resolve-from@4.0.0:
3478 |     resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
3479 |     engines: {node: '>=4'}
3480 | 
3481 |   resolve-from@5.0.0:
3482 |     resolution: {integrity: sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==}
3483 |     engines: {node: '>=8'}
3484 | 
3485 |   resolve-pkg-maps@1.0.0:
3486 |     resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}
3487 | 
3488 |   resolve.exports@2.0.3:
3489 |     resolution: {integrity: sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==}
3490 |     engines: {node: '>=10'}
3491 | 
3492 |   resolve@1.22.10:
3493 |     resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
3494 |     engines: {node: '>= 0.4'}
3495 |     hasBin: true
3496 | 
3497 |   reusify@1.0.4:
3498 |     resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
3499 |     engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
3500 | 
3501 |   rimraf@3.0.2:
3502 |     resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
3503 |     deprecated: Rimraf versions prior to v4 are no longer supported
3504 |     hasBin: true
3505 | 
3506 |   rollup@4.30.1:
3507 |     resolution: {integrity: sha512-mlJ4glW020fPuLi7DkM/lN97mYEZGWeqBnrljzN0gs7GLctqX3lNWxKQ7Gl712UAX+6fog/L3jh4gb7R6aVi3w==}
3508 |     engines: {node: '>=18.0.0', npm: '>=8.0.0'}
3509 |     hasBin: true
3510 | 
3511 |   run-parallel@1.2.0:
3512 |     resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
3513 | 
3514 |   safe-buffer@5.1.2:
3515 |     resolution: {integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==}
3516 | 
3517 |   safe-buffer@5.2.1:
3518 |     resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}
3519 | 
3520 |   safe-regex-test@1.1.0:
3521 |     resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
3522 |     engines: {node: '>= 0.4'}
3523 | 
3524 |   safe-stable-stringify@2.5.0:
3525 |     resolution: {integrity: sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==}
3526 |     engines: {node: '>=10'}
3527 | 
3528 |   safer-buffer@2.1.2:
3529 |     resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}
3530 | 
3531 |   scheduler@0.23.2:
3532 |     resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}
3533 | 
3534 |   semver@6.3.1:
3535 |     resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
3536 |     hasBin: true
3537 | 
3538 |   semver@7.6.3:
3539 |     resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}
3540 |     engines: {node: '>=10'}
3541 |     hasBin: true
3542 | 
3543 |   send@0.19.0:
3544 |     resolution: {integrity: sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==}
3545 |     engines: {node: '>= 0.8.0'}
3546 | 
3547 |   serve-static@1.16.2:
3548 |     resolution: {integrity: sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==}
3549 |     engines: {node: '>= 0.8.0'}
3550 | 
3551 |   set-function-length@1.2.2:
3552 |     resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
3553 |     engines: {node: '>= 0.4'}
3554 | 
3555 |   set-function-name@2.0.2:
3556 |     resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}
3557 |     engines: {node: '>= 0.4'}
3558 | 
3559 |   setprototypeof@1.2.0:
3560 |     resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}
3561 | 
3562 |   shebang-command@2.0.0:
3563 |     resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
3564 |     engines: {node: '>=8'}
3565 | 
3566 |   shebang-regex@3.0.0:
3567 |     resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
3568 |     engines: {node: '>=8'}
3569 | 
3570 |   side-channel-list@1.0.0:
3571 |     resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}
3572 |     engines: {node: '>= 0.4'}
3573 | 
3574 |   side-channel-map@1.0.1:
3575 |     resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}
3576 |     engines: {node: '>= 0.4'}
3577 | 
3578 |   side-channel-weakmap@1.0.2:
3579 |     resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}
3580 |     engines: {node: '>= 0.4'}
3581 | 
3582 |   side-channel@1.1.0:
3583 |     resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}
3584 |     engines: {node: '>= 0.4'}
3585 | 
3586 |   siginfo@2.0.0:
3587 |     resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}
3588 | 
3589 |   signal-exit@3.0.7:
3590 |     resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}
3591 | 
3592 |   signal-exit@4.1.0:
3593 |     resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
3594 |     engines: {node: '>=14'}
3595 | 
3596 |   simple-swizzle@0.2.2:
3597 |     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}
3598 | 
3599 |   sisteransi@1.0.5:
3600 |     resolution: {integrity: sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==}
3601 | 
3602 |   slash@3.0.0:
3603 |     resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}
3604 |     engines: {node: '>=8'}
3605 | 
3606 |   source-map-js@1.2.1:
3607 |     resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
3608 |     engines: {node: '>=0.10.0'}
3609 | 
3610 |   source-map-support@0.5.13:
3611 |     resolution: {integrity: sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==}
3612 | 
3613 |   source-map@0.6.1:
3614 |     resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
3615 |     engines: {node: '>=0.10.0'}
3616 | 
3617 |   source-map@0.8.0-beta.0:
3618 |     resolution: {integrity: sha512-2ymg6oRBpebeZi9UUNsgQ89bhx01TcTkmNTGnNO88imTmbSgy4nfujrgVEFKWpMTEGA11EDkTt7mqObTPdigIA==}
3619 |     engines: {node: '>= 8'}
3620 | 
3621 |   sprintf-js@1.0.3:
3622 |     resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}
3623 | 
3624 |   stack-trace@0.0.10:
3625 |     resolution: {integrity: sha512-KGzahc7puUKkzyMt+IqAep+TVNbKP+k2Lmwhub39m1AsTSkaDutx56aDCo+HLDzf/D26BIHTJWNiTG1KAJiQCg==}
3626 | 
3627 |   stack-utils@2.0.6:
3628 |     resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}
3629 |     engines: {node: '>=10'}
3630 | 
3631 |   stackback@0.0.2:
3632 |     resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}
3633 | 
3634 |   statuses@2.0.1:
3635 |     resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}
3636 |     engines: {node: '>= 0.8'}
3637 | 
3638 |   std-env@3.8.0:
3639 |     resolution: {integrity: sha512-Bc3YwwCB+OzldMxOXJIIvC6cPRWr/LxOp48CdQTOkPyk/t4JWWJbrilwBd7RJzKV8QW7tJkcgAmeuLLJugl5/w==}
3640 | 
3641 |   stop-iteration-iterator@1.1.0:
3642 |     resolution: {integrity: sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==}
3643 |     engines: {node: '>= 0.4'}
3644 | 
3645 |   streamsearch@1.1.0:
3646 |     resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}
3647 |     engines: {node: '>=10.0.0'}
3648 | 
3649 |   string-length@4.0.2:
3650 |     resolution: {integrity: sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==}
3651 |     engines: {node: '>=10'}
3652 | 
3653 |   string-width@4.2.3:
3654 |     resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
3655 |     engines: {node: '>=8'}
3656 | 
3657 |   string-width@5.1.2:
3658 |     resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}
3659 |     engines: {node: '>=12'}
3660 | 
3661 |   string_decoder@1.1.1:
3662 |     resolution: {integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==}
3663 | 
3664 |   strip-ansi@6.0.1:
3665 |     resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
3666 |     engines: {node: '>=8'}
3667 | 
3668 |   strip-ansi@7.1.0:
3669 |     resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}
3670 |     engines: {node: '>=12'}
3671 | 
3672 |   strip-bom@4.0.0:
3673 |     resolution: {integrity: sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==}
3674 |     engines: {node: '>=8'}
3675 | 
3676 |   strip-final-newline@2.0.0:
3677 |     resolution: {integrity: sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==}
3678 |     engines: {node: '>=6'}
3679 | 
3680 |   strip-final-newline@3.0.0:
3681 |     resolution: {integrity: sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==}
3682 |     engines: {node: '>=12'}
3683 | 
3684 |   strip-indent@3.0.0:
3685 |     resolution: {integrity: sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==}
3686 |     engines: {node: '>=8'}
3687 | 
3688 |   strip-json-comments@3.1.1:
3689 |     resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
3690 |     engines: {node: '>=8'}
3691 | 
3692 |   strip-literal@2.1.1:
3693 |     resolution: {integrity: sha512-631UJ6O00eNGfMiWG78ck80dfBab8X6IVFB51jZK5Icd7XAs60Z5y7QdSd/wGIklnWvRbUNloVzhOKKmutxQ6Q==}
3694 | 
3695 |   sucrase@3.35.0:
3696 |     resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}
3697 |     engines: {node: '>=16 || 14 >=14.17'}
3698 |     hasBin: true
3699 | 
3700 |   superagent@9.0.2:
3701 |     resolution: {integrity: sha512-xuW7dzkUpcJq7QnhOsnNUgtYp3xRwpt2F7abdRYIpCsAt0hhUqia0EdxyXZQQpNmGtsCzYHryaKSV3q3GJnq7w==}
3702 |     engines: {node: '>=14.18.0'}
3703 | 
3704 |   supercluster@8.0.1:
3705 |     resolution: {integrity: sha512-IiOea5kJ9iqzD2t7QJq/cREyLHTtSmUT6gQsweojg9WH2sYJqZK9SswTu6jrscO6D1G5v5vYZ9ru/eq85lXeZQ==}
3706 | 
3707 |   supertest@7.0.0:
3708 |     resolution: {integrity: sha512-qlsr7fIC0lSddmA3tzojvzubYxvlGtzumcdHgPwbFWMISQwL22MhM2Y3LNt+6w9Yyx7559VW5ab70dgphm8qQA==}
3709 |     engines: {node: '>=14.18.0'}
3710 | 
3711 |   supports-color@7.2.0:
3712 |     resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
3713 |     engines: {node: '>=8'}
3714 | 
3715 |   supports-color@8.1.1:
3716 |     resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}
3717 |     engines: {node: '>=10'}
3718 | 
3719 |   supports-preserve-symlinks-flag@1.0.0:
3720 |     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
3721 |     engines: {node: '>= 0.4'}
3722 | 
3723 |   tailwindcss@3.4.17:
3724 |     resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}
3725 |     engines: {node: '>=14.0.0'}
3726 |     hasBin: true
3727 | 
3728 |   test-exclude@6.0.0:
3729 |     resolution: {integrity: sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==}
3730 |     engines: {node: '>=8'}
3731 | 
3732 |   text-hex@1.0.0:
3733 |     resolution: {integrity: sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==}
3734 | 
3735 |   text-table@0.2.0:
3736 |     resolution: {integrity: sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==}
3737 | 
3738 |   thenify-all@1.6.0:
3739 |     resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}
3740 |     engines: {node: '>=0.8'}
3741 | 
3742 |   thenify@3.3.1:
3743 |     resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}
3744 | 
3745 |   tinybench@2.9.0:
3746 |     resolution: {integrity: sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==}
3747 | 
3748 |   tinyexec@0.3.2:
3749 |     resolution: {integrity: sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==}
3750 | 
3751 |   tinyglobby@0.2.10:
3752 |     resolution: {integrity: sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==}
3753 |     engines: {node: '>=12.0.0'}
3754 | 
3755 |   tinypool@0.8.4:
3756 |     resolution: {integrity: sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==}
3757 |     engines: {node: '>=14.0.0'}
3758 | 
3759 |   tinyspy@2.2.1:
3760 |     resolution: {integrity: sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==}
3761 |     engines: {node: '>=14.0.0'}
3762 | 
3763 |   tmpl@1.0.5:
3764 |     resolution: {integrity: sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==}
3765 | 
3766 |   to-regex-range@5.0.1:
3767 |     resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
3768 |     engines: {node: '>=8.0'}
3769 | 
3770 |   toidentifier@1.0.1:
3771 |     resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}
3772 |     engines: {node: '>=0.6'}
3773 | 
3774 |   tr46@1.0.1:
3775 |     resolution: {integrity: sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==}
3776 | 
3777 |   tree-kill@1.2.2:
3778 |     resolution: {integrity: sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==}
3779 |     hasBin: true
3780 | 
3781 |   triple-beam@1.4.1:
3782 |     resolution: {integrity: sha512-aZbgViZrg1QNcG+LULa7nhZpJTZSLm/mXnHXnbAbjmN5aSa0y7V+wvv6+4WaBtpISJzThKy+PIPxc1Nq1EJ9mg==}
3783 |     engines: {node: '>= 14.0.0'}
3784 | 
3785 |   ts-api-utils@1.4.3:
3786 |     resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}
3787 |     engines: {node: '>=16'}
3788 |     peerDependencies:
3789 |       typescript: '>=4.2.0'
3790 | 
3791 |   ts-interface-checker@0.1.13:
3792 |     resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}
3793 | 
3794 |   ts-jest@29.2.5:
3795 |     resolution: {integrity: sha512-KD8zB2aAZrcKIdGk4OwpJggeLcH1FgrICqDSROWqlnJXGCXK4Mn6FcdK2B6670Xr73lHMG1kHw8R87A0ecZ+vA==}
3796 |     engines: {node: ^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0}
3797 |     hasBin: true
3798 |     peerDependencies:
3799 |       '@babel/core': '>=7.0.0-beta.0 <8'
3800 |       '@jest/transform': ^29.0.0
3801 |       '@jest/types': ^29.0.0
3802 |       babel-jest: ^29.0.0
3803 |       esbuild: '*'
3804 |       jest: ^29.0.0
3805 |       typescript: '>=4.3 <6'
3806 |     peerDependenciesMeta:
3807 |       '@babel/core':
3808 |         optional: true
3809 |       '@jest/transform':
3810 |         optional: true
3811 |       '@jest/types':
3812 |         optional: true
3813 |       babel-jest:
3814 |         optional: true
3815 |       esbuild:
3816 |         optional: true
3817 | 
3818 |   ts-node@10.9.2:
3819 |     resolution: {integrity: sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==}
3820 |     hasBin: true
3821 |     peerDependencies:
3822 |       '@swc/core': '>=1.2.50'
3823 |       '@swc/wasm': '>=1.2.50'
3824 |       '@types/node': '*'
3825 |       typescript: '>=2.7'
3826 |     peerDependenciesMeta:
3827 |       '@swc/core':
3828 |         optional: true
3829 |       '@swc/wasm':
3830 |         optional: true
3831 | 
3832 |   tsup@8.3.5:
3833 |     resolution: {integrity: sha512-Tunf6r6m6tnZsG9GYWndg0z8dEV7fD733VBFzFJ5Vcm1FtlXB8xBD/rtrBi2a3YKEV7hHtxiZtW5EAVADoe1pA==}
3834 |     engines: {node: '>=18'}
3835 |     hasBin: true
3836 |     peerDependencies:
3837 |       '@microsoft/api-extractor': ^7.36.0
3838 |       '@swc/core': ^1
3839 |       postcss: ^8.4.12
3840 |       typescript: '>=4.5.0'
3841 |     peerDependenciesMeta:
3842 |       '@microsoft/api-extractor':
3843 |         optional: true
3844 |       '@swc/core':
3845 |         optional: true
3846 |       postcss:
3847 |         optional: true
3848 |       typescript:
3849 |         optional: true
3850 | 
3851 |   tsx@4.19.2:
3852 |     resolution: {integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==}
3853 |     engines: {node: '>=18.0.0'}
3854 |     hasBin: true
3855 | 
3856 |   turbo-darwin-64@1.13.4:
3857 |     resolution: {integrity: sha512-A0eKd73R7CGnRinTiS7txkMElg+R5rKFp9HV7baDiEL4xTG1FIg/56Vm7A5RVgg8UNgG2qNnrfatJtb+dRmNdw==}
3858 |     cpu: [x64]
3859 |     os: [darwin]
3860 | 
3861 |   turbo-darwin-arm64@1.13.4:
3862 |     resolution: {integrity: sha512-eG769Q0NF6/Vyjsr3mKCnkG/eW6dKMBZk6dxWOdrHfrg6QgfkBUk0WUUujzdtVPiUIvsh4l46vQrNVd9EOtbyA==}
3863 |     cpu: [arm64]
3864 |     os: [darwin]
3865 | 
3866 |   turbo-linux-64@1.13.4:
3867 |     resolution: {integrity: sha512-Bq0JphDeNw3XEi+Xb/e4xoKhs1DHN7OoLVUbTIQz+gazYjigVZvtwCvgrZI7eW9Xo1eOXM2zw2u1DGLLUfmGkQ==}
3868 |     cpu: [x64]
3869 |     os: [linux]
3870 | 
3871 |   turbo-linux-arm64@1.13.4:
3872 |     resolution: {integrity: sha512-BJcXw1DDiHO/okYbaNdcWN6szjXyHWx9d460v6fCHY65G8CyqGU3y2uUTPK89o8lq/b2C8NK0yZD+Vp0f9VoIg==}
3873 |     cpu: [arm64]
3874 |     os: [linux]
3875 | 
3876 |   turbo-windows-64@1.13.4:
3877 |     resolution: {integrity: sha512-OFFhXHOFLN7A78vD/dlVuuSSVEB3s9ZBj18Tm1hk3aW1HTWTuAw0ReN6ZNlVObZUHvGy8d57OAGGxf2bT3etQw==}
3878 |     cpu: [x64]
3879 |     os: [win32]
3880 | 
3881 |   turbo-windows-arm64@1.13.4:
3882 |     resolution: {integrity: sha512-u5A+VOKHswJJmJ8o8rcilBfU5U3Y1TTAfP9wX8bFh8teYF1ghP0EhtMRLjhtp6RPa+XCxHHVA2CiC3gbh5eg5g==}
3883 |     cpu: [arm64]
3884 |     os: [win32]
3885 | 
3886 |   turbo@1.13.4:
3887 |     resolution: {integrity: sha512-1q7+9UJABuBAHrcC4Sxp5lOqYS5mvxRrwa33wpIyM18hlOCpRD/fTJNxZ0vhbMcJmz15o9kkVm743mPn7p6jpQ==}
3888 |     hasBin: true
3889 | 
3890 |   type-check@0.4.0:
3891 |     resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
3892 |     engines: {node: '>= 0.8.0'}
3893 | 
3894 |   type-detect@4.0.8:
3895 |     resolution: {integrity: sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==}
3896 |     engines: {node: '>=4'}
3897 | 
3898 |   type-detect@4.1.0:
3899 |     resolution: {integrity: sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==}
3900 |     engines: {node: '>=4'}
3901 | 
3902 |   type-fest@0.20.2:
3903 |     resolution: {integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==}
3904 |     engines: {node: '>=10'}
3905 | 
3906 |   type-fest@0.21.3:
3907 |     resolution: {integrity: sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==}
3908 |     engines: {node: '>=10'}
3909 | 
3910 |   type-is@1.6.18:
3911 |     resolution: {integrity: sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==}
3912 |     engines: {node: '>= 0.6'}
3913 | 
3914 |   typedarray@0.0.6:
3915 |     resolution: {integrity: sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==}
3916 | 
3917 |   typescript@5.7.3:
3918 |     resolution: {integrity: sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==}
3919 |     engines: {node: '>=14.17'}
3920 |     hasBin: true
3921 | 
3922 |   ufo@1.5.4:
3923 |     resolution: {integrity: sha512-UsUk3byDzKd04EyoZ7U4DOlxQaD14JUKQl6/P7wiX4FNvUfm3XL246n9W5AmqwW5RSFJ27NAuM0iLscAOYUiGQ==}
3924 | 
3925 |   undici-types@6.19.8:
3926 |     resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}
3927 | 
3928 |   unpipe@1.0.0:
3929 |     resolution: {integrity: sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==}
3930 |     engines: {node: '>= 0.8'}
3931 | 
3932 |   update-browserslist-db@1.1.2:
3933 |     resolution: {integrity: sha512-PPypAm5qvlD7XMZC3BujecnaOxwhrtoFR+Dqkk5Aa/6DssiH0ibKoketaj9w8LP7Bont1rYeoV5plxD7RTEPRg==}
3934 |     hasBin: true
3935 |     peerDependencies:
3936 |       browserslist: '>= 4.21.0'
3937 | 
3938 |   uri-js@4.4.1:
3939 |     resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}
3940 | 
3941 |   util-deprecate@1.0.2:
3942 |     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
3943 | 
3944 |   utils-merge@1.0.1:
3945 |     resolution: {integrity: sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==}
3946 |     engines: {node: '>= 0.4.0'}
3947 | 
3948 |   v8-compile-cache-lib@3.0.1:
3949 |     resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}
3950 | 
3951 |   v8-to-istanbul@9.3.0:
3952 |     resolution: {integrity: sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==}
3953 |     engines: {node: '>=10.12.0'}
3954 | 
3955 |   vary@1.1.2:
3956 |     resolution: {integrity: sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==}
3957 |     engines: {node: '>= 0.8'}
3958 | 
3959 |   vite-node@1.6.0:
3960 |     resolution: {integrity: sha512-de6HJgzC+TFzOu0NTC4RAIsyf/DY/ibWDYQUcuEA84EMHhcefTUGkjFHKKEJhQN4A+6I0u++kr3l36ZF2d7XRw==}
3961 |     engines: {node: ^18.0.0 || >=20.0.0}
3962 |     hasBin: true
3963 | 
3964 |   vite@5.4.11:
3965 |     resolution: {integrity: sha512-c7jFQRklXua0mTzneGW9QVyxFjUgwcihC4bXEtujIo2ouWCe1Ajt/amn2PCxYnhYfd5k09JX3SB7OYWFKYqj8Q==}
3966 |     engines: {node: ^18.0.0 || >=20.0.0}
3967 |     hasBin: true
3968 |     peerDependencies:
3969 |       '@types/node': ^18.0.0 || >=20.0.0
3970 |       less: '*'
3971 |       lightningcss: ^1.21.0
3972 |       sass: '*'
3973 |       sass-embedded: '*'
3974 |       stylus: '*'
3975 |       sugarss: '*'
3976 |       terser: ^5.4.0
3977 |     peerDependenciesMeta:
3978 |       '@types/node':
3979 |         optional: true
3980 |       less:
3981 |         optional: true
3982 |       lightningcss:
3983 |         optional: true
3984 |       sass:
3985 |         optional: true
3986 |       sass-embedded:
3987 |         optional: true
3988 |       stylus:
3989 |         optional: true
3990 |       sugarss:
3991 |         optional: true
3992 |       terser:
3993 |         optional: true
3994 | 
3995 |   vitest@1.6.0:
3996 |     resolution: {integrity: sha512-H5r/dN06swuFnzNFhq/dnz37bPXnq8xB2xB5JOVk8K09rUtoeNN+LHWkoQ0A/i3hvbUKKcCei9KpbxqHMLhLLA==}
3997 |     engines: {node: ^18.0.0 || >=20.0.0}
3998 |     hasBin: true
3999 |     peerDependencies:
4000 |       '@edge-runtime/vm': '*'
4001 |       '@types/node': ^18.0.0 || >=20.0.0
4002 |       '@vitest/browser': 1.6.0
4003 |       '@vitest/ui': 1.6.0
4004 |       happy-dom: '*'
4005 |       jsdom: '*'
4006 |     peerDependenciesMeta:
4007 |       '@edge-runtime/vm':
4008 |         optional: true
4009 |       '@types/node':
4010 |         optional: true
4011 |       '@vitest/browser':
4012 |         optional: true
4013 |       '@vitest/ui':
4014 |         optional: true
4015 |       happy-dom:
4016 |         optional: true
4017 |       jsdom:
4018 |         optional: true
4019 | 
4020 |   walker@1.0.8:
4021 |     resolution: {integrity: sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==}
4022 | 
4023 |   webidl-conversions@4.0.2:
4024 |     resolution: {integrity: sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==}
4025 | 
4026 |   webidl-conversions@7.0.0:
4027 |     resolution: {integrity: sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==}
4028 |     engines: {node: '>=12'}
4029 | 
4030 |   whatwg-encoding@2.0.0:
4031 |     resolution: {integrity: sha512-p41ogyeMUrw3jWclHWTQg1k05DSVXPLcVxRTYsXUk+ZooOCZLcoYgPZ/HL/D/N+uQPOtcp1me1WhBEaX02mhWg==}
4032 |     engines: {node: '>=12'}
4033 | 
4034 |   whatwg-mimetype@3.0.0:
4035 |     resolution: {integrity: sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==}
4036 |     engines: {node: '>=12'}
4037 | 
4038 |   whatwg-url@7.1.0:
4039 |     resolution: {integrity: sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==}
4040 | 
4041 |   which-boxed-primitive@1.1.1:
4042 |     resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}
4043 |     engines: {node: '>= 0.4'}
4044 | 
4045 |   which-collection@1.0.2:
4046 |     resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}
4047 |     engines: {node: '>= 0.4'}
4048 | 
4049 |   which-typed-array@1.1.18:
4050 |     resolution: {integrity: sha512-qEcY+KJYlWyLH9vNbsr6/5j59AXk5ni5aakf8ldzBvGde6Iz4sxZGkJyWSAueTG7QhOvNRYb1lDdFmL5Td0QKA==}
4051 |     engines: {node: '>= 0.4'}
4052 | 
4053 |   which@2.0.2:
4054 |     resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
4055 |     engines: {node: '>= 8'}
4056 |     hasBin: true
4057 | 
4058 |   why-is-node-running@2.3.0:
4059 |     resolution: {integrity: sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==}
4060 |     engines: {node: '>=8'}
4061 |     hasBin: true
4062 | 
4063 |   winston-transport@4.9.0:
4064 |     resolution: {integrity: sha512-8drMJ4rkgaPo1Me4zD/3WLfI/zPdA9o2IipKODunnGDcuqbHwjsbB79ylv04LCGGzU0xQ6vTznOMpQGaLhhm6A==}
4065 |     engines: {node: '>= 12.0.0'}
4066 | 
4067 |   winston@3.17.0:
4068 |     resolution: {integrity: sha512-DLiFIXYC5fMPxaRg832S6F5mJYvePtmO5G9v9IgUFPhXm9/GkXarH/TUrBAVzhTCzAj9anE/+GjrgXp/54nOgw==}
4069 |     engines: {node: '>= 12.0.0'}
4070 | 
4071 |   word-wrap@1.2.5:
4072 |     resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
4073 |     engines: {node: '>=0.10.0'}
4074 | 
4075 |   wrap-ansi@7.0.0:
4076 |     resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
4077 |     engines: {node: '>=10'}
4078 | 
4079 |   wrap-ansi@8.1.0:
4080 |     resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}
4081 |     engines: {node: '>=12'}
4082 | 
4083 |   wrappy@1.0.2:
4084 |     resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}
4085 | 
4086 |   write-file-atomic@4.0.2:
4087 |     resolution: {integrity: sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==}
4088 |     engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
4089 | 
4090 |   xtend@4.0.2:
4091 |     resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}
4092 |     engines: {node: '>=0.4'}
4093 | 
4094 |   y18n@5.0.8:
4095 |     resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
4096 |     engines: {node: '>=10'}
4097 | 
4098 |   yallist@3.1.1:
4099 |     resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}
4100 | 
4101 |   yaml@2.7.0:
4102 |     resolution: {integrity: sha512-+hSoy/QHluxmC9kCIJyL/uyFmLmc+e5CFR5Wa+bpIhIj85LVb9ZH2nVnqrHoSvKogwODv0ClqZkmiSSaIH5LTA==}
4103 |     engines: {node: '>= 14'}
4104 |     hasBin: true
4105 | 
4106 |   yargs-parser@21.1.1:
4107 |     resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
4108 |     engines: {node: '>=12'}
4109 | 
4110 |   yargs@17.7.2:
4111 |     resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
4112 |     engines: {node: '>=12'}
4113 | 
4114 |   yn@3.1.1:
4115 |     resolution: {integrity: sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==}
4116 |     engines: {node: '>=6'}
4117 | 
4118 |   yocto-queue@0.1.0:
4119 |     resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
4120 |     engines: {node: '>=10'}
4121 | 
4122 |   yocto-queue@1.1.1:
4123 |     resolution: {integrity: sha512-b4JR1PFR10y1mKjhHY9LaGo6tmrgjit7hxVIeAmyMw3jegXR4dhYqLaQF5zMXZxY7tLpMyJeLjr1C4rLmkVe8g==}
4124 |     engines: {node: '>=12.20'}
4125 | 
4126 |   zod@3.24.1:
4127 |     resolution: {integrity: sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==}
4128 | 
4129 | snapshots:
4130 | 
4131 |   '@adobe/css-tools@4.4.1': {}
4132 | 
4133 |   '@alloc/quick-lru@5.2.0': {}
4134 | 
4135 |   '@ampproject/remapping@2.3.0':
4136 |     dependencies:
4137 |       '@jridgewell/gen-mapping': 0.3.8
4138 |       '@jridgewell/trace-mapping': 0.3.25
4139 | 
4140 |   '@babel/code-frame@7.26.2':
4141 |     dependencies:
4142 |       '@babel/helper-validator-identifier': 7.25.9
4143 |       js-tokens: 4.0.0
4144 |       picocolors: 1.1.1
4145 | 
4146 |   '@babel/compat-data@7.26.5': {}
4147 | 
4148 |   '@babel/core@7.26.0':
4149 |     dependencies:
4150 |       '@ampproject/remapping': 2.3.0
4151 |       '@babel/code-frame': 7.26.2
4152 |       '@babel/generator': 7.26.5
4153 |       '@babel/helper-compilation-targets': 7.26.5
4154 |       '@babel/helper-module-transforms': 7.26.0(@babel/core@7.26.0)
4155 |       '@babel/helpers': 7.26.0
4156 |       '@babel/parser': 7.26.5
4157 |       '@babel/template': 7.25.9
4158 |       '@babel/traverse': 7.26.5
4159 |       '@babel/types': 7.26.5
4160 |       convert-source-map: 2.0.0
4161 |       debug: 4.4.0
4162 |       gensync: 1.0.0-beta.2
4163 |       json5: 2.2.3
4164 |       semver: 6.3.1
4165 |     transitivePeerDependencies:
4166 |       - supports-color
4167 | 
4168 |   '@babel/generator@7.26.5':
4169 |     dependencies:
4170 |       '@babel/parser': 7.26.5
4171 |       '@babel/types': 7.26.5
4172 |       '@jridgewell/gen-mapping': 0.3.8
4173 |       '@jridgewell/trace-mapping': 0.3.25
4174 |       jsesc: 3.1.0
4175 | 
4176 |   '@babel/helper-compilation-targets@7.26.5':
4177 |     dependencies:
4178 |       '@babel/compat-data': 7.26.5
4179 |       '@babel/helper-validator-option': 7.25.9
4180 |       browserslist: 4.24.4
4181 |       lru-cache: 5.1.1
4182 |       semver: 6.3.1
4183 | 
4184 |   '@babel/helper-module-imports@7.25.9':
4185 |     dependencies:
4186 |       '@babel/traverse': 7.26.5
4187 |       '@babel/types': 7.26.5
4188 |     transitivePeerDependencies:
4189 |       - supports-color
4190 | 
4191 |   '@babel/helper-module-transforms@7.26.0(@babel/core@7.26.0)':
4192 |     dependencies:
4193 |       '@babel/core': 7.26.0
4194 |       '@babel/helper-module-imports': 7.25.9
4195 |       '@babel/helper-validator-identifier': 7.25.9
4196 |       '@babel/traverse': 7.26.5
4197 |     transitivePeerDependencies:
4198 |       - supports-color
4199 | 
4200 |   '@babel/helper-plugin-utils@7.26.5': {}
4201 | 
4202 |   '@babel/helper-string-parser@7.25.9': {}
4203 | 
4204 |   '@babel/helper-validator-identifier@7.25.9': {}
4205 | 
4206 |   '@babel/helper-validator-option@7.25.9': {}
4207 | 
4208 |   '@babel/helpers@7.26.0':
4209 |     dependencies:
4210 |       '@babel/template': 7.25.9
4211 |       '@babel/types': 7.26.5
4212 | 
4213 |   '@babel/parser@7.26.5':
4214 |     dependencies:
4215 |       '@babel/types': 7.26.5
4216 | 
4217 |   '@babel/plugin-syntax-async-generators@7.8.4(@babel/core@7.26.0)':
4218 |     dependencies:
4219 |       '@babel/core': 7.26.0
4220 |       '@babel/helper-plugin-utils': 7.26.5
4221 | 
4222 |   '@babel/plugin-syntax-bigint@7.8.3(@babel/core@7.26.0)':
4223 |     dependencies:
4224 |       '@babel/core': 7.26.0
4225 |       '@babel/helper-plugin-utils': 7.26.5
4226 | 
4227 |   '@babel/plugin-syntax-class-properties@7.12.13(@babel/core@7.26.0)':
4228 |     dependencies:
4229 |       '@babel/core': 7.26.0
4230 |       '@babel/helper-plugin-utils': 7.26.5
4231 | 
4232 |   '@babel/plugin-syntax-class-static-block@7.14.5(@babel/core@7.26.0)':
4233 |     dependencies:
4234 |       '@babel/core': 7.26.0
4235 |       '@babel/helper-plugin-utils': 7.26.5
4236 | 
4237 |   '@babel/plugin-syntax-import-attributes@7.26.0(@babel/core@7.26.0)':
4238 |     dependencies:
4239 |       '@babel/core': 7.26.0
4240 |       '@babel/helper-plugin-utils': 7.26.5
4241 | 
4242 |   '@babel/plugin-syntax-import-meta@7.10.4(@babel/core@7.26.0)':
4243 |     dependencies:
4244 |       '@babel/core': 7.26.0
4245 |       '@babel/helper-plugin-utils': 7.26.5
4246 | 
4247 |   '@babel/plugin-syntax-json-strings@7.8.3(@babel/core@7.26.0)':
4248 |     dependencies:
4249 |       '@babel/core': 7.26.0
4250 |       '@babel/helper-plugin-utils': 7.26.5
4251 | 
4252 |   '@babel/plugin-syntax-jsx@7.25.9(@babel/core@7.26.0)':
4253 |     dependencies:
4254 |       '@babel/core': 7.26.0
4255 |       '@babel/helper-plugin-utils': 7.26.5
4256 | 
4257 |   '@babel/plugin-syntax-logical-assignment-operators@7.10.4(@babel/core@7.26.0)':
4258 |     dependencies:
4259 |       '@babel/core': 7.26.0
4260 |       '@babel/helper-plugin-utils': 7.26.5
4261 | 
4262 |   '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3(@babel/core@7.26.0)':
4263 |     dependencies:
4264 |       '@babel/core': 7.26.0
4265 |       '@babel/helper-plugin-utils': 7.26.5
4266 | 
4267 |   '@babel/plugin-syntax-numeric-separator@7.10.4(@babel/core@7.26.0)':
4268 |     dependencies:
4269 |       '@babel/core': 7.26.0
4270 |       '@babel/helper-plugin-utils': 7.26.5
4271 | 
4272 |   '@babel/plugin-syntax-object-rest-spread@7.8.3(@babel/core@7.26.0)':
4273 |     dependencies:
4274 |       '@babel/core': 7.26.0
4275 |       '@babel/helper-plugin-utils': 7.26.5
4276 | 
4277 |   '@babel/plugin-syntax-optional-catch-binding@7.8.3(@babel/core@7.26.0)':
4278 |     dependencies:
4279 |       '@babel/core': 7.26.0
4280 |       '@babel/helper-plugin-utils': 7.26.5
4281 | 
4282 |   '@babel/plugin-syntax-optional-chaining@7.8.3(@babel/core@7.26.0)':
4283 |     dependencies:
4284 |       '@babel/core': 7.26.0
4285 |       '@babel/helper-plugin-utils': 7.26.5
4286 | 
4287 |   '@babel/plugin-syntax-private-property-in-object@7.14.5(@babel/core@7.26.0)':
4288 |     dependencies:
4289 |       '@babel/core': 7.26.0
4290 |       '@babel/helper-plugin-utils': 7.26.5
4291 | 
4292 |   '@babel/plugin-syntax-top-level-await@7.14.5(@babel/core@7.26.0)':
4293 |     dependencies:
4294 |       '@babel/core': 7.26.0
4295 |       '@babel/helper-plugin-utils': 7.26.5
4296 | 
4297 |   '@babel/plugin-syntax-typescript@7.25.9(@babel/core@7.26.0)':
4298 |     dependencies:
4299 |       '@babel/core': 7.26.0
4300 |       '@babel/helper-plugin-utils': 7.26.5
4301 | 
4302 |   '@babel/plugin-transform-react-jsx-self@7.25.9(@babel/core@7.26.0)':
4303 |     dependencies:
4304 |       '@babel/core': 7.26.0
4305 |       '@babel/helper-plugin-utils': 7.26.5
4306 | 
4307 |   '@babel/plugin-transform-react-jsx-source@7.25.9(@babel/core@7.26.0)':
4308 |     dependencies:
4309 |       '@babel/core': 7.26.0
4310 |       '@babel/helper-plugin-utils': 7.26.5
4311 | 
4312 |   '@babel/runtime@7.26.0':
4313 |     dependencies:
4314 |       regenerator-runtime: 0.14.1
4315 | 
4316 |   '@babel/template@7.25.9':
4317 |     dependencies:
4318 |       '@babel/code-frame': 7.26.2
4319 |       '@babel/parser': 7.26.5
4320 |       '@babel/types': 7.26.5
4321 | 
4322 |   '@babel/traverse@7.26.5':
4323 |     dependencies:
4324 |       '@babel/code-frame': 7.26.2
4325 |       '@babel/generator': 7.26.5
4326 |       '@babel/parser': 7.26.5
4327 |       '@babel/template': 7.25.9
4328 |       '@babel/types': 7.26.5
4329 |       debug: 4.4.0
4330 |       globals: 11.12.0
4331 |     transitivePeerDependencies:
4332 |       - supports-color
4333 | 
4334 |   '@babel/types@7.26.5':
4335 |     dependencies:
4336 |       '@babel/helper-string-parser': 7.25.9
4337 |       '@babel/helper-validator-identifier': 7.25.9
4338 | 
4339 |   '@bcoe/v8-coverage@0.2.3': {}
4340 | 
4341 |   '@colors/colors@1.6.0': {}
4342 | 
4343 |   '@cspotcode/source-map-support@0.8.1':
4344 |     dependencies:
4345 |       '@jridgewell/trace-mapping': 0.3.9
4346 | 
4347 |   '@dabh/diagnostics@2.0.3':
4348 |     dependencies:
4349 |       colorspace: 1.1.4
4350 |       enabled: 2.0.0
4351 |       kuler: 2.0.0
4352 | 
4353 |   '@esbuild/aix-ppc64@0.21.5':
4354 |     optional: true
4355 | 
4356 |   '@esbuild/aix-ppc64@0.23.1':
4357 |     optional: true
4358 | 
4359 |   '@esbuild/aix-ppc64@0.24.2':
4360 |     optional: true
4361 | 
4362 |   '@esbuild/android-arm64@0.21.5':
4363 |     optional: true
4364 | 
4365 |   '@esbuild/android-arm64@0.23.1':
4366 |     optional: true
4367 | 
4368 |   '@esbuild/android-arm64@0.24.2':
4369 |     optional: true
4370 | 
4371 |   '@esbuild/android-arm@0.21.5':
4372 |     optional: true
4373 | 
4374 |   '@esbuild/android-arm@0.23.1':
4375 |     optional: true
4376 | 
4377 |   '@esbuild/android-arm@0.24.2':
4378 |     optional: true
4379 | 
4380 |   '@esbuild/android-x64@0.21.5':
4381 |     optional: true
4382 | 
4383 |   '@esbuild/android-x64@0.23.1':
4384 |     optional: true
4385 | 
4386 |   '@esbuild/android-x64@0.24.2':
4387 |     optional: true
4388 | 
4389 |   '@esbuild/darwin-arm64@0.21.5':
4390 |     optional: true
4391 | 
4392 |   '@esbuild/darwin-arm64@0.23.1':
4393 |     optional: true
4394 | 
4395 |   '@esbuild/darwin-arm64@0.24.2':
4396 |     optional: true
4397 | 
4398 |   '@esbuild/darwin-x64@0.21.5':
4399 |     optional: true
4400 | 
4401 |   '@esbuild/darwin-x64@0.23.1':
4402 |     optional: true
4403 | 
4404 |   '@esbuild/darwin-x64@0.24.2':
4405 |     optional: true
4406 | 
4407 |   '@esbuild/freebsd-arm64@0.21.5':
4408 |     optional: true
4409 | 
4410 |   '@esbuild/freebsd-arm64@0.23.1':
4411 |     optional: true
4412 | 
4413 |   '@esbuild/freebsd-arm64@0.24.2':
4414 |     optional: true
4415 | 
4416 |   '@esbuild/freebsd-x64@0.21.5':
4417 |     optional: true
4418 | 
4419 |   '@esbuild/freebsd-x64@0.23.1':
4420 |     optional: true
4421 | 
4422 |   '@esbuild/freebsd-x64@0.24.2':
4423 |     optional: true
4424 | 
4425 |   '@esbuild/linux-arm64@0.21.5':
4426 |     optional: true
4427 | 
4428 |   '@esbuild/linux-arm64@0.23.1':
4429 |     optional: true
4430 | 
4431 |   '@esbuild/linux-arm64@0.24.2':
4432 |     optional: true
4433 | 
4434 |   '@esbuild/linux-arm@0.21.5':
4435 |     optional: true
4436 | 
4437 |   '@esbuild/linux-arm@0.23.1':
4438 |     optional: true
4439 | 
4440 |   '@esbuild/linux-arm@0.24.2':
4441 |     optional: true
4442 | 
4443 |   '@esbuild/linux-ia32@0.21.5':
4444 |     optional: true
4445 | 
4446 |   '@esbuild/linux-ia32@0.23.1':
4447 |     optional: true
4448 | 
4449 |   '@esbuild/linux-ia32@0.24.2':
4450 |     optional: true
4451 | 
4452 |   '@esbuild/linux-loong64@0.21.5':
4453 |     optional: true
4454 | 
4455 |   '@esbuild/linux-loong64@0.23.1':
4456 |     optional: true
4457 | 
4458 |   '@esbuild/linux-loong64@0.24.2':
4459 |     optional: true
4460 | 
4461 |   '@esbuild/linux-mips64el@0.21.5':
4462 |     optional: true
4463 | 
4464 |   '@esbuild/linux-mips64el@0.23.1':
4465 |     optional: true
4466 | 
4467 |   '@esbuild/linux-mips64el@0.24.2':
4468 |     optional: true
4469 | 
4470 |   '@esbuild/linux-ppc64@0.21.5':
4471 |     optional: true
4472 | 
4473 |   '@esbuild/linux-ppc64@0.23.1':
4474 |     optional: true
4475 | 
4476 |   '@esbuild/linux-ppc64@0.24.2':
4477 |     optional: true
4478 | 
4479 |   '@esbuild/linux-riscv64@0.21.5':
4480 |     optional: true
4481 | 
4482 |   '@esbuild/linux-riscv64@0.23.1':
4483 |     optional: true
4484 | 
4485 |   '@esbuild/linux-riscv64@0.24.2':
4486 |     optional: true
4487 | 
4488 |   '@esbuild/linux-s390x@0.21.5':
4489 |     optional: true
4490 | 
4491 |   '@esbuild/linux-s390x@0.23.1':
4492 |     optional: true
4493 | 
4494 |   '@esbuild/linux-s390x@0.24.2':
4495 |     optional: true
4496 | 
4497 |   '@esbuild/linux-x64@0.21.5':
4498 |     optional: true
4499 | 
4500 |   '@esbuild/linux-x64@0.23.1':
4501 |     optional: true
4502 | 
4503 |   '@esbuild/linux-x64@0.24.2':
4504 |     optional: true
4505 | 
4506 |   '@esbuild/netbsd-arm64@0.24.2':
4507 |     optional: true
4508 | 
4509 |   '@esbuild/netbsd-x64@0.21.5':
4510 |     optional: true
4511 | 
4512 |   '@esbuild/netbsd-x64@0.23.1':
4513 |     optional: true
4514 | 
4515 |   '@esbuild/netbsd-x64@0.24.2':
4516 |     optional: true
4517 | 
4518 |   '@esbuild/openbsd-arm64@0.23.1':
4519 |     optional: true
4520 | 
4521 |   '@esbuild/openbsd-arm64@0.24.2':
4522 |     optional: true
4523 | 
4524 |   '@esbuild/openbsd-x64@0.21.5':
4525 |     optional: true
4526 | 
4527 |   '@esbuild/openbsd-x64@0.23.1':
4528 |     optional: true
4529 | 
4530 |   '@esbuild/openbsd-x64@0.24.2':
4531 |     optional: true
4532 | 
4533 |   '@esbuild/sunos-x64@0.21.5':
4534 |     optional: true
4535 | 
4536 |   '@esbuild/sunos-x64@0.23.1':
4537 |     optional: true
4538 | 
4539 |   '@esbuild/sunos-x64@0.24.2':
4540 |     optional: true
4541 | 
4542 |   '@esbuild/win32-arm64@0.21.5':
4543 |     optional: true
4544 | 
4545 |   '@esbuild/win32-arm64@0.23.1':
4546 |     optional: true
4547 | 
4548 |   '@esbuild/win32-arm64@0.24.2':
4549 |     optional: true
4550 | 
4551 |   '@esbuild/win32-ia32@0.21.5':
4552 |     optional: true
4553 | 
4554 |   '@esbuild/win32-ia32@0.23.1':
4555 |     optional: true
4556 | 
4557 |   '@esbuild/win32-ia32@0.24.2':
4558 |     optional: true
4559 | 
4560 |   '@esbuild/win32-x64@0.21.5':
4561 |     optional: true
4562 | 
4563 |   '@esbuild/win32-x64@0.23.1':
4564 |     optional: true
4565 | 
4566 |   '@esbuild/win32-x64@0.24.2':
4567 |     optional: true
4568 | 
4569 |   '@eslint-community/eslint-utils@4.4.1(eslint@8.57.1)':
4570 |     dependencies:
4571 |       eslint: 8.57.1
4572 |       eslint-visitor-keys: 3.4.3
4573 | 
4574 |   '@eslint-community/regexpp@4.12.1': {}
4575 | 
4576 |   '@eslint/eslintrc@2.1.4':
4577 |     dependencies:
4578 |       ajv: 6.12.6
4579 |       debug: 4.4.0
4580 |       espree: 9.6.1
4581 |       globals: 13.24.0
4582 |       ignore: 5.3.2
4583 |       import-fresh: 3.3.0
4584 |       js-yaml: 4.1.0
4585 |       minimatch: 3.1.2
4586 |       strip-json-comments: 3.1.1
4587 |     transitivePeerDependencies:
4588 |       - supports-color
4589 | 
4590 |   '@eslint/js@8.57.1': {}
4591 | 
4592 |   '@googlemaps/js-api-loader@1.16.8': {}
4593 | 
4594 |   '@googlemaps/markerclusterer@2.5.3':
4595 |     dependencies:
4596 |       fast-deep-equal: 3.1.3
4597 |       supercluster: 8.0.1
4598 | 
4599 |   '@headlessui/react@1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
4600 |     dependencies:
4601 |       '@tanstack/react-virtual': 3.11.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
4602 |       client-only: 0.0.1
4603 |       react: 18.3.1
4604 |       react-dom: 18.3.1(react@18.3.1)
4605 | 
4606 |   '@heroicons/react@2.2.0(react@18.3.1)':
4607 |     dependencies:
4608 |       react: 18.3.1
4609 | 
4610 |   '@humanwhocodes/config-array@0.13.0':
4611 |     dependencies:
4612 |       '@humanwhocodes/object-schema': 2.0.3
4613 |       debug: 4.4.0
4614 |       minimatch: 3.1.2
4615 |     transitivePeerDependencies:
4616 |       - supports-color
4617 | 
4618 |   '@humanwhocodes/module-importer@1.0.1': {}
4619 | 
4620 |   '@humanwhocodes/object-schema@2.0.3': {}
4621 | 
4622 |   '@isaacs/cliui@8.0.2':
4623 |     dependencies:
4624 |       string-width: 5.1.2
4625 |       string-width-cjs: string-width@4.2.3
4626 |       strip-ansi: 7.1.0
4627 |       strip-ansi-cjs: strip-ansi@6.0.1
4628 |       wrap-ansi: 8.1.0
4629 |       wrap-ansi-cjs: wrap-ansi@7.0.0
4630 | 
4631 |   '@istanbuljs/load-nyc-config@1.1.0':
4632 |     dependencies:
4633 |       camelcase: 5.3.1
4634 |       find-up: 4.1.0
4635 |       get-package-type: 0.1.0
4636 |       js-yaml: 3.14.1
4637 |       resolve-from: 5.0.0
4638 | 
4639 |   '@istanbuljs/schema@0.1.3': {}
4640 | 
4641 |   '@jest/console@29.7.0':
4642 |     dependencies:
4643 |       '@jest/types': 29.6.3
4644 |       '@types/node': 20.17.12
4645 |       chalk: 4.1.2
4646 |       jest-message-util: 29.7.0
4647 |       jest-util: 29.7.0
4648 |       slash: 3.0.0
4649 | 
4650 |   '@jest/core@29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))':
4651 |     dependencies:
4652 |       '@jest/console': 29.7.0
4653 |       '@jest/reporters': 29.7.0
4654 |       '@jest/test-result': 29.7.0
4655 |       '@jest/transform': 29.7.0
4656 |       '@jest/types': 29.6.3
4657 |       '@types/node': 20.17.12
4658 |       ansi-escapes: 4.3.2
4659 |       chalk: 4.1.2
4660 |       ci-info: 3.9.0
4661 |       exit: 0.1.2
4662 |       graceful-fs: 4.2.11
4663 |       jest-changed-files: 29.7.0
4664 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
4665 |       jest-haste-map: 29.7.0
4666 |       jest-message-util: 29.7.0
4667 |       jest-regex-util: 29.6.3
4668 |       jest-resolve: 29.7.0
4669 |       jest-resolve-dependencies: 29.7.0
4670 |       jest-runner: 29.7.0
4671 |       jest-runtime: 29.7.0
4672 |       jest-snapshot: 29.7.0
4673 |       jest-util: 29.7.0
4674 |       jest-validate: 29.7.0
4675 |       jest-watcher: 29.7.0
4676 |       micromatch: 4.0.8
4677 |       pretty-format: 29.7.0
4678 |       slash: 3.0.0
4679 |       strip-ansi: 6.0.1
4680 |     transitivePeerDependencies:
4681 |       - babel-plugin-macros
4682 |       - supports-color
4683 |       - ts-node
4684 | 
4685 |   '@jest/environment@29.7.0':
4686 |     dependencies:
4687 |       '@jest/fake-timers': 29.7.0
4688 |       '@jest/types': 29.6.3
4689 |       '@types/node': 20.17.12
4690 |       jest-mock: 29.7.0
4691 | 
4692 |   '@jest/expect-utils@29.7.0':
4693 |     dependencies:
4694 |       jest-get-type: 29.6.3
4695 | 
4696 |   '@jest/expect@29.7.0':
4697 |     dependencies:
4698 |       expect: 29.7.0
4699 |       jest-snapshot: 29.7.0
4700 |     transitivePeerDependencies:
4701 |       - supports-color
4702 | 
4703 |   '@jest/fake-timers@29.7.0':
4704 |     dependencies:
4705 |       '@jest/types': 29.6.3
4706 |       '@sinonjs/fake-timers': 10.3.0
4707 |       '@types/node': 20.17.12
4708 |       jest-message-util: 29.7.0
4709 |       jest-mock: 29.7.0
4710 |       jest-util: 29.7.0
4711 | 
4712 |   '@jest/globals@29.7.0':
4713 |     dependencies:
4714 |       '@jest/environment': 29.7.0
4715 |       '@jest/expect': 29.7.0
4716 |       '@jest/types': 29.6.3
4717 |       jest-mock: 29.7.0
4718 |     transitivePeerDependencies:
4719 |       - supports-color
4720 | 
4721 |   '@jest/reporters@29.7.0':
4722 |     dependencies:
4723 |       '@bcoe/v8-coverage': 0.2.3
4724 |       '@jest/console': 29.7.0
4725 |       '@jest/test-result': 29.7.0
4726 |       '@jest/transform': 29.7.0
4727 |       '@jest/types': 29.6.3
4728 |       '@jridgewell/trace-mapping': 0.3.25
4729 |       '@types/node': 20.17.12
4730 |       chalk: 4.1.2
4731 |       collect-v8-coverage: 1.0.2
4732 |       exit: 0.1.2
4733 |       glob: 7.2.3
4734 |       graceful-fs: 4.2.11
4735 |       istanbul-lib-coverage: 3.2.2
4736 |       istanbul-lib-instrument: 6.0.3
4737 |       istanbul-lib-report: 3.0.1
4738 |       istanbul-lib-source-maps: 4.0.1
4739 |       istanbul-reports: 3.1.7
4740 |       jest-message-util: 29.7.0
4741 |       jest-util: 29.7.0
4742 |       jest-worker: 29.7.0
4743 |       slash: 3.0.0
4744 |       string-length: 4.0.2
4745 |       strip-ansi: 6.0.1
4746 |       v8-to-istanbul: 9.3.0
4747 |     transitivePeerDependencies:
4748 |       - supports-color
4749 | 
4750 |   '@jest/schemas@29.6.3':
4751 |     dependencies:
4752 |       '@sinclair/typebox': 0.27.8
4753 | 
4754 |   '@jest/source-map@29.6.3':
4755 |     dependencies:
4756 |       '@jridgewell/trace-mapping': 0.3.25
4757 |       callsites: 3.1.0
4758 |       graceful-fs: 4.2.11
4759 | 
4760 |   '@jest/test-result@29.7.0':
4761 |     dependencies:
4762 |       '@jest/console': 29.7.0
4763 |       '@jest/types': 29.6.3
4764 |       '@types/istanbul-lib-coverage': 2.0.6
4765 |       collect-v8-coverage: 1.0.2
4766 | 
4767 |   '@jest/test-sequencer@29.7.0':
4768 |     dependencies:
4769 |       '@jest/test-result': 29.7.0
4770 |       graceful-fs: 4.2.11
4771 |       jest-haste-map: 29.7.0
4772 |       slash: 3.0.0
4773 | 
4774 |   '@jest/transform@29.7.0':
4775 |     dependencies:
4776 |       '@babel/core': 7.26.0
4777 |       '@jest/types': 29.6.3
4778 |       '@jridgewell/trace-mapping': 0.3.25
4779 |       babel-plugin-istanbul: 6.1.1
4780 |       chalk: 4.1.2
4781 |       convert-source-map: 2.0.0
4782 |       fast-json-stable-stringify: 2.1.0
4783 |       graceful-fs: 4.2.11
4784 |       jest-haste-map: 29.7.0
4785 |       jest-regex-util: 29.6.3
4786 |       jest-util: 29.7.0
4787 |       micromatch: 4.0.8
4788 |       pirates: 4.0.6
4789 |       slash: 3.0.0
4790 |       write-file-atomic: 4.0.2
4791 |     transitivePeerDependencies:
4792 |       - supports-color
4793 | 
4794 |   '@jest/types@29.6.3':
4795 |     dependencies:
4796 |       '@jest/schemas': 29.6.3
4797 |       '@types/istanbul-lib-coverage': 2.0.6
4798 |       '@types/istanbul-reports': 3.0.4
4799 |       '@types/node': 20.17.12
4800 |       '@types/yargs': 17.0.33
4801 |       chalk: 4.1.2
4802 | 
4803 |   '@jridgewell/gen-mapping@0.3.8':
4804 |     dependencies:
4805 |       '@jridgewell/set-array': 1.2.1
4806 |       '@jridgewell/sourcemap-codec': 1.5.0
4807 |       '@jridgewell/trace-mapping': 0.3.25
4808 | 
4809 |   '@jridgewell/resolve-uri@3.1.2': {}
4810 | 
4811 |   '@jridgewell/set-array@1.2.1': {}
4812 | 
4813 |   '@jridgewell/sourcemap-codec@1.5.0': {}
4814 | 
4815 |   '@jridgewell/trace-mapping@0.3.25':
4816 |     dependencies:
4817 |       '@jridgewell/resolve-uri': 3.1.2
4818 |       '@jridgewell/sourcemap-codec': 1.5.0
4819 | 
4820 |   '@jridgewell/trace-mapping@0.3.9':
4821 |     dependencies:
4822 |       '@jridgewell/resolve-uri': 3.1.2
4823 |       '@jridgewell/sourcemap-codec': 1.5.0
4824 | 
4825 |   '@nodelib/fs.scandir@2.1.5':
4826 |     dependencies:
4827 |       '@nodelib/fs.stat': 2.0.5
4828 |       run-parallel: 1.2.0
4829 | 
4830 |   '@nodelib/fs.stat@2.0.5': {}
4831 | 
4832 |   '@nodelib/fs.walk@1.2.8':
4833 |     dependencies:
4834 |       '@nodelib/fs.scandir': 2.1.5
4835 |       fastq: 1.18.0
4836 | 
4837 |   '@pkgjs/parseargs@0.11.0':
4838 |     optional: true
4839 | 
4840 |   '@prisma/client@5.22.0(prisma@5.22.0)':
4841 |     optionalDependencies:
4842 |       prisma: 5.22.0
4843 | 
4844 |   '@prisma/debug@5.22.0': {}
4845 | 
4846 |   '@prisma/engines-version@5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2': {}
4847 | 
4848 |   '@prisma/engines@5.22.0':
4849 |     dependencies:
4850 |       '@prisma/debug': 5.22.0
4851 |       '@prisma/engines-version': 5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2
4852 |       '@prisma/fetch-engine': 5.22.0
4853 |       '@prisma/get-platform': 5.22.0
4854 | 
4855 |   '@prisma/fetch-engine@5.22.0':
4856 |     dependencies:
4857 |       '@prisma/debug': 5.22.0
4858 |       '@prisma/engines-version': 5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2
4859 |       '@prisma/get-platform': 5.22.0
4860 | 
4861 |   '@prisma/get-platform@5.22.0':
4862 |     dependencies:
4863 |       '@prisma/debug': 5.22.0
4864 | 
4865 |   '@react-google-maps/api@2.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
4866 |     dependencies:
4867 |       '@googlemaps/js-api-loader': 1.16.8
4868 |       '@googlemaps/markerclusterer': 2.5.3
4869 |       '@react-google-maps/infobox': 2.20.0
4870 |       '@react-google-maps/marker-clusterer': 2.20.0
4871 |       '@types/google.maps': 3.58.1
4872 |       invariant: 2.2.4
4873 |       react: 18.3.1
4874 |       react-dom: 18.3.1(react@18.3.1)
4875 | 
4876 |   '@react-google-maps/infobox@2.20.0': {}
4877 | 
4878 |   '@react-google-maps/marker-clusterer@2.20.0': {}
4879 | 
4880 |   '@remix-run/router@1.21.0': {}
4881 | 
4882 |   '@rollup/rollup-android-arm-eabi@4.30.1':
4883 |     optional: true
4884 | 
4885 |   '@rollup/rollup-android-arm64@4.30.1':
4886 |     optional: true
4887 | 
4888 |   '@rollup/rollup-darwin-arm64@4.30.1':
4889 |     optional: true
4890 | 
4891 |   '@rollup/rollup-darwin-x64@4.30.1':
4892 |     optional: true
4893 | 
4894 |   '@rollup/rollup-freebsd-arm64@4.30.1':
4895 |     optional: true
4896 | 
4897 |   '@rollup/rollup-freebsd-x64@4.30.1':
4898 |     optional: true
4899 | 
4900 |   '@rollup/rollup-linux-arm-gnueabihf@4.30.1':
4901 |     optional: true
4902 | 
4903 |   '@rollup/rollup-linux-arm-musleabihf@4.30.1':
4904 |     optional: true
4905 | 
4906 |   '@rollup/rollup-linux-arm64-gnu@4.30.1':
4907 |     optional: true
4908 | 
4909 |   '@rollup/rollup-linux-arm64-musl@4.30.1':
4910 |     optional: true
4911 | 
4912 |   '@rollup/rollup-linux-loongarch64-gnu@4.30.1':
4913 |     optional: true
4914 | 
4915 |   '@rollup/rollup-linux-powerpc64le-gnu@4.30.1':
4916 |     optional: true
4917 | 
4918 |   '@rollup/rollup-linux-riscv64-gnu@4.30.1':
4919 |     optional: true
4920 | 
4921 |   '@rollup/rollup-linux-s390x-gnu@4.30.1':
4922 |     optional: true
4923 | 
4924 |   '@rollup/rollup-linux-x64-gnu@4.30.1':
4925 |     optional: true
4926 | 
4927 |   '@rollup/rollup-linux-x64-musl@4.30.1':
4928 |     optional: true
4929 | 
4930 |   '@rollup/rollup-win32-arm64-msvc@4.30.1':
4931 |     optional: true
4932 | 
4933 |   '@rollup/rollup-win32-ia32-msvc@4.30.1':
4934 |     optional: true
4935 | 
4936 |   '@rollup/rollup-win32-x64-msvc@4.30.1':
4937 |     optional: true
4938 | 
4939 |   '@sinclair/typebox@0.27.8': {}
4940 | 
4941 |   '@sinonjs/commons@3.0.1':
4942 |     dependencies:
4943 |       type-detect: 4.0.8
4944 | 
4945 |   '@sinonjs/fake-timers@10.3.0':
4946 |     dependencies:
4947 |       '@sinonjs/commons': 3.0.1
4948 | 
4949 |   '@swc/core-darwin-arm64@1.10.7':
4950 |     optional: true
4951 | 
4952 |   '@swc/core-darwin-x64@1.10.7':
4953 |     optional: true
4954 | 
4955 |   '@swc/core-linux-arm-gnueabihf@1.10.7':
4956 |     optional: true
4957 | 
4958 |   '@swc/core-linux-arm64-gnu@1.10.7':
4959 |     optional: true
4960 | 
4961 |   '@swc/core-linux-arm64-musl@1.10.7':
4962 |     optional: true
4963 | 
4964 |   '@swc/core-linux-x64-gnu@1.10.7':
4965 |     optional: true
4966 | 
4967 |   '@swc/core-linux-x64-musl@1.10.7':
4968 |     optional: true
4969 | 
4970 |   '@swc/core-win32-arm64-msvc@1.10.7':
4971 |     optional: true
4972 | 
4973 |   '@swc/core-win32-ia32-msvc@1.10.7':
4974 |     optional: true
4975 | 
4976 |   '@swc/core-win32-x64-msvc@1.10.7':
4977 |     optional: true
4978 | 
4979 |   '@swc/core@1.10.7':
4980 |     dependencies:
4981 |       '@swc/counter': 0.1.3
4982 |       '@swc/types': 0.1.17
4983 |     optionalDependencies:
4984 |       '@swc/core-darwin-arm64': 1.10.7
4985 |       '@swc/core-darwin-x64': 1.10.7
4986 |       '@swc/core-linux-arm-gnueabihf': 1.10.7
4987 |       '@swc/core-linux-arm64-gnu': 1.10.7
4988 |       '@swc/core-linux-arm64-musl': 1.10.7
4989 |       '@swc/core-linux-x64-gnu': 1.10.7
4990 |       '@swc/core-linux-x64-musl': 1.10.7
4991 |       '@swc/core-win32-arm64-msvc': 1.10.7
4992 |       '@swc/core-win32-ia32-msvc': 1.10.7
4993 |       '@swc/core-win32-x64-msvc': 1.10.7
4994 | 
4995 |   '@swc/counter@0.1.3': {}
4996 | 
4997 |   '@swc/types@0.1.17':
4998 |     dependencies:
4999 |       '@swc/counter': 0.1.3
5000 | 
5001 |   '@tailwindcss/aspect-ratio@0.4.2(tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))':
5002 |     dependencies:
5003 |       tailwindcss: 3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
5004 | 
5005 |   '@tailwindcss/forms@0.5.10(tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))':
5006 |     dependencies:
5007 |       mini-svg-data-uri: 1.4.4
5008 |       tailwindcss: 3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
5009 | 
5010 |   '@tanstack/query-core@5.64.1': {}
5011 | 
5012 |   '@tanstack/query-devtools@5.62.16': {}
5013 | 
5014 |   '@tanstack/react-query-devtools@5.64.1(@tanstack/react-query@5.64.1(react@18.3.1))(react@18.3.1)':
5015 |     dependencies:
5016 |       '@tanstack/query-devtools': 5.62.16
5017 |       '@tanstack/react-query': 5.64.1(react@18.3.1)
5018 |       react: 18.3.1
5019 | 
5020 |   '@tanstack/react-query@5.64.1(react@18.3.1)':
5021 |     dependencies:
5022 |       '@tanstack/query-core': 5.64.1
5023 |       react: 18.3.1
5024 | 
5025 |   '@tanstack/react-virtual@3.11.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
5026 |     dependencies:
5027 |       '@tanstack/virtual-core': 3.11.2
5028 |       react: 18.3.1
5029 |       react-dom: 18.3.1(react@18.3.1)
5030 | 
5031 |   '@tanstack/virtual-core@3.11.2': {}
5032 | 
5033 |   '@testing-library/dom@9.3.4':
5034 |     dependencies:
5035 |       '@babel/code-frame': 7.26.2
5036 |       '@babel/runtime': 7.26.0
5037 |       '@types/aria-query': 5.0.4
5038 |       aria-query: 5.1.3
5039 |       chalk: 4.1.2
5040 |       dom-accessibility-api: 0.5.16
5041 |       lz-string: 1.5.0
5042 |       pretty-format: 27.5.1
5043 | 
5044 |   '@testing-library/jest-dom@6.6.3':
5045 |     dependencies:
5046 |       '@adobe/css-tools': 4.4.1
5047 |       aria-query: 5.3.2
5048 |       chalk: 3.0.0
5049 |       css.escape: 1.5.1
5050 |       dom-accessibility-api: 0.6.3
5051 |       lodash: 4.17.21
5052 |       redent: 3.0.0
5053 | 
5054 |   '@testing-library/react@14.3.1(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
5055 |     dependencies:
5056 |       '@babel/runtime': 7.26.0
5057 |       '@testing-library/dom': 9.3.4
5058 |       '@types/react-dom': 18.3.5(@types/react@18.3.18)
5059 |       react: 18.3.1
5060 |       react-dom: 18.3.1(react@18.3.1)
5061 |     transitivePeerDependencies:
5062 |       - '@types/react'
5063 | 
5064 |   '@testing-library/user-event@14.5.2(@testing-library/dom@9.3.4)':
5065 |     dependencies:
5066 |       '@testing-library/dom': 9.3.4
5067 | 
5068 |   '@tsconfig/node10@1.0.11': {}
5069 | 
5070 |   '@tsconfig/node12@1.0.11': {}
5071 | 
5072 |   '@tsconfig/node14@1.0.3': {}
5073 | 
5074 |   '@tsconfig/node16@1.0.4': {}
5075 | 
5076 |   '@types/aria-query@5.0.4': {}
5077 | 
5078 |   '@types/babel__core@7.20.5':
5079 |     dependencies:
5080 |       '@babel/parser': 7.26.5
5081 |       '@babel/types': 7.26.5
5082 |       '@types/babel__generator': 7.6.8
5083 |       '@types/babel__template': 7.4.4
5084 |       '@types/babel__traverse': 7.20.6
5085 | 
5086 |   '@types/babel__generator@7.6.8':
5087 |     dependencies:
5088 |       '@babel/types': 7.26.5
5089 | 
5090 |   '@types/babel__template@7.4.4':
5091 |     dependencies:
5092 |       '@babel/parser': 7.26.5
5093 |       '@babel/types': 7.26.5
5094 | 
5095 |   '@types/babel__traverse@7.20.6':
5096 |     dependencies:
5097 |       '@babel/types': 7.26.5
5098 | 
5099 |   '@types/bcryptjs@2.4.6': {}
5100 | 
5101 |   '@types/body-parser@1.19.5':
5102 |     dependencies:
5103 |       '@types/connect': 3.4.38
5104 |       '@types/node': 20.17.12
5105 | 
5106 |   '@types/connect@3.4.38':
5107 |     dependencies:
5108 |       '@types/node': 20.17.12
5109 | 
5110 |   '@types/cookiejar@2.1.5': {}
5111 | 
5112 |   '@types/cors@2.8.17':
5113 |     dependencies:
5114 |       '@types/node': 20.17.12
5115 | 
5116 |   '@types/estree@1.0.6': {}
5117 | 
5118 |   '@types/express-serve-static-core@4.19.6':
5119 |     dependencies:
5120 |       '@types/node': 20.17.12
5121 |       '@types/qs': 6.9.17
5122 |       '@types/range-parser': 1.2.7
5123 |       '@types/send': 0.17.4
5124 | 
5125 |   '@types/express@4.17.21':
5126 |     dependencies:
5127 |       '@types/body-parser': 1.19.5
5128 |       '@types/express-serve-static-core': 4.19.6
5129 |       '@types/qs': 6.9.17
5130 |       '@types/serve-static': 1.15.7
5131 | 
5132 |   '@types/google.maps@3.58.1': {}
5133 | 
5134 |   '@types/graceful-fs@4.1.9':
5135 |     dependencies:
5136 |       '@types/node': 20.17.12
5137 | 
5138 |   '@types/http-errors@2.0.4': {}
5139 | 
5140 |   '@types/istanbul-lib-coverage@2.0.6': {}
5141 | 
5142 |   '@types/istanbul-lib-report@3.0.3':
5143 |     dependencies:
5144 |       '@types/istanbul-lib-coverage': 2.0.6
5145 | 
5146 |   '@types/istanbul-reports@3.0.4':
5147 |     dependencies:
5148 |       '@types/istanbul-lib-report': 3.0.3
5149 | 
5150 |   '@types/jest@29.5.14':
5151 |     dependencies:
5152 |       expect: 29.7.0
5153 |       pretty-format: 29.7.0
5154 | 
5155 |   '@types/json-schema@7.0.15': {}
5156 | 
5157 |   '@types/jsonwebtoken@9.0.7':
5158 |     dependencies:
5159 |       '@types/node': 20.17.12
5160 | 
5161 |   '@types/methods@1.1.4': {}
5162 | 
5163 |   '@types/mime@1.3.5': {}
5164 | 
5165 |   '@types/morgan@1.9.9':
5166 |     dependencies:
5167 |       '@types/node': 20.17.12
5168 | 
5169 |   '@types/multer@1.4.12':
5170 |     dependencies:
5171 |       '@types/express': 4.17.21
5172 | 
5173 |   '@types/node@20.17.12':
5174 |     dependencies:
5175 |       undici-types: 6.19.8
5176 | 
5177 |   '@types/nodemailer@6.4.17':
5178 |     dependencies:
5179 |       '@types/node': 20.17.12
5180 | 
5181 |   '@types/prop-types@15.7.14': {}
5182 | 
5183 |   '@types/qs@6.9.17': {}
5184 | 
5185 |   '@types/range-parser@1.2.7': {}
5186 | 
5187 |   '@types/react-dom@18.3.5(@types/react@18.3.18)':
5188 |     dependencies:
5189 |       '@types/react': 18.3.18
5190 | 
5191 |   '@types/react-transition-group@4.4.12(@types/react@18.3.18)':
5192 |     dependencies:
5193 |       '@types/react': 18.3.18
5194 | 
5195 |   '@types/react@18.3.18':
5196 |     dependencies:
5197 |       '@types/prop-types': 15.7.14
5198 |       csstype: 3.1.3
5199 | 
5200 |   '@types/semver@7.5.8': {}
5201 | 
5202 |   '@types/send@0.17.4':
5203 |     dependencies:
5204 |       '@types/mime': 1.3.5
5205 |       '@types/node': 20.17.12
5206 | 
5207 |   '@types/serve-static@1.15.7':
5208 |     dependencies:
5209 |       '@types/http-errors': 2.0.4
5210 |       '@types/node': 20.17.12
5211 |       '@types/send': 0.17.4
5212 | 
5213 |   '@types/stack-utils@2.0.3': {}
5214 | 
5215 |   '@types/superagent@8.1.9':
5216 |     dependencies:
5217 |       '@types/cookiejar': 2.1.5
5218 |       '@types/methods': 1.1.4
5219 |       '@types/node': 20.17.12
5220 |       form-data: 4.0.1
5221 | 
5222 |   '@types/supertest@6.0.2':
5223 |     dependencies:
5224 |       '@types/methods': 1.1.4
5225 |       '@types/superagent': 8.1.9
5226 | 
5227 |   '@types/triple-beam@1.3.5': {}
5228 | 
5229 |   '@types/yargs-parser@21.0.3': {}
5230 | 
5231 |   '@types/yargs@17.0.33':
5232 |     dependencies:
5233 |       '@types/yargs-parser': 21.0.3
5234 | 
5235 |   '@typescript-eslint/eslint-plugin@6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)':
5236 |     dependencies:
5237 |       '@eslint-community/regexpp': 4.12.1
5238 |       '@typescript-eslint/parser': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5239 |       '@typescript-eslint/scope-manager': 6.21.0
5240 |       '@typescript-eslint/type-utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5241 |       '@typescript-eslint/utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5242 |       '@typescript-eslint/visitor-keys': 6.21.0
5243 |       debug: 4.4.0
5244 |       eslint: 8.57.1
5245 |       graphemer: 1.4.0
5246 |       ignore: 5.3.2
5247 |       natural-compare: 1.4.0
5248 |       semver: 7.6.3
5249 |       ts-api-utils: 1.4.3(typescript@5.7.3)
5250 |     optionalDependencies:
5251 |       typescript: 5.7.3
5252 |     transitivePeerDependencies:
5253 |       - supports-color
5254 | 
5255 |   '@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
5256 |     dependencies:
5257 |       '@typescript-eslint/scope-manager': 6.21.0
5258 |       '@typescript-eslint/types': 6.21.0
5259 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
5260 |       '@typescript-eslint/visitor-keys': 6.21.0
5261 |       debug: 4.4.0
5262 |       eslint: 8.57.1
5263 |     optionalDependencies:
5264 |       typescript: 5.7.3
5265 |     transitivePeerDependencies:
5266 |       - supports-color
5267 | 
5268 |   '@typescript-eslint/scope-manager@6.21.0':
5269 |     dependencies:
5270 |       '@typescript-eslint/types': 6.21.0
5271 |       '@typescript-eslint/visitor-keys': 6.21.0
5272 | 
5273 |   '@typescript-eslint/type-utils@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
5274 |     dependencies:
5275 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
5276 |       '@typescript-eslint/utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5277 |       debug: 4.4.0
5278 |       eslint: 8.57.1
5279 |       ts-api-utils: 1.4.3(typescript@5.7.3)
5280 |     optionalDependencies:
5281 |       typescript: 5.7.3
5282 |     transitivePeerDependencies:
5283 |       - supports-color
5284 | 
5285 |   '@typescript-eslint/types@6.21.0': {}
5286 | 
5287 |   '@typescript-eslint/typescript-estree@6.21.0(typescript@5.7.3)':
5288 |     dependencies:
5289 |       '@typescript-eslint/types': 6.21.0
5290 |       '@typescript-eslint/visitor-keys': 6.21.0
5291 |       debug: 4.4.0
5292 |       globby: 11.1.0
5293 |       is-glob: 4.0.3
5294 |       minimatch: 9.0.3
5295 |       semver: 7.6.3
5296 |       ts-api-utils: 1.4.3(typescript@5.7.3)
5297 |     optionalDependencies:
5298 |       typescript: 5.7.3
5299 |     transitivePeerDependencies:
5300 |       - supports-color
5301 | 
5302 |   '@typescript-eslint/utils@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
5303 |     dependencies:
5304 |       '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
5305 |       '@types/json-schema': 7.0.15
5306 |       '@types/semver': 7.5.8
5307 |       '@typescript-eslint/scope-manager': 6.21.0
5308 |       '@typescript-eslint/types': 6.21.0
5309 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
5310 |       eslint: 8.57.1
5311 |       semver: 7.6.3
5312 |     transitivePeerDependencies:
5313 |       - supports-color
5314 |       - typescript
5315 | 
5316 |   '@typescript-eslint/visitor-keys@6.21.0':
5317 |     dependencies:
5318 |       '@typescript-eslint/types': 6.21.0
5319 |       eslint-visitor-keys: 3.4.3
5320 | 
5321 |   '@ungap/structured-clone@1.2.1': {}
5322 | 
5323 |   '@vitejs/plugin-react-swc@3.7.2(vite@5.4.11(@types/node@20.17.12))':
5324 |     dependencies:
5325 |       '@swc/core': 1.10.7
5326 |       vite: 5.4.11(@types/node@20.17.12)
5327 |     transitivePeerDependencies:
5328 |       - '@swc/helpers'
5329 | 
5330 |   '@vitejs/plugin-react@4.3.4(vite@5.4.11(@types/node@20.17.12))':
5331 |     dependencies:
5332 |       '@babel/core': 7.26.0
5333 |       '@babel/plugin-transform-react-jsx-self': 7.25.9(@babel/core@7.26.0)
5334 |       '@babel/plugin-transform-react-jsx-source': 7.25.9(@babel/core@7.26.0)
5335 |       '@types/babel__core': 7.20.5
5336 |       react-refresh: 0.14.2
5337 |       vite: 5.4.11(@types/node@20.17.12)
5338 |     transitivePeerDependencies:
5339 |       - supports-color
5340 | 
5341 |   '@vitest/coverage-v8@1.6.0(vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3))':
5342 |     dependencies:
5343 |       '@ampproject/remapping': 2.3.0
5344 |       '@bcoe/v8-coverage': 0.2.3
5345 |       debug: 4.4.0
5346 |       istanbul-lib-coverage: 3.2.2
5347 |       istanbul-lib-report: 3.0.1
5348 |       istanbul-lib-source-maps: 5.0.6
5349 |       istanbul-reports: 3.1.7
5350 |       magic-string: 0.30.17
5351 |       magicast: 0.3.5
5352 |       picocolors: 1.1.1
5353 |       std-env: 3.8.0
5354 |       strip-literal: 2.1.1
5355 |       test-exclude: 6.0.0
5356 |       vitest: 1.6.0(@types/node@20.17.12)(happy-dom@12.10.3)
5357 |     transitivePeerDependencies:
5358 |       - supports-color
5359 | 
5360 |   '@vitest/expect@1.6.0':
5361 |     dependencies:
5362 |       '@vitest/spy': 1.6.0
5363 |       '@vitest/utils': 1.6.0
5364 |       chai: 4.5.0
5365 | 
5366 |   '@vitest/runner@1.6.0':
5367 |     dependencies:
5368 |       '@vitest/utils': 1.6.0
5369 |       p-limit: 5.0.0
5370 |       pathe: 1.1.2
5371 | 
5372 |   '@vitest/snapshot@1.6.0':
5373 |     dependencies:
5374 |       magic-string: 0.30.17
5375 |       pathe: 1.1.2
5376 |       pretty-format: 29.7.0
5377 | 
5378 |   '@vitest/spy@1.6.0':
5379 |     dependencies:
5380 |       tinyspy: 2.2.1
5381 | 
5382 |   '@vitest/utils@1.6.0':
5383 |     dependencies:
5384 |       diff-sequences: 29.6.3
5385 |       estree-walker: 3.0.3
5386 |       loupe: 2.3.7
5387 |       pretty-format: 29.7.0
5388 | 
5389 |   accepts@1.3.8:
5390 |     dependencies:
5391 |       mime-types: 2.1.35
5392 |       negotiator: 0.6.3
5393 | 
5394 |   acorn-jsx@5.3.2(acorn@8.14.0):
5395 |     dependencies:
5396 |       acorn: 8.14.0
5397 | 
5398 |   acorn-walk@8.3.4:
5399 |     dependencies:
5400 |       acorn: 8.14.0
5401 | 
5402 |   acorn@8.14.0: {}
5403 | 
5404 |   ajv@6.12.6:
5405 |     dependencies:
5406 |       fast-deep-equal: 3.1.3
5407 |       fast-json-stable-stringify: 2.1.0
5408 |       json-schema-traverse: 0.4.1
5409 |       uri-js: 4.4.1
5410 | 
5411 |   ansi-escapes@4.3.2:
5412 |     dependencies:
5413 |       type-fest: 0.21.3
5414 | 
5415 |   ansi-regex@5.0.1: {}
5416 | 
5417 |   ansi-regex@6.1.0: {}
5418 | 
5419 |   ansi-styles@4.3.0:
5420 |     dependencies:
5421 |       color-convert: 2.0.1
5422 | 
5423 |   ansi-styles@5.2.0: {}
5424 | 
5425 |   ansi-styles@6.2.1: {}
5426 | 
5427 |   any-promise@1.3.0: {}
5428 | 
5429 |   anymatch@3.1.3:
5430 |     dependencies:
5431 |       normalize-path: 3.0.0
5432 |       picomatch: 2.3.1
5433 | 
5434 |   append-field@1.0.0: {}
5435 | 
5436 |   arg@4.1.3: {}
5437 | 
5438 |   arg@5.0.2: {}
5439 | 
5440 |   argparse@1.0.10:
5441 |     dependencies:
5442 |       sprintf-js: 1.0.3
5443 | 
5444 |   argparse@2.0.1: {}
5445 | 
5446 |   aria-query@5.1.3:
5447 |     dependencies:
5448 |       deep-equal: 2.2.3
5449 | 
5450 |   aria-query@5.3.2: {}
5451 | 
5452 |   array-buffer-byte-length@1.0.2:
5453 |     dependencies:
5454 |       call-bound: 1.0.3
5455 |       is-array-buffer: 3.0.5
5456 | 
5457 |   array-flatten@1.1.1: {}
5458 | 
5459 |   array-union@2.1.0: {}
5460 | 
5461 |   asap@2.0.6: {}
5462 | 
5463 |   assertion-error@1.1.0: {}
5464 | 
5465 |   async@3.2.6: {}
5466 | 
5467 |   asynckit@0.4.0: {}
5468 | 
5469 |   autoprefixer@10.4.20(postcss@8.4.49):
5470 |     dependencies:
5471 |       browserslist: 4.24.4
5472 |       caniuse-lite: 1.0.30001692
5473 |       fraction.js: 4.3.7
5474 |       normalize-range: 0.1.2
5475 |       picocolors: 1.1.1
5476 |       postcss: 8.4.49
5477 |       postcss-value-parser: 4.2.0
5478 | 
5479 |   available-typed-arrays@1.0.7:
5480 |     dependencies:
5481 |       possible-typed-array-names: 1.0.0
5482 | 
5483 |   axios@1.7.9:
5484 |     dependencies:
5485 |       follow-redirects: 1.15.9
5486 |       form-data: 4.0.1
5487 |       proxy-from-env: 1.1.0
5488 |     transitivePeerDependencies:
5489 |       - debug
5490 | 
5491 |   babel-jest@29.7.0(@babel/core@7.26.0):
5492 |     dependencies:
5493 |       '@babel/core': 7.26.0
5494 |       '@jest/transform': 29.7.0
5495 |       '@types/babel__core': 7.20.5
5496 |       babel-plugin-istanbul: 6.1.1
5497 |       babel-preset-jest: 29.6.3(@babel/core@7.26.0)
5498 |       chalk: 4.1.2
5499 |       graceful-fs: 4.2.11
5500 |       slash: 3.0.0
5501 |     transitivePeerDependencies:
5502 |       - supports-color
5503 | 
5504 |   babel-plugin-istanbul@6.1.1:
5505 |     dependencies:
5506 |       '@babel/helper-plugin-utils': 7.26.5
5507 |       '@istanbuljs/load-nyc-config': 1.1.0
5508 |       '@istanbuljs/schema': 0.1.3
5509 |       istanbul-lib-instrument: 5.2.1
5510 |       test-exclude: 6.0.0
5511 |     transitivePeerDependencies:
5512 |       - supports-color
5513 | 
5514 |   babel-plugin-jest-hoist@29.6.3:
5515 |     dependencies:
5516 |       '@babel/template': 7.25.9
5517 |       '@babel/types': 7.26.5
5518 |       '@types/babel__core': 7.20.5
5519 |       '@types/babel__traverse': 7.20.6
5520 | 
5521 |   babel-preset-current-node-syntax@1.1.0(@babel/core@7.26.0):
5522 |     dependencies:
5523 |       '@babel/core': 7.26.0
5524 |       '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.26.0)
5525 |       '@babel/plugin-syntax-bigint': 7.8.3(@babel/core@7.26.0)
5526 |       '@babel/plugin-syntax-class-properties': 7.12.13(@babel/core@7.26.0)
5527 |       '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.26.0)
5528 |       '@babel/plugin-syntax-import-attributes': 7.26.0(@babel/core@7.26.0)
5529 |       '@babel/plugin-syntax-import-meta': 7.10.4(@babel/core@7.26.0)
5530 |       '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.26.0)
5531 |       '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.26.0)
5532 |       '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.26.0)
5533 |       '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.26.0)
5534 |       '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.26.0)
5535 |       '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.26.0)
5536 |       '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.26.0)
5537 |       '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.26.0)
5538 |       '@babel/plugin-syntax-top-level-await': 7.14.5(@babel/core@7.26.0)
5539 | 
5540 |   babel-preset-jest@29.6.3(@babel/core@7.26.0):
5541 |     dependencies:
5542 |       '@babel/core': 7.26.0
5543 |       babel-plugin-jest-hoist: 29.6.3
5544 |       babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.0)
5545 | 
5546 |   balanced-match@1.0.2: {}
5547 | 
5548 |   basic-auth@2.0.1:
5549 |     dependencies:
5550 |       safe-buffer: 5.1.2
5551 | 
5552 |   bcryptjs@2.4.3: {}
5553 | 
5554 |   binary-extensions@2.3.0: {}
5555 | 
5556 |   body-parser@1.20.3:
5557 |     dependencies:
5558 |       bytes: 3.1.2
5559 |       content-type: 1.0.5
5560 |       debug: 2.6.9
5561 |       depd: 2.0.0
5562 |       destroy: 1.2.0
5563 |       http-errors: 2.0.0
5564 |       iconv-lite: 0.4.24
5565 |       on-finished: 2.4.1
5566 |       qs: 6.13.0
5567 |       raw-body: 2.5.2
5568 |       type-is: 1.6.18
5569 |       unpipe: 1.0.0
5570 |     transitivePeerDependencies:
5571 |       - supports-color
5572 | 
5573 |   brace-expansion@1.1.11:
5574 |     dependencies:
5575 |       balanced-match: 1.0.2
5576 |       concat-map: 0.0.1
5577 | 
5578 |   brace-expansion@2.0.1:
5579 |     dependencies:
5580 |       balanced-match: 1.0.2
5581 | 
5582 |   braces@3.0.3:
5583 |     dependencies:
5584 |       fill-range: 7.1.1
5585 | 
5586 |   browserslist@4.24.4:
5587 |     dependencies:
5588 |       caniuse-lite: 1.0.30001692
5589 |       electron-to-chromium: 1.5.80
5590 |       node-releases: 2.0.19
5591 |       update-browserslist-db: 1.1.2(browserslist@4.24.4)
5592 | 
5593 |   bs-logger@0.2.6:
5594 |     dependencies:
5595 |       fast-json-stable-stringify: 2.1.0
5596 | 
5597 |   bser@2.1.1:
5598 |     dependencies:
5599 |       node-int64: 0.4.0
5600 | 
5601 |   buffer-equal-constant-time@1.0.1: {}
5602 | 
5603 |   buffer-from@1.1.2: {}
5604 | 
5605 |   bundle-require@5.1.0(esbuild@0.24.2):
5606 |     dependencies:
5607 |       esbuild: 0.24.2
5608 |       load-tsconfig: 0.2.5
5609 | 
5610 |   busboy@1.6.0:
5611 |     dependencies:
5612 |       streamsearch: 1.1.0
5613 | 
5614 |   bytes@3.1.2: {}
5615 | 
5616 |   cac@6.7.14: {}
5617 | 
5618 |   call-bind-apply-helpers@1.0.1:
5619 |     dependencies:
5620 |       es-errors: 1.3.0
5621 |       function-bind: 1.1.2
5622 | 
5623 |   call-bind@1.0.8:
5624 |     dependencies:
5625 |       call-bind-apply-helpers: 1.0.1
5626 |       es-define-property: 1.0.1
5627 |       get-intrinsic: 1.2.7
5628 |       set-function-length: 1.2.2
5629 | 
5630 |   call-bound@1.0.3:
5631 |     dependencies:
5632 |       call-bind-apply-helpers: 1.0.1
5633 |       get-intrinsic: 1.2.7
5634 | 
5635 |   callsites@3.1.0: {}
5636 | 
5637 |   camelcase-css@2.0.1: {}
5638 | 
5639 |   camelcase@5.3.1: {}
5640 | 
5641 |   camelcase@6.3.0: {}
5642 | 
5643 |   caniuse-lite@1.0.30001692: {}
5644 | 
5645 |   chai@4.5.0:
5646 |     dependencies:
5647 |       assertion-error: 1.1.0
5648 |       check-error: 1.0.3
5649 |       deep-eql: 4.1.4
5650 |       get-func-name: 2.0.2
5651 |       loupe: 2.3.7
5652 |       pathval: 1.1.1
5653 |       type-detect: 4.1.0
5654 | 
5655 |   chalk@3.0.0:
5656 |     dependencies:
5657 |       ansi-styles: 4.3.0
5658 |       supports-color: 7.2.0
5659 | 
5660 |   chalk@4.1.2:
5661 |     dependencies:
5662 |       ansi-styles: 4.3.0
5663 |       supports-color: 7.2.0
5664 | 
5665 |   char-regex@1.0.2: {}
5666 | 
5667 |   check-error@1.0.3:
5668 |     dependencies:
5669 |       get-func-name: 2.0.2
5670 | 
5671 |   chokidar@3.6.0:
5672 |     dependencies:
5673 |       anymatch: 3.1.3
5674 |       braces: 3.0.3
5675 |       glob-parent: 5.1.2
5676 |       is-binary-path: 2.1.0
5677 |       is-glob: 4.0.3
5678 |       normalize-path: 3.0.0
5679 |       readdirp: 3.6.0
5680 |     optionalDependencies:
5681 |       fsevents: 2.3.3
5682 | 
5683 |   chokidar@4.0.3:
5684 |     dependencies:
5685 |       readdirp: 4.1.1
5686 | 
5687 |   ci-info@3.9.0: {}
5688 | 
5689 |   cjs-module-lexer@1.4.1: {}
5690 | 
5691 |   client-only@0.0.1: {}
5692 | 
5693 |   cliui@8.0.1:
5694 |     dependencies:
5695 |       string-width: 4.2.3
5696 |       strip-ansi: 6.0.1
5697 |       wrap-ansi: 7.0.0
5698 | 
5699 |   clsx@2.1.1: {}
5700 | 
5701 |   co@4.6.0: {}
5702 | 
5703 |   collect-v8-coverage@1.0.2: {}
5704 | 
5705 |   color-convert@1.9.3:
5706 |     dependencies:
5707 |       color-name: 1.1.3
5708 | 
5709 |   color-convert@2.0.1:
5710 |     dependencies:
5711 |       color-name: 1.1.4
5712 | 
5713 |   color-name@1.1.3: {}
5714 | 
5715 |   color-name@1.1.4: {}
5716 | 
5717 |   color-string@1.9.1:
5718 |     dependencies:
5719 |       color-name: 1.1.4
5720 |       simple-swizzle: 0.2.2
5721 | 
5722 |   color@3.2.1:
5723 |     dependencies:
5724 |       color-convert: 1.9.3
5725 |       color-string: 1.9.1
5726 | 
5727 |   colorspace@1.1.4:
5728 |     dependencies:
5729 |       color: 3.2.1
5730 |       text-hex: 1.0.0
5731 | 
5732 |   combined-stream@1.0.8:
5733 |     dependencies:
5734 |       delayed-stream: 1.0.0
5735 | 
5736 |   commander@4.1.1: {}
5737 | 
5738 |   component-emitter@1.3.1: {}
5739 | 
5740 |   concat-map@0.0.1: {}
5741 | 
5742 |   concat-stream@1.6.2:
5743 |     dependencies:
5744 |       buffer-from: 1.1.2
5745 |       inherits: 2.0.4
5746 |       readable-stream: 2.3.8
5747 |       typedarray: 0.0.6
5748 | 
5749 |   confbox@0.1.8: {}
5750 | 
5751 |   consola@3.4.0: {}
5752 | 
5753 |   content-disposition@0.5.4:
5754 |     dependencies:
5755 |       safe-buffer: 5.2.1
5756 | 
5757 |   content-type@1.0.5: {}
5758 | 
5759 |   convert-source-map@2.0.0: {}
5760 | 
5761 |   cookie-signature@1.0.6: {}
5762 | 
5763 |   cookie@0.7.1: {}
5764 | 
5765 |   cookiejar@2.1.4: {}
5766 | 
5767 |   core-util-is@1.0.3: {}
5768 | 
5769 |   cors@2.8.5:
5770 |     dependencies:
5771 |       object-assign: 4.1.1
5772 |       vary: 1.1.2
5773 | 
5774 |   create-jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
5775 |     dependencies:
5776 |       '@jest/types': 29.6.3
5777 |       chalk: 4.1.2
5778 |       exit: 0.1.2
5779 |       graceful-fs: 4.2.11
5780 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
5781 |       jest-util: 29.7.0
5782 |       prompts: 2.4.2
5783 |     transitivePeerDependencies:
5784 |       - '@types/node'
5785 |       - babel-plugin-macros
5786 |       - supports-color
5787 |       - ts-node
5788 | 
5789 |   create-require@1.1.1: {}
5790 | 
5791 |   cross-env@7.0.3:
5792 |     dependencies:
5793 |       cross-spawn: 7.0.6
5794 | 
5795 |   cross-spawn@7.0.6:
5796 |     dependencies:
5797 |       path-key: 3.1.1
5798 |       shebang-command: 2.0.0
5799 |       which: 2.0.2
5800 | 
5801 |   css.escape@1.5.1: {}
5802 | 
5803 |   cssesc@3.0.0: {}
5804 | 
5805 |   csstype@3.1.3: {}
5806 | 
5807 |   debug@2.6.9:
5808 |     dependencies:
5809 |       ms: 2.0.0
5810 | 
5811 |   debug@4.4.0:
5812 |     dependencies:
5813 |       ms: 2.1.3
5814 | 
5815 |   dedent@1.5.3: {}
5816 | 
5817 |   deep-eql@4.1.4:
5818 |     dependencies:
5819 |       type-detect: 4.1.0
5820 | 
5821 |   deep-equal@2.2.3:
5822 |     dependencies:
5823 |       array-buffer-byte-length: 1.0.2
5824 |       call-bind: 1.0.8
5825 |       es-get-iterator: 1.1.3
5826 |       get-intrinsic: 1.2.7
5827 |       is-arguments: 1.2.0
5828 |       is-array-buffer: 3.0.5
5829 |       is-date-object: 1.1.0
5830 |       is-regex: 1.2.1
5831 |       is-shared-array-buffer: 1.0.4
5832 |       isarray: 2.0.5
5833 |       object-is: 1.1.6
5834 |       object-keys: 1.1.1
5835 |       object.assign: 4.1.7
5836 |       regexp.prototype.flags: 1.5.4
5837 |       side-channel: 1.1.0
5838 |       which-boxed-primitive: 1.1.1
5839 |       which-collection: 1.0.2
5840 |       which-typed-array: 1.1.18
5841 | 
5842 |   deep-is@0.1.4: {}
5843 | 
5844 |   deepmerge@4.3.1: {}
5845 | 
5846 |   define-data-property@1.1.4:
5847 |     dependencies:
5848 |       es-define-property: 1.0.1
5849 |       es-errors: 1.3.0
5850 |       gopd: 1.2.0
5851 | 
5852 |   define-properties@1.2.1:
5853 |     dependencies:
5854 |       define-data-property: 1.1.4
5855 |       has-property-descriptors: 1.0.2
5856 |       object-keys: 1.1.1
5857 | 
5858 |   delayed-stream@1.0.0: {}
5859 | 
5860 |   depd@2.0.0: {}
5861 | 
5862 |   destroy@1.2.0: {}
5863 | 
5864 |   detect-newline@3.1.0: {}
5865 | 
5866 |   dezalgo@1.0.4:
5867 |     dependencies:
5868 |       asap: 2.0.6
5869 |       wrappy: 1.0.2
5870 | 
5871 |   didyoumean@1.2.2: {}
5872 | 
5873 |   diff-sequences@29.6.3: {}
5874 | 
5875 |   diff@4.0.2: {}
5876 | 
5877 |   dir-glob@3.0.1:
5878 |     dependencies:
5879 |       path-type: 4.0.0
5880 | 
5881 |   dlv@1.1.3: {}
5882 | 
5883 |   doctrine@3.0.0:
5884 |     dependencies:
5885 |       esutils: 2.0.3
5886 | 
5887 |   dom-accessibility-api@0.5.16: {}
5888 | 
5889 |   dom-accessibility-api@0.6.3: {}
5890 | 
5891 |   dom-helpers@5.2.1:
5892 |     dependencies:
5893 |       '@babel/runtime': 7.26.0
5894 |       csstype: 3.1.3
5895 | 
5896 |   dotenv@16.4.7: {}
5897 | 
5898 |   dunder-proto@1.0.1:
5899 |     dependencies:
5900 |       call-bind-apply-helpers: 1.0.1
5901 |       es-errors: 1.3.0
5902 |       gopd: 1.2.0
5903 | 
5904 |   eastasianwidth@0.2.0: {}
5905 | 
5906 |   ecdsa-sig-formatter@1.0.11:
5907 |     dependencies:
5908 |       safe-buffer: 5.2.1
5909 | 
5910 |   ee-first@1.1.1: {}
5911 | 
5912 |   ejs@3.1.10:
5913 |     dependencies:
5914 |       jake: 10.9.2
5915 | 
5916 |   electron-to-chromium@1.5.80: {}
5917 | 
5918 |   emittery@0.13.1: {}
5919 | 
5920 |   emoji-regex@8.0.0: {}
5921 | 
5922 |   emoji-regex@9.2.2: {}
5923 | 
5924 |   enabled@2.0.0: {}
5925 | 
5926 |   encodeurl@1.0.2: {}
5927 | 
5928 |   encodeurl@2.0.0: {}
5929 | 
5930 |   entities@4.5.0: {}
5931 | 
5932 |   error-ex@1.3.2:
5933 |     dependencies:
5934 |       is-arrayish: 0.2.1
5935 | 
5936 |   es-define-property@1.0.1: {}
5937 | 
5938 |   es-errors@1.3.0: {}
5939 | 
5940 |   es-get-iterator@1.1.3:
5941 |     dependencies:
5942 |       call-bind: 1.0.8
5943 |       get-intrinsic: 1.2.7
5944 |       has-symbols: 1.1.0
5945 |       is-arguments: 1.2.0
5946 |       is-map: 2.0.3
5947 |       is-set: 2.0.3
5948 |       is-string: 1.1.1
5949 |       isarray: 2.0.5
5950 |       stop-iteration-iterator: 1.1.0
5951 | 
5952 |   es-object-atoms@1.0.0:
5953 |     dependencies:
5954 |       es-errors: 1.3.0
5955 | 
5956 |   esbuild@0.21.5:
5957 |     optionalDependencies:
5958 |       '@esbuild/aix-ppc64': 0.21.5
5959 |       '@esbuild/android-arm': 0.21.5
5960 |       '@esbuild/android-arm64': 0.21.5
5961 |       '@esbuild/android-x64': 0.21.5
5962 |       '@esbuild/darwin-arm64': 0.21.5
5963 |       '@esbuild/darwin-x64': 0.21.5
5964 |       '@esbuild/freebsd-arm64': 0.21.5
5965 |       '@esbuild/freebsd-x64': 0.21.5
5966 |       '@esbuild/linux-arm': 0.21.5
5967 |       '@esbuild/linux-arm64': 0.21.5
5968 |       '@esbuild/linux-ia32': 0.21.5
5969 |       '@esbuild/linux-loong64': 0.21.5
5970 |       '@esbuild/linux-mips64el': 0.21.5
5971 |       '@esbuild/linux-ppc64': 0.21.5
5972 |       '@esbuild/linux-riscv64': 0.21.5
5973 |       '@esbuild/linux-s390x': 0.21.5
5974 |       '@esbuild/linux-x64': 0.21.5
5975 |       '@esbuild/netbsd-x64': 0.21.5
5976 |       '@esbuild/openbsd-x64': 0.21.5
5977 |       '@esbuild/sunos-x64': 0.21.5
5978 |       '@esbuild/win32-arm64': 0.21.5
5979 |       '@esbuild/win32-ia32': 0.21.5
5980 |       '@esbuild/win32-x64': 0.21.5
5981 | 
5982 |   esbuild@0.23.1:
5983 |     optionalDependencies:
5984 |       '@esbuild/aix-ppc64': 0.23.1
5985 |       '@esbuild/android-arm': 0.23.1
5986 |       '@esbuild/android-arm64': 0.23.1
5987 |       '@esbuild/android-x64': 0.23.1
5988 |       '@esbuild/darwin-arm64': 0.23.1
5989 |       '@esbuild/darwin-x64': 0.23.1
5990 |       '@esbuild/freebsd-arm64': 0.23.1
5991 |       '@esbuild/freebsd-x64': 0.23.1
5992 |       '@esbuild/linux-arm': 0.23.1
5993 |       '@esbuild/linux-arm64': 0.23.1
5994 |       '@esbuild/linux-ia32': 0.23.1
5995 |       '@esbuild/linux-loong64': 0.23.1
5996 |       '@esbuild/linux-mips64el': 0.23.1
5997 |       '@esbuild/linux-ppc64': 0.23.1
5998 |       '@esbuild/linux-riscv64': 0.23.1
5999 |       '@esbuild/linux-s390x': 0.23.1
6000 |       '@esbuild/linux-x64': 0.23.1
6001 |       '@esbuild/netbsd-x64': 0.23.1
6002 |       '@esbuild/openbsd-arm64': 0.23.1
6003 |       '@esbuild/openbsd-x64': 0.23.1
6004 |       '@esbuild/sunos-x64': 0.23.1
6005 |       '@esbuild/win32-arm64': 0.23.1
6006 |       '@esbuild/win32-ia32': 0.23.1
6007 |       '@esbuild/win32-x64': 0.23.1
6008 | 
6009 |   esbuild@0.24.2:
6010 |     optionalDependencies:
6011 |       '@esbuild/aix-ppc64': 0.24.2
6012 |       '@esbuild/android-arm': 0.24.2
6013 |       '@esbuild/android-arm64': 0.24.2
6014 |       '@esbuild/android-x64': 0.24.2
6015 |       '@esbuild/darwin-arm64': 0.24.2
6016 |       '@esbuild/darwin-x64': 0.24.2
6017 |       '@esbuild/freebsd-arm64': 0.24.2
6018 |       '@esbuild/freebsd-x64': 0.24.2
6019 |       '@esbuild/linux-arm': 0.24.2
6020 |       '@esbuild/linux-arm64': 0.24.2
6021 |       '@esbuild/linux-ia32': 0.24.2
6022 |       '@esbuild/linux-loong64': 0.24.2
6023 |       '@esbuild/linux-mips64el': 0.24.2
6024 |       '@esbuild/linux-ppc64': 0.24.2
6025 |       '@esbuild/linux-riscv64': 0.24.2
6026 |       '@esbuild/linux-s390x': 0.24.2
6027 |       '@esbuild/linux-x64': 0.24.2
6028 |       '@esbuild/netbsd-arm64': 0.24.2
6029 |       '@esbuild/netbsd-x64': 0.24.2
6030 |       '@esbuild/openbsd-arm64': 0.24.2
6031 |       '@esbuild/openbsd-x64': 0.24.2
6032 |       '@esbuild/sunos-x64': 0.24.2
6033 |       '@esbuild/win32-arm64': 0.24.2
6034 |       '@esbuild/win32-ia32': 0.24.2
6035 |       '@esbuild/win32-x64': 0.24.2
6036 | 
6037 |   escalade@3.2.0: {}
6038 | 
6039 |   escape-html@1.0.3: {}
6040 | 
6041 |   escape-string-regexp@2.0.0: {}
6042 | 
6043 |   escape-string-regexp@4.0.0: {}
6044 | 
6045 |   eslint-config-prettier@9.1.0(eslint@8.57.1):
6046 |     dependencies:
6047 |       eslint: 8.57.1
6048 | 
6049 |   eslint-plugin-react-hooks@4.6.2(eslint@8.57.1):
6050 |     dependencies:
6051 |       eslint: 8.57.1
6052 | 
6053 |   eslint-plugin-react-refresh@0.4.18(eslint@8.57.1):
6054 |     dependencies:
6055 |       eslint: 8.57.1
6056 | 
6057 |   eslint-scope@7.2.2:
6058 |     dependencies:
6059 |       esrecurse: 4.3.0
6060 |       estraverse: 5.3.0
6061 | 
6062 |   eslint-visitor-keys@3.4.3: {}
6063 | 
6064 |   eslint@8.57.1:
6065 |     dependencies:
6066 |       '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
6067 |       '@eslint-community/regexpp': 4.12.1
6068 |       '@eslint/eslintrc': 2.1.4
6069 |       '@eslint/js': 8.57.1
6070 |       '@humanwhocodes/config-array': 0.13.0
6071 |       '@humanwhocodes/module-importer': 1.0.1
6072 |       '@nodelib/fs.walk': 1.2.8
6073 |       '@ungap/structured-clone': 1.2.1
6074 |       ajv: 6.12.6
6075 |       chalk: 4.1.2
6076 |       cross-spawn: 7.0.6
6077 |       debug: 4.4.0
6078 |       doctrine: 3.0.0
6079 |       escape-string-regexp: 4.0.0
6080 |       eslint-scope: 7.2.2
6081 |       eslint-visitor-keys: 3.4.3
6082 |       espree: 9.6.1
6083 |       esquery: 1.6.0
6084 |       esutils: 2.0.3
6085 |       fast-deep-equal: 3.1.3
6086 |       file-entry-cache: 6.0.1
6087 |       find-up: 5.0.0
6088 |       glob-parent: 6.0.2
6089 |       globals: 13.24.0
6090 |       graphemer: 1.4.0
6091 |       ignore: 5.3.2
6092 |       imurmurhash: 0.1.4
6093 |       is-glob: 4.0.3
6094 |       is-path-inside: 3.0.3
6095 |       js-yaml: 4.1.0
6096 |       json-stable-stringify-without-jsonify: 1.0.1
6097 |       levn: 0.4.1
6098 |       lodash.merge: 4.6.2
6099 |       minimatch: 3.1.2
6100 |       natural-compare: 1.4.0
6101 |       optionator: 0.9.4
6102 |       strip-ansi: 6.0.1
6103 |       text-table: 0.2.0
6104 |     transitivePeerDependencies:
6105 |       - supports-color
6106 | 
6107 |   espree@9.6.1:
6108 |     dependencies:
6109 |       acorn: 8.14.0
6110 |       acorn-jsx: 5.3.2(acorn@8.14.0)
6111 |       eslint-visitor-keys: 3.4.3
6112 | 
6113 |   esprima@4.0.1: {}
6114 | 
6115 |   esquery@1.6.0:
6116 |     dependencies:
6117 |       estraverse: 5.3.0
6118 | 
6119 |   esrecurse@4.3.0:
6120 |     dependencies:
6121 |       estraverse: 5.3.0
6122 | 
6123 |   estraverse@5.3.0: {}
6124 | 
6125 |   estree-walker@3.0.3:
6126 |     dependencies:
6127 |       '@types/estree': 1.0.6
6128 | 
6129 |   esutils@2.0.3: {}
6130 | 
6131 |   etag@1.8.1: {}
6132 | 
6133 |   execa@5.1.1:
6134 |     dependencies:
6135 |       cross-spawn: 7.0.6
6136 |       get-stream: 6.0.1
6137 |       human-signals: 2.1.0
6138 |       is-stream: 2.0.1
6139 |       merge-stream: 2.0.0
6140 |       npm-run-path: 4.0.1
6141 |       onetime: 5.1.2
6142 |       signal-exit: 3.0.7
6143 |       strip-final-newline: 2.0.0
6144 | 
6145 |   execa@8.0.1:
6146 |     dependencies:
6147 |       cross-spawn: 7.0.6
6148 |       get-stream: 8.0.1
6149 |       human-signals: 5.0.0
6150 |       is-stream: 3.0.0
6151 |       merge-stream: 2.0.0
6152 |       npm-run-path: 5.3.0
6153 |       onetime: 6.0.0
6154 |       signal-exit: 4.1.0
6155 |       strip-final-newline: 3.0.0
6156 | 
6157 |   exit@0.1.2: {}
6158 | 
6159 |   expect@29.7.0:
6160 |     dependencies:
6161 |       '@jest/expect-utils': 29.7.0
6162 |       jest-get-type: 29.6.3
6163 |       jest-matcher-utils: 29.7.0
6164 |       jest-message-util: 29.7.0
6165 |       jest-util: 29.7.0
6166 | 
6167 |   express-rate-limit@7.5.0(express@4.21.2):
6168 |     dependencies:
6169 |       express: 4.21.2
6170 | 
6171 |   express@4.21.2:
6172 |     dependencies:
6173 |       accepts: 1.3.8
6174 |       array-flatten: 1.1.1
6175 |       body-parser: 1.20.3
6176 |       content-disposition: 0.5.4
6177 |       content-type: 1.0.5
6178 |       cookie: 0.7.1
6179 |       cookie-signature: 1.0.6
6180 |       debug: 2.6.9
6181 |       depd: 2.0.0
6182 |       encodeurl: 2.0.0
6183 |       escape-html: 1.0.3
6184 |       etag: 1.8.1
6185 |       finalhandler: 1.3.1
6186 |       fresh: 0.5.2
6187 |       http-errors: 2.0.0
6188 |       merge-descriptors: 1.0.3
6189 |       methods: 1.1.2
6190 |       on-finished: 2.4.1
6191 |       parseurl: 1.3.3
6192 |       path-to-regexp: 0.1.12
6193 |       proxy-addr: 2.0.7
6194 |       qs: 6.13.0
6195 |       range-parser: 1.2.1
6196 |       safe-buffer: 5.2.1
6197 |       send: 0.19.0
6198 |       serve-static: 1.16.2
6199 |       setprototypeof: 1.2.0
6200 |       statuses: 2.0.1
6201 |       type-is: 1.6.18
6202 |       utils-merge: 1.0.1
6203 |       vary: 1.1.2
6204 |     transitivePeerDependencies:
6205 |       - supports-color
6206 | 
6207 |   fast-deep-equal@3.1.3: {}
6208 | 
6209 |   fast-glob@3.3.3:
6210 |     dependencies:
6211 |       '@nodelib/fs.stat': 2.0.5
6212 |       '@nodelib/fs.walk': 1.2.8
6213 |       glob-parent: 5.1.2
6214 |       merge2: 1.4.1
6215 |       micromatch: 4.0.8
6216 | 
6217 |   fast-json-stable-stringify@2.1.0: {}
6218 | 
6219 |   fast-levenshtein@2.0.6: {}
6220 | 
6221 |   fast-safe-stringify@2.1.1: {}
6222 | 
6223 |   fastq@1.18.0:
6224 |     dependencies:
6225 |       reusify: 1.0.4
6226 | 
6227 |   fb-watchman@2.0.2:
6228 |     dependencies:
6229 |       bser: 2.1.1
6230 | 
6231 |   fdir@6.4.2(picomatch@4.0.2):
6232 |     optionalDependencies:
6233 |       picomatch: 4.0.2
6234 | 
6235 |   fecha@4.2.3: {}
6236 | 
6237 |   file-entry-cache@6.0.1:
6238 |     dependencies:
6239 |       flat-cache: 3.2.0
6240 | 
6241 |   filelist@1.0.4:
6242 |     dependencies:
6243 |       minimatch: 5.1.6
6244 | 
6245 |   fill-range@7.1.1:
6246 |     dependencies:
6247 |       to-regex-range: 5.0.1
6248 | 
6249 |   finalhandler@1.3.1:
6250 |     dependencies:
6251 |       debug: 2.6.9
6252 |       encodeurl: 2.0.0
6253 |       escape-html: 1.0.3
6254 |       on-finished: 2.4.1
6255 |       parseurl: 1.3.3
6256 |       statuses: 2.0.1
6257 |       unpipe: 1.0.0
6258 |     transitivePeerDependencies:
6259 |       - supports-color
6260 | 
6261 |   find-up@4.1.0:
6262 |     dependencies:
6263 |       locate-path: 5.0.0
6264 |       path-exists: 4.0.0
6265 | 
6266 |   find-up@5.0.0:
6267 |     dependencies:
6268 |       locate-path: 6.0.0
6269 |       path-exists: 4.0.0
6270 | 
6271 |   flat-cache@3.2.0:
6272 |     dependencies:
6273 |       flatted: 3.3.2
6274 |       keyv: 4.5.4
6275 |       rimraf: 3.0.2
6276 | 
6277 |   flatted@3.3.2: {}
6278 | 
6279 |   fn.name@1.1.0: {}
6280 | 
6281 |   follow-redirects@1.15.9: {}
6282 | 
6283 |   for-each@0.3.3:
6284 |     dependencies:
6285 |       is-callable: 1.2.7
6286 | 
6287 |   foreground-child@3.3.0:
6288 |     dependencies:
6289 |       cross-spawn: 7.0.6
6290 |       signal-exit: 4.1.0
6291 | 
6292 |   form-data@4.0.1:
6293 |     dependencies:
6294 |       asynckit: 0.4.0
6295 |       combined-stream: 1.0.8
6296 |       mime-types: 2.1.35
6297 | 
6298 |   formidable@3.5.2:
6299 |     dependencies:
6300 |       dezalgo: 1.0.4
6301 |       hexoid: 2.0.0
6302 |       once: 1.4.0
6303 | 
6304 |   forwarded@0.2.0: {}
6305 | 
6306 |   fraction.js@4.3.7: {}
6307 | 
6308 |   fresh@0.5.2: {}
6309 | 
6310 |   fs.realpath@1.0.0: {}
6311 | 
6312 |   fsevents@2.3.3:
6313 |     optional: true
6314 | 
6315 |   function-bind@1.1.2: {}
6316 | 
6317 |   functions-have-names@1.2.3: {}
6318 | 
6319 |   gensync@1.0.0-beta.2: {}
6320 | 
6321 |   get-caller-file@2.0.5: {}
6322 | 
6323 |   get-func-name@2.0.2: {}
6324 | 
6325 |   get-intrinsic@1.2.7:
6326 |     dependencies:
6327 |       call-bind-apply-helpers: 1.0.1
6328 |       es-define-property: 1.0.1
6329 |       es-errors: 1.3.0
6330 |       es-object-atoms: 1.0.0
6331 |       function-bind: 1.1.2
6332 |       get-proto: 1.0.1
6333 |       gopd: 1.2.0
6334 |       has-symbols: 1.1.0
6335 |       hasown: 2.0.2
6336 |       math-intrinsics: 1.1.0
6337 | 
6338 |   get-package-type@0.1.0: {}
6339 | 
6340 |   get-proto@1.0.1:
6341 |     dependencies:
6342 |       dunder-proto: 1.0.1
6343 |       es-object-atoms: 1.0.0
6344 | 
6345 |   get-stream@6.0.1: {}
6346 | 
6347 |   get-stream@8.0.1: {}
6348 | 
6349 |   get-tsconfig@4.8.1:
6350 |     dependencies:
6351 |       resolve-pkg-maps: 1.0.0
6352 | 
6353 |   glob-parent@5.1.2:
6354 |     dependencies:
6355 |       is-glob: 4.0.3
6356 | 
6357 |   glob-parent@6.0.2:
6358 |     dependencies:
6359 |       is-glob: 4.0.3
6360 | 
6361 |   glob@10.4.5:
6362 |     dependencies:
6363 |       foreground-child: 3.3.0
6364 |       jackspeak: 3.4.3
6365 |       minimatch: 9.0.5
6366 |       minipass: 7.1.2
6367 |       package-json-from-dist: 1.0.1
6368 |       path-scurry: 1.11.1
6369 | 
6370 |   glob@7.2.3:
6371 |     dependencies:
6372 |       fs.realpath: 1.0.0
6373 |       inflight: 1.0.6
6374 |       inherits: 2.0.4
6375 |       minimatch: 3.1.2
6376 |       once: 1.4.0
6377 |       path-is-absolute: 1.0.1
6378 | 
6379 |   globals@11.12.0: {}
6380 | 
6381 |   globals@13.24.0:
6382 |     dependencies:
6383 |       type-fest: 0.20.2
6384 | 
6385 |   globby@11.1.0:
6386 |     dependencies:
6387 |       array-union: 2.1.0
6388 |       dir-glob: 3.0.1
6389 |       fast-glob: 3.3.3
6390 |       ignore: 5.3.2
6391 |       merge2: 1.4.1
6392 |       slash: 3.0.0
6393 | 
6394 |   gopd@1.2.0: {}
6395 | 
6396 |   graceful-fs@4.2.11: {}
6397 | 
6398 |   graphemer@1.4.0: {}
6399 | 
6400 |   happy-dom@12.10.3:
6401 |     dependencies:
6402 |       css.escape: 1.5.1
6403 |       entities: 4.5.0
6404 |       iconv-lite: 0.6.3
6405 |       webidl-conversions: 7.0.0
6406 |       whatwg-encoding: 2.0.0
6407 |       whatwg-mimetype: 3.0.0
6408 | 
6409 |   has-bigints@1.1.0: {}
6410 | 
6411 |   has-flag@4.0.0: {}
6412 | 
6413 |   has-property-descriptors@1.0.2:
6414 |     dependencies:
6415 |       es-define-property: 1.0.1
6416 | 
6417 |   has-symbols@1.1.0: {}
6418 | 
6419 |   has-tostringtag@1.0.2:
6420 |     dependencies:
6421 |       has-symbols: 1.1.0
6422 | 
6423 |   hasown@2.0.2:
6424 |     dependencies:
6425 |       function-bind: 1.1.2
6426 | 
6427 |   hexoid@2.0.0: {}
6428 | 
6429 |   html-escaper@2.0.2: {}
6430 | 
6431 |   http-errors@2.0.0:
6432 |     dependencies:
6433 |       depd: 2.0.0
6434 |       inherits: 2.0.4
6435 |       setprototypeof: 1.2.0
6436 |       statuses: 2.0.1
6437 |       toidentifier: 1.0.1
6438 | 
6439 |   human-signals@2.1.0: {}
6440 | 
6441 |   human-signals@5.0.0: {}
6442 | 
6443 |   iconv-lite@0.4.24:
6444 |     dependencies:
6445 |       safer-buffer: 2.1.2
6446 | 
6447 |   iconv-lite@0.6.3:
6448 |     dependencies:
6449 |       safer-buffer: 2.1.2
6450 | 
6451 |   ignore@5.3.2: {}
6452 | 
6453 |   import-fresh@3.3.0:
6454 |     dependencies:
6455 |       parent-module: 1.0.1
6456 |       resolve-from: 4.0.0
6457 | 
6458 |   import-local@3.2.0:
6459 |     dependencies:
6460 |       pkg-dir: 4.2.0
6461 |       resolve-cwd: 3.0.0
6462 | 
6463 |   imurmurhash@0.1.4: {}
6464 | 
6465 |   indent-string@4.0.0: {}
6466 | 
6467 |   inflight@1.0.6:
6468 |     dependencies:
6469 |       once: 1.4.0
6470 |       wrappy: 1.0.2
6471 | 
6472 |   inherits@2.0.4: {}
6473 | 
6474 |   internal-slot@1.1.0:
6475 |     dependencies:
6476 |       es-errors: 1.3.0
6477 |       hasown: 2.0.2
6478 |       side-channel: 1.1.0
6479 | 
6480 |   invariant@2.2.4:
6481 |     dependencies:
6482 |       loose-envify: 1.4.0
6483 | 
6484 |   ipaddr.js@1.9.1: {}
6485 | 
6486 |   is-arguments@1.2.0:
6487 |     dependencies:
6488 |       call-bound: 1.0.3
6489 |       has-tostringtag: 1.0.2
6490 | 
6491 |   is-array-buffer@3.0.5:
6492 |     dependencies:
6493 |       call-bind: 1.0.8
6494 |       call-bound: 1.0.3
6495 |       get-intrinsic: 1.2.7
6496 | 
6497 |   is-arrayish@0.2.1: {}
6498 | 
6499 |   is-arrayish@0.3.2: {}
6500 | 
6501 |   is-bigint@1.1.0:
6502 |     dependencies:
6503 |       has-bigints: 1.1.0
6504 | 
6505 |   is-binary-path@2.1.0:
6506 |     dependencies:
6507 |       binary-extensions: 2.3.0
6508 | 
6509 |   is-boolean-object@1.2.1:
6510 |     dependencies:
6511 |       call-bound: 1.0.3
6512 |       has-tostringtag: 1.0.2
6513 | 
6514 |   is-callable@1.2.7: {}
6515 | 
6516 |   is-core-module@2.16.1:
6517 |     dependencies:
6518 |       hasown: 2.0.2
6519 | 
6520 |   is-date-object@1.1.0:
6521 |     dependencies:
6522 |       call-bound: 1.0.3
6523 |       has-tostringtag: 1.0.2
6524 | 
6525 |   is-extglob@2.1.1: {}
6526 | 
6527 |   is-fullwidth-code-point@3.0.0: {}
6528 | 
6529 |   is-generator-fn@2.1.0: {}
6530 | 
6531 |   is-glob@4.0.3:
6532 |     dependencies:
6533 |       is-extglob: 2.1.1
6534 | 
6535 |   is-map@2.0.3: {}
6536 | 
6537 |   is-number-object@1.1.1:
6538 |     dependencies:
6539 |       call-bound: 1.0.3
6540 |       has-tostringtag: 1.0.2
6541 | 
6542 |   is-number@7.0.0: {}
6543 | 
6544 |   is-path-inside@3.0.3: {}
6545 | 
6546 |   is-regex@1.2.1:
6547 |     dependencies:
6548 |       call-bound: 1.0.3
6549 |       gopd: 1.2.0
6550 |       has-tostringtag: 1.0.2
6551 |       hasown: 2.0.2
6552 | 
6553 |   is-set@2.0.3: {}
6554 | 
6555 |   is-shared-array-buffer@1.0.4:
6556 |     dependencies:
6557 |       call-bound: 1.0.3
6558 | 
6559 |   is-stream@2.0.1: {}
6560 | 
6561 |   is-stream@3.0.0: {}
6562 | 
6563 |   is-string@1.1.1:
6564 |     dependencies:
6565 |       call-bound: 1.0.3
6566 |       has-tostringtag: 1.0.2
6567 | 
6568 |   is-symbol@1.1.1:
6569 |     dependencies:
6570 |       call-bound: 1.0.3
6571 |       has-symbols: 1.1.0
6572 |       safe-regex-test: 1.1.0
6573 | 
6574 |   is-weakmap@2.0.2: {}
6575 | 
6576 |   is-weakset@2.0.4:
6577 |     dependencies:
6578 |       call-bound: 1.0.3
6579 |       get-intrinsic: 1.2.7
6580 | 
6581 |   isarray@1.0.0: {}
6582 | 
6583 |   isarray@2.0.5: {}
6584 | 
6585 |   isexe@2.0.0: {}
6586 | 
6587 |   istanbul-lib-coverage@3.2.2: {}
6588 | 
6589 |   istanbul-lib-instrument@5.2.1:
6590 |     dependencies:
6591 |       '@babel/core': 7.26.0
6592 |       '@babel/parser': 7.26.5
6593 |       '@istanbuljs/schema': 0.1.3
6594 |       istanbul-lib-coverage: 3.2.2
6595 |       semver: 6.3.1
6596 |     transitivePeerDependencies:
6597 |       - supports-color
6598 | 
6599 |   istanbul-lib-instrument@6.0.3:
6600 |     dependencies:
6601 |       '@babel/core': 7.26.0
6602 |       '@babel/parser': 7.26.5
6603 |       '@istanbuljs/schema': 0.1.3
6604 |       istanbul-lib-coverage: 3.2.2
6605 |       semver: 7.6.3
6606 |     transitivePeerDependencies:
6607 |       - supports-color
6608 | 
6609 |   istanbul-lib-report@3.0.1:
6610 |     dependencies:
6611 |       istanbul-lib-coverage: 3.2.2
6612 |       make-dir: 4.0.0
6613 |       supports-color: 7.2.0
6614 | 
6615 |   istanbul-lib-source-maps@4.0.1:
6616 |     dependencies:
6617 |       debug: 4.4.0
6618 |       istanbul-lib-coverage: 3.2.2
6619 |       source-map: 0.6.1
6620 |     transitivePeerDependencies:
6621 |       - supports-color
6622 | 
6623 |   istanbul-lib-source-maps@5.0.6:
6624 |     dependencies:
6625 |       '@jridgewell/trace-mapping': 0.3.25
6626 |       debug: 4.4.0
6627 |       istanbul-lib-coverage: 3.2.2
6628 |     transitivePeerDependencies:
6629 |       - supports-color
6630 | 
6631 |   istanbul-reports@3.1.7:
6632 |     dependencies:
6633 |       html-escaper: 2.0.2
6634 |       istanbul-lib-report: 3.0.1
6635 | 
6636 |   jackspeak@3.4.3:
6637 |     dependencies:
6638 |       '@isaacs/cliui': 8.0.2
6639 |     optionalDependencies:
6640 |       '@pkgjs/parseargs': 0.11.0
6641 | 
6642 |   jake@10.9.2:
6643 |     dependencies:
6644 |       async: 3.2.6
6645 |       chalk: 4.1.2
6646 |       filelist: 1.0.4
6647 |       minimatch: 3.1.2
6648 | 
6649 |   jest-changed-files@29.7.0:
6650 |     dependencies:
6651 |       execa: 5.1.1
6652 |       jest-util: 29.7.0
6653 |       p-limit: 3.1.0
6654 | 
6655 |   jest-circus@29.7.0:
6656 |     dependencies:
6657 |       '@jest/environment': 29.7.0
6658 |       '@jest/expect': 29.7.0
6659 |       '@jest/test-result': 29.7.0
6660 |       '@jest/types': 29.6.3
6661 |       '@types/node': 20.17.12
6662 |       chalk: 4.1.2
6663 |       co: 4.6.0
6664 |       dedent: 1.5.3
6665 |       is-generator-fn: 2.1.0
6666 |       jest-each: 29.7.0
6667 |       jest-matcher-utils: 29.7.0
6668 |       jest-message-util: 29.7.0
6669 |       jest-runtime: 29.7.0
6670 |       jest-snapshot: 29.7.0
6671 |       jest-util: 29.7.0
6672 |       p-limit: 3.1.0
6673 |       pretty-format: 29.7.0
6674 |       pure-rand: 6.1.0
6675 |       slash: 3.0.0
6676 |       stack-utils: 2.0.6
6677 |     transitivePeerDependencies:
6678 |       - babel-plugin-macros
6679 |       - supports-color
6680 | 
6681 |   jest-cli@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
6682 |     dependencies:
6683 |       '@jest/core': 29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6684 |       '@jest/test-result': 29.7.0
6685 |       '@jest/types': 29.6.3
6686 |       chalk: 4.1.2
6687 |       create-jest: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6688 |       exit: 0.1.2
6689 |       import-local: 3.2.0
6690 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6691 |       jest-util: 29.7.0
6692 |       jest-validate: 29.7.0
6693 |       yargs: 17.7.2
6694 |     transitivePeerDependencies:
6695 |       - '@types/node'
6696 |       - babel-plugin-macros
6697 |       - supports-color
6698 |       - ts-node
6699 | 
6700 |   jest-config@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
6701 |     dependencies:
6702 |       '@babel/core': 7.26.0
6703 |       '@jest/test-sequencer': 29.7.0
6704 |       '@jest/types': 29.6.3
6705 |       babel-jest: 29.7.0(@babel/core@7.26.0)
6706 |       chalk: 4.1.2
6707 |       ci-info: 3.9.0
6708 |       deepmerge: 4.3.1
6709 |       glob: 7.2.3
6710 |       graceful-fs: 4.2.11
6711 |       jest-circus: 29.7.0
6712 |       jest-environment-node: 29.7.0
6713 |       jest-get-type: 29.6.3
6714 |       jest-regex-util: 29.6.3
6715 |       jest-resolve: 29.7.0
6716 |       jest-runner: 29.7.0
6717 |       jest-util: 29.7.0
6718 |       jest-validate: 29.7.0
6719 |       micromatch: 4.0.8
6720 |       parse-json: 5.2.0
6721 |       pretty-format: 29.7.0
6722 |       slash: 3.0.0
6723 |       strip-json-comments: 3.1.1
6724 |     optionalDependencies:
6725 |       '@types/node': 20.17.12
6726 |       ts-node: 10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)
6727 |     transitivePeerDependencies:
6728 |       - babel-plugin-macros
6729 |       - supports-color
6730 | 
6731 |   jest-diff@29.7.0:
6732 |     dependencies:
6733 |       chalk: 4.1.2
6734 |       diff-sequences: 29.6.3
6735 |       jest-get-type: 29.6.3
6736 |       pretty-format: 29.7.0
6737 | 
6738 |   jest-docblock@29.7.0:
6739 |     dependencies:
6740 |       detect-newline: 3.1.0
6741 | 
6742 |   jest-each@29.7.0:
6743 |     dependencies:
6744 |       '@jest/types': 29.6.3
6745 |       chalk: 4.1.2
6746 |       jest-get-type: 29.6.3
6747 |       jest-util: 29.7.0
6748 |       pretty-format: 29.7.0
6749 | 
6750 |   jest-environment-node@29.7.0:
6751 |     dependencies:
6752 |       '@jest/environment': 29.7.0
6753 |       '@jest/fake-timers': 29.7.0
6754 |       '@jest/types': 29.6.3
6755 |       '@types/node': 20.17.12
6756 |       jest-mock: 29.7.0
6757 |       jest-util: 29.7.0
6758 | 
6759 |   jest-get-type@29.6.3: {}
6760 | 
6761 |   jest-haste-map@29.7.0:
6762 |     dependencies:
6763 |       '@jest/types': 29.6.3
6764 |       '@types/graceful-fs': 4.1.9
6765 |       '@types/node': 20.17.12
6766 |       anymatch: 3.1.3
6767 |       fb-watchman: 2.0.2
6768 |       graceful-fs: 4.2.11
6769 |       jest-regex-util: 29.6.3
6770 |       jest-util: 29.7.0
6771 |       jest-worker: 29.7.0
6772 |       micromatch: 4.0.8
6773 |       walker: 1.0.8
6774 |     optionalDependencies:
6775 |       fsevents: 2.3.3
6776 | 
6777 |   jest-leak-detector@29.7.0:
6778 |     dependencies:
6779 |       jest-get-type: 29.6.3
6780 |       pretty-format: 29.7.0
6781 | 
6782 |   jest-matcher-utils@29.7.0:
6783 |     dependencies:
6784 |       chalk: 4.1.2
6785 |       jest-diff: 29.7.0
6786 |       jest-get-type: 29.6.3
6787 |       pretty-format: 29.7.0
6788 | 
6789 |   jest-message-util@29.7.0:
6790 |     dependencies:
6791 |       '@babel/code-frame': 7.26.2
6792 |       '@jest/types': 29.6.3
6793 |       '@types/stack-utils': 2.0.3
6794 |       chalk: 4.1.2
6795 |       graceful-fs: 4.2.11
6796 |       micromatch: 4.0.8
6797 |       pretty-format: 29.7.0
6798 |       slash: 3.0.0
6799 |       stack-utils: 2.0.6
6800 | 
6801 |   jest-mock@29.7.0:
6802 |     dependencies:
6803 |       '@jest/types': 29.6.3
6804 |       '@types/node': 20.17.12
6805 |       jest-util: 29.7.0
6806 | 
6807 |   jest-pnp-resolver@1.2.3(jest-resolve@29.7.0):
6808 |     optionalDependencies:
6809 |       jest-resolve: 29.7.0
6810 | 
6811 |   jest-regex-util@29.6.3: {}
6812 | 
6813 |   jest-resolve-dependencies@29.7.0:
6814 |     dependencies:
6815 |       jest-regex-util: 29.6.3
6816 |       jest-snapshot: 29.7.0
6817 |     transitivePeerDependencies:
6818 |       - supports-color
6819 | 
6820 |   jest-resolve@29.7.0:
6821 |     dependencies:
6822 |       chalk: 4.1.2
6823 |       graceful-fs: 4.2.11
6824 |       jest-haste-map: 29.7.0
6825 |       jest-pnp-resolver: 1.2.3(jest-resolve@29.7.0)
6826 |       jest-util: 29.7.0
6827 |       jest-validate: 29.7.0
6828 |       resolve: 1.22.10
6829 |       resolve.exports: 2.0.3
6830 |       slash: 3.0.0
6831 | 
6832 |   jest-runner@29.7.0:
6833 |     dependencies:
6834 |       '@jest/console': 29.7.0
6835 |       '@jest/environment': 29.7.0
6836 |       '@jest/test-result': 29.7.0
6837 |       '@jest/transform': 29.7.0
6838 |       '@jest/types': 29.6.3
6839 |       '@types/node': 20.17.12
6840 |       chalk: 4.1.2
6841 |       emittery: 0.13.1
6842 |       graceful-fs: 4.2.11
6843 |       jest-docblock: 29.7.0
6844 |       jest-environment-node: 29.7.0
6845 |       jest-haste-map: 29.7.0
6846 |       jest-leak-detector: 29.7.0
6847 |       jest-message-util: 29.7.0
6848 |       jest-resolve: 29.7.0
6849 |       jest-runtime: 29.7.0
6850 |       jest-util: 29.7.0
6851 |       jest-watcher: 29.7.0
6852 |       jest-worker: 29.7.0
6853 |       p-limit: 3.1.0
6854 |       source-map-support: 0.5.13
6855 |     transitivePeerDependencies:
6856 |       - supports-color
6857 | 
6858 |   jest-runtime@29.7.0:
6859 |     dependencies:
6860 |       '@jest/environment': 29.7.0
6861 |       '@jest/fake-timers': 29.7.0
6862 |       '@jest/globals': 29.7.0
6863 |       '@jest/source-map': 29.6.3
6864 |       '@jest/test-result': 29.7.0
6865 |       '@jest/transform': 29.7.0
6866 |       '@jest/types': 29.6.3
6867 |       '@types/node': 20.17.12
6868 |       chalk: 4.1.2
6869 |       cjs-module-lexer: 1.4.1
6870 |       collect-v8-coverage: 1.0.2
6871 |       glob: 7.2.3
6872 |       graceful-fs: 4.2.11
6873 |       jest-haste-map: 29.7.0
6874 |       jest-message-util: 29.7.0
6875 |       jest-mock: 29.7.0
6876 |       jest-regex-util: 29.6.3
6877 |       jest-resolve: 29.7.0
6878 |       jest-snapshot: 29.7.0
6879 |       jest-util: 29.7.0
6880 |       slash: 3.0.0
6881 |       strip-bom: 4.0.0
6882 |     transitivePeerDependencies:
6883 |       - supports-color
6884 | 
6885 |   jest-snapshot@29.7.0:
6886 |     dependencies:
6887 |       '@babel/core': 7.26.0
6888 |       '@babel/generator': 7.26.5
6889 |       '@babel/plugin-syntax-jsx': 7.25.9(@babel/core@7.26.0)
6890 |       '@babel/plugin-syntax-typescript': 7.25.9(@babel/core@7.26.0)
6891 |       '@babel/types': 7.26.5
6892 |       '@jest/expect-utils': 29.7.0
6893 |       '@jest/transform': 29.7.0
6894 |       '@jest/types': 29.6.3
6895 |       babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.0)
6896 |       chalk: 4.1.2
6897 |       expect: 29.7.0
6898 |       graceful-fs: 4.2.11
6899 |       jest-diff: 29.7.0
6900 |       jest-get-type: 29.6.3
6901 |       jest-matcher-utils: 29.7.0
6902 |       jest-message-util: 29.7.0
6903 |       jest-util: 29.7.0
6904 |       natural-compare: 1.4.0
6905 |       pretty-format: 29.7.0
6906 |       semver: 7.6.3
6907 |     transitivePeerDependencies:
6908 |       - supports-color
6909 | 
6910 |   jest-util@29.7.0:
6911 |     dependencies:
6912 |       '@jest/types': 29.6.3
6913 |       '@types/node': 20.17.12
6914 |       chalk: 4.1.2
6915 |       ci-info: 3.9.0
6916 |       graceful-fs: 4.2.11
6917 |       picomatch: 2.3.1
6918 | 
6919 |   jest-validate@29.7.0:
6920 |     dependencies:
6921 |       '@jest/types': 29.6.3
6922 |       camelcase: 6.3.0
6923 |       chalk: 4.1.2
6924 |       jest-get-type: 29.6.3
6925 |       leven: 3.1.0
6926 |       pretty-format: 29.7.0
6927 | 
6928 |   jest-watcher@29.7.0:
6929 |     dependencies:
6930 |       '@jest/test-result': 29.7.0
6931 |       '@jest/types': 29.6.3
6932 |       '@types/node': 20.17.12
6933 |       ansi-escapes: 4.3.2
6934 |       chalk: 4.1.2
6935 |       emittery: 0.13.1
6936 |       jest-util: 29.7.0
6937 |       string-length: 4.0.2
6938 | 
6939 |   jest-worker@29.7.0:
6940 |     dependencies:
6941 |       '@types/node': 20.17.12
6942 |       jest-util: 29.7.0
6943 |       merge-stream: 2.0.0
6944 |       supports-color: 8.1.1
6945 | 
6946 |   jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
6947 |     dependencies:
6948 |       '@jest/core': 29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6949 |       '@jest/types': 29.6.3
6950 |       import-local: 3.2.0
6951 |       jest-cli: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6952 |     transitivePeerDependencies:
6953 |       - '@types/node'
6954 |       - babel-plugin-macros
6955 |       - supports-color
6956 |       - ts-node
6957 | 
6958 |   jiti@1.21.7: {}
6959 | 
6960 |   joycon@3.1.1: {}
6961 | 
6962 |   js-tokens@4.0.0: {}
6963 | 
6964 |   js-tokens@9.0.1: {}
6965 | 
6966 |   js-yaml@3.14.1:
6967 |     dependencies:
6968 |       argparse: 1.0.10
6969 |       esprima: 4.0.1
6970 | 
6971 |   js-yaml@4.1.0:
6972 |     dependencies:
6973 |       argparse: 2.0.1
6974 | 
6975 |   jsesc@3.1.0: {}
6976 | 
6977 |   json-buffer@3.0.1: {}
6978 | 
6979 |   json-parse-even-better-errors@2.3.1: {}
6980 | 
6981 |   json-schema-traverse@0.4.1: {}
6982 | 
6983 |   json-stable-stringify-without-jsonify@1.0.1: {}
6984 | 
6985 |   json5@2.2.3: {}
6986 | 
6987 |   jsonwebtoken@9.0.2:
6988 |     dependencies:
6989 |       jws: 3.2.2
6990 |       lodash.includes: 4.3.0
6991 |       lodash.isboolean: 3.0.3
6992 |       lodash.isinteger: 4.0.4
6993 |       lodash.isnumber: 3.0.3
6994 |       lodash.isplainobject: 4.0.6
6995 |       lodash.isstring: 4.0.1
6996 |       lodash.once: 4.1.1
6997 |       ms: 2.1.3
6998 |       semver: 7.6.3
6999 | 
7000 |   jwa@1.4.1:
7001 |     dependencies:
7002 |       buffer-equal-constant-time: 1.0.1
7003 |       ecdsa-sig-formatter: 1.0.11
7004 |       safe-buffer: 5.2.1
7005 | 
7006 |   jws@3.2.2:
7007 |     dependencies:
7008 |       jwa: 1.4.1
7009 |       safe-buffer: 5.2.1
7010 | 
7011 |   kdbush@4.0.2: {}
7012 | 
7013 |   keyv@4.5.4:
7014 |     dependencies:
7015 |       json-buffer: 3.0.1
7016 | 
7017 |   kleur@3.0.3: {}
7018 | 
7019 |   kuler@2.0.0: {}
7020 | 
7021 |   leven@3.1.0: {}
7022 | 
7023 |   levn@0.4.1:
7024 |     dependencies:
7025 |       prelude-ls: 1.2.1
7026 |       type-check: 0.4.0
7027 | 
7028 |   lilconfig@3.1.3: {}
7029 | 
7030 |   lines-and-columns@1.2.4: {}
7031 | 
7032 |   load-tsconfig@0.2.5: {}
7033 | 
7034 |   local-pkg@0.5.1:
7035 |     dependencies:
7036 |       mlly: 1.7.4
7037 |       pkg-types: 1.3.0
7038 | 
7039 |   locate-path@5.0.0:
7040 |     dependencies:
7041 |       p-locate: 4.1.0
7042 | 
7043 |   locate-path@6.0.0:
7044 |     dependencies:
7045 |       p-locate: 5.0.0
7046 | 
7047 |   lodash.includes@4.3.0: {}
7048 | 
7049 |   lodash.isboolean@3.0.3: {}
7050 | 
7051 |   lodash.isinteger@4.0.4: {}
7052 | 
7053 |   lodash.isnumber@3.0.3: {}
7054 | 
7055 |   lodash.isplainobject@4.0.6: {}
7056 | 
7057 |   lodash.isstring@4.0.1: {}
7058 | 
7059 |   lodash.memoize@4.1.2: {}
7060 | 
7061 |   lodash.merge@4.6.2: {}
7062 | 
7063 |   lodash.once@4.1.1: {}
7064 | 
7065 |   lodash.sortby@4.7.0: {}
7066 | 
7067 |   lodash@4.17.21: {}
7068 | 
7069 |   logform@2.7.0:
7070 |     dependencies:
7071 |       '@colors/colors': 1.6.0
7072 |       '@types/triple-beam': 1.3.5
7073 |       fecha: 4.2.3
7074 |       ms: 2.1.3
7075 |       safe-stable-stringify: 2.5.0
7076 |       triple-beam: 1.4.1
7077 | 
7078 |   loose-envify@1.4.0:
7079 |     dependencies:
7080 |       js-tokens: 4.0.0
7081 | 
7082 |   loupe@2.3.7:
7083 |     dependencies:
7084 |       get-func-name: 2.0.2
7085 | 
7086 |   lru-cache@10.4.3: {}
7087 | 
7088 |   lru-cache@5.1.1:
7089 |     dependencies:
7090 |       yallist: 3.1.1
7091 | 
7092 |   lz-string@1.5.0: {}
7093 | 
7094 |   magic-string@0.30.17:
7095 |     dependencies:
7096 |       '@jridgewell/sourcemap-codec': 1.5.0
7097 | 
7098 |   magicast@0.3.5:
7099 |     dependencies:
7100 |       '@babel/parser': 7.26.5
7101 |       '@babel/types': 7.26.5
7102 |       source-map-js: 1.2.1
7103 | 
7104 |   make-dir@4.0.0:
7105 |     dependencies:
7106 |       semver: 7.6.3
7107 | 
7108 |   make-error@1.3.6: {}
7109 | 
7110 |   makeerror@1.0.12:
7111 |     dependencies:
7112 |       tmpl: 1.0.5
7113 | 
7114 |   math-intrinsics@1.1.0: {}
7115 | 
7116 |   media-typer@0.3.0: {}
7117 | 
7118 |   merge-descriptors@1.0.3: {}
7119 | 
7120 |   merge-stream@2.0.0: {}
7121 | 
7122 |   merge2@1.4.1: {}
7123 | 
7124 |   methods@1.1.2: {}
7125 | 
7126 |   micromatch@4.0.8:
7127 |     dependencies:
7128 |       braces: 3.0.3
7129 |       picomatch: 2.3.1
7130 | 
7131 |   mime-db@1.52.0: {}
7132 | 
7133 |   mime-types@2.1.35:
7134 |     dependencies:
7135 |       mime-db: 1.52.0
7136 | 
7137 |   mime@1.6.0: {}
7138 | 
7139 |   mime@2.6.0: {}
7140 | 
7141 |   mimic-fn@2.1.0: {}
7142 | 
7143 |   mimic-fn@4.0.0: {}
7144 | 
7145 |   min-indent@1.0.1: {}
7146 | 
7147 |   mini-svg-data-uri@1.4.4: {}
7148 | 
7149 |   minimatch@3.1.2:
7150 |     dependencies:
7151 |       brace-expansion: 1.1.11
7152 | 
7153 |   minimatch@5.1.6:
7154 |     dependencies:
7155 |       brace-expansion: 2.0.1
7156 | 
7157 |   minimatch@9.0.3:
7158 |     dependencies:
7159 |       brace-expansion: 2.0.1
7160 | 
7161 |   minimatch@9.0.5:
7162 |     dependencies:
7163 |       brace-expansion: 2.0.1
7164 | 
7165 |   minimist@1.2.8: {}
7166 | 
7167 |   minipass@7.1.2: {}
7168 | 
7169 |   mkdirp@0.5.6:
7170 |     dependencies:
7171 |       minimist: 1.2.8
7172 | 
7173 |   mlly@1.7.4:
7174 |     dependencies:
7175 |       acorn: 8.14.0
7176 |       pathe: 2.0.1
7177 |       pkg-types: 1.3.0
7178 |       ufo: 1.5.4
7179 | 
7180 |   morgan@1.10.0:
7181 |     dependencies:
7182 |       basic-auth: 2.0.1
7183 |       debug: 2.6.9
7184 |       depd: 2.0.0
7185 |       on-finished: 2.3.0
7186 |       on-headers: 1.0.2
7187 |     transitivePeerDependencies:
7188 |       - supports-color
7189 | 
7190 |   ms@2.0.0: {}
7191 | 
7192 |   ms@2.1.3: {}
7193 | 
7194 |   multer@1.4.5-lts.1:
7195 |     dependencies:
7196 |       append-field: 1.0.0
7197 |       busboy: 1.6.0
7198 |       concat-stream: 1.6.2
7199 |       mkdirp: 0.5.6
7200 |       object-assign: 4.1.1
7201 |       type-is: 1.6.18
7202 |       xtend: 4.0.2
7203 | 
7204 |   mz@2.7.0:
7205 |     dependencies:
7206 |       any-promise: 1.3.0
7207 |       object-assign: 4.1.1
7208 |       thenify-all: 1.6.0
7209 | 
7210 |   nanoid@3.3.8: {}
7211 | 
7212 |   natural-compare@1.4.0: {}
7213 | 
7214 |   negotiator@0.6.3: {}
7215 | 
7216 |   node-int64@0.4.0: {}
7217 | 
7218 |   node-releases@2.0.19: {}
7219 | 
7220 |   nodemailer@6.9.16: {}
7221 | 
7222 |   normalize-path@3.0.0: {}
7223 | 
7224 |   normalize-range@0.1.2: {}
7225 | 
7226 |   npm-run-path@4.0.1:
7227 |     dependencies:
7228 |       path-key: 3.1.1
7229 | 
7230 |   npm-run-path@5.3.0:
7231 |     dependencies:
7232 |       path-key: 4.0.0
7233 | 
7234 |   object-assign@4.1.1: {}
7235 | 
7236 |   object-hash@3.0.0: {}
7237 | 
7238 |   object-inspect@1.13.3: {}
7239 | 
7240 |   object-is@1.1.6:
7241 |     dependencies:
7242 |       call-bind: 1.0.8
7243 |       define-properties: 1.2.1
7244 | 
7245 |   object-keys@1.1.1: {}
7246 | 
7247 |   object.assign@4.1.7:
7248 |     dependencies:
7249 |       call-bind: 1.0.8
7250 |       call-bound: 1.0.3
7251 |       define-properties: 1.2.1
7252 |       es-object-atoms: 1.0.0
7253 |       has-symbols: 1.1.0
7254 |       object-keys: 1.1.1
7255 | 
7256 |   on-finished@2.3.0:
7257 |     dependencies:
7258 |       ee-first: 1.1.1
7259 | 
7260 |   on-finished@2.4.1:
7261 |     dependencies:
7262 |       ee-first: 1.1.1
7263 | 
7264 |   on-headers@1.0.2: {}
7265 | 
7266 |   once@1.4.0:
7267 |     dependencies:
7268 |       wrappy: 1.0.2
7269 | 
7270 |   one-time@1.0.0:
7271 |     dependencies:
7272 |       fn.name: 1.1.0
7273 | 
7274 |   onetime@5.1.2:
7275 |     dependencies:
7276 |       mimic-fn: 2.1.0
7277 | 
7278 |   onetime@6.0.0:
7279 |     dependencies:
7280 |       mimic-fn: 4.0.0
7281 | 
7282 |   optionator@0.9.4:
7283 |     dependencies:
7284 |       deep-is: 0.1.4
7285 |       fast-levenshtein: 2.0.6
7286 |       levn: 0.4.1
7287 |       prelude-ls: 1.2.1
7288 |       type-check: 0.4.0
7289 |       word-wrap: 1.2.5
7290 | 
7291 |   p-limit@2.3.0:
7292 |     dependencies:
7293 |       p-try: 2.2.0
7294 | 
7295 |   p-limit@3.1.0:
7296 |     dependencies:
7297 |       yocto-queue: 0.1.0
7298 | 
7299 |   p-limit@5.0.0:
7300 |     dependencies:
7301 |       yocto-queue: 1.1.1
7302 | 
7303 |   p-locate@4.1.0:
7304 |     dependencies:
7305 |       p-limit: 2.3.0
7306 | 
7307 |   p-locate@5.0.0:
7308 |     dependencies:
7309 |       p-limit: 3.1.0
7310 | 
7311 |   p-try@2.2.0: {}
7312 | 
7313 |   package-json-from-dist@1.0.1: {}
7314 | 
7315 |   parent-module@1.0.1:
7316 |     dependencies:
7317 |       callsites: 3.1.0
7318 | 
7319 |   parse-json@5.2.0:
7320 |     dependencies:
7321 |       '@babel/code-frame': 7.26.2
7322 |       error-ex: 1.3.2
7323 |       json-parse-even-better-errors: 2.3.1
7324 |       lines-and-columns: 1.2.4
7325 | 
7326 |   parseurl@1.3.3: {}
7327 | 
7328 |   path-exists@4.0.0: {}
7329 | 
7330 |   path-is-absolute@1.0.1: {}
7331 | 
7332 |   path-key@3.1.1: {}
7333 | 
7334 |   path-key@4.0.0: {}
7335 | 
7336 |   path-parse@1.0.7: {}
7337 | 
7338 |   path-scurry@1.11.1:
7339 |     dependencies:
7340 |       lru-cache: 10.4.3
7341 |       minipass: 7.1.2
7342 | 
7343 |   path-to-regexp@0.1.12: {}
7344 | 
7345 |   path-type@4.0.0: {}
7346 | 
7347 |   pathe@1.1.2: {}
7348 | 
7349 |   pathe@2.0.1: {}
7350 | 
7351 |   pathval@1.1.1: {}
7352 | 
7353 |   picocolors@1.1.1: {}
7354 | 
7355 |   picomatch@2.3.1: {}
7356 | 
7357 |   picomatch@4.0.2: {}
7358 | 
7359 |   pify@2.3.0: {}
7360 | 
7361 |   pirates@4.0.6: {}
7362 | 
7363 |   pkg-dir@4.2.0:
7364 |     dependencies:
7365 |       find-up: 4.1.0
7366 | 
7367 |   pkg-types@1.3.0:
7368 |     dependencies:
7369 |       confbox: 0.1.8
7370 |       mlly: 1.7.4
7371 |       pathe: 1.1.2
7372 | 
7373 |   possible-typed-array-names@1.0.0: {}
7374 | 
7375 |   postcss-import@15.1.0(postcss@8.4.49):
7376 |     dependencies:
7377 |       postcss: 8.4.49
7378 |       postcss-value-parser: 4.2.0
7379 |       read-cache: 1.0.0
7380 |       resolve: 1.22.10
7381 | 
7382 |   postcss-js@4.0.1(postcss@8.4.49):
7383 |     dependencies:
7384 |       camelcase-css: 2.0.1
7385 |       postcss: 8.4.49
7386 | 
7387 |   postcss-load-config@4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
7388 |     dependencies:
7389 |       lilconfig: 3.1.3
7390 |       yaml: 2.7.0
7391 |     optionalDependencies:
7392 |       postcss: 8.4.49
7393 |       ts-node: 10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)
7394 | 
7395 |   postcss-load-config@6.0.1(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.7.0):
7396 |     dependencies:
7397 |       lilconfig: 3.1.3
7398 |     optionalDependencies:
7399 |       jiti: 1.21.7
7400 |       postcss: 8.4.49
7401 |       tsx: 4.19.2
7402 |       yaml: 2.7.0
7403 | 
7404 |   postcss-nested@6.2.0(postcss@8.4.49):
7405 |     dependencies:
7406 |       postcss: 8.4.49
7407 |       postcss-selector-parser: 6.1.2
7408 | 
7409 |   postcss-selector-parser@6.1.2:
7410 |     dependencies:
7411 |       cssesc: 3.0.0
7412 |       util-deprecate: 1.0.2
7413 | 
7414 |   postcss-value-parser@4.2.0: {}
7415 | 
7416 |   postcss@8.4.49:
7417 |     dependencies:
7418 |       nanoid: 3.3.8
7419 |       picocolors: 1.1.1
7420 |       source-map-js: 1.2.1
7421 | 
7422 |   prelude-ls@1.2.1: {}
7423 | 
7424 |   prettier@3.4.2: {}
7425 | 
7426 |   pretty-format@27.5.1:
7427 |     dependencies:
7428 |       ansi-regex: 5.0.1
7429 |       ansi-styles: 5.2.0
7430 |       react-is: 17.0.2
7431 | 
7432 |   pretty-format@29.7.0:
7433 |     dependencies:
7434 |       '@jest/schemas': 29.6.3
7435 |       ansi-styles: 5.2.0
7436 |       react-is: 18.3.1
7437 | 
7438 |   prisma@5.22.0:
7439 |     dependencies:
7440 |       '@prisma/engines': 5.22.0
7441 |     optionalDependencies:
7442 |       fsevents: 2.3.3
7443 | 
7444 |   process-nextick-args@2.0.1: {}
7445 | 
7446 |   prompts@2.4.2:
7447 |     dependencies:
7448 |       kleur: 3.0.3
7449 |       sisteransi: 1.0.5
7450 | 
7451 |   prop-types@15.8.1:
7452 |     dependencies:
7453 |       loose-envify: 1.4.0
7454 |       object-assign: 4.1.1
7455 |       react-is: 16.13.1
7456 | 
7457 |   proxy-addr@2.0.7:
7458 |     dependencies:
7459 |       forwarded: 0.2.0
7460 |       ipaddr.js: 1.9.1
7461 | 
7462 |   proxy-from-env@1.1.0: {}
7463 | 
7464 |   punycode@2.3.1: {}
7465 | 
7466 |   pure-rand@6.1.0: {}
7467 | 
7468 |   qs@6.13.0:
7469 |     dependencies:
7470 |       side-channel: 1.1.0
7471 | 
7472 |   queue-microtask@1.2.3: {}
7473 | 
7474 |   range-parser@1.2.1: {}
7475 | 
7476 |   raw-body@2.5.2:
7477 |     dependencies:
7478 |       bytes: 3.1.2
7479 |       http-errors: 2.0.0
7480 |       iconv-lite: 0.4.24
7481 |       unpipe: 1.0.0
7482 | 
7483 |   react-dom@18.3.1(react@18.3.1):
7484 |     dependencies:
7485 |       loose-envify: 1.4.0
7486 |       react: 18.3.1
7487 |       scheduler: 0.23.2
7488 | 
7489 |   react-is@16.13.1: {}
7490 | 
7491 |   react-is@17.0.2: {}
7492 | 
7493 |   react-is@18.3.1: {}
7494 | 
7495 |   react-refresh@0.14.2: {}
7496 | 
7497 |   react-router-dom@6.28.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
7498 |     dependencies:
7499 |       '@remix-run/router': 1.21.0
7500 |       react: 18.3.1
7501 |       react-dom: 18.3.1(react@18.3.1)
7502 |       react-router: 6.28.1(react@18.3.1)
7503 | 
7504 |   react-router@6.28.1(react@18.3.1):
7505 |     dependencies:
7506 |       '@remix-run/router': 1.21.0
7507 |       react: 18.3.1
7508 | 
7509 |   react-transition-group@4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
7510 |     dependencies:
7511 |       '@babel/runtime': 7.26.0
7512 |       dom-helpers: 5.2.1
7513 |       loose-envify: 1.4.0
7514 |       prop-types: 15.8.1
7515 |       react: 18.3.1
7516 |       react-dom: 18.3.1(react@18.3.1)
7517 | 
7518 |   react@18.3.1:
7519 |     dependencies:
7520 |       loose-envify: 1.4.0
7521 | 
7522 |   read-cache@1.0.0:
7523 |     dependencies:
7524 |       pify: 2.3.0
7525 | 
7526 |   readable-stream@2.3.8:
7527 |     dependencies:
7528 |       core-util-is: 1.0.3
7529 |       inherits: 2.0.4
7530 |       isarray: 1.0.0
7531 |       process-nextick-args: 2.0.1
7532 |       safe-buffer: 5.1.2
7533 |       string_decoder: 1.1.1
7534 |       util-deprecate: 1.0.2
7535 | 
7536 |   readable-stream@3.6.2:
7537 |     dependencies:
7538 |       inherits: 2.0.4
7539 |       string_decoder: 1.1.1
7540 |       util-deprecate: 1.0.2
7541 | 
7542 |   readdirp@3.6.0:
7543 |     dependencies:
7544 |       picomatch: 2.3.1
7545 | 
7546 |   readdirp@4.1.1: {}
7547 | 
7548 |   redent@3.0.0:
7549 |     dependencies:
7550 |       indent-string: 4.0.0
7551 |       strip-indent: 3.0.0
7552 | 
7553 |   regenerator-runtime@0.14.1: {}
7554 | 
7555 |   regexp.prototype.flags@1.5.4:
7556 |     dependencies:
7557 |       call-bind: 1.0.8
7558 |       define-properties: 1.2.1
7559 |       es-errors: 1.3.0
7560 |       get-proto: 1.0.1
7561 |       gopd: 1.2.0
7562 |       set-function-name: 2.0.2
7563 | 
7564 |   require-directory@2.1.1: {}
7565 | 
7566 |   resolve-cwd@3.0.0:
7567 |     dependencies:
7568 |       resolve-from: 5.0.0
7569 | 
7570 |   resolve-from@4.0.0: {}
7571 | 
7572 |   resolve-from@5.0.0: {}
7573 | 
7574 |   resolve-pkg-maps@1.0.0: {}
7575 | 
7576 |   resolve.exports@2.0.3: {}
7577 | 
7578 |   resolve@1.22.10:
7579 |     dependencies:
7580 |       is-core-module: 2.16.1
7581 |       path-parse: 1.0.7
7582 |       supports-preserve-symlinks-flag: 1.0.0
7583 | 
7584 |   reusify@1.0.4: {}
7585 | 
7586 |   rimraf@3.0.2:
7587 |     dependencies:
7588 |       glob: 7.2.3
7589 | 
7590 |   rollup@4.30.1:
7591 |     dependencies:
7592 |       '@types/estree': 1.0.6
7593 |     optionalDependencies:
7594 |       '@rollup/rollup-android-arm-eabi': 4.30.1
7595 |       '@rollup/rollup-android-arm64': 4.30.1
7596 |       '@rollup/rollup-darwin-arm64': 4.30.1
7597 |       '@rollup/rollup-darwin-x64': 4.30.1
7598 |       '@rollup/rollup-freebsd-arm64': 4.30.1
7599 |       '@rollup/rollup-freebsd-x64': 4.30.1
7600 |       '@rollup/rollup-linux-arm-gnueabihf': 4.30.1
7601 |       '@rollup/rollup-linux-arm-musleabihf': 4.30.1
7602 |       '@rollup/rollup-linux-arm64-gnu': 4.30.1
7603 |       '@rollup/rollup-linux-arm64-musl': 4.30.1
7604 |       '@rollup/rollup-linux-loongarch64-gnu': 4.30.1
7605 |       '@rollup/rollup-linux-powerpc64le-gnu': 4.30.1
7606 |       '@rollup/rollup-linux-riscv64-gnu': 4.30.1
7607 |       '@rollup/rollup-linux-s390x-gnu': 4.30.1
7608 |       '@rollup/rollup-linux-x64-gnu': 4.30.1
7609 |       '@rollup/rollup-linux-x64-musl': 4.30.1
7610 |       '@rollup/rollup-win32-arm64-msvc': 4.30.1
7611 |       '@rollup/rollup-win32-ia32-msvc': 4.30.1
7612 |       '@rollup/rollup-win32-x64-msvc': 4.30.1
7613 |       fsevents: 2.3.3
7614 | 
7615 |   run-parallel@1.2.0:
7616 |     dependencies:
7617 |       queue-microtask: 1.2.3
7618 | 
7619 |   safe-buffer@5.1.2: {}
7620 | 
7621 |   safe-buffer@5.2.1: {}
7622 | 
7623 |   safe-regex-test@1.1.0:
7624 |     dependencies:
7625 |       call-bound: 1.0.3
7626 |       es-errors: 1.3.0
7627 |       is-regex: 1.2.1
7628 | 
7629 |   safe-stable-stringify@2.5.0: {}
7630 | 
7631 |   safer-buffer@2.1.2: {}
7632 | 
7633 |   scheduler@0.23.2:
7634 |     dependencies:
7635 |       loose-envify: 1.4.0
7636 | 
7637 |   semver@6.3.1: {}
7638 | 
7639 |   semver@7.6.3: {}
7640 | 
7641 |   send@0.19.0:
7642 |     dependencies:
7643 |       debug: 2.6.9
7644 |       depd: 2.0.0
7645 |       destroy: 1.2.0
7646 |       encodeurl: 1.0.2
7647 |       escape-html: 1.0.3
7648 |       etag: 1.8.1
7649 |       fresh: 0.5.2
7650 |       http-errors: 2.0.0
7651 |       mime: 1.6.0
7652 |       ms: 2.1.3
7653 |       on-finished: 2.4.1
7654 |       range-parser: 1.2.1
7655 |       statuses: 2.0.1
7656 |     transitivePeerDependencies:
7657 |       - supports-color
7658 | 
7659 |   serve-static@1.16.2:
7660 |     dependencies:
7661 |       encodeurl: 2.0.0
7662 |       escape-html: 1.0.3
7663 |       parseurl: 1.3.3
7664 |       send: 0.19.0
7665 |     transitivePeerDependencies:
7666 |       - supports-color
7667 | 
7668 |   set-function-length@1.2.2:
7669 |     dependencies:
7670 |       define-data-property: 1.1.4
7671 |       es-errors: 1.3.0
7672 |       function-bind: 1.1.2
7673 |       get-intrinsic: 1.2.7
7674 |       gopd: 1.2.0
7675 |       has-property-descriptors: 1.0.2
7676 | 
7677 |   set-function-name@2.0.2:
7678 |     dependencies:
7679 |       define-data-property: 1.1.4
7680 |       es-errors: 1.3.0
7681 |       functions-have-names: 1.2.3
7682 |       has-property-descriptors: 1.0.2
7683 | 
7684 |   setprototypeof@1.2.0: {}
7685 | 
7686 |   shebang-command@2.0.0:
7687 |     dependencies:
7688 |       shebang-regex: 3.0.0
7689 | 
7690 |   shebang-regex@3.0.0: {}
7691 | 
7692 |   side-channel-list@1.0.0:
7693 |     dependencies:
7694 |       es-errors: 1.3.0
7695 |       object-inspect: 1.13.3
7696 | 
7697 |   side-channel-map@1.0.1:
7698 |     dependencies:
7699 |       call-bound: 1.0.3
7700 |       es-errors: 1.3.0
7701 |       get-intrinsic: 1.2.7
7702 |       object-inspect: 1.13.3
7703 | 
7704 |   side-channel-weakmap@1.0.2:
7705 |     dependencies:
7706 |       call-bound: 1.0.3
7707 |       es-errors: 1.3.0
7708 |       get-intrinsic: 1.2.7
7709 |       object-inspect: 1.13.3
7710 |       side-channel-map: 1.0.1
7711 | 
7712 |   side-channel@1.1.0:
7713 |     dependencies:
7714 |       es-errors: 1.3.0
7715 |       object-inspect: 1.13.3
7716 |       side-channel-list: 1.0.0
7717 |       side-channel-map: 1.0.1
7718 |       side-channel-weakmap: 1.0.2
7719 | 
7720 |   siginfo@2.0.0: {}
7721 | 
7722 |   signal-exit@3.0.7: {}
7723 | 
7724 |   signal-exit@4.1.0: {}
7725 | 
7726 |   simple-swizzle@0.2.2:
7727 |     dependencies:
7728 |       is-arrayish: 0.3.2
7729 | 
7730 |   sisteransi@1.0.5: {}
7731 | 
7732 |   slash@3.0.0: {}
7733 | 
7734 |   source-map-js@1.2.1: {}
7735 | 
7736 |   source-map-support@0.5.13:
7737 |     dependencies:
7738 |       buffer-from: 1.1.2
7739 |       source-map: 0.6.1
7740 | 
7741 |   source-map@0.6.1: {}
7742 | 
7743 |   source-map@0.8.0-beta.0:
7744 |     dependencies:
7745 |       whatwg-url: 7.1.0
7746 | 
7747 |   sprintf-js@1.0.3: {}
7748 | 
7749 |   stack-trace@0.0.10: {}
7750 | 
7751 |   stack-utils@2.0.6:
7752 |     dependencies:
7753 |       escape-string-regexp: 2.0.0
7754 | 
7755 |   stackback@0.0.2: {}
7756 | 
7757 |   statuses@2.0.1: {}
7758 | 
7759 |   std-env@3.8.0: {}
7760 | 
7761 |   stop-iteration-iterator@1.1.0:
7762 |     dependencies:
7763 |       es-errors: 1.3.0
7764 |       internal-slot: 1.1.0
7765 | 
7766 |   streamsearch@1.1.0: {}
7767 | 
7768 |   string-length@4.0.2:
7769 |     dependencies:
7770 |       char-regex: 1.0.2
7771 |       strip-ansi: 6.0.1
7772 | 
7773 |   string-width@4.2.3:
7774 |     dependencies:
7775 |       emoji-regex: 8.0.0
7776 |       is-fullwidth-code-point: 3.0.0
7777 |       strip-ansi: 6.0.1
7778 | 
7779 |   string-width@5.1.2:
7780 |     dependencies:
7781 |       eastasianwidth: 0.2.0
7782 |       emoji-regex: 9.2.2
7783 |       strip-ansi: 7.1.0
7784 | 
7785 |   string_decoder@1.1.1:
7786 |     dependencies:
7787 |       safe-buffer: 5.1.2
7788 | 
7789 |   strip-ansi@6.0.1:
7790 |     dependencies:
7791 |       ansi-regex: 5.0.1
7792 | 
7793 |   strip-ansi@7.1.0:
7794 |     dependencies:
7795 |       ansi-regex: 6.1.0
7796 | 
7797 |   strip-bom@4.0.0: {}
7798 | 
7799 |   strip-final-newline@2.0.0: {}
7800 | 
7801 |   strip-final-newline@3.0.0: {}
7802 | 
7803 |   strip-indent@3.0.0:
7804 |     dependencies:
7805 |       min-indent: 1.0.1
7806 | 
7807 |   strip-json-comments@3.1.1: {}
7808 | 
7809 |   strip-literal@2.1.1:
7810 |     dependencies:
7811 |       js-tokens: 9.0.1
7812 | 
7813 |   sucrase@3.35.0:
7814 |     dependencies:
7815 |       '@jridgewell/gen-mapping': 0.3.8
7816 |       commander: 4.1.1
7817 |       glob: 10.4.5
7818 |       lines-and-columns: 1.2.4
7819 |       mz: 2.7.0
7820 |       pirates: 4.0.6
7821 |       ts-interface-checker: 0.1.13
7822 | 
7823 |   superagent@9.0.2:
7824 |     dependencies:
7825 |       component-emitter: 1.3.1
7826 |       cookiejar: 2.1.4
7827 |       debug: 4.4.0
7828 |       fast-safe-stringify: 2.1.1
7829 |       form-data: 4.0.1
7830 |       formidable: 3.5.2
7831 |       methods: 1.1.2
7832 |       mime: 2.6.0
7833 |       qs: 6.13.0
7834 |     transitivePeerDependencies:
7835 |       - supports-color
7836 | 
7837 |   supercluster@8.0.1:
7838 |     dependencies:
7839 |       kdbush: 4.0.2
7840 | 
7841 |   supertest@7.0.0:
7842 |     dependencies:
7843 |       methods: 1.1.2
7844 |       superagent: 9.0.2
7845 |     transitivePeerDependencies:
7846 |       - supports-color
7847 | 
7848 |   supports-color@7.2.0:
7849 |     dependencies:
7850 |       has-flag: 4.0.0
7851 | 
7852 |   supports-color@8.1.1:
7853 |     dependencies:
7854 |       has-flag: 4.0.0
7855 | 
7856 |   supports-preserve-symlinks-flag@1.0.0: {}
7857 | 
7858 |   tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
7859 |     dependencies:
7860 |       '@alloc/quick-lru': 5.2.0
7861 |       arg: 5.0.2
7862 |       chokidar: 3.6.0
7863 |       didyoumean: 1.2.2
7864 |       dlv: 1.1.3
7865 |       fast-glob: 3.3.3
7866 |       glob-parent: 6.0.2
7867 |       is-glob: 4.0.3
7868 |       jiti: 1.21.7
7869 |       lilconfig: 3.1.3
7870 |       micromatch: 4.0.8
7871 |       normalize-path: 3.0.0
7872 |       object-hash: 3.0.0
7873 |       picocolors: 1.1.1
7874 |       postcss: 8.4.49
7875 |       postcss-import: 15.1.0(postcss@8.4.49)
7876 |       postcss-js: 4.0.1(postcss@8.4.49)
7877 |       postcss-load-config: 4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
7878 |       postcss-nested: 6.2.0(postcss@8.4.49)
7879 |       postcss-selector-parser: 6.1.2
7880 |       resolve: 1.22.10
7881 |       sucrase: 3.35.0
7882 |     transitivePeerDependencies:
7883 |       - ts-node
7884 | 
7885 |   test-exclude@6.0.0:
7886 |     dependencies:
7887 |       '@istanbuljs/schema': 0.1.3
7888 |       glob: 7.2.3
7889 |       minimatch: 3.1.2
7890 | 
7891 |   text-hex@1.0.0: {}
7892 | 
7893 |   text-table@0.2.0: {}
7894 | 
7895 |   thenify-all@1.6.0:
7896 |     dependencies:
7897 |       thenify: 3.3.1
7898 | 
7899 |   thenify@3.3.1:
7900 |     dependencies:
7901 |       any-promise: 1.3.0
7902 | 
7903 |   tinybench@2.9.0: {}
7904 | 
7905 |   tinyexec@0.3.2: {}
7906 | 
7907 |   tinyglobby@0.2.10:
7908 |     dependencies:
7909 |       fdir: 6.4.2(picomatch@4.0.2)
7910 |       picomatch: 4.0.2
7911 | 
7912 |   tinypool@0.8.4: {}
7913 | 
7914 |   tinyspy@2.2.1: {}
7915 | 
7916 |   tmpl@1.0.5: {}
7917 | 
7918 |   to-regex-range@5.0.1:
7919 |     dependencies:
7920 |       is-number: 7.0.0
7921 | 
7922 |   toidentifier@1.0.1: {}
7923 | 
7924 |   tr46@1.0.1:
7925 |     dependencies:
7926 |       punycode: 2.3.1
7927 | 
7928 |   tree-kill@1.2.2: {}
7929 | 
7930 |   triple-beam@1.4.1: {}
7931 | 
7932 |   ts-api-utils@1.4.3(typescript@5.7.3):
7933 |     dependencies:
7934 |       typescript: 5.7.3
7935 | 
7936 |   ts-interface-checker@0.1.13: {}
7937 | 
7938 |   ts-jest@29.2.5(@babel/core@7.26.0)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.0))(esbuild@0.24.2)(jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))(typescript@5.7.3):
7939 |     dependencies:
7940 |       bs-logger: 0.2.6
7941 |       ejs: 3.1.10
7942 |       fast-json-stable-stringify: 2.1.0
7943 |       jest: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
7944 |       jest-util: 29.7.0
7945 |       json5: 2.2.3
7946 |       lodash.memoize: 4.1.2
7947 |       make-error: 1.3.6
7948 |       semver: 7.6.3
7949 |       typescript: 5.7.3
7950 |       yargs-parser: 21.1.1
7951 |     optionalDependencies:
7952 |       '@babel/core': 7.26.0
7953 |       '@jest/transform': 29.7.0
7954 |       '@jest/types': 29.6.3
7955 |       babel-jest: 29.7.0(@babel/core@7.26.0)
7956 |       esbuild: 0.24.2
7957 | 
7958 |   ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3):
7959 |     dependencies:
7960 |       '@cspotcode/source-map-support': 0.8.1
7961 |       '@tsconfig/node10': 1.0.11
7962 |       '@tsconfig/node12': 1.0.11
7963 |       '@tsconfig/node14': 1.0.3
7964 |       '@tsconfig/node16': 1.0.4
7965 |       '@types/node': 20.17.12
7966 |       acorn: 8.14.0
7967 |       acorn-walk: 8.3.4
7968 |       arg: 4.1.3
7969 |       create-require: 1.1.1
7970 |       diff: 4.0.2
7971 |       make-error: 1.3.6
7972 |       typescript: 5.7.3
7973 |       v8-compile-cache-lib: 3.0.1
7974 |       yn: 3.1.1
7975 |     optionalDependencies:
7976 |       '@swc/core': 1.10.7
7977 | 
7978 |   tsup@8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0):
7979 |     dependencies:
7980 |       bundle-require: 5.1.0(esbuild@0.24.2)
7981 |       cac: 6.7.14
7982 |       chokidar: 4.0.3
7983 |       consola: 3.4.0
7984 |       debug: 4.4.0
7985 |       esbuild: 0.24.2
7986 |       joycon: 3.1.1
7987 |       picocolors: 1.1.1
7988 |       postcss-load-config: 6.0.1(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.7.0)
7989 |       resolve-from: 5.0.0
7990 |       rollup: 4.30.1
7991 |       source-map: 0.8.0-beta.0
7992 |       sucrase: 3.35.0
7993 |       tinyexec: 0.3.2
7994 |       tinyglobby: 0.2.10
7995 |       tree-kill: 1.2.2
7996 |     optionalDependencies:
7997 |       '@swc/core': 1.10.7
7998 |       postcss: 8.4.49
7999 |       typescript: 5.7.3
8000 |     transitivePeerDependencies:
8001 |       - jiti
8002 |       - supports-color
8003 |       - tsx
8004 |       - yaml
8005 | 
8006 |   tsx@4.19.2:
8007 |     dependencies:
8008 |       esbuild: 0.23.1
8009 |       get-tsconfig: 4.8.1
8010 |     optionalDependencies:
8011 |       fsevents: 2.3.3
8012 | 
8013 |   turbo-darwin-64@1.13.4:
8014 |     optional: true
8015 | 
8016 |   turbo-darwin-arm64@1.13.4:
8017 |     optional: true
8018 | 
8019 |   turbo-linux-64@1.13.4:
8020 |     optional: true
8021 | 
8022 |   turbo-linux-arm64@1.13.4:
8023 |     optional: true
8024 | 
8025 |   turbo-windows-64@1.13.4:
8026 |     optional: true
8027 | 
8028 |   turbo-windows-arm64@1.13.4:
8029 |     optional: true
8030 | 
8031 |   turbo@1.13.4:
8032 |     optionalDependencies:
8033 |       turbo-darwin-64: 1.13.4
8034 |       turbo-darwin-arm64: 1.13.4
8035 |       turbo-linux-64: 1.13.4
8036 |       turbo-linux-arm64: 1.13.4
8037 |       turbo-windows-64: 1.13.4
8038 |       turbo-windows-arm64: 1.13.4
8039 | 
8040 |   type-check@0.4.0:
8041 |     dependencies:
8042 |       prelude-ls: 1.2.1
8043 | 
8044 |   type-detect@4.0.8: {}
8045 | 
8046 |   type-detect@4.1.0: {}
8047 | 
8048 |   type-fest@0.20.2: {}
8049 | 
8050 |   type-fest@0.21.3: {}
8051 | 
8052 |   type-is@1.6.18:
8053 |     dependencies:
8054 |       media-typer: 0.3.0
8055 |       mime-types: 2.1.35
8056 | 
8057 |   typedarray@0.0.6: {}
8058 | 
8059 |   typescript@5.7.3: {}
8060 | 
8061 |   ufo@1.5.4: {}
8062 | 
8063 |   undici-types@6.19.8: {}
8064 | 
8065 |   unpipe@1.0.0: {}
8066 | 
8067 |   update-browserslist-db@1.1.2(browserslist@4.24.4):
8068 |     dependencies:
8069 |       browserslist: 4.24.4
8070 |       escalade: 3.2.0
8071 |       picocolors: 1.1.1
8072 | 
8073 |   uri-js@4.4.1:
8074 |     dependencies:
8075 |       punycode: 2.3.1
8076 | 
8077 |   util-deprecate@1.0.2: {}
8078 | 
8079 |   utils-merge@1.0.1: {}
8080 | 
8081 |   v8-compile-cache-lib@3.0.1: {}
8082 | 
8083 |   v8-to-istanbul@9.3.0:
8084 |     dependencies:
8085 |       '@jridgewell/trace-mapping': 0.3.25
8086 |       '@types/istanbul-lib-coverage': 2.0.6
8087 |       convert-source-map: 2.0.0
8088 | 
8089 |   vary@1.1.2: {}
8090 | 
8091 |   vite-node@1.6.0(@types/node@20.17.12):
8092 |     dependencies:
8093 |       cac: 6.7.14
8094 |       debug: 4.4.0
8095 |       pathe: 1.1.2
8096 |       picocolors: 1.1.1
8097 |       vite: 5.4.11(@types/node@20.17.12)
8098 |     transitivePeerDependencies:
8099 |       - '@types/node'
8100 |       - less
8101 |       - lightningcss
8102 |       - sass
8103 |       - sass-embedded
8104 |       - stylus
8105 |       - sugarss
8106 |       - supports-color
8107 |       - terser
8108 | 
8109 |   vite@5.4.11(@types/node@20.17.12):
8110 |     dependencies:
8111 |       esbuild: 0.21.5
8112 |       postcss: 8.4.49
8113 |       rollup: 4.30.1
8114 |     optionalDependencies:
8115 |       '@types/node': 20.17.12
8116 |       fsevents: 2.3.3
8117 | 
8118 |   vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3):
8119 |     dependencies:
8120 |       '@vitest/expect': 1.6.0
8121 |       '@vitest/runner': 1.6.0
8122 |       '@vitest/snapshot': 1.6.0
8123 |       '@vitest/spy': 1.6.0
8124 |       '@vitest/utils': 1.6.0
8125 |       acorn-walk: 8.3.4
8126 |       chai: 4.5.0
8127 |       debug: 4.4.0
8128 |       execa: 8.0.1
8129 |       local-pkg: 0.5.1
8130 |       magic-string: 0.30.17
8131 |       pathe: 1.1.2
8132 |       picocolors: 1.1.1
8133 |       std-env: 3.8.0
8134 |       strip-literal: 2.1.1
8135 |       tinybench: 2.9.0
8136 |       tinypool: 0.8.4
8137 |       vite: 5.4.11(@types/node@20.17.12)
8138 |       vite-node: 1.6.0(@types/node@20.17.12)
8139 |       why-is-node-running: 2.3.0
8140 |     optionalDependencies:
8141 |       '@types/node': 20.17.12
8142 |       happy-dom: 12.10.3
8143 |     transitivePeerDependencies:
8144 |       - less
8145 |       - lightningcss
8146 |       - sass
8147 |       - sass-embedded
8148 |       - stylus
8149 |       - sugarss
8150 |       - supports-color
8151 |       - terser
8152 | 
8153 |   walker@1.0.8:
8154 |     dependencies:
8155 |       makeerror: 1.0.12
8156 | 
8157 |   webidl-conversions@4.0.2: {}
8158 | 
8159 |   webidl-conversions@7.0.0: {}
8160 | 
8161 |   whatwg-encoding@2.0.0:
8162 |     dependencies:
8163 |       iconv-lite: 0.6.3
8164 | 
8165 |   whatwg-mimetype@3.0.0: {}
8166 | 
8167 |   whatwg-url@7.1.0:
8168 |     dependencies:
8169 |       lodash.sortby: 4.7.0
8170 |       tr46: 1.0.1
8171 |       webidl-conversions: 4.0.2
8172 | 
8173 |   which-boxed-primitive@1.1.1:
8174 |     dependencies:
8175 |       is-bigint: 1.1.0
8176 |       is-boolean-object: 1.2.1
8177 |       is-number-object: 1.1.1
8178 |       is-string: 1.1.1
8179 |       is-symbol: 1.1.1
8180 | 
8181 |   which-collection@1.0.2:
8182 |     dependencies:
8183 |       is-map: 2.0.3
8184 |       is-set: 2.0.3
8185 |       is-weakmap: 2.0.2
8186 |       is-weakset: 2.0.4
8187 | 
8188 |   which-typed-array@1.1.18:
8189 |     dependencies:
8190 |       available-typed-arrays: 1.0.7
8191 |       call-bind: 1.0.8
8192 |       call-bound: 1.0.3
8193 |       for-each: 0.3.3
8194 |       gopd: 1.2.0
8195 |       has-tostringtag: 1.0.2
8196 | 
8197 |   which@2.0.2:
8198 |     dependencies:
8199 |       isexe: 2.0.0
8200 | 
8201 |   why-is-node-running@2.3.0:
8202 |     dependencies:
8203 |       siginfo: 2.0.0
8204 |       stackback: 0.0.2
8205 | 
8206 |   winston-transport@4.9.0:
8207 |     dependencies:
8208 |       logform: 2.7.0
8209 |       readable-stream: 3.6.2
8210 |       triple-beam: 1.4.1
8211 | 
8212 |   winston@3.17.0:
8213 |     dependencies:
8214 |       '@colors/colors': 1.6.0
8215 |       '@dabh/diagnostics': 2.0.3
8216 |       async: 3.2.6
8217 |       is-stream: 2.0.1
8218 |       logform: 2.7.0
8219 |       one-time: 1.0.0
8220 |       readable-stream: 3.6.2
8221 |       safe-stable-stringify: 2.5.0
8222 |       stack-trace: 0.0.10
8223 |       triple-beam: 1.4.1
8224 |       winston-transport: 4.9.0
8225 | 
8226 |   word-wrap@1.2.5: {}
8227 | 
8228 |   wrap-ansi@7.0.0:
8229 |     dependencies:
8230 |       ansi-styles: 4.3.0
8231 |       string-width: 4.2.3
8232 |       strip-ansi: 6.0.1
8233 | 
8234 |   wrap-ansi@8.1.0:
8235 |     dependencies:
8236 |       ansi-styles: 6.2.1
8237 |       string-width: 5.1.2
8238 |       strip-ansi: 7.1.0
8239 | 
8240 |   wrappy@1.0.2: {}
8241 | 
8242 |   write-file-atomic@4.0.2:
8243 |     dependencies:
8244 |       imurmurhash: 0.1.4
8245 |       signal-exit: 3.0.7
8246 | 
8247 |   xtend@4.0.2: {}
8248 | 
8249 |   y18n@5.0.8: {}
8250 | 
8251 |   yallist@3.1.1: {}
8252 | 
8253 |   yaml@2.7.0: {}
8254 | 
8255 |   yargs-parser@21.1.1: {}
8256 | 
8257 |   yargs@17.7.2:
8258 |     dependencies:
8259 |       cliui: 8.0.1
8260 |       escalade: 3.2.0
8261 |       get-caller-file: 2.0.5
8262 |       require-directory: 2.1.1
8263 |       string-width: 4.2.3
8264 |       y18n: 5.0.8
8265 |       yargs-parser: 21.1.1
8266 | 
8267 |   yn@3.1.1: {}
8268 | 
8269 |   yocto-queue@0.1.0: {}
8270 | 
8271 |   yocto-queue@1.1.1: {}
8272 | 
8273 |   zod@3.24.1: {}
8274 | 


--------------------------------------------------------------------------------
/pnpm-workspace.yaml:
--------------------------------------------------------------------------------
1 | packages:
2 |   - 'apps/*'
3 |   - 'packages/*' 
4 | 


--------------------------------------------------------------------------------
/turbo.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "$schema": "https://turbo.build/schema.json",
 3 |   "globalDependencies": ["**/.env.*local"],
 4 |   "pipeline": {
 5 |     "build": {
 6 |       "dependsOn": ["^build", "prisma:generate"],
 7 |       "outputs": ["dist/**"]
 8 |     },
 9 |     "lint": {
10 |       "outputs": []
11 |     },
12 |     "dev": {
13 |       "dependsOn": ["^build", "prisma:generate"],
14 |       "cache": false,
15 |       "persistent": true,
16 |       "dotEnv": [
17 |         ".env.local",
18 |         ".env.development.local",
19 |         ".env.development",
20 |         ".env"
21 |       ]
22 |     },
23 |     "clean": {
24 |       "cache": false
25 |     },
26 |     "prisma:generate": {
27 |       "cache": false
28 |     },
29 |     "prisma:migrate": {
30 |       "cache": false
31 |     },
32 |     "prisma:studio": {
33 |       "cache": false
34 |     },
35 |     "prisma:seed": {
36 |       "cache": false
37 |     }
38 |   }
39 | }
40 | 


--------------------------------------------------------------------------------
