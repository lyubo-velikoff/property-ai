├── .gitignore
├── .nvmrc
├── .vscode
    └── settings.json
├── README.md
├── apps
    ├── api
    │   ├── .env.example
    │   ├── jest.config.ts
    │   ├── package.json
    │   ├── prisma
    │   │   ├── migrations
    │   │   │   ├── 20250112191046_init
    │   │   │   │   └── migration.sql
    │   │   │   ├── 20250112201244_add_featured_field
    │   │   │   │   └── migration.sql
    │   │   │   ├── 20250113201522_init
    │   │   │   │   └── migration.sql
    │   │   │   ├── 20250113223215_wordpress_sync
    │   │   │   │   └── migration.sql
    │   │   │   └── 20250114224900_update_location_models
    │   │   │   │   └── migration.sql
    │   │   ├── schema.prisma
    │   │   └── seed.ts
    │   ├── scripts
    │   │   └── fix-property-categories.ts
    │   ├── src
    │   │   ├── config
    │   │   │   └── multer.ts
    │   │   ├── index.ts
    │   │   ├── lib
    │   │   │   ├── contact.ts
    │   │   │   ├── logger.ts
    │   │   │   └── prisma.ts
    │   │   ├── middleware
    │   │   │   ├── auth.ts
    │   │   │   ├── error.ts
    │   │   │   └── rateLimiter.ts
    │   │   ├── routes
    │   │   │   ├── __tests__
    │   │   │   │   ├── properties.test.ts
    │   │   │   │   └── setup.ts
    │   │   │   ├── admin.ts
    │   │   │   ├── auth.ts
    │   │   │   ├── contact.ts
    │   │   │   ├── locations.ts
    │   │   │   ├── properties.ts
    │   │   │   └── users.ts
    │   │   ├── server.ts
    │   │   └── types
    │   │   │   ├── contact.ts
    │   │   │   ├── express.d.ts
    │   │   │   └── multer.d.ts
    │   ├── tsconfig.json
    │   ├── tsup.config.ts
    │   └── uploads
    │   │   └── .gitkeep
    └── web
    │   ├── .gitignore
    │   ├── README.md
    │   ├── eslint.config.js
    │   ├── index.html
    │   ├── package.json
    │   ├── postcss.config.js
    │   ├── public
    │       ├── images
    │       │   ├── about-us.jpg
    │       │   ├── contact.jpg
    │       │   ├── homepage-hero.webp
    │       │   ├── logo.png
    │       │   ├── logo.svg
    │       │   └── property-placeholder.webp
    │       └── vite.svg
    │   ├── src
    │       ├── App.css
    │       ├── App.tsx
    │       ├── AppRoutes.tsx
    │       ├── assets
    │       │   └── react.svg
    │       ├── components
    │       │   ├── LoadingSpinner.tsx
    │       │   ├── Logo.tsx
    │       │   ├── ThemeToggle.tsx
    │       │   ├── admin
    │       │   │   ├── AdminLayout.tsx
    │       │   │   └── PropertyForm.tsx
    │       │   ├── auth
    │       │   │   └── ProtectedRoute.tsx
    │       │   ├── layout
    │       │   │   └── Layout.tsx
    │       │   ├── maps
    │       │   │   └── GoogleMap.tsx
    │       │   └── properties
    │       │   │   ├── PropertyCard.tsx
    │       │   │   └── PropertyCardSkeleton.tsx
    │       ├── constants
    │       │   └── property.ts
    │       ├── contexts
    │       │   ├── ThemeContext.tsx
    │       │   └── auth.tsx
    │       ├── hooks
    │       │   ├── useDebounce.ts
    │       │   └── useTheme.ts
    │       ├── index.css
    │       ├── lib
    │       │   ├── analytics.ts
    │       │   ├── api.ts
    │       │   ├── schemas
    │       │   │   └── property.ts
    │       │   └── types
    │       │   │   └── index.ts
    │       ├── main.tsx
    │       ├── pages
    │       │   ├── About.tsx
    │       │   ├── Contact.tsx
    │       │   ├── Home.tsx
    │       │   ├── NotFound.tsx
    │       │   ├── Properties.tsx
    │       │   ├── PropertyDetails.tsx
    │       │   └── admin
    │       │   │   ├── Dashboard.tsx
    │       │   │   ├── EditProperty.tsx
    │       │   │   ├── Login.tsx
    │       │   │   ├── Messages.tsx
    │       │   │   ├── NewProperty.tsx
    │       │   │   ├── NewUser.tsx
    │       │   │   ├── Properties.tsx
    │       │   │   ├── Users.tsx
    │       │   │   └── __tests__
    │       │   │       └── Login.test.tsx
    │       ├── services
    │       │   ├── auth.ts
    │       │   ├── contact.ts
    │       │   ├── locationService.ts
    │       │   ├── messages.ts
    │       │   ├── properties.ts
    │       │   ├── propertyService.ts
    │       │   └── users.ts
    │       ├── test
    │       │   └── setup.ts
    │       ├── types
    │       │   └── api.ts
    │       └── vite-env.d.ts
    │   ├── tailwind.config.js
    │   ├── tsconfig.app.json
    │   ├── tsconfig.json
    │   ├── tsconfig.node.json
    │   ├── vite.config.ts
    │   └── vitest.config.ts
├── package.json
├── packages
    └── shared-types
    │   ├── package.json
    │   ├── src
    │       ├── admin
    │       │   └── index.ts
    │       ├── auth
    │       │   └── index.ts
    │       ├── common
    │       │   ├── api.ts
    │       │   └── pagination.ts
    │       ├── contact
    │       │   └── index.ts
    │       ├── index.ts
    │       ├── location
    │       │   └── index.ts
    │       ├── property
    │       │   ├── base.ts
    │       │   ├── enums.ts
    │       │   ├── requests.ts
    │       │   └── responses.ts
    │       └── user
    │       │   └── index.ts
    │   ├── tsconfig.json
    │   └── tsup.config.ts
├── pnpm-lock.yaml
├── pnpm-workspace.yaml
└── turbo.json


/.gitignore:
--------------------------------------------------------------------------------
 1 | # Dependencies
 2 | node_modules
 3 | .pnp
 4 | .pnp.js
 5 | 
 6 | # Testing
 7 | coverage
 8 | 
 9 | # Production
10 | dist
11 | build
12 | out
13 | .next
14 | 
15 | # Environment Variables
16 | .env
17 | .env.local
18 | .env.development.local
19 | .env.test.local
20 | .env.production.local
21 | .env*.local
22 | 
23 | # Debug
24 | npm-debug.log*
25 | yarn-debug.log*
26 | yarn-error.log*
27 | pnpm-debug.log*
28 | 
29 | # IDEs and editors
30 | .idea
31 | .vscode/*
32 | !.vscode/extensions.json
33 | !.vscode/settings.json
34 | !.vscode/tasks.json
35 | !.vscode/launch.json
36 | *.suo
37 | *.ntvs*
38 | *.njsproj
39 | *.sln
40 | *.sw?
41 | 
42 | # OS files
43 | .DS_Store
44 | Thumbs.db
45 | 
46 | # Prisma
47 | apps/api/prisma/dev.db
48 | apps/api/prisma/dev.db-journal
49 | apps/api/prisma/migrations/migration_lock.toml
50 | 
51 | # Logs
52 | logs
53 | *.log
54 | npm-debug.log*
55 | yarn-debug.log*
56 | yarn-error.log*
57 | pnpm-debug.log*
58 | lerna-debug.log*
59 | 
60 | # Turborepo
61 | .turbo
62 | 
63 | # Cache
64 | .cache
65 | .eslintcache
66 | .stylelintcache
67 | 
68 | # Uploads
69 | apps/api/uploads/*
70 | !apps/api/uploads/.gitkeep
71 | 
72 | # TypeScript
73 | *.tsbuildinfo
74 | 
75 | # Vite
76 | *.local
77 | 
78 | # Testing
79 | /coverage
80 | .nyc_output
81 | 
82 | # Temporary files
83 | *.tmp
84 | *.temp
85 | .temp
86 | .tmp
87 | 


--------------------------------------------------------------------------------
/.nvmrc:
--------------------------------------------------------------------------------
1 | v20.12.2
2 | 


--------------------------------------------------------------------------------
/.vscode/settings.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "workbench.colorCustomizations": {
 3 |     "activityBar.activeBackground": "#d6a251",
 4 |     "activityBar.background": "#d6a251",
 5 |     "activityBar.foreground": "#15202b",
 6 |     "activityBar.inactiveForeground": "#15202b99",
 7 |     "activityBarBadge.background": "#e5f9f1",
 8 |     "activityBarBadge.foreground": "#15202b",
 9 |     "commandCenter.border": "#15202b99",
10 |     "sash.hoverBorder": "#d6a251",
11 |     "statusBar.background": "#c58b2f",
12 |     "statusBar.foreground": "#15202b",
13 |     "statusBarItem.hoverBackground": "#9c6e25",
14 |     "statusBarItem.remoteBackground": "#c58b2f",
15 |     "statusBarItem.remoteForeground": "#15202b",
16 |     "titleBar.activeBackground": "#c58b2f",
17 |     "titleBar.activeForeground": "#15202b",
18 |     "titleBar.inactiveBackground": "#c58b2f99",
19 |     "titleBar.inactiveForeground": "#15202b99"
20 |   },
21 |   "peacock.color": "#c58b2f"
22 | }
23 | 


--------------------------------------------------------------------------------
/README.md:
--------------------------------------------------------------------------------
 1 | # Avalon Real Estate Website
 2 | 
 3 | Modern real estate website for Авалон Недвижими Имоти, built with React, Node.js, and TypeScript.
 4 | 
 5 | ## Project Structure
 6 | 
 7 | ```
 8 | avalon-real-estate/
 9 | ├── apps/
10 | │   ├── web/           # React frontend application
11 | │   └── api/           # Node.js/Express backend
12 | ├── packages/
13 | │   ├── ui/            # Shared UI components
14 | │   ├── config/        # Shared configurations
15 | │   └── types/         # Shared TypeScript types
16 | ├── pnpm-workspace.yaml
17 | └── package.json
18 | ```
19 | 
20 | ## Prerequisites
21 | 
22 | - Node.js (v18 or higher)
23 | - pnpm (v8.14.1 or higher)
24 | 
25 | ## Getting Started
26 | 
27 | 1. Install dependencies:
28 |    ```bash
29 |    pnpm install
30 |    ```
31 | 
32 | 2. Start development servers:
33 |    ```bash
34 |    pnpm dev
35 |    ```
36 | 
37 |    This will start both the frontend and backend development servers:
38 |    - Frontend: http://localhost:5173
39 |    - Backend: http://localhost:3000
40 | 
41 | ## Tech Stack
42 | 
43 | - **Frontend:**
44 |   - React + TypeScript
45 |   - Tailwind CSS
46 |   - React Router
47 |   - TanStack Query (React Query)
48 |   - Zod for runtime type validation
49 | 
50 | - **Backend:**
51 |   - Node.js + TypeScript
52 |   - Express
53 |   - Prisma (Type-safe ORM)
54 |   - SQLite/MongoDB
55 |   - JWT Authentication
56 | 
57 | ## Features
58 | 
59 | - Responsive design with light/dark mode
60 | - Property search and filtering
61 | - Admin panel for property management
62 | - Contact form with reCAPTCHA
63 | - Google Analytics integration
64 | - Interactive map integration
65 | 
66 | ## Development
67 | 
68 | - All code is written in TypeScript
69 | - ESLint for code linting
70 | - Prettier for code formatting
71 | - Turborepo for monorepo management
72 | - pnpm for fast, disk-space efficient package management
73 | 
74 | ## License
75 | 
76 | Private - All rights reserved 
77 | 


--------------------------------------------------------------------------------
/apps/api/.env.example:
--------------------------------------------------------------------------------
 1 | # Email Configuration
 2 | SMTP_HOST=smtp.example.com
 3 | SMTP_PORT=587
 4 | SMTP_SECURE=false
 5 | SMTP_USER=your-email@example.com
 6 | SMTP_PASS=your-email-password
 7 | SMTP_FROM=noreply@example.com
 8 | ADMIN_EMAIL=admin@example.com
 9 | 
10 | # reCAPTCHA Configuration
11 | RECAPTCHA_SITE_KEY=your-recaptcha-site-key
12 | RECAPTCHA_SECRET_KEY=your-recaptcha-secret-key 
13 | 


--------------------------------------------------------------------------------
/apps/api/jest.config.ts:
--------------------------------------------------------------------------------
 1 | import type { Config } from '@jest/types';
 2 | 
 3 | const config: Config.InitialOptions = {
 4 |   preset: 'ts-jest',
 5 |   testEnvironment: 'node',
 6 |   moduleNameMapper: {
 7 |     '^@avalon/shared-types
#39;: '<rootDir>/../../packages/shared-types/src/index.ts'
 8 |   },
 9 |   transform: {
10 |     '^.+\\.tsx?
#39;: ['ts-jest', {
11 |       useESM: true,
12 |     }]
13 |   },
14 |   extensionsToTreatAsEsm: ['.ts'],
15 |   moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node']
16 | };
17 | 
18 | export default config; 
19 | 


--------------------------------------------------------------------------------
/apps/api/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "@avalon/api",
 3 |   "version": "1.0.0",
 4 |   "private": true,
 5 |   "type": "module",
 6 |   "scripts": {
 7 |     "dev": "tsup src/index.ts --watch --onSuccess \"node dist/index.js\"",
 8 |     "build": "tsup src/index.ts --minify",
 9 |     "start": "node dist/index.js",
10 |     "clean": "rm -rf dist",
11 |     "prisma:generate": "prisma generate",
12 |     "prisma:migrate": "prisma migrate deploy",
13 |     "prisma:studio": "prisma studio",
14 |     "prisma:seed": "tsx prisma/seed.ts",
15 |     "fix:categories": "tsx scripts/fix-property-categories.ts",
16 |     "test": "cross-env NODE_ENV=test jest"
17 |   },
18 |   "dependencies": {
19 |     "@avalon/shared-types": "workspace:*",
20 |     "@prisma/client": "^5.22.0",
21 |     "@types/nodemailer": "^6.4.17",
22 |     "bcryptjs": "^2.4.3",
23 |     "cors": "^2.8.5",
24 |     "dotenv": "^16.4.5",
25 |     "express": "^4.18.3",
26 |     "express-rate-limit": "^7.5.0",
27 |     "jsonwebtoken": "^9.0.2",
28 |     "morgan": "^1.10.0",
29 |     "multer": "^1.4.5-lts.1",
30 |     "nodemailer": "^6.9.16",
31 |     "winston": "^3.17.0",
32 |     "zod": "^3.22.4"
33 |   },
34 |   "devDependencies": {
35 |     "@jest/globals": "^29.7.0",
36 |     "@jest/types": "^29.6.3",
37 |     "@types/bcryptjs": "^2.4.6",
38 |     "@types/cors": "^2.8.17",
39 |     "@types/express": "^4.17.21",
40 |     "@types/jest": "^29.5.14",
41 |     "@types/jsonwebtoken": "^9.0.5",
42 |     "@types/morgan": "^1.9.9",
43 |     "@types/multer": "^1.4.11",
44 |     "@types/node": "^20.17.12",
45 |     "@types/supertest": "^6.0.2",
46 |     "@typescript-eslint/eslint-plugin": "^6.21.0",
47 |     "@typescript-eslint/parser": "^6.21.0",
48 |     "cross-env": "^7.0.3",
49 |     "jest": "^29.7.0",
50 |     "prisma": "^5.22.0",
51 |     "supertest": "^7.0.0",
52 |     "ts-jest": "^29.2.5",
53 |     "tsup": "^8.3.5",
54 |     "tsx": "^4.7.1",
55 |     "typescript": "^5.4.2"
56 |   }
57 | }
58 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250112191046_init/migration.sql:
--------------------------------------------------------------------------------
 1 | -- CreateTable
 2 | CREATE TABLE "User" (
 3 |     "id" TEXT NOT NULL PRIMARY KEY,
 4 |     "email" TEXT NOT NULL,
 5 |     "name" TEXT NOT NULL,
 6 |     "password" TEXT NOT NULL,
 7 |     "role" TEXT NOT NULL DEFAULT 'USER',
 8 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
 9 |     "updatedAt" DATETIME NOT NULL
10 | );
11 | 
12 | -- CreateTable
13 | CREATE TABLE "Property" (
14 |     "id" TEXT NOT NULL PRIMARY KEY,
15 |     "title" TEXT NOT NULL,
16 |     "description" TEXT NOT NULL,
17 |     "price" REAL NOT NULL,
18 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
19 |     "area_sqm" REAL NOT NULL,
20 |     "floor" INTEGER,
21 |     "construction_type" TEXT,
22 |     "furnishing" TEXT,
23 |     "location" TEXT NOT NULL,
24 |     "category" TEXT NOT NULL,
25 |     "type" TEXT NOT NULL,
26 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
27 |     "updatedAt" DATETIME NOT NULL
28 | );
29 | 
30 | -- CreateTable
31 | CREATE TABLE "Image" (
32 |     "id" TEXT NOT NULL PRIMARY KEY,
33 |     "url" TEXT NOT NULL,
34 |     "propertyId" TEXT NOT NULL,
35 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
36 |     "updatedAt" DATETIME NOT NULL,
37 |     CONSTRAINT "Image_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE
38 | );
39 | 
40 | -- CreateTable
41 | CREATE TABLE "ContactInfo" (
42 |     "id" TEXT NOT NULL PRIMARY KEY,
43 |     "phone" TEXT NOT NULL,
44 |     "email" TEXT NOT NULL,
45 |     "propertyId" TEXT NOT NULL,
46 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
47 |     "updatedAt" DATETIME NOT NULL,
48 |     CONSTRAINT "ContactInfo_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE
49 | );
50 | 
51 | -- CreateTable
52 | CREATE TABLE "ContactMessage" (
53 |     "id" TEXT NOT NULL PRIMARY KEY,
54 |     "name" TEXT NOT NULL,
55 |     "email" TEXT NOT NULL,
56 |     "message" TEXT NOT NULL,
57 |     "isRead" BOOLEAN NOT NULL DEFAULT false,
58 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
59 |     "updatedAt" DATETIME NOT NULL
60 | );
61 | 
62 | -- CreateIndex
63 | CREATE UNIQUE INDEX "User_email_key" ON "User"("email");
64 | 
65 | -- CreateIndex
66 | CREATE UNIQUE INDEX "ContactInfo_propertyId_key" ON "ContactInfo"("propertyId");
67 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250112201244_add_featured_field/migration.sql:
--------------------------------------------------------------------------------
 1 | -- RedefineTables
 2 | PRAGMA defer_foreign_keys=ON;
 3 | PRAGMA foreign_keys=OFF;
 4 | CREATE TABLE "new_Property" (
 5 |     "id" TEXT NOT NULL PRIMARY KEY,
 6 |     "title" TEXT NOT NULL,
 7 |     "description" TEXT NOT NULL,
 8 |     "price" REAL NOT NULL,
 9 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
10 |     "area_sqm" REAL NOT NULL,
11 |     "floor" INTEGER,
12 |     "construction_type" TEXT,
13 |     "furnishing" TEXT,
14 |     "location" TEXT NOT NULL,
15 |     "category" TEXT NOT NULL,
16 |     "type" TEXT NOT NULL,
17 |     "featured" BOOLEAN NOT NULL DEFAULT false,
18 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
19 |     "updatedAt" DATETIME NOT NULL
20 | );
21 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt" FROM "Property";
22 | DROP TABLE "Property";
23 | ALTER TABLE "new_Property" RENAME TO "Property";
24 | PRAGMA foreign_keys=ON;
25 | PRAGMA defer_foreign_keys=OFF;
26 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250113201522_init/migration.sql:
--------------------------------------------------------------------------------
 1 | -- RedefineTables
 2 | PRAGMA defer_foreign_keys=ON;
 3 | PRAGMA foreign_keys=OFF;
 4 | CREATE TABLE "new_Property" (
 5 |     "id" TEXT NOT NULL PRIMARY KEY,
 6 |     "title" TEXT NOT NULL,
 7 |     "description" TEXT NOT NULL,
 8 |     "price" REAL NOT NULL,
 9 |     "currency" TEXT NOT NULL DEFAULT 'EUR',
10 |     "area_sqm" REAL NOT NULL,
11 |     "floor" INTEGER,
12 |     "construction_type" TEXT,
13 |     "furnishing" TEXT,
14 |     "location" TEXT NOT NULL,
15 |     "category" TEXT NOT NULL DEFAULT 'SALE',
16 |     "type" TEXT NOT NULL DEFAULT 'APARTMENT',
17 |     "featured" BOOLEAN NOT NULL DEFAULT false,
18 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
19 |     "updatedAt" DATETIME NOT NULL
20 | );
21 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "location", "price", "title", "type", "updatedAt" FROM "Property";
22 | DROP TABLE "Property";
23 | ALTER TABLE "new_Property" RENAME TO "Property";
24 | CREATE INDEX "Property_category_idx" ON "Property"("category");
25 | CREATE INDEX "Property_type_idx" ON "Property"("type");
26 | PRAGMA foreign_keys=ON;
27 | PRAGMA defer_foreign_keys=OFF;
28 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250113223215_wordpress_sync/migration.sql:
--------------------------------------------------------------------------------
 1 | /*
 2 |   Warnings:
 3 | 
 4 |   - You are about to drop the column `location` on the `Property` table. All the data in the column will be lost.
 5 | 
 6 | */
 7 | -- CreateTable
 8 | CREATE TABLE "Region" (
 9 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
10 |     "name" TEXT NOT NULL,
11 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
12 |     "updatedAt" DATETIME NOT NULL
13 | );
14 | 
15 | -- CreateTable
16 | CREATE TABLE "Neighborhood" (
17 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
18 |     "name" TEXT NOT NULL,
19 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
20 |     "updatedAt" DATETIME NOT NULL
21 | );
22 | 
23 | -- CreateTable
24 | CREATE TABLE "Feature" (
25 |     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
26 |     "name" TEXT NOT NULL,
27 |     "type" TEXT NOT NULL,
28 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
29 |     "updatedAt" DATETIME NOT NULL
30 | );
31 | 
32 | -- CreateTable
33 | CREATE TABLE "PropertyFeature" (
34 |     "propertyId" TEXT NOT NULL,
35 |     "featureId" INTEGER NOT NULL,
36 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
37 |     "updatedAt" DATETIME NOT NULL,
38 | 
39 |     PRIMARY KEY ("propertyId", "featureId"),
40 |     CONSTRAINT "PropertyFeature_propertyId_fkey" FOREIGN KEY ("propertyId") REFERENCES "Property" ("id") ON DELETE CASCADE ON UPDATE CASCADE,
41 |     CONSTRAINT "PropertyFeature_featureId_fkey" FOREIGN KEY ("featureId") REFERENCES "Feature" ("id") ON DELETE RESTRICT ON UPDATE CASCADE
42 | );
43 | 
44 | -- RedefineTables
45 | PRAGMA defer_foreign_keys=ON;
46 | PRAGMA foreign_keys=OFF;
47 | CREATE TABLE "new_Property" (
48 |     "id" TEXT NOT NULL PRIMARY KEY,
49 |     "title" TEXT NOT NULL,
50 |     "description" TEXT NOT NULL,
51 |     "price" REAL NOT NULL,
52 |     "currency" TEXT NOT NULL DEFAULT 'BGN',
53 |     "area_sqm" REAL NOT NULL,
54 |     "land_area_sqm" REAL,
55 |     "floor" INTEGER,
56 |     "total_floors" INTEGER,
57 |     "construction_type" TEXT,
58 |     "furnishing" TEXT,
59 |     "location_type" TEXT NOT NULL DEFAULT 'CITY',
60 |     "regionId" INTEGER,
61 |     "neighborhoodId" INTEGER,
62 |     "has_regulation" BOOLEAN,
63 |     "category" TEXT NOT NULL DEFAULT 'SALE',
64 |     "type" TEXT NOT NULL DEFAULT 'APARTMENT',
65 |     "featured" BOOLEAN NOT NULL DEFAULT false,
66 |     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
67 |     "updatedAt" DATETIME NOT NULL,
68 |     CONSTRAINT "Property_regionId_fkey" FOREIGN KEY ("regionId") REFERENCES "Region" ("id") ON DELETE SET NULL ON UPDATE CASCADE,
69 |     CONSTRAINT "Property_neighborhoodId_fkey" FOREIGN KEY ("neighborhoodId") REFERENCES "Neighborhood" ("id") ON DELETE SET NULL ON UPDATE CASCADE
70 | );
71 | INSERT INTO "new_Property" ("area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "price", "title", "type", "updatedAt") SELECT "area_sqm", "category", "construction_type", "createdAt", "currency", "description", "featured", "floor", "furnishing", "id", "price", "title", "type", "updatedAt" FROM "Property";
72 | DROP TABLE "Property";
73 | ALTER TABLE "new_Property" RENAME TO "Property";
74 | CREATE INDEX "Property_category_idx" ON "Property"("category");
75 | CREATE INDEX "Property_type_idx" ON "Property"("type");
76 | CREATE INDEX "Property_regionId_idx" ON "Property"("regionId");
77 | CREATE INDEX "Property_neighborhoodId_idx" ON "Property"("neighborhoodId");
78 | PRAGMA foreign_keys=ON;
79 | PRAGMA defer_foreign_keys=OFF;
80 | 


--------------------------------------------------------------------------------
/apps/api/prisma/migrations/20250114224900_update_location_models/migration.sql:
--------------------------------------------------------------------------------
 1 | /*
 2 |   Warnings:
 3 | 
 4 |   - A unique constraint covering the columns `[name]` on the table `Neighborhood` will be added. If there are existing duplicate values, this will fail.
 5 |   - A unique constraint covering the columns `[name]` on the table `Region` will be added. If there are existing duplicate values, this will fail.
 6 | 
 7 | */
 8 | -- CreateIndex
 9 | CREATE UNIQUE INDEX "Neighborhood_name_key" ON "Neighborhood"("name");
10 | 
11 | -- CreateIndex
12 | CREATE UNIQUE INDEX "Region_name_key" ON "Region"("name");
13 | 


--------------------------------------------------------------------------------
/apps/api/prisma/schema.prisma:
--------------------------------------------------------------------------------
  1 | generator client {
  2 |   provider = "prisma-client-js"
  3 | }
  4 | 
  5 | datasource db {
  6 |   provider = "sqlite"
  7 |   url      = "file:./dev.db"
  8 | }
  9 | 
 10 | model User {
 11 |   id        String   @id @default(cuid())
 12 |   email     String   @unique
 13 |   name      String
 14 |   password  String
 15 |   role      String   @default("USER") // Can be "USER" or "ADMIN"
 16 |   createdAt DateTime @default(now())
 17 |   updatedAt DateTime @updatedAt
 18 | }
 19 | 
 20 | model Region {
 21 |   id         Int        @id @default(autoincrement())
 22 |   name       String     @unique
 23 |   properties Property[]
 24 |   createdAt  DateTime   @default(now())
 25 |   updatedAt  DateTime   @updatedAt
 26 | }
 27 | 
 28 | model Neighborhood {
 29 |   id         Int        @id @default(autoincrement())
 30 |   name       String     @unique
 31 |   properties Property[]
 32 |   createdAt  DateTime   @default(now())
 33 |   updatedAt  DateTime   @updatedAt
 34 | }
 35 | 
 36 | model Feature {
 37 |   id          Int               @id @default(autoincrement())
 38 |   name        String
 39 |   type        String            // 'INFRASTRUCTURE' or 'BUILDING'
 40 |   properties  PropertyFeature[]
 41 |   createdAt   DateTime          @default(now())
 42 |   updatedAt   DateTime          @updatedAt
 43 | }
 44 | 
 45 | model Property {
 46 |   id               String            @id @default(cuid())
 47 |   title            String
 48 |   description      String
 49 |   price            Float
 50 |   currency         String            @default("BGN") // BGN or EUR
 51 |   area_sqm         Float
 52 |   land_area_sqm    Float?
 53 |   floor            Int?
 54 |   total_floors     Int?
 55 |   construction_type String?          // BRICK, EPK, PK, PANEL, WOOD_FLOOR
 56 |   furnishing       String?           // FURNISHED, PARTIALLY_FURNISHED, UNFURNISHED
 57 |   location_type    String            @default("CITY") // CITY or REGION
 58 |   region           Region?           @relation(fields: [regionId], references: [id])
 59 |   regionId         Int?
 60 |   neighborhood     Neighborhood?     @relation(fields: [neighborhoodId], references: [id])
 61 |   neighborhoodId   Int?
 62 |   has_regulation   Boolean?
 63 |   category         String            @default("SALE") // SALE or RENT
 64 |   type             String            @default("APARTMENT") // APARTMENT, HOUSE, LAND, COMMERCIAL, INDUSTRIAL
 65 |   featured         Boolean           @default(false)
 66 |   images           Image[]
 67 |   contact_info     ContactInfo?
 68 |   features         PropertyFeature[]
 69 |   createdAt        DateTime          @default(now())
 70 |   updatedAt        DateTime          @updatedAt
 71 | 
 72 |   @@index([category])
 73 |   @@index([type])
 74 |   @@index([regionId])
 75 |   @@index([neighborhoodId])
 76 | }
 77 | 
 78 | model PropertyFeature {
 79 |   propertyId String
 80 |   featureId  Int
 81 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
 82 |   feature    Feature  @relation(fields: [featureId], references: [id])
 83 |   createdAt  DateTime @default(now())
 84 |   updatedAt  DateTime @updatedAt
 85 | 
 86 |   @@id([propertyId, featureId])
 87 | }
 88 | 
 89 | model Image {
 90 |   id         String   @id @default(cuid())
 91 |   url        String
 92 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
 93 |   propertyId String
 94 |   createdAt  DateTime @default(now())
 95 |   updatedAt  DateTime @updatedAt
 96 | }
 97 | 
 98 | model ContactInfo {
 99 |   id         String   @id @default(cuid())
100 |   phone      String
101 |   email      String
102 |   property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
103 |   propertyId String   @unique
104 |   createdAt  DateTime @default(now())
105 |   updatedAt  DateTime @updatedAt
106 | }
107 | 
108 | model ContactMessage {
109 |   id        String   @id @default(cuid())
110 |   name      String
111 |   email     String
112 |   message   String
113 |   isRead    Boolean  @default(false)
114 |   createdAt DateTime @default(now())
115 |   updatedAt DateTime @updatedAt
116 | } 
117 | 


--------------------------------------------------------------------------------
/apps/api/prisma/seed.ts:
--------------------------------------------------------------------------------
  1 | import { PrismaClient } from '@prisma/client';
  2 | import bcryptjs from 'bcryptjs';
  3 | import { randomUUID } from 'crypto';
  4 | 
  5 | const prisma = new PrismaClient();
  6 | 
  7 | // Data mapping constants
  8 | const CURRENCY_MAP = {
  9 |   euro: 'EUR',
 10 |   bgn: 'BGN',
 11 | } as const;
 12 | 
 13 | const CONSTRUCTION_TYPE_MAP = {
 14 |   brick: 'BRICK',
 15 |   epk: 'EPK',
 16 |   pk: 'PK',
 17 |   panel: 'PANEL',
 18 |   wood: 'WOOD_FLOOR',
 19 | } as const;
 20 | 
 21 | const FURNISHING_MAP = {
 22 |   furnished: 'FURNISHED',
 23 |   partially_furnished: 'PARTIALLY_FURNISHED',
 24 |   unfurnished: 'UNFURNISHED',
 25 | } as const;
 26 | 
 27 | const PROPERTY_TYPE_MAP = {
 28 |   apartment: 'APARTMENT',
 29 |   house: 'HOUSE',
 30 |   land: 'LAND',
 31 |   commercial: 'COMMERCIAL',
 32 |   industrial: 'INDUSTRIAL',
 33 | } as const;
 34 | 
 35 | const regions = [
 36 |   { id: 1, name: "главен път Е85" },
 37 |   { id: 2, name: "гр. Борово" },
 38 |   { id: 3, name: "гр. Бяла" },
 39 |   { id: 4, name: "гр. Ветово" },
 40 |   { id: 5, name: "гр. Глоджево" },
 41 |   { id: 6, name: "гр. Две могили" },
 42 |   { id: 7, name: "гр. Мартен" },
 43 |   { id: 8, name: "гр. Сеново" },
 44 |   { id: 9, name: "гр. Сливо поле" },
 45 |   { id: 10, name: "с. Бабово" },
 46 |   { id: 11, name: "с. Баниска" },
 47 |   { id: 12, name: "с. Басарбово" },
 48 |   { id: 13, name: "с. Батин" },
 49 |   { id: 14, name: "с. Батишница" },
 50 |   { id: 15, name: "с. Белцов" },
 51 |   { id: 16, name: "с. Беляново" },
 52 |   { id: 17, name: "с. Бистренци" },
 53 |   { id: 18, name: "с. Божичен" },
 54 |   { id: 19, name: "с. Борисово" },
 55 |   { id: 20, name: "с. Босилковци" },
 56 |   { id: 21, name: "с. Ботров" },
 57 |   { id: 22, name: "с. Брестовица" },
 58 |   { id: 23, name: "с. Бръшлен" },
 59 |   { id: 24, name: "с. Бъзовец" },
 60 |   { id: 25, name: "с. Бъзън" },
 61 |   { id: 26, name: "с. Волово" },
 62 |   { id: 27, name: "с. Голямо Враново" },
 63 |   { id: 28, name: "с. Горно Абланово" },
 64 |   { id: 29, name: "с. Джулюница" },
 65 |   { id: 30, name: "с. Долна Студена" },
 66 |   { id: 31, name: "с. Долно Абланово" },
 67 |   { id: 32, name: "с. Дряновец" },
 68 |   { id: 33, name: "с. Екзарх Йосиф" },
 69 |   { id: 34, name: "с. Иваново" },
 70 |   { id: 35, name: "с. Караманово" },
 71 |   { id: 36, name: "с. Каран Върбовка" },
 72 |   { id: 37, name: "с. Кацелово" },
 73 |   { id: 38, name: "с. Копривец" },
 74 |   { id: 39, name: "с. Кошарна" },
 75 |   { id: 40, name: "с. Кошов" },
 76 |   { id: 41, name: "с. Красен" },
 77 |   { id: 42, name: "с. Кривина" },
 78 |   { id: 43, name: "с. Кривня" },
 79 |   { id: 44, name: "с. Лом Черковна" },
 80 |   { id: 45, name: "с. Малко Враново" },
 81 |   { id: 46, name: "с. Мечка" },
 82 |   { id: 47, name: "с. Могилино" },
 83 |   { id: 48, name: "с. Николово" },
 84 |   { id: 49, name: "с. Нисово" },
 85 |   { id: 50, name: "с. Новград" },
 86 |   { id: 51, name: "с. Ново село" },
 87 |   { id: 52, name: "с. Обретеник" },
 88 |   { id: 53, name: "с. Острица" },
 89 |   { id: 54, name: "с. Пейчиново" },
 90 |   { id: 55, name: "с. Пепелина" },
 91 |   { id: 56, name: "с. Пет кладенци" },
 92 |   { id: 57, name: "с. Пиперково" },
 93 |   { id: 58, name: "с. Пиргово" },
 94 |   { id: 59, name: "с. Писанец" },
 95 |   { id: 60, name: "с. Полско Косово" },
 96 |   { id: 61, name: "с. Помен" },
 97 |   { id: 62, name: "с. Просена" },
 98 |   { id: 63, name: "с. Ряхово" },
 99 |   { id: 64, name: "с. Сандрово" },
100 |   { id: 65, name: "с. Сваленик" },
101 |   { id: 66, name: "с. Семерджиево" },
102 |   { id: 67, name: "с. Смирненски" },
103 |   { id: 68, name: "с. Стамболово" },
104 |   { id: 69, name: "с. Стърмен" },
105 |   { id: 70, name: "с. Табачка" },
106 |   { id: 71, name: "с. Тетово" },
107 |   { id: 72, name: "с. Тръстеник" },
108 |   { id: 73, name: "с. Хотанца" },
109 |   { id: 74, name: "с. Ценово" },
110 |   { id: 75, name: "с. Церовец" },
111 |   { id: 76, name: "с. Червен" },
112 |   { id: 77, name: "с. Червена вода" },
113 |   { id: 78, name: "с. Черешово" },
114 |   { id: 79, name: "с. Чилнов" },
115 |   { id: 80, name: "с. Широково" },
116 |   { id: 81, name: "с. Щръклево" },
117 |   { id: 82, name: "с. Юделник" },
118 |   { id: 83, name: "с. Ястребово" }
119 | ];
120 | 
121 | const neighborhoods = [
122 |   { id: 1, name: "Алеи Възраждане" },
123 |   { id: 2, name: "Басарбово" },
124 |   { id: 3, name: "Веждата" },
125 |   { id: 4, name: "Възраждане" },
126 |   { id: 5, name: "Долапите" },
127 |   { id: 6, name: "Дружба 1" },
128 |   { id: 7, name: "Дружба 2" },
129 |   { id: 8, name: "Дружба 3" },
130 |   { id: 9, name: "Завод Найден Киров" },
131 |   { id: 10, name: "Захарна фабрика" },
132 |   { id: 11, name: "Здравец" },
133 |   { id: 12, name: "Здравец Изток" },
134 |   { id: 13, name: "Здравец Север 1" },
135 |   { id: 14, name: "Здравец Север 2" },
136 |   { id: 15, name: "КТМ" },
137 |   { id: 16, name: "Мальовица" },
138 |   { id: 17, name: "Мидия Енос" },
139 |   { id: 18, name: "Нова промишлена зона" },
140 |   { id: 19, name: "Новата махала" },
141 |   { id: 20, name: "Промишлена зона - Запад" },
142 |   { id: 21, name: "Промишлена зона - Изток" },
143 |   { id: 22, name: "Родина 1" },
144 |   { id: 23, name: "Родина 2" },
145 |   { id: 24, name: "Родина 3" },
146 |   { id: 25, name: "Родина 4" },
147 |   { id: 26, name: "Сарая" },
148 |   { id: 27, name: "Средна кула" },
149 |   { id: 28, name: "Товарна гара" },
150 |   { id: 29, name: "Тракцията" },
151 |   { id: 30, name: "Търговия на едро" },
152 |   { id: 31, name: "Хъшове" },
153 |   { id: 32, name: "Цветница" },
154 |   { id: 33, name: "Централен кооп. Пазар" },
155 |   { id: 34, name: "Централен южен район" },
156 |   { id: 35, name: "Център" },
157 |   { id: 36, name: "Чародейка - Север" },
158 |   { id: 37, name: "Чародейка - Юг" },
159 |   { id: 38, name: "Широк център" },
160 |   { id: 39, name: "Ялта" },
161 |   { id: 40, name: "в.з. Д. Басарбовски" },
162 |   { id: 41, name: "в.з. Касева Чешма" },
163 |   { id: 42, name: "в.з. Кръста" },
164 |   { id: 43, name: "в.з. Кулата" },
165 |   { id: 44, name: "в.з. Левента" },
166 |   { id: 45, name: "в.з. Липака" },
167 |   { id: 46, name: "в.з. Русофили" },
168 |   { id: 47, name: "в.з. Средна кула" },
169 |   { id: 48, name: "в.з. Трите гълъба" },
170 |   { id: 49, name: "Птицекомбинат" },
171 |   { id: 50, name: "с. Николово" }
172 | ];
173 | 
174 | const infrastructureFeatures = [
175 |   { name: "Ток", type: "INFRASTRUCTURE" },
176 |   { name: "Вода", type: "INFRASTRUCTURE" },
177 |   { name: "Ограда", type: "INFRASTRUCTURE" },
178 |   { name: "Асвалтов път", type: "INFRASTRUCTURE" },
179 |   { name: "Черен път", type: "INFRASTRUCTURE" }
180 | ];
181 | 
182 | const buildingFeatures = [
183 |   { name: "ТЕЦ", type: "BUILDING" },
184 |   { name: "Газ", type: "BUILDING" },
185 |   { name: "Климатик", type: "BUILDING" },
186 |   { name: "Локално парно", type: "BUILDING" },
187 |   { name: "В строеж", type: "BUILDING" },
188 |   { name: "С преход", type: "BUILDING" },
189 |   { name: "Асансьор", type: "BUILDING" },
190 |   { name: "Гараж", type: "BUILDING" },
191 |   { name: "Паркинг", type: "BUILDING" },
192 |   { name: "С действащ бизнес", type: "BUILDING" },
193 |   { name: "Видео наблюдение", type: "BUILDING" },
194 |   { name: "Охрана", type: "BUILDING" },
195 |   { name: "Саниран", type: "BUILDING" },
196 |   { name: "Тераса", type: "BUILDING" }
197 | ];
198 | 
199 | async function main() {
200 |   try {
201 |     // Create admin user
202 |     const salt = await bcryptjs.genSalt(10);
203 |     const hashedPassword = await bcryptjs.hash('admin123', salt);
204 | 
205 |     const admin = await prisma.user.upsert({
206 |       where: { email: 'admin@avalon.bg' },
207 |       update: {},
208 |       create: {
209 |         email: 'admin@avalon.bg',
210 |         name: 'Admin',
211 |         password: hashedPassword,
212 |         role: 'ADMIN',
213 |       },
214 |     });
215 | 
216 |     console.log('Created admin user:', admin.email);
217 | 
218 |     // Seed regions
219 |     console.log('Seeding regions...');
220 |     for (const region of regions) {
221 |       await prisma.$transaction([
222 |         prisma.$executeRaw`INSERT OR IGNORE INTO Region (id, name, createdAt, updatedAt) VALUES (${region.id}, ${region.name}, datetime('now'), datetime('now'))`
223 |       ]);
224 |     }
225 | 
226 |     // Seed neighborhoods
227 |     console.log('Seeding neighborhoods...');
228 |     for (const neighborhood of neighborhoods) {
229 |       await prisma.$transaction([
230 |         prisma.$executeRaw`INSERT OR IGNORE INTO Neighborhood (id, name, createdAt, updatedAt) VALUES (${neighborhood.id}, ${neighborhood.name}, datetime('now'), datetime('now'))`
231 |       ]);
232 |     }
233 | 
234 |     // Seed features
235 |     console.log('Seeding features...');
236 |     const allFeatures = [...infrastructureFeatures, ...buildingFeatures];
237 |     for (const [index, feature] of allFeatures.entries()) {
238 |       await prisma.$transaction([
239 |         prisma.$executeRaw`INSERT OR IGNORE INTO Feature (id, name, type, createdAt, updatedAt) VALUES (${index + 1}, ${feature.name}, ${feature.type}, datetime('now'), datetime('now'))`
240 |       ]);
241 |     }
242 | 
243 |     // Create sample property
244 |     console.log('Creating sample property...');
245 |     const propertyId = await prisma.$transaction(async (tx) => {
246 |       // Create property
247 |       const result = await tx.$queryRaw<{ id: string }[]>`
248 |         INSERT INTO Property (
249 |           id, title, description, price, currency, area_sqm, floor,
250 |           total_floors, construction_type, furnishing, location_type,
251 |           neighborhoodId, category, type, featured, has_regulation,
252 |           createdAt, updatedAt
253 |         ) VALUES (
254 |           ${randomUUID()},
255 |           'Магазин, кв. Възраждане, 267000 Е',
256 |           'Агенция за недвижими имоти АВАЛОН Ви представя, МАГАЗИН с голяма витрина и лице към улица 15 метра...',
257 |           267000,
258 |           ${CURRENCY_MAP.euro},
259 |           149,
260 |           0,
261 |           1,
262 |           ${CONSTRUCTION_TYPE_MAP.brick},
263 |           ${FURNISHING_MAP.unfurnished},
264 |           'CITY',
265 |           4,
266 |           'SALE',
267 |           ${PROPERTY_TYPE_MAP.commercial},
268 |           false,
269 |           false,
270 |           datetime('now'),
271 |           datetime('now')
272 |         ) RETURNING id;
273 |       `;
274 | 
275 |       const id = result[0].id;
276 | 
277 |       // Create features
278 |       await tx.$executeRaw`
279 |         INSERT INTO PropertyFeature (propertyId, featureId, createdAt, updatedAt)
280 |         VALUES 
281 |           (${id}, 1, datetime('now'), datetime('now')),
282 |           (${id}, 2, datetime('now'), datetime('now')),
283 |           (${id}, 4, datetime('now'), datetime('now'));
284 |       `;
285 | 
286 |       // Create image
287 |       await tx.$executeRaw`
288 |         INSERT INTO Image (id, url, propertyId, createdAt, updatedAt)
289 |         VALUES (${randomUUID()}, '/uploads/properties/2803.jpg', ${id}, datetime('now'), datetime('now'));
290 |       `;
291 | 
292 |       // Create contact info
293 |       await tx.$executeRaw`
294 |         INSERT INTO ContactInfo (id, phone, email, propertyId, createdAt, updatedAt)
295 |         VALUES (${randomUUID()}, '0895 606 165', 'agent@avalon.bg', ${id}, datetime('now'), datetime('now'));
296 |       `;
297 | 
298 |       return id;
299 |     });
300 | 
301 |     console.log('Created sample property:', propertyId);
302 | 
303 |   } catch (e) {
304 |     console.error(e);
305 |     throw e;
306 |   } finally {
307 |     await prisma.$disconnect();
308 |   }
309 | }
310 | 
311 | main(); 
312 | 


--------------------------------------------------------------------------------
/apps/api/scripts/fix-property-categories.ts:
--------------------------------------------------------------------------------
 1 | import { PrismaClient } from '@prisma/client';
 2 | 
 3 | const prisma = new PrismaClient();
 4 | 
 5 | async function main() {
 6 |   try {
 7 |     // Update any properties with incorrect category values
 8 |     await prisma.property.updateMany({
 9 |       where: {
10 |         category: 'Residential',
11 |       },
12 |       data: {
13 |         category: 'SALE',
14 |       },
15 |     });
16 | 
17 |     console.log('Successfully updated property categories');
18 |   } catch (error) {
19 |     console.error('Error updating property categories:', error);
20 |     process.exit(1);
21 |   } finally {
22 |     await prisma.$disconnect();
23 |   }
24 | }
25 | 
26 | main(); 
27 | 


--------------------------------------------------------------------------------
/apps/api/src/config/multer.ts:
--------------------------------------------------------------------------------
 1 | import multer, { FileFilterCallback } from 'multer';
 2 | import path from 'path';
 3 | import { Request } from 'express';
 4 | import { AppError } from '../middleware/error';
 5 | 
 6 | type DestinationCallback = (error: Error | null, destination: string) => void;
 7 | type FileNameCallback = (error: Error | null, filename: string) => void;
 8 | 
 9 | // Configure multer for image uploads
10 | const storage = multer.diskStorage({
11 |   destination: (_req: Request, _file: Express.Multer.File, cb: DestinationCallback) => {
12 |     cb(null, path.join(process.cwd(), 'uploads/properties'));
13 |   },
14 |   filename: (_req: Request, file: Express.Multer.File, cb: FileNameCallback) => {
15 |     const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1e9);
16 |     cb(null, uniqueSuffix + path.extname(file.originalname));
17 |   },
18 | });
19 | 
20 | const fileFilter = (_req: Request, file: Express.Multer.File, cb: FileFilterCallback) => {
21 |   const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
22 |   if (!allowedTypes.includes(file.mimetype)) {
23 |     cb(new AppError(400, 'Invalid file type. Only JPEG, PNG and WebP are allowed'));
24 |     return;
25 |   }
26 |   cb(null, true);
27 | };
28 | 
29 | export const upload = multer({
30 |   storage,
31 |   fileFilter,
32 |   limits: {
33 |     fileSize: 10 * 1024 * 1024, // 10MB
34 |   },
35 | }); 
36 | 


--------------------------------------------------------------------------------
/apps/api/src/index.ts:
--------------------------------------------------------------------------------
1 | import app from './server';
2 | 
3 | const port = process.env.PORT || 3001;
4 | app.listen(port, () => {
5 |   console.log(`Server is running on port ${port}`);
6 | }); 
7 | 


--------------------------------------------------------------------------------
/apps/api/src/lib/contact.ts:
--------------------------------------------------------------------------------
 1 | import nodemailer from 'nodemailer';
 2 | import { ContactFormData } from '../types/contact';
 3 | import { AppError } from '../middleware/error';
 4 | 
 5 | // Configure nodemailer with environment variables
 6 | const transporter = nodemailer.createTransport({
 7 |   host: process.env.SMTP_HOST,
 8 |   port: parseInt(process.env.SMTP_PORT || '587'),
 9 |   secure: process.env.SMTP_SECURE === 'true',
10 |   auth: {
11 |     user: process.env.SMTP_USER,
12 |     pass: process.env.SMTP_PASS,
13 |   },
14 | });
15 | 
16 | export async function verifyRecaptcha(token: string): Promise<boolean> {
17 |   try {
18 |     const response = await fetch('https://www.google.com/recaptcha/api/siteverify', {
19 |       method: 'POST',
20 |       headers: {
21 |         'Content-Type': 'application/x-www-form-urlencoded',
22 |       },
23 |       body: new URLSearchParams({
24 |         secret: process.env.RECAPTCHA_SECRET_KEY || '',
25 |         response: token,
26 |       }),
27 |     });
28 | 
29 |     const data = await response.json();
30 |     return data.success;
31 |   } catch (error) {
32 |     console.error('reCAPTCHA verification failed:', error);
33 |     return false;
34 |   }
35 | }
36 | 
37 | export async function sendContactEmail(formData: ContactFormData & { recaptchaToken?: string }): Promise<void> {
38 |   const { name, email, message } = formData;
39 | 
40 |   // Verify reCAPTCHA token if provided
41 |   if (formData.recaptchaToken) {
42 |     const isValidRecaptcha = await verifyRecaptcha(formData.recaptchaToken);
43 |     if (!isValidRecaptcha) {
44 |       throw new AppError(400, 'reCAPTCHA verification failed');
45 |     }
46 |   }
47 | 
48 |   try {
49 |     // Send email to admin
50 |     await transporter.sendMail({
51 |       from: process.env.SMTP_FROM,
52 |       to: process.env.ADMIN_EMAIL,
53 |       subject: `New Contact Form Submission from ${name}`,
54 |       html: `
55 |         <h2>New Contact Form Submission</h2>
56 |         <p><strong>Name:</strong> ${name}</p>
57 |         <p><strong>Email:</strong> ${email}</p>
58 |         <p><strong>Message:</strong></p>
59 |         <p>${message}</p>
60 |       `,
61 |     });
62 | 
63 |     // Send confirmation email to user
64 |     await transporter.sendMail({
65 |       from: process.env.SMTP_FROM,
66 |       to: email,
67 |       subject: 'Thank you for contacting us',
68 |       html: `
69 |         <h2>Thank you for contacting us</h2>
70 |         <p>Dear ${name},</p>
71 |         <p>We have received your message and will get back to you as soon as possible.</p>
72 |         <p>Best regards,<br>The Property AI Team</p>
73 |       `,
74 |     });
75 |   } catch (error) {
76 |     console.error('Failed to send email:', error);
77 |     throw new AppError(500, 'Failed to send email');
78 |   }
79 | } 
80 | 


--------------------------------------------------------------------------------
/apps/api/src/lib/logger.ts:
--------------------------------------------------------------------------------
 1 | import winston from 'winston';
 2 | import path from 'path';
 3 | 
 4 | const logDir = 'logs';
 5 | const { combine, timestamp, printf, colorize } = winston.format;
 6 | 
 7 | // Custom log format
 8 | const logFormat = printf(({ level, message, timestamp, ...metadata }) => {
 9 |   let msg = `${timestamp} [${level}] : ${message}`;
10 |   if (Object.keys(metadata).length > 0) {
11 |     msg += ` ${JSON.stringify(metadata)}`;
12 |   }
13 |   return msg;
14 | });
15 | 
16 | // Create logger instance
17 | const logger = winston.createLogger({
18 |   level: process.env.NODE_ENV === 'production' ? 'info' : 'debug',
19 |   format: combine(
20 |     timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
21 |     logFormat
22 |   ),
23 |   transports: [
24 |     // Console transport with colors
25 |     new winston.transports.Console({
26 |       format: combine(
27 |         colorize(),
28 |         timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
29 |         logFormat
30 |       ),
31 |     }),
32 |     // File transport for errors
33 |     new winston.transports.File({
34 |       filename: path.join(logDir, 'error.log'),
35 |       level: 'error',
36 |       maxsize: 5242880, // 5MB
37 |       maxFiles: 5,
38 |     }),
39 |     // File transport for all logs
40 |     new winston.transports.File({
41 |       filename: path.join(logDir, 'combined.log'),
42 |       maxsize: 5242880, // 5MB
43 |       maxFiles: 5,
44 |     }),
45 |   ],
46 | });
47 | 
48 | // Create a stream object for Morgan
49 | export const stream = {
50 |   write: (message: string) => {
51 |     logger.info(message.trim());
52 |   },
53 | };
54 | 
55 | export default logger; 
56 | 


--------------------------------------------------------------------------------
/apps/api/src/lib/prisma.ts:
--------------------------------------------------------------------------------
1 | import { PrismaClient } from '@prisma/client';
2 | 
3 | const prisma = new PrismaClient();
4 | 
5 | export default prisma; 
6 | 


--------------------------------------------------------------------------------
/apps/api/src/middleware/auth.ts:
--------------------------------------------------------------------------------
 1 | import { Request, Response, NextFunction } from 'express';
 2 | import jwt from 'jsonwebtoken';
 3 | import prisma from '../lib/prisma';
 4 | import { AppError } from './error';
 5 | import { User, UserRole } from '@avalon/shared-types';
 6 | 
 7 | // Extend Express Request type to include user
 8 | declare global {
 9 |   namespace Express {
10 |     interface Request {
11 |       user?: User;
12 |     }
13 |   }
14 | }
15 | 
16 | interface JwtPayload {
17 |   id: string;
18 | }
19 | 
20 | const mapUserToResponse = (user: { 
21 |   id: string; 
22 |   name: string; 
23 |   email: string; 
24 |   role: string;
25 |   createdAt: Date;
26 | }): User => ({
27 |   id: user.id,
28 |   name: user.name,
29 |   email: user.email,
30 |   role: user.role as UserRole,
31 |   createdAt: user.createdAt.toISOString()
32 | });
33 | 
34 | // Protect routes
35 | export const protect = async (req: Request, res: Response, next: NextFunction) => {
36 |   try {
37 |     // Get token from header
38 |     const token = req.headers.authorization?.replace('Bearer ', '');
39 | 
40 |     if (!token) {
41 |       throw new AppError(401, 'Please log in to access this resource');
42 |     }
43 | 
44 |     // Verify token
45 |     const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JwtPayload;
46 | 
47 |     // Get user from token
48 |     const user = await prisma.user.findUnique({
49 |       where: { id: decoded.id },
50 |       select: {
51 |         id: true,
52 |         name: true,
53 |         email: true,
54 |         role: true,
55 |         createdAt: true
56 |       },
57 |     });
58 | 
59 |     if (!user) {
60 |       throw new AppError(401, 'The user belonging to this token no longer exists');
61 |     }
62 | 
63 |     // Add user to request
64 |     req.user = mapUserToResponse(user);
65 |     next();
66 |   } catch (error) {
67 |     next(error);
68 |   }
69 | };
70 | 
71 | // Restrict to certain roles
72 | export const restrictTo = (role: UserRole) => {
73 |   return (req: Request, res: Response, next: NextFunction) => {
74 |     if (req.user?.role !== role) {
75 |       throw new AppError(403, 'You do not have permission to perform this action');
76 |     }
77 |     next();
78 |   };
79 | }; 
80 | 


--------------------------------------------------------------------------------
/apps/api/src/middleware/error.ts:
--------------------------------------------------------------------------------
 1 | import { Request, Response, NextFunction } from 'express';
 2 | import { ZodError } from 'zod';
 3 | import { Prisma } from '@prisma/client';
 4 | 
 5 | export class AppError extends Error {
 6 |   constructor(
 7 |     public statusCode: number,
 8 |     message: string
 9 |   ) {
10 |     super(message);
11 |     this.name = 'AppError';
12 |   }
13 | }
14 | 
15 | export const errorHandler = (
16 |   err: Error,
17 |   _req: Request,
18 |   res: Response,
19 |   _next: NextFunction
20 | ) => {
21 |   console.error('Error:', err);
22 | 
23 |   // Custom application error
24 |   if (err instanceof AppError) {
25 |     return res.status(err.statusCode).json({
26 |       status: 'error',
27 |       message: err.message,
28 |     });
29 |   }
30 | 
31 |   // Zod validation error
32 |   if (err instanceof ZodError) {
33 |     return res.status(400).json({
34 |       status: 'error',
35 |       message: 'Validation error',
36 |       errors: err.errors,
37 |     });
38 |   }
39 | 
40 |   // Prisma error
41 |   if (err instanceof Prisma.PrismaClientKnownRequestError) {
42 |     if (err.code === 'P2002') {
43 |       return res.status(409).json({
44 |         status: 'error',
45 |         message: 'A record with this value already exists',
46 |       });
47 |     }
48 |   }
49 | 
50 |   // Default error
51 |   return res.status(500).json({
52 |     status: 'error',
53 |     message: 'Internal server error',
54 |   });
55 | }; 
56 | 


--------------------------------------------------------------------------------
/apps/api/src/middleware/rateLimiter.ts:
--------------------------------------------------------------------------------
 1 | import rateLimit from 'express-rate-limit';
 2 | import { AppError } from './error';
 3 | import logger from '../lib/logger';
 4 | 
 5 | // Rate limiter for contact form
 6 | export const contactFormLimiter = rateLimit({
 7 |   windowMs: 60 * 60 * 1000, // 1 hour window
 8 |   max: 5, // limit each IP to 5 requests per windowMs
 9 |   message: 'Too many contact requests from this IP, please try again after an hour',
10 |   handler: (req, res, next, options) => {
11 |     logger.warn(`Rate limit exceeded for IP: ${req.ip}`);
12 |     next(new AppError(429, options.message));
13 |   },
14 |   standardHeaders: true, // Return rate limit info in the `RateLimit-*` headers
15 |   legacyHeaders: false, // Disable the `X-RateLimit-*` headers
16 | });
17 | 
18 | // General API rate limiter
19 | export const apiLimiter = rateLimit({
20 |   windowMs: 15 * 60 * 1000, // 15 minutes
21 |   max: 100, // limit each IP to 100 requests per windowMs
22 |   message: 'Too many requests from this IP, please try again after 15 minutes',
23 |   handler: (req, res, next, options) => {
24 |     logger.warn(`API rate limit exceeded for IP: ${req.ip}`);
25 |     next(new AppError(429, options.message));
26 |   },
27 |   standardHeaders: true,
28 |   legacyHeaders: false,
29 | }); 
30 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/__tests__/properties.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, it, expect, beforeAll, afterAll } from '@jest/globals';
  2 | import request from 'supertest';
  3 | import bcrypt from 'bcryptjs';
  4 | import app from '../../server';
  5 | import prisma from '../../lib/prisma';
  6 | import jwt from 'jsonwebtoken';
  7 | import { PropertyType, PropertyCategory, Currency, LocationType, UserRole } from '@avalon/shared-types';
  8 | 
  9 | describe('Property Routes', () => {
 10 |   let adminToken: string;
 11 | 
 12 |   beforeAll(async () => {
 13 |     // Create an admin user for testing
 14 |     const hashedPassword = await bcrypt.hash('password123', 10);
 15 |     const admin = await prisma.user.create({
 16 |       data: {
 17 |         name: 'Admin User',
 18 |         email: 'admin@test.com',
 19 |         password: hashedPassword,
 20 |         role: 'ADMIN',
 21 |       },
 22 |     });
 23 | 
 24 |     // Get JWT token for admin
 25 |     const response = await request(app)
 26 |       .post('/api/auth/login')
 27 |       .send({
 28 |         email: 'admin@test.com',
 29 |         password: 'password123',
 30 |       });
 31 | 
 32 |     console.log('Login response:', response.body);
 33 |     adminToken = response.body.data.token;
 34 |   });
 35 | 
 36 |   afterAll(async () => {
 37 |     // Clean up test data
 38 |     await prisma.user.deleteMany({
 39 |       where: {
 40 |         email: 'admin@test.com',
 41 |       },
 42 |     });
 43 |   });
 44 | 
 45 |   describe('GET /properties', () => {
 46 |     it('should return a list of properties', async () => {
 47 |       const response = await request(app)
 48 |         .get('/api/properties')
 49 |         .expect(200);
 50 | 
 51 |       expect(response.body.status).toBe('success');
 52 |       expect(Array.isArray(response.body.data.data)).toBe(true);
 53 |     });
 54 | 
 55 |     it('should filter properties by price range', async () => {
 56 |       const response = await request(app)
 57 |         .get('/api/properties')
 58 |         .query({ min_price: '100000', max_price: '500000' })
 59 |         .expect(200);
 60 | 
 61 |       expect(response.body.status).toBe('success');
 62 |       expect(Array.isArray(response.body.data.data)).toBe(true);
 63 |     });
 64 |   });
 65 | 
 66 |   describe('POST /properties', () => {
 67 |     it('should create a new property when authenticated as admin', async () => {
 68 |       const propertyData = {
 69 |         title: 'Test Property',
 70 |         description: 'A test property description',
 71 |         price: 200000,
 72 |         currency: Currency.USD,
 73 |         area_sqm: 120,
 74 |         type: PropertyType.APARTMENT,
 75 |         category: PropertyCategory.SALE,
 76 |         location_type: LocationType.CITY,
 77 |         contact_info: {
 78 |           phone: '+1234567890',
 79 |           email: 'contact@test.com'
 80 |         }
 81 |       };
 82 | 
 83 |       const response = await request(app)
 84 |         .post('/api/properties')
 85 |         .set('Authorization', `Bearer ${adminToken}`)
 86 |         .field('title', propertyData.title)
 87 |         .field('description', propertyData.description)
 88 |         .field('price', propertyData.price.toString())
 89 |         .field('currency', propertyData.currency)
 90 |         .field('area_sqm', propertyData.area_sqm.toString())
 91 |         .field('type', propertyData.type)
 92 |         .field('category', propertyData.category)
 93 |         .field('location_type', propertyData.location_type)
 94 |         .field('contact_info', JSON.stringify(propertyData.contact_info))
 95 |         .expect(201);
 96 | 
 97 |       console.log('Create property response:', response.body);
 98 |       expect(response.body.status).toBe('success');
 99 |       expect(response.body.data.property).toBeDefined();
100 |       expect(response.body.data.property.title).toBe(propertyData.title);
101 |     });
102 | 
103 |     it('should return 401 when not authenticated', async () => {
104 |       const propertyData = {
105 |         title: 'Test Property',
106 |         description: 'A test property description',
107 |         price: 200000,
108 |         currency: Currency.USD,
109 |         area_sqm: 120,
110 |         type: PropertyType.APARTMENT,
111 |         category: PropertyCategory.SALE,
112 |         location_type: LocationType.CITY,
113 |         contact_info: {
114 |           phone: '+1234567890',
115 |           email: 'contact@test.com'
116 |         }
117 |       };
118 | 
119 |       await request(app)
120 |         .post('/api/properties')
121 |         .field('title', propertyData.title)
122 |         .field('description', propertyData.description)
123 |         .field('price', propertyData.price.toString())
124 |         .field('currency', propertyData.currency)
125 |         .field('area_sqm', propertyData.area_sqm.toString())
126 |         .field('type', propertyData.type)
127 |         .field('category', propertyData.category)
128 |         .field('location_type', propertyData.location_type)
129 |         .field('contact_info', JSON.stringify(propertyData.contact_info))
130 |         .expect(401);
131 |     });
132 |   });
133 | }); 
134 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/__tests__/setup.ts:
--------------------------------------------------------------------------------
 1 | import { describe, it, expect } from '@jest/globals';
 2 | 
 3 | // Set test environment variables
 4 | process.env.NODE_ENV = 'test';
 5 | process.env.JWT_SECRET = 'test-secret-key';
 6 | process.env.JWT_EXPIRES_IN = '30d';
 7 | process.env.DATABASE_URL = 'file:./test.db';
 8 | 
 9 | // Configure test timeouts
10 | jest.setTimeout(30000);
11 | 
12 | describe('Test Environment Setup', () => {
13 |   it('should have correct environment variables', () => {
14 |     expect(process.env.NODE_ENV).toBe('test');
15 |     expect(process.env.JWT_SECRET).toBe('test-secret-key');
16 |     expect(process.env.JWT_EXPIRES_IN).toBe('30d');
17 |     expect(process.env.DATABASE_URL).toBe('file:./test.db');
18 |   });
19 | });
20 | 
21 | describe('Setup', () => {
22 |   it('should pass', () => {
23 |     expect(true).toBe(true);
24 |   });
25 | }); 
26 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/admin.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { upload } from '../config/multer';
  7 | import { propertySchema } from './properties';
  8 | import { 
  9 |   ApiSuccessResponse, 
 10 |   ApiErrorResponse,
 11 |   ApiErrorCode,
 12 |   UserRole,
 13 |   User,
 14 |   Property,
 15 |   AdminStatsResponse,
 16 |   PropertiesResponse,
 17 |   PropertyResponse,
 18 |   CreateUserInput,
 19 |   UpdateUserInput,
 20 |   UsersResponse,
 21 |   UserResponse
 22 | } from '@avalon/shared-types';
 23 | 
 24 | const router = Router();
 25 | 
 26 | // User schema for validation
 27 | const userSchema = z.object({
 28 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 29 |   email: z.string().email('Invalid email address'),
 30 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 31 |   role: z.nativeEnum(UserRole).default(UserRole.USER),
 32 | }) satisfies z.ZodType<CreateUserInput>;
 33 | 
 34 | const handleError = (error: unknown, res: Response) => {
 35 |   if (error instanceof z.ZodError) {
 36 |     const response: ApiErrorResponse = {
 37 |       status: 'error',
 38 |       message: 'Invalid input data',
 39 |       code: ApiErrorCode.VALIDATION_ERROR,
 40 |       errors: error.errors.reduce((acc, err) => {
 41 |         const path = err.path.join('.');
 42 |         acc[path] = [err.message];
 43 |         return acc;
 44 |       }, {} as Record<string, string[]>)
 45 |     };
 46 |     res.status(400).json(response);
 47 |   } else if (error instanceof AppError) {
 48 |     const response: ApiErrorResponse = {
 49 |       status: 'error',
 50 |       message: error.message,
 51 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 52 |     };
 53 |     res.status(error.statusCode).json(response);
 54 |   } else {
 55 |     console.error(error);
 56 |     const response: ApiErrorResponse = {
 57 |       status: 'error',
 58 |       message: 'Internal server error',
 59 |       code: ApiErrorCode.INTERNAL_ERROR
 60 |     };
 61 |     res.status(500).json(response);
 62 |   }
 63 | };
 64 | 
 65 | const mapUser = (user: { id: string; name: string; email: string; role: string; createdAt: Date }): User => ({
 66 |   ...user,
 67 |   role: user.role as UserRole,
 68 |   createdAt: user.createdAt.toISOString()
 69 | });
 70 | 
 71 | const mapProperty = (property: any): Property => ({
 72 |   ...property,
 73 |   createdAt: property.createdAt.toISOString(),
 74 |   updatedAt: property.updatedAt.toISOString(),
 75 |   images: property.images?.map((image: any) => ({
 76 |     ...image,
 77 |     createdAt: image.createdAt.toISOString(),
 78 |     updatedAt: image.updatedAt.toISOString()
 79 |   })),
 80 |   contact_info: property.contact_info ? {
 81 |     ...property.contact_info,
 82 |     createdAt: property.contact_info.createdAt.toISOString(),
 83 |     updatedAt: property.contact_info.updatedAt.toISOString()
 84 |   } : undefined
 85 | });
 86 | 
 87 | // Get admin dashboard stats
 88 | router.get('/stats', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 89 |   try {
 90 |     const [properties, messages, users] = await Promise.all([
 91 |       prisma.property.count(),
 92 |       prisma.contactMessage.count(),
 93 |       prisma.user.count(),
 94 |     ]);
 95 | 
 96 |     const response: ApiSuccessResponse<AdminStatsResponse> = {
 97 |       status: 'success',
 98 |       data: {
 99 |         properties,
100 |         messages,
101 |         users,
102 |       },
103 |     };
104 | 
105 |     res.json(response);
106 |   } catch (error) {
107 |     handleError(error, res);
108 |   }
109 | });
110 | 
111 | // Get all properties (admin)
112 | router.get('/properties', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
113 |   try {
114 |     const page = parseInt(req.query.page as string) || 1;
115 |     const limit = parseInt(req.query.limit as string) || 10;
116 |     const skip = (page - 1) * limit;
117 | 
118 |     const [properties, total] = await Promise.all([
119 |       prisma.property.findMany({
120 |         skip,
121 |         take: limit,
122 |         orderBy: { createdAt: 'desc' },
123 |         include: {
124 |           images: true,
125 |           contact_info: true,
126 |         },
127 |       }),
128 |       prisma.property.count(),
129 |     ]);
130 | 
131 |     const response: ApiSuccessResponse<PropertiesResponse> = {
132 |       status: 'success',
133 |       data: {
134 |         data: properties.map(mapProperty),
135 |         meta: {
136 |           total,
137 |           page,
138 |           pageSize: limit,
139 |           totalPages: Math.ceil(total / limit),
140 |           hasNextPage: skip + limit < total,
141 |           hasPreviousPage: page > 1
142 |         }
143 |       }
144 |     };
145 | 
146 |     res.json(response);
147 |   } catch (error) {
148 |     handleError(error, res);
149 |   }
150 | });
151 | 
152 | // Get single property (admin)
153 | router.get('/properties/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
154 |   try {
155 |     const property = await prisma.property.findUnique({
156 |       where: { id: req.params.id },
157 |       include: {
158 |         images: true,
159 |         contact_info: true,
160 |       },
161 |     });
162 | 
163 |     if (!property) {
164 |       throw new AppError(404, 'Property not found');
165 |     }
166 | 
167 |     const response: ApiSuccessResponse<PropertyResponse> = {
168 |       status: 'success',
169 |       data: { property: mapProperty(property) }
170 |     };
171 | 
172 |     res.json(response);
173 |   } catch (error) {
174 |     handleError(error, res);
175 |   }
176 | });
177 | 
178 | // Update property (admin only)
179 | router.patch(
180 |   '/properties/:id',
181 |   protect,
182 |   restrictTo(UserRole.ADMIN),
183 |   upload.array('image', 20),
184 |   async (req, res: Response) => {
185 |     try {
186 |       const data = propertySchema.parse({
187 |         ...req.body,
188 |         contact_info: typeof req.body.contact_info === 'string' 
189 |           ? JSON.parse(req.body.contact_info)
190 |           : req.body.contact_info
191 |       });
192 |       const files = req.files as Express.Multer.File[];
193 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
194 | 
195 |       // Get the existing property to get the contact info ID
196 |       const existingProperty = await prisma.property.findUnique({
197 |         where: { id: req.params.id },
198 |         include: { contact_info: true },
199 |       });
200 | 
201 |       if (!existingProperty) {
202 |         throw new AppError(404, 'Property not found');
203 |       }
204 | 
205 |       // Update the property with the correct contact info reference
206 |       const property = await prisma.property.update({
207 |         where: { id: req.params.id },
208 |         data: {
209 |           title: data.title,
210 |           description: data.description,
211 |           price: data.price,
212 |           currency: data.currency,
213 |           area_sqm: data.area_sqm,
214 |           floor: data.floor,
215 |           construction_type: data.construction_type,
216 |           furnishing: data.furnishing,
217 |           location_type: data.location_type,
218 |           category: data.category,
219 |           type: data.type,
220 |           featured: data.featured,
221 |           contact_info: data.contact_info ? {
222 |             update: {
223 |               phone: data.contact_info.phone,
224 |               email: data.contact_info.email,
225 |             },
226 |           } : undefined,
227 |           ...(files.length > 0 && {
228 |             images: {
229 |               deleteMany: {},
230 |               create: files.map((file) => ({
231 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
232 |               })),
233 |             },
234 |           }),
235 |         },
236 |         include: {
237 |           images: true,
238 |           contact_info: true,
239 |         },
240 |       });
241 | 
242 |       const response: ApiSuccessResponse<PropertyResponse> = {
243 |         status: 'success',
244 |         data: { property: mapProperty(property) }
245 |       };
246 | 
247 |       res.json(response);
248 |     } catch (error) {
249 |       handleError(error, res);
250 |     }
251 |   }
252 | );
253 | 
254 | // Get all users (admin)
255 | router.get('/users', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
256 |   try {
257 |     const page = parseInt(req.query.page as string) || 1;
258 |     const limit = parseInt(req.query.limit as string) || 10;
259 |     const skip = (page - 1) * limit;
260 | 
261 |     const [users, total] = await Promise.all([
262 |       prisma.user.findMany({
263 |         skip,
264 |         take: limit,
265 |         orderBy: { createdAt: 'desc' },
266 |         select: {
267 |           id: true,
268 |           name: true,
269 |           email: true,
270 |           role: true,
271 |           createdAt: true,
272 |         },
273 |       }),
274 |       prisma.user.count(),
275 |     ]);
276 | 
277 |     const response: ApiSuccessResponse<UsersResponse> = {
278 |       status: 'success',
279 |       data: {
280 |         users: users.map(mapUser),
281 |         meta: {
282 |           total,
283 |           page,
284 |           pageSize: limit,
285 |           totalPages: Math.ceil(total / limit),
286 |           hasNextPage: skip + limit < total,
287 |           hasPreviousPage: page > 1
288 |         }
289 |       }
290 |     };
291 | 
292 |     res.json(response);
293 |   } catch (error) {
294 |     handleError(error, res);
295 |   }
296 | });
297 | 
298 | // Get single user (admin)
299 | router.get('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
300 |   try {
301 |     const user = await prisma.user.findUnique({
302 |       where: { id: String(req.params.id) },
303 |       select: {
304 |         id: true,
305 |         name: true,
306 |         email: true,
307 |         role: true,
308 |         createdAt: true,
309 |       },
310 |     });
311 | 
312 |     if (!user) {
313 |       throw new AppError(404, 'User not found');
314 |     }
315 | 
316 |     const response: ApiSuccessResponse<UserResponse> = {
317 |       status: 'success',
318 |       data: { user: mapUser(user) }
319 |     };
320 | 
321 |     res.json(response);
322 |   } catch (error) {
323 |     handleError(error, res);
324 |   }
325 | });
326 | 
327 | // Create user (admin)
328 | router.post('/users', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
329 |   try {
330 |     const data = userSchema.parse(req.body);
331 | 
332 |     // Check if user with email already exists
333 |     const existingUser = await prisma.user.findUnique({
334 |       where: { email: data.email },
335 |     });
336 | 
337 |     if (existingUser) {
338 |       throw new AppError(400, 'User with this email already exists');
339 |     }
340 | 
341 |     const user = await prisma.user.create({
342 |       data,
343 |       select: {
344 |         id: true,
345 |         name: true,
346 |         email: true,
347 |         role: true,
348 |         createdAt: true,
349 |       },
350 |     });
351 | 
352 |     const response: ApiSuccessResponse<UserResponse> = {
353 |       status: 'success',
354 |       data: { user: mapUser(user) }
355 |     };
356 | 
357 |     res.status(201).json(response);
358 |   } catch (error) {
359 |     handleError(error, res);
360 |   }
361 | });
362 | 
363 | // Update user (admin)
364 | router.patch('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
365 |   try {
366 |     const data = userSchema.partial().parse(req.body) as UpdateUserInput;
367 | 
368 |     // If email is being updated, check if it's already taken
369 |     if (data.email) {
370 |       const existingUser = await prisma.user.findFirst({
371 |         where: {
372 |           email: data.email,
373 |           NOT: { id: String(req.params.id) },
374 |         },
375 |       });
376 | 
377 |       if (existingUser) {
378 |         throw new AppError(400, 'User with this email already exists');
379 |       }
380 |     }
381 | 
382 |     const user = await prisma.user.update({
383 |       where: { id: String(req.params.id) },
384 |       data,
385 |       select: {
386 |         id: true,
387 |         name: true,
388 |         email: true,
389 |         role: true,
390 |         createdAt: true,
391 |       },
392 |     });
393 | 
394 |     const response: ApiSuccessResponse<UserResponse> = {
395 |       status: 'success',
396 |       data: { user: mapUser(user) }
397 |     };
398 | 
399 |     res.json(response);
400 |   } catch (error) {
401 |     handleError(error, res);
402 |   }
403 | });
404 | 
405 | // Delete user (admin)
406 | router.delete('/users/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
407 |   try {
408 |     await prisma.user.delete({
409 |       where: { id: String(req.params.id) },
410 |     });
411 | 
412 |     const response: ApiSuccessResponse<null> = {
413 |       status: 'success',
414 |       data: null
415 |     };
416 | 
417 |     res.status(204).json(response);
418 |   } catch (error) {
419 |     handleError(error, res);
420 |   }
421 | });
422 | 
423 | // Create property (admin only)
424 | router.post(
425 |   '/properties',
426 |   protect,
427 |   restrictTo(UserRole.ADMIN),
428 |   upload.array('image', 20),
429 |   async (req, res: Response) => {
430 |     try {
431 |       const data = propertySchema.parse(req.body);
432 |       const files = req.files as Express.Multer.File[];
433 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
434 | 
435 |       const property = await prisma.property.create({
436 |         data: {
437 |           title: data.title,
438 |           description: data.description,
439 |           price: data.price,
440 |           currency: data.currency,
441 |           area_sqm: data.area_sqm,
442 |           floor: data.floor,
443 |           construction_type: data.construction_type,
444 |           furnishing: data.furnishing,
445 |           location_type: data.location_type,
446 |           category: data.category,
447 |           type: data.type,
448 |           featured: data.featured,
449 |           contact_info: data.contact_info ? {
450 |             create: {
451 |               phone: data.contact_info.phone,
452 |               email: data.contact_info.email,
453 |             },
454 |           } : undefined,
455 |           ...(files.length > 0 && {
456 |             images: {
457 |               create: files.map((file) => ({
458 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
459 |               })),
460 |             },
461 |           }),
462 |         },
463 |         include: {
464 |           images: true,
465 |           contact_info: true,
466 |         },
467 |       });
468 | 
469 |       const response: ApiSuccessResponse<PropertyResponse> = {
470 |         status: 'success',
471 |         data: { property: mapProperty(property) }
472 |       };
473 | 
474 |       res.status(201).json(response);
475 |     } catch (error) {
476 |       handleError(error, res);
477 |     }
478 |   }
479 | );
480 | 
481 | export const adminRoutes = router; 
482 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/auth.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import bcrypt from 'bcryptjs';
  4 | import jwt from 'jsonwebtoken';
  5 | import prisma from '../lib/prisma';
  6 | import { AppError } from '../middleware/error';
  7 | import { protect } from '../middleware/auth';
  8 | import { 
  9 |   ApiSuccessResponse, 
 10 |   ApiErrorResponse,
 11 |   ApiErrorCode,
 12 |   RegisterInput,
 13 |   LoginInput,
 14 |   AuthResponse,
 15 |   MeResponse,
 16 |   UserRole,
 17 |   User
 18 | } from '@avalon/shared-types';
 19 | 
 20 | const router = Router();
 21 | 
 22 | const registerSchema = z.object({
 23 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 24 |   email: z.string().email('Invalid email address'),
 25 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 26 |   passwordConfirm: z.string().min(6, 'Password confirmation must be at least 6 characters')
 27 | }).refine((data) => data.password === data.passwordConfirm, {
 28 |   message: "Passwords don't match",
 29 |   path: ["passwordConfirm"],
 30 | }) satisfies z.ZodType<RegisterInput>;
 31 | 
 32 | const loginSchema = z.object({
 33 |   email: z.string().email('Invalid email address'),
 34 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 35 | }) satisfies z.ZodType<LoginInput>;
 36 | 
 37 | const handleError = (error: unknown, res: Response) => {
 38 |   if (error instanceof z.ZodError) {
 39 |     const response: ApiErrorResponse = {
 40 |       status: 'error',
 41 |       message: 'Invalid input data',
 42 |       code: ApiErrorCode.VALIDATION_ERROR,
 43 |       errors: error.errors.reduce((acc, err) => {
 44 |         const path = err.path.join('.');
 45 |         acc[path] = [err.message];
 46 |         return acc;
 47 |       }, {} as Record<string, string[]>)
 48 |     };
 49 |     res.status(400).json(response);
 50 |   } else if (error instanceof AppError) {
 51 |     const response: ApiErrorResponse = {
 52 |       status: 'error',
 53 |       message: error.message,
 54 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 55 |     };
 56 |     res.status(error.statusCode).json(response);
 57 |   } else {
 58 |     console.error(error);
 59 |     const response: ApiErrorResponse = {
 60 |       status: 'error',
 61 |       message: 'Internal server error',
 62 |       code: ApiErrorCode.INTERNAL_ERROR
 63 |     };
 64 |     res.status(500).json(response);
 65 |   }
 66 | };
 67 | 
 68 | const mapUserToResponse = (user: { 
 69 |   id: string; 
 70 |   name: string; 
 71 |   email: string; 
 72 |   role: string;
 73 |   createdAt: Date;
 74 | }): User => ({
 75 |   id: user.id,
 76 |   name: user.name,
 77 |   email: user.email,
 78 |   role: user.role as UserRole,
 79 |   createdAt: user.createdAt.toISOString()
 80 | });
 81 | 
 82 | // Register
 83 | router.post('/register', async (req, res, next) => {
 84 |   try {
 85 |     const data = registerSchema.parse(req.body);
 86 | 
 87 |     // Check if user exists
 88 |     const existingUser = await prisma.user.findUnique({
 89 |       where: { email: data.email },
 90 |     });
 91 | 
 92 |     if (existingUser) {
 93 |       throw new AppError(400, 'User already exists');
 94 |     }
 95 | 
 96 |     // Hash password
 97 |     const salt = await bcrypt.genSalt(10);
 98 |     const hashedPassword = await bcrypt.hash(data.password, salt);
 99 | 
100 |     // Create user
101 |     const user = await prisma.user.create({
102 |       data: {
103 |         name: data.name,
104 |         email: data.email,
105 |         password: hashedPassword,
106 |         role: UserRole.USER
107 |       },
108 |       select: {
109 |         id: true,
110 |         name: true,
111 |         email: true,
112 |         role: true,
113 |         createdAt: true
114 |       },
115 |     });
116 | 
117 |     // Create token
118 |     const token = jwt.sign(
119 |       { id: user.id },
120 |       process.env.JWT_SECRET!,
121 |       { expiresIn: '30d' }
122 |     );
123 | 
124 |     const response: ApiSuccessResponse<AuthResponse> = {
125 |       status: 'success',
126 |       data: { 
127 |         user: mapUserToResponse(user),
128 |         token 
129 |       }
130 |     };
131 | 
132 |     res.status(201).json(response);
133 |   } catch (error) {
134 |     handleError(error, res);
135 |   }
136 | });
137 | 
138 | // Login
139 | router.post('/login', async (req, res, next) => {
140 |   try {
141 |     const data = loginSchema.parse(req.body);
142 | 
143 |     // Check if user exists
144 |     const user = await prisma.user.findUnique({
145 |       where: { email: data.email },
146 |       select: {
147 |         id: true,
148 |         name: true,
149 |         email: true,
150 |         role: true,
151 |         password: true,
152 |         createdAt: true
153 |       }
154 |     });
155 | 
156 |     if (!user || !(await bcrypt.compare(data.password, user.password))) {
157 |       throw new AppError(401, 'Invalid credentials');
158 |     }
159 | 
160 |     // Create token
161 |     const token = jwt.sign(
162 |       { id: user.id },
163 |       process.env.JWT_SECRET!,
164 |       { expiresIn: '30d' }
165 |     );
166 | 
167 |     // Remove password from response
168 |     const { password: _, ...userWithoutPassword } = user;
169 | 
170 |     const response: ApiSuccessResponse<AuthResponse> = {
171 |       status: 'success',
172 |       data: { 
173 |         user: mapUserToResponse(userWithoutPassword),
174 |         token 
175 |       }
176 |     };
177 | 
178 |     res.json(response);
179 |   } catch (error) {
180 |     handleError(error, res);
181 |   }
182 | });
183 | 
184 | // Get current user
185 | router.get('/me', protect, async (req, res) => {
186 |   const response: ApiSuccessResponse<MeResponse> = {
187 |     status: 'success',
188 |     data: { user: req.user as User }
189 |   };
190 | 
191 |   res.json(response);
192 | });
193 | 
194 | export const authRoutes = router; 
195 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/contact.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { 
  7 |   ApiSuccessResponse, 
  8 |   ApiErrorResponse,
  9 |   ApiErrorCode,
 10 |   CreateContactMessageInput,
 11 |   ContactMessageResponse,
 12 |   ContactMessagesResponse,
 13 |   UserRole,
 14 |   ContactMessage
 15 | } from '@avalon/shared-types';
 16 | 
 17 | const router = Router();
 18 | 
 19 | const contactSchema = z.object({
 20 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 21 |   email: z.string().email('Invalid email address'),
 22 |   message: z.string().min(10, 'Message must be at least 10 characters'),
 23 | }) satisfies z.ZodType<CreateContactMessageInput>;
 24 | 
 25 | const mapContactMessage = (message: {
 26 |   id: string;
 27 |   name: string;
 28 |   email: string;
 29 |   message: string;
 30 |   isRead: boolean;
 31 |   createdAt: Date;
 32 |   updatedAt: Date;
 33 | }): ContactMessage => ({
 34 |   id: message.id,
 35 |   name: message.name,
 36 |   email: message.email,
 37 |   message: message.message,
 38 |   isRead: message.isRead,
 39 |   createdAt: message.createdAt.toISOString(),
 40 |   updatedAt: message.updatedAt.toISOString()
 41 | });
 42 | 
 43 | const handleError = (error: unknown, res: Response) => {
 44 |   if (error instanceof z.ZodError) {
 45 |     const response: ApiErrorResponse = {
 46 |       status: 'error',
 47 |       message: 'Invalid input data',
 48 |       code: ApiErrorCode.VALIDATION_ERROR,
 49 |       errors: error.errors.reduce((acc, err) => {
 50 |         const path = err.path.join('.');
 51 |         acc[path] = [err.message];
 52 |         return acc;
 53 |       }, {} as Record<string, string[]>)
 54 |     };
 55 |     res.status(400).json(response);
 56 |   } else if (error instanceof AppError) {
 57 |     const response: ApiErrorResponse = {
 58 |       status: 'error',
 59 |       message: error.message,
 60 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 61 |     };
 62 |     res.status(error.statusCode).json(response);
 63 |   } else {
 64 |     console.error(error);
 65 |     const response: ApiErrorResponse = {
 66 |       status: 'error',
 67 |       message: 'Internal server error',
 68 |       code: ApiErrorCode.INTERNAL_ERROR
 69 |     };
 70 |     res.status(500).json(response);
 71 |   }
 72 | };
 73 | 
 74 | // Create contact message
 75 | router.post('/', async (req, res: Response, next) => {
 76 |   try {
 77 |     const data = contactSchema.parse(req.body);
 78 | 
 79 |     const message = await prisma.contactMessage.create({
 80 |       data
 81 |     });
 82 | 
 83 |     const response: ApiSuccessResponse<ContactMessageResponse> = {
 84 |       status: 'success',
 85 |       data: { message: mapContactMessage(message) }
 86 |     };
 87 | 
 88 |     res.status(201).json(response);
 89 |   } catch (error) {
 90 |     handleError(error, res);
 91 |   }
 92 | });
 93 | 
 94 | // Get all messages (admin only)
 95 | router.get('/messages', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
 96 |   try {
 97 |     const page = Number(req.query.page) || 1;
 98 |     const limit = Number(req.query.limit) || 10;
 99 |     const skip = (page - 1) * limit;
100 | 
101 |     const [messages, total] = await Promise.all([
102 |       prisma.contactMessage.findMany({
103 |         skip,
104 |         take: limit,
105 |         orderBy: { createdAt: 'desc' },
106 |       }),
107 |       prisma.contactMessage.count(),
108 |     ]);
109 | 
110 |     const response: ApiSuccessResponse<ContactMessagesResponse> = {
111 |       status: 'success',
112 |       data: {
113 |         data: messages.map(mapContactMessage),
114 |         meta: {
115 |           total,
116 |           page,
117 |           pageSize: limit,
118 |           totalPages: Math.ceil(total / limit),
119 |           hasNextPage: skip + limit < total,
120 |           hasPreviousPage: page > 1
121 |         }
122 |       }
123 |     };
124 | 
125 |     res.json(response);
126 |   } catch (error) {
127 |     handleError(error, res);
128 |   }
129 | });
130 | 
131 | // Mark message as read (admin only)
132 | router.patch('/messages/:id/read', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
133 |   try {
134 |     const { id } = req.params;
135 | 
136 |     const message = await prisma.contactMessage.update({
137 |       where: { id },
138 |       data: { isRead: true },
139 |     });
140 | 
141 |     const response: ApiSuccessResponse<ContactMessageResponse> = {
142 |       status: 'success',
143 |       data: { message: mapContactMessage(message) }
144 |     };
145 | 
146 |     res.json(response);
147 |   } catch (error) {
148 |     handleError(error, res);
149 |   }
150 | });
151 | 
152 | // Delete message (admin only)
153 | router.delete('/messages/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
154 |   try {
155 |     const { id } = req.params;
156 | 
157 |     await prisma.contactMessage.delete({
158 |       where: { id },
159 |     });
160 | 
161 |     const response: ApiSuccessResponse<null> = {
162 |       status: 'success',
163 |       data: null
164 |     };
165 | 
166 |     res.json(response);
167 |   } catch (error) {
168 |     handleError(error, res);
169 |   }
170 | });
171 | 
172 | export const contactRoutes = router; 
173 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/locations.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { 
  7 |   ApiSuccessResponse, 
  8 |   ApiErrorResponse,
  9 |   ApiErrorCode,
 10 |   CreateLocationInput,
 11 |   CreateFeatureInput,
 12 |   RegionResponse,
 13 |   RegionsResponse,
 14 |   NeighborhoodResponse,
 15 |   NeighborhoodsResponse,
 16 |   FeatureResponse,
 17 |   FeaturesResponse,
 18 |   FeatureType,
 19 |   UserRole,
 20 |   Feature,
 21 |   Region,
 22 |   Neighborhood
 23 | } from '@avalon/shared-types';
 24 | 
 25 | const router = Router();
 26 | 
 27 | const locationSchema = z.object({
 28 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 29 | }) satisfies z.ZodType<CreateLocationInput>;
 30 | 
 31 | const featureSchema = z.object({
 32 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 33 |   type: z.nativeEnum(FeatureType),
 34 | }) satisfies z.ZodType<CreateFeatureInput>;
 35 | 
 36 | const handleError = (error: unknown, res: Response) => {
 37 |   if (error instanceof z.ZodError) {
 38 |     const response: ApiErrorResponse = {
 39 |       status: 'error',
 40 |       message: 'Invalid input data',
 41 |       code: ApiErrorCode.VALIDATION_ERROR,
 42 |       errors: error.errors.reduce((acc, err) => {
 43 |         const path = err.path.join('.');
 44 |         acc[path] = [err.message];
 45 |         return acc;
 46 |       }, {} as Record<string, string[]>)
 47 |     };
 48 |     res.status(400).json(response);
 49 |   } else if (error instanceof AppError) {
 50 |     const response: ApiErrorResponse = {
 51 |       status: 'error',
 52 |       message: error.message,
 53 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 54 |     };
 55 |     res.status(error.statusCode).json(response);
 56 |   } else {
 57 |     console.error(error);
 58 |     const response: ApiErrorResponse = {
 59 |       status: 'error',
 60 |       message: 'Internal server error',
 61 |       code: ApiErrorCode.INTERNAL_ERROR
 62 |     };
 63 |     res.status(500).json(response);
 64 |   }
 65 | };
 66 | 
 67 | const mapDatesToISOString = <T extends { createdAt: Date; updatedAt: Date }>(
 68 |   item: T
 69 | ): Omit<T, 'createdAt' | 'updatedAt'> & { createdAt: string; updatedAt: string } => ({
 70 |   ...item,
 71 |   createdAt: item.createdAt.toISOString(),
 72 |   updatedAt: item.updatedAt.toISOString()
 73 | });
 74 | 
 75 | const mapRegion = (region: { id: number; name: string; createdAt: Date; updatedAt: Date }): Region => ({
 76 |   ...mapDatesToISOString(region)
 77 | });
 78 | 
 79 | const mapNeighborhood = (neighborhood: { id: number; name: string; createdAt: Date; updatedAt: Date }): Neighborhood => ({
 80 |   ...mapDatesToISOString(neighborhood)
 81 | });
 82 | 
 83 | const mapFeature = (feature: { id: number; name: string; type: string; createdAt: Date; updatedAt: Date }): Feature => ({
 84 |   ...mapDatesToISOString(feature),
 85 |   type: feature.type as FeatureType
 86 | });
 87 | 
 88 | // Get all regions
 89 | router.get('/regions', protect, async (req, res: Response, next) => {
 90 |   try {
 91 |     const regions = await prisma.region.findMany({
 92 |       orderBy: { name: 'asc' },
 93 |     });
 94 | 
 95 |     const response: ApiSuccessResponse<RegionsResponse> = {
 96 |       status: 'success',
 97 |       data: { regions: regions.map(mapRegion) }
 98 |     };
 99 | 
100 |     res.json(response);
101 |   } catch (error) {
102 |     handleError(error, res);
103 |   }
104 | });
105 | 
106 | // Get all neighborhoods
107 | router.get('/neighborhoods', protect, async (req, res: Response, next) => {
108 |   try {
109 |     const neighborhoods = await prisma.neighborhood.findMany({
110 |       orderBy: { name: 'asc' },
111 |     });
112 | 
113 |     const response: ApiSuccessResponse<NeighborhoodsResponse> = {
114 |       status: 'success',
115 |       data: { neighborhoods: neighborhoods.map(mapNeighborhood) }
116 |     };
117 | 
118 |     res.json(response);
119 |   } catch (error) {
120 |     handleError(error, res);
121 |   }
122 | });
123 | 
124 | // Get all features
125 | router.get('/features', protect, async (req, res: Response, next) => {
126 |   try {
127 |     const features = await prisma.feature.findMany({
128 |       orderBy: [
129 |         { type: 'asc' },
130 |         { name: 'asc' }
131 |       ],
132 |     });
133 | 
134 |     const response: ApiSuccessResponse<FeaturesResponse> = {
135 |       status: 'success',
136 |       data: { features: features.map(mapFeature) }
137 |     };
138 | 
139 |     res.json(response);
140 |   } catch (error) {
141 |     handleError(error, res);
142 |   }
143 | });
144 | 
145 | // Create region (admin only)
146 | router.post('/regions', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
147 |   try {
148 |     const { name } = locationSchema.parse(req.body);
149 | 
150 |     const region = await prisma.region.create({
151 |       data: { name },
152 |     });
153 | 
154 |     const response: ApiSuccessResponse<RegionResponse> = {
155 |       status: 'success',
156 |       data: { region: mapRegion(region) }
157 |     };
158 | 
159 |     res.status(201).json(response);
160 |   } catch (error) {
161 |     handleError(error, res);
162 |   }
163 | });
164 | 
165 | // Create neighborhood (admin only)
166 | router.post('/neighborhoods', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
167 |   try {
168 |     const { name } = locationSchema.parse(req.body);
169 | 
170 |     const neighborhood = await prisma.neighborhood.create({
171 |       data: { name },
172 |     });
173 | 
174 |     const response: ApiSuccessResponse<NeighborhoodResponse> = {
175 |       status: 'success',
176 |       data: { neighborhood: mapNeighborhood(neighborhood) }
177 |     };
178 | 
179 |     res.status(201).json(response);
180 |   } catch (error) {
181 |     handleError(error, res);
182 |   }
183 | });
184 | 
185 | // Create feature (admin only)
186 | router.post('/features', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
187 |   try {
188 |     const { name, type } = featureSchema.parse(req.body);
189 | 
190 |     const feature = await prisma.feature.create({
191 |       data: { 
192 |         name,
193 |         type: type as string // Cast to string for Prisma
194 |       },
195 |     });
196 | 
197 |     const response: ApiSuccessResponse<FeatureResponse> = {
198 |       status: 'success',
199 |       data: { feature: mapFeature(feature) }
200 |     };
201 | 
202 |     res.status(201).json(response);
203 |   } catch (error) {
204 |     handleError(error, res);
205 |   }
206 | });
207 | 
208 | // Update region (admin only)
209 | router.patch('/regions/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
210 |   try {
211 |     const data = locationSchema.partial().parse(req.body);
212 | 
213 |     const region = await prisma.region.update({
214 |       where: { id: parseInt(req.params.id) },
215 |       data,
216 |     });
217 | 
218 |     const response: ApiSuccessResponse<RegionResponse> = {
219 |       status: 'success',
220 |       data: { region: mapRegion(region) }
221 |     };
222 | 
223 |     res.json(response);
224 |   } catch (error) {
225 |     handleError(error, res);
226 |   }
227 | });
228 | 
229 | // Update neighborhood (admin only)
230 | router.patch('/neighborhoods/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
231 |   try {
232 |     const data = locationSchema.partial().parse(req.body);
233 | 
234 |     const neighborhood = await prisma.neighborhood.update({
235 |       where: { id: parseInt(req.params.id) },
236 |       data,
237 |     });
238 | 
239 |     const response: ApiSuccessResponse<NeighborhoodResponse> = {
240 |       status: 'success',
241 |       data: { neighborhood: mapNeighborhood(neighborhood) }
242 |     };
243 | 
244 |     res.json(response);
245 |   } catch (error) {
246 |     handleError(error, res);
247 |   }
248 | });
249 | 
250 | // Update feature (admin only)
251 | router.patch('/features/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
252 |   try {
253 |     const data = featureSchema.partial().parse(req.body);
254 | 
255 |     const feature = await prisma.feature.update({
256 |       where: { id: parseInt(req.params.id) },
257 |       data: {
258 |         name: data.name,
259 |         type: data.type as string | undefined
260 |       },
261 |     });
262 | 
263 |     const response: ApiSuccessResponse<FeatureResponse> = {
264 |       status: 'success',
265 |       data: { feature: mapFeature(feature) }
266 |     };
267 | 
268 |     res.json(response);
269 |   } catch (error) {
270 |     handleError(error, res);
271 |   }
272 | });
273 | 
274 | // Delete region (admin only)
275 | router.delete('/regions/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
276 |   try {
277 |     await prisma.region.delete({
278 |       where: { id: parseInt(req.params.id) },
279 |     });
280 | 
281 |     res.status(204).json({
282 |       status: 'success',
283 |       data: null,
284 |     });
285 |   } catch (error) {
286 |     handleError(error, res);
287 |   }
288 | });
289 | 
290 | // Delete neighborhood (admin only)
291 | router.delete('/neighborhoods/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
292 |   try {
293 |     await prisma.neighborhood.delete({
294 |       where: { id: parseInt(req.params.id) },
295 |     });
296 | 
297 |     res.status(204).json({
298 |       status: 'success',
299 |       data: null,
300 |     });
301 |   } catch (error) {
302 |     handleError(error, res);
303 |   }
304 | });
305 | 
306 | // Delete feature (admin only)
307 | router.delete('/features/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response, next) => {
308 |   try {
309 |     await prisma.feature.delete({
310 |       where: { id: parseInt(req.params.id) },
311 |     });
312 | 
313 |     res.status(204).json({
314 |       status: 'success',
315 |       data: null,
316 |     });
317 |   } catch (error) {
318 |     handleError(error, res);
319 |   }
320 | });
321 | 
322 | export const locationRoutes = router; 
323 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/properties.ts:
--------------------------------------------------------------------------------
  1 | import express, { Response } from 'express';
  2 | import { z } from 'zod';
  3 | import { PrismaClient, Prisma } from '@prisma/client';
  4 | import multer from 'multer';
  5 | import { protect, restrictTo } from '../middleware/auth';
  6 | import prisma from '../lib/prisma';
  7 | import { AppError } from '../middleware/error';
  8 | import { upload } from '../config/multer';
  9 | import { 
 10 |   PropertyType, 
 11 |   PropertyCategory, 
 12 |   LocationType, 
 13 |   Currency, 
 14 |   ConstructionType, 
 15 |   FurnishingType,
 16 |   ApiSuccessResponse,
 17 |   ApiErrorResponse,
 18 |   ApiErrorCode,
 19 |   PropertyResponse,
 20 |   PropertiesResponse,
 21 |   GetPropertiesParams,
 22 |   CreatePropertyInput,
 23 |   UpdatePropertyInput,
 24 |   Property,
 25 |   UserRole
 26 | } from '@avalon/shared-types';
 27 | 
 28 | const router = express.Router();
 29 | 
 30 | export const propertySchema = z.object({
 31 |   title: z.string(),
 32 |   description: z.string(),
 33 |   price: z.coerce.number(),
 34 |   currency: z.nativeEnum(Currency),
 35 |   area_sqm: z.coerce.number(),
 36 |   floor: z.coerce.number().optional(),
 37 |   construction_type: z.nativeEnum(ConstructionType).optional(),
 38 |   furnishing: z.nativeEnum(FurnishingType).optional(),
 39 |   location_type: z.nativeEnum(LocationType).optional(),
 40 |   category: z.nativeEnum(PropertyCategory).optional(),
 41 |   type: z.nativeEnum(PropertyType).optional(),
 42 |   featured: z.coerce.boolean().optional(),
 43 |   contact_info: z.object({
 44 |     phone: z.string(),
 45 |     email: z.string().email()
 46 |   }).optional()
 47 | }) satisfies z.ZodType<CreatePropertyInput>;
 48 | 
 49 | const propertyInclude = {
 50 |   region: true,
 51 |   neighborhood: true,
 52 |   features: {
 53 |     include: {
 54 |       feature: true
 55 |     }
 56 |   },
 57 |   images: true,
 58 |   contact_info: true,
 59 | } as const;
 60 | 
 61 | const handleError = (error: unknown, res: Response) => {
 62 |   if (error instanceof z.ZodError) {
 63 |     const response: ApiErrorResponse = {
 64 |       status: 'error',
 65 |       message: 'Invalid input data',
 66 |       code: ApiErrorCode.VALIDATION_ERROR,
 67 |       errors: error.errors.reduce((acc, err) => {
 68 |         const path = err.path.join('.');
 69 |         acc[path] = [err.message];
 70 |         return acc;
 71 |       }, {} as Record<string, string[]>)
 72 |     };
 73 |     res.status(400).json(response);
 74 |   } else if (error instanceof AppError) {
 75 |     const response: ApiErrorResponse = {
 76 |       status: 'error',
 77 |       message: error.message,
 78 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 79 |     };
 80 |     res.status(error.statusCode).json(response);
 81 |   } else {
 82 |     console.error(error);
 83 |     const response: ApiErrorResponse = {
 84 |       status: 'error',
 85 |       message: 'Internal server error',
 86 |       code: ApiErrorCode.INTERNAL_ERROR
 87 |     };
 88 |     res.status(500).json(response);
 89 |   }
 90 | };
 91 | 
 92 | const mapProperty = (property: any): Property => ({
 93 |   ...property,
 94 |   createdAt: property.createdAt.toISOString(),
 95 |   updatedAt: property.updatedAt.toISOString(),
 96 |   images: property.images?.map((image: any) => ({
 97 |     ...image,
 98 |     createdAt: image.createdAt.toISOString(),
 99 |     updatedAt: image.updatedAt.toISOString()
100 |   })),
101 |   contact_info: property.contact_info ? {
102 |     ...property.contact_info,
103 |     createdAt: property.contact_info.createdAt.toISOString(),
104 |     updatedAt: property.contact_info.updatedAt.toISOString()
105 |   } : undefined
106 | });
107 | 
108 | // Get all properties with filtering
109 | router.get('/', async (req, res: Response) => {
110 |   try {
111 |     const {
112 |       page = '1',
113 |       limit = '10',
114 |       min_price,
115 |       max_price,
116 |       min_area,
117 |       max_area,
118 |       type,
119 |       category,
120 |       location_type,
121 |       construction_type,
122 |       furnishing,
123 |       featured,
124 |     } = req.query as GetPropertiesParams;
125 | 
126 |     const skip = (parseInt(page) - 1) * parseInt(limit);
127 |     const where: Prisma.PropertyWhereInput = {};
128 | 
129 |     // Apply filters
130 |     if (type) where.type = type;
131 |     if (category) where.category = category;
132 |     if (location_type) where.location_type = location_type;
133 |     if (construction_type) where.construction_type = construction_type;
134 |     if (furnishing) where.furnishing = furnishing;
135 |     if (featured) where.featured = featured === 'true';
136 | 
137 |     // Handle price range when both min and max are provided
138 |     if (min_price && max_price) {
139 |       where.price = {
140 |         gte: parseInt(min_price),
141 |         lte: parseInt(max_price)
142 |       };
143 |     } else {
144 |       if (min_price) where.price = { gte: parseInt(min_price) };
145 |       if (max_price) where.price = { lte: parseInt(max_price) };
146 |     }
147 | 
148 |     // Handle area range when both min and max are provided
149 |     if (min_area && max_area) {
150 |       where.area_sqm = {
151 |         gte: parseInt(min_area),
152 |         lte: parseInt(max_area)
153 |       };
154 |     } else {
155 |       if (min_area) where.area_sqm = { gte: parseInt(min_area) };
156 |       if (max_area) where.area_sqm = { lte: parseInt(max_area) };
157 |     }
158 | 
159 |     const [properties, total] = await Promise.all([
160 |       prisma.property.findMany({
161 |         where,
162 |         include: propertyInclude,
163 |         skip,
164 |         take: parseInt(limit),
165 |         orderBy: { createdAt: 'desc' },
166 |       }),
167 |       prisma.property.count({ where }),
168 |     ]);
169 | 
170 |     const response: ApiSuccessResponse<PropertiesResponse> = {
171 |       status: 'success',
172 |       data: {
173 |         data: properties.map(mapProperty),
174 |         meta: {
175 |           total,
176 |           page: parseInt(page),
177 |           pageSize: parseInt(limit),
178 |           totalPages: Math.ceil(total / parseInt(limit)),
179 |           hasNextPage: skip + parseInt(limit) < total,
180 |           hasPreviousPage: parseInt(page) > 1
181 |         }
182 |       }
183 |     };
184 | 
185 |     res.json(response);
186 |   } catch (error) {
187 |     handleError(error, res);
188 |   }
189 | });
190 | 
191 | // Get featured properties
192 | router.get('/featured', async (req, res: Response) => {
193 |   try {
194 |     const properties = await prisma.property.findMany({
195 |       where: {
196 |         featured: true,
197 |       },
198 |       include: propertyInclude,
199 |       take: 6,
200 |       orderBy: { createdAt: 'desc' },
201 |     });
202 | 
203 |     const response: ApiSuccessResponse<PropertiesResponse> = {
204 |       status: 'success',
205 |       data: {
206 |         data: properties.map(mapProperty),
207 |         meta: {
208 |           total: properties.length,
209 |           page: 1,
210 |           pageSize: 6,
211 |           totalPages: 1,
212 |           hasNextPage: false,
213 |           hasPreviousPage: false
214 |         }
215 |       }
216 |     };
217 | 
218 |     res.json(response);
219 |   } catch (error) {
220 |     handleError(error, res);
221 |   }
222 | });
223 | 
224 | // Get single property
225 | router.get('/:id', async (req, res: Response) => {
226 |   try {
227 |     const property = await prisma.property.findUnique({
228 |       where: { id: req.params.id },
229 |       include: propertyInclude,
230 |     });
231 | 
232 |     if (!property) {
233 |       throw new AppError(404, 'Property not found');
234 |     }
235 | 
236 |     const response: ApiSuccessResponse<PropertyResponse> = {
237 |       status: 'success',
238 |       data: { property: mapProperty(property) }
239 |     };
240 | 
241 |     res.json(response);
242 |   } catch (error) {
243 |     handleError(error, res);
244 |   }
245 | });
246 | 
247 | // Create property (admin only)
248 | router.post(
249 |   '/',
250 |   protect,
251 |   restrictTo(UserRole.ADMIN),
252 |   upload.array('image', 20),
253 |   async (req, res: Response) => {
254 |     try {
255 |       // Parse fields from multipart/form-data
256 |       const parsedBody = {
257 |         ...req.body,
258 |         price: req.body.price ? parseInt(req.body.price) : undefined,
259 |         area_sqm: req.body.area_sqm ? parseInt(req.body.area_sqm) : undefined,
260 |         contact_info: req.body.contact_info ? JSON.parse(req.body.contact_info) : undefined,
261 |       };
262 | 
263 |       const data = propertySchema.parse(parsedBody);
264 |       const files = req.files as Express.Multer.File[];
265 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
266 | 
267 |       const property = await prisma.property.create({
268 |         data: {
269 |           title: data.title,
270 |           description: data.description,
271 |           price: data.price,
272 |           currency: data.currency,
273 |           area_sqm: data.area_sqm,
274 |           floor: data.floor,
275 |           construction_type: data.construction_type,
276 |           furnishing: data.furnishing,
277 |           location_type: data.location_type,
278 |           category: data.category,
279 |           type: data.type,
280 |           featured: data.featured,
281 |           contact_info: data.contact_info ? {
282 |             create: {
283 |               phone: data.contact_info.phone,
284 |               email: data.contact_info.email,
285 |             },
286 |           } : undefined,
287 |           ...(files.length > 0 && {
288 |             images: {
289 |               create: files.map((file) => ({
290 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
291 |               })),
292 |             },
293 |           }),
294 |         },
295 |         include: propertyInclude,
296 |       });
297 | 
298 |       const response: ApiSuccessResponse<PropertyResponse> = {
299 |         status: 'success',
300 |         data: { property: mapProperty(property) }
301 |       };
302 | 
303 |       res.status(201).json(response);
304 |     } catch (error) {
305 |       handleError(error, res);
306 |     }
307 |   }
308 | );
309 | 
310 | // Update property (admin only)
311 | router.patch(
312 |   '/:id',
313 |   protect,
314 |   restrictTo(UserRole.ADMIN),
315 |   upload.array('image', 20),
316 |   async (req, res: Response) => {
317 |     try {
318 |       const data = propertySchema.partial().parse(req.body) as UpdatePropertyInput;
319 |       const files = req.files as Express.Multer.File[];
320 |       const baseUrl = `${req.protocol}://${req.get('host')}`;
321 | 
322 |       // Get the existing property to get the contact info ID
323 |       const existingProperty = await prisma.property.findUnique({
324 |         where: { id: req.params.id },
325 |         include: { contact_info: true },
326 |       });
327 | 
328 |       if (!existingProperty) {
329 |         throw new AppError(404, 'Property not found');
330 |       }
331 | 
332 |       // Update the property with the correct contact info reference
333 |       const property = await prisma.property.update({
334 |         where: { id: req.params.id },
335 |         data: {
336 |           title: data.title,
337 |           description: data.description,
338 |           price: data.price,
339 |           currency: data.currency,
340 |           area_sqm: data.area_sqm,
341 |           floor: data.floor,
342 |           construction_type: data.construction_type,
343 |           furnishing: data.furnishing,
344 |           location_type: data.location_type,
345 |           category: data.category,
346 |           type: data.type,
347 |           featured: data.featured,
348 |           contact_info: data.contact_info ? {
349 |             update: {
350 |               phone: data.contact_info.phone,
351 |               email: data.contact_info.email,
352 |             },
353 |           } : undefined,
354 |           ...(files.length > 0 && {
355 |             images: {
356 |               deleteMany: {},
357 |               create: files.map((file) => ({
358 |                 url: `${baseUrl}/uploads/properties/${file.filename}`,
359 |               })),
360 |             },
361 |           }),
362 |         },
363 |         include: propertyInclude,
364 |       });
365 | 
366 |       const response: ApiSuccessResponse<PropertyResponse> = {
367 |         status: 'success',
368 |         data: { property: mapProperty(property) }
369 |       };
370 | 
371 |       res.json(response);
372 |     } catch (error) {
373 |       handleError(error, res);
374 |     }
375 |   }
376 | );
377 | 
378 | // Delete property (admin only)
379 | router.delete('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
380 |   try {
381 |     await prisma.property.delete({
382 |       where: { id: req.params.id },
383 |     });
384 | 
385 |     const response: ApiSuccessResponse<null> = {
386 |       status: 'success',
387 |       data: null
388 |     };
389 | 
390 |     res.status(204).json(response);
391 |   } catch (error) {
392 |     handleError(error, res);
393 |   }
394 | });
395 | 
396 | export const propertyRoutes = router; 
397 | 


--------------------------------------------------------------------------------
/apps/api/src/routes/users.ts:
--------------------------------------------------------------------------------
  1 | import { Router, Response } from 'express';
  2 | import { z } from 'zod';
  3 | import prisma from '../lib/prisma';
  4 | import { protect, restrictTo } from '../middleware/auth';
  5 | import { AppError } from '../middleware/error';
  6 | import { 
  7 |   ApiSuccessResponse, 
  8 |   ApiErrorResponse,
  9 |   ApiErrorCode,
 10 |   UserRole,
 11 |   User,
 12 |   UsersResponse,
 13 |   UserResponse,
 14 |   CreateUserInput,
 15 |   UpdateUserInput
 16 | } from '@avalon/shared-types';
 17 | 
 18 | const router = Router();
 19 | 
 20 | const userSchema = z.object({
 21 |   name: z.string().min(2, 'Name must be at least 2 characters'),
 22 |   email: z.string().email('Invalid email address'),
 23 |   password: z.string().min(6, 'Password must be at least 6 characters'),
 24 |   role: z.nativeEnum(UserRole).default(UserRole.USER),
 25 | }) satisfies z.ZodType<CreateUserInput>;
 26 | 
 27 | const handleError = (error: unknown, res: Response) => {
 28 |   if (error instanceof z.ZodError) {
 29 |     const response: ApiErrorResponse = {
 30 |       status: 'error',
 31 |       message: 'Invalid input data',
 32 |       code: ApiErrorCode.VALIDATION_ERROR,
 33 |       errors: error.errors.reduce((acc, err) => {
 34 |         const path = err.path.join('.');
 35 |         acc[path] = [err.message];
 36 |         return acc;
 37 |       }, {} as Record<string, string[]>)
 38 |     };
 39 |     res.status(400).json(response);
 40 |   } else if (error instanceof AppError) {
 41 |     const response: ApiErrorResponse = {
 42 |       status: 'error',
 43 |       message: error.message,
 44 |       code: error.statusCode === 404 ? ApiErrorCode.NOT_FOUND : ApiErrorCode.INTERNAL_ERROR
 45 |     };
 46 |     res.status(error.statusCode).json(response);
 47 |   } else {
 48 |     console.error(error);
 49 |     const response: ApiErrorResponse = {
 50 |       status: 'error',
 51 |       message: 'Internal server error',
 52 |       code: ApiErrorCode.INTERNAL_ERROR
 53 |     };
 54 |     res.status(500).json(response);
 55 |   }
 56 | };
 57 | 
 58 | const mapUser = (user: { id: string; name: string; email: string; role: string; createdAt: Date }): User => ({
 59 |   ...user,
 60 |   role: user.role as UserRole,
 61 |   createdAt: user.createdAt.toISOString()
 62 | });
 63 | 
 64 | // Get all users (admin only)
 65 | router.get('/', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
 66 |   try {
 67 |     const { page = '1', limit = '10' } = req.query;
 68 |     const skip = (parseInt(page as string) - 1) * parseInt(limit as string);
 69 | 
 70 |     const [users, total] = await Promise.all([
 71 |       prisma.user.findMany({
 72 |         select: {
 73 |           id: true,
 74 |           name: true,
 75 |           email: true,
 76 |           role: true,
 77 |           createdAt: true,
 78 |         },
 79 |         skip,
 80 |         take: parseInt(limit as string),
 81 |         orderBy: { createdAt: 'desc' },
 82 |       }),
 83 |       prisma.user.count(),
 84 |     ]);
 85 | 
 86 |     const response: ApiSuccessResponse<UsersResponse> = {
 87 |       status: 'success',
 88 |       data: {
 89 |         users: users.map(mapUser),
 90 |         meta: {
 91 |           total,
 92 |           page: parseInt(page as string),
 93 |           pageSize: parseInt(limit as string),
 94 |           totalPages: Math.ceil(total / parseInt(limit as string)),
 95 |           hasNextPage: skip + parseInt(limit as string) < total,
 96 |           hasPreviousPage: parseInt(page as string) > 1
 97 |         }
 98 |       }
 99 |     };
100 | 
101 |     res.json(response);
102 |   } catch (error) {
103 |     handleError(error, res);
104 |   }
105 | });
106 | 
107 | // Get single user (admin only)
108 | router.get('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
109 |   try {
110 |     const user = await prisma.user.findUnique({
111 |       where: { id: req.params.id },
112 |       select: {
113 |         id: true,
114 |         name: true,
115 |         email: true,
116 |         role: true,
117 |         createdAt: true,
118 |       },
119 |     });
120 | 
121 |     if (!user) {
122 |       throw new AppError(404, 'User not found');
123 |     }
124 | 
125 |     const response: ApiSuccessResponse<UserResponse> = {
126 |       status: 'success',
127 |       data: { user: mapUser(user) }
128 |     };
129 | 
130 |     res.json(response);
131 |   } catch (error) {
132 |     handleError(error, res);
133 |   }
134 | });
135 | 
136 | // Create user (admin only)
137 | router.post('/', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
138 |   try {
139 |     const data = userSchema.parse(req.body);
140 | 
141 |     const existingUser = await prisma.user.findUnique({
142 |       where: { email: data.email },
143 |     });
144 | 
145 |     if (existingUser) {
146 |       throw new AppError(400, 'User already exists');
147 |     }
148 | 
149 |     const user = await prisma.user.create({
150 |       data,
151 |       select: {
152 |         id: true,
153 |         name: true,
154 |         email: true,
155 |         role: true,
156 |         createdAt: true,
157 |       },
158 |     });
159 | 
160 |     const response: ApiSuccessResponse<UserResponse> = {
161 |       status: 'success',
162 |       data: { user: mapUser(user) }
163 |     };
164 | 
165 |     res.status(201).json(response);
166 |   } catch (error) {
167 |     handleError(error, res);
168 |   }
169 | });
170 | 
171 | // Update user (admin only)
172 | router.patch('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
173 |   try {
174 |     const data = userSchema.partial().parse(req.body) as UpdateUserInput;
175 | 
176 |     if (data.email) {
177 |       const existingUser = await prisma.user.findFirst({
178 |         where: {
179 |           email: data.email,
180 |           NOT: { id: req.params.id },
181 |         },
182 |       });
183 | 
184 |       if (existingUser) {
185 |         throw new AppError(400, 'Email already in use');
186 |       }
187 |     }
188 | 
189 |     const user = await prisma.user.update({
190 |       where: { id: req.params.id },
191 |       data,
192 |       select: {
193 |         id: true,
194 |         name: true,
195 |         email: true,
196 |         role: true,
197 |         createdAt: true,
198 |       },
199 |     });
200 | 
201 |     const response: ApiSuccessResponse<UserResponse> = {
202 |       status: 'success',
203 |       data: { user: mapUser(user) }
204 |     };
205 | 
206 |     res.json(response);
207 |   } catch (error) {
208 |     handleError(error, res);
209 |   }
210 | });
211 | 
212 | // Delete user (admin only)
213 | router.delete('/:id', protect, restrictTo(UserRole.ADMIN), async (req, res: Response) => {
214 |   try {
215 |     await prisma.user.delete({
216 |       where: { id: req.params.id },
217 |     });
218 | 
219 |     const response: ApiSuccessResponse<null> = {
220 |       status: 'success',
221 |       data: null
222 |     };
223 | 
224 |     res.status(204).json(response);
225 |   } catch (error) {
226 |     handleError(error, res);
227 |   }
228 | });
229 | 
230 | export const userRoutes = router; 
231 | 


--------------------------------------------------------------------------------
/apps/api/src/server.ts:
--------------------------------------------------------------------------------
 1 | import express from 'express';
 2 | import cors from 'cors';
 3 | import { errorHandler } from './middleware/error';
 4 | import { authRoutes } from './routes/auth';
 5 | import { propertyRoutes } from './routes/properties';
 6 | import { contactRoutes } from './routes/contact';
 7 | import { adminRoutes } from './routes/admin';
 8 | import { locationRoutes } from './routes/locations';
 9 | import path from 'path';
10 | 
11 | const app = express();
12 | 
13 | // Middleware
14 | app.use(cors());
15 | app.use(express.json());
16 | 
17 | // Serve static files from uploads directory
18 | app.use('/uploads', express.static(path.join(process.cwd(), 'uploads')));
19 | 
20 | // Routes
21 | app.use('/api/auth', authRoutes);
22 | app.use('/api/properties', propertyRoutes);
23 | app.use('/api/contact', contactRoutes);
24 | app.use('/api/admin', adminRoutes);
25 | app.use('/api/locations', locationRoutes);
26 | 
27 | // Error handling
28 | app.use(errorHandler);
29 | 
30 | export default app; 
31 | 


--------------------------------------------------------------------------------
/apps/api/src/types/contact.ts:
--------------------------------------------------------------------------------
 1 | import { z } from 'zod';
 2 | import type { ContactMessage } from '@prisma/client';
 3 | 
 4 | export const ContactFormSchema = z.object({
 5 |   name: z.string().min(2, 'Name must be at least 2 characters long'),
 6 |   email: z.string().email('Invalid email address'),
 7 |   message: z.string().min(10, 'Message must be at least 10 characters long'),
 8 |   recaptchaToken: z.string(),
 9 | });
10 | 
11 | export type ContactFormData = z.infer<typeof ContactFormSchema>;
12 | 
13 | export interface ContactFormResponse {
14 |   success: boolean;
15 |   message: string;
16 |   data?: {
17 |     message: ContactMessage;
18 |   };
19 | }
20 | 
21 | export interface MessagesResponse {
22 |   success: boolean;
23 |   data: {
24 |     items: ContactMessage[];
25 |     total: number;
26 |     page: number;
27 |     pages: number;
28 |     hasNextPage: boolean;
29 |   };
30 | }
31 | 
32 | export interface MessageResponse {
33 |   success: boolean;
34 |   data: {
35 |     message: ContactMessage;
36 |   };
37 | } 
38 | 


--------------------------------------------------------------------------------
/apps/api/src/types/express.d.ts:
--------------------------------------------------------------------------------
 1 | import { Request } from 'express';
 2 | import { Role } from '@prisma/client';
 3 | 
 4 | declare global {
 5 |   namespace Express {
 6 |     interface Request {
 7 |       user?: {
 8 |         id: string;
 9 |         email: string;
10 |         role: Role;
11 |       };
12 |       files?: Express.Multer.File[];
13 |     }
14 |   }
15 | }
16 | 
17 | export {}; 
18 | 


--------------------------------------------------------------------------------
/apps/api/src/types/multer.d.ts:
--------------------------------------------------------------------------------
 1 | declare namespace Express {
 2 |   namespace Multer {
 3 |     interface File {
 4 |       fieldname: string;
 5 |       originalname: string;
 6 |       encoding: string;
 7 |       mimetype: string;
 8 |       size: number;
 9 |       destination: string;
10 |       filename: string;
11 |       path: string;
12 |       buffer: Buffer;
13 |     }
14 |   }
15 | } 
16 | 


--------------------------------------------------------------------------------
/apps/api/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "target": "ES2020",
 4 |     "module": "ESNext",
 5 |     "moduleResolution": "Bundler",
 6 |     "esModuleInterop": true,
 7 |     "strict": true,
 8 |     "skipLibCheck": true,
 9 |     "forceConsistentCasingInFileNames": true,
10 |     "outDir": "dist",
11 |     "rootDir": "src",
12 |     "baseUrl": ".",
13 |     "allowImportingTsExtensions": true,
14 |     "declaration": true,
15 |     "emitDeclarationOnly": true,
16 |     "paths": {
17 |       "@/*": ["src/*"]
18 |     }
19 |   },
20 |   "include": ["src/**/*"],
21 |   "exclude": ["node_modules", "dist"]
22 | }
23 | 


--------------------------------------------------------------------------------
/apps/api/tsup.config.ts:
--------------------------------------------------------------------------------
 1 | import { defineConfig } from 'tsup'
 2 | 
 3 | export default defineConfig({
 4 |   entry: ['src/index.ts'],
 5 |   format: ['esm'],
 6 |   dts: true,
 7 |   splitting: false,
 8 |   sourcemap: true,
 9 |   clean: true,
10 |   treeshake: true,
11 |   // Important for Prisma
12 |   external: ['@prisma/client'],
13 |   // Needed for __dirname, require, etc
14 |   banner: {
15 |     js: `import { createRequire } from 'module';
16 | const require = createRequire(import.meta.url);
17 | import { fileURLToPath } from 'url';
18 | import { dirname } from 'path';
19 | const __filename = fileURLToPath(import.meta.url);
20 | const __dirname = dirname(__filename);`,
21 |   },
22 |   esbuildOptions(options) {
23 |     options.platform = 'node'
24 |     options.target = 'node20'
25 |   }
26 | }) 
27 | 


--------------------------------------------------------------------------------
/apps/api/uploads/.gitkeep:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/api/uploads/.gitkeep


--------------------------------------------------------------------------------
/apps/web/.gitignore:
--------------------------------------------------------------------------------
 1 | # Logs
 2 | logs
 3 | *.log
 4 | npm-debug.log*
 5 | yarn-debug.log*
 6 | yarn-error.log*
 7 | pnpm-debug.log*
 8 | lerna-debug.log*
 9 | 
10 | node_modules
11 | dist
12 | dist-ssr
13 | *.local
14 | 
15 | # Editor directories and files
16 | .vscode/*
17 | !.vscode/extensions.json
18 | .idea
19 | .DS_Store
20 | *.suo
21 | *.ntvs*
22 | *.njsproj
23 | *.sln
24 | *.sw?
25 | 


--------------------------------------------------------------------------------
/apps/web/README.md:
--------------------------------------------------------------------------------
 1 | # React + TypeScript + Vite
 2 | 
 3 | This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
 4 | 
 5 | Currently, two official plugins are available:
 6 | 
 7 | - [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
 8 | - [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
 9 | 
10 | ## Expanding the ESLint configuration
11 | 
12 | If you are developing a production application, we recommend updating the configuration to enable type aware lint rules:
13 | 
14 | - Configure the top-level `parserOptions` property like this:
15 | 
16 | ```js
17 | export default tseslint.config({
18 |   languageOptions: {
19 |     // other options...
20 |     parserOptions: {
21 |       project: ['./tsconfig.node.json', './tsconfig.app.json'],
22 |       tsconfigRootDir: import.meta.dirname,
23 |     },
24 |   },
25 | })
26 | ```
27 | 
28 | - Replace `tseslint.configs.recommended` to `tseslint.configs.recommendedTypeChecked` or `tseslint.configs.strictTypeChecked`
29 | - Optionally add `...tseslint.configs.stylisticTypeChecked`
30 | - Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and update the config:
31 | 
32 | ```js
33 | // eslint.config.js
34 | import react from 'eslint-plugin-react'
35 | 
36 | export default tseslint.config({
37 |   // Set the react version
38 |   settings: { react: { version: '18.3' } },
39 |   plugins: {
40 |     // Add the react plugin
41 |     react,
42 |   },
43 |   rules: {
44 |     // other rules...
45 |     // Enable its recommended rules
46 |     ...react.configs.recommended.rules,
47 |     ...react.configs['jsx-runtime'].rules,
48 |   },
49 | })
50 | ```
51 | 


--------------------------------------------------------------------------------
/apps/web/eslint.config.js:
--------------------------------------------------------------------------------
 1 | import js from '@eslint/js'
 2 | import globals from 'globals'
 3 | import reactHooks from 'eslint-plugin-react-hooks'
 4 | import reactRefresh from 'eslint-plugin-react-refresh'
 5 | import tseslint from 'typescript-eslint'
 6 | 
 7 | export default tseslint.config(
 8 |   { ignores: ['dist'] },
 9 |   {
10 |     extends: [js.configs.recommended, ...tseslint.configs.recommended],
11 |     files: ['**/*.{ts,tsx}'],
12 |     languageOptions: {
13 |       ecmaVersion: 2020,
14 |       globals: globals.browser,
15 |     },
16 |     plugins: {
17 |       'react-hooks': reactHooks,
18 |       'react-refresh': reactRefresh,
19 |     },
20 |     rules: {
21 |       ...reactHooks.configs.recommended.rules,
22 |       'react-refresh/only-export-components': [
23 |         'warn',
24 |         { allowConstantExport: true },
25 |       ],
26 |     },
27 |   },
28 | )
29 | 


--------------------------------------------------------------------------------
/apps/web/index.html:
--------------------------------------------------------------------------------
 1 | <!doctype html>
 2 | <html lang="en">
 3 |   <head>
 4 |     <meta charset="UTF-8" />
 5 |     <link rel="icon" type="image/svg+xml" href="/vite.svg" />
 6 |     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 7 |     <title>Vite + React + TS</title>
 8 |   </head>
 9 |   <body>
10 |     <div id="root"></div>
11 |     <script type="module" src="/src/main.tsx"></script>
12 |   </body>
13 | </html>
14 | 


--------------------------------------------------------------------------------
/apps/web/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "web",
 3 |   "private": true,
 4 |   "version": "0.0.0",
 5 |   "type": "module",
 6 |   "scripts": {
 7 |     "dev": "vite",
 8 |     "build": "tsc && vite build",
 9 |     "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
10 |     "preview": "vite preview",
11 |     "test": "vitest",
12 |     "coverage": "vitest run --coverage"
13 |   },
14 |   "dependencies": {
15 |     "@headlessui/react": "^1.7.17",
16 |     "@heroicons/react": "^2.0.18",
17 |     "@react-google-maps/api": "^2.20.5",
18 |     "@tanstack/react-query": "^5.64.1",
19 |     "@tanstack/react-query-devtools": "^5.64.1",
20 |     "axios": "^1.6.2",
21 |     "clsx": "^2.0.0",
22 |     "react": "^18.2.0",
23 |     "react-dom": "^18.2.0",
24 |     "react-router-dom": "^6.20.1",
25 |     "react-transition-group": "^4.4.5",
26 |     "zod": "^3.22.4"
27 |   },
28 |   "devDependencies": {
29 |     "@testing-library/jest-dom": "^6.1.5",
30 |     "@testing-library/react": "^14.1.2",
31 |     "@testing-library/user-event": "^14.5.1",
32 |     "@types/react": "^18.2.37",
33 |     "@types/react-dom": "^18.2.15",
34 |     "@types/react-transition-group": "^4.4.12",
35 |     "@typescript-eslint/eslint-plugin": "^6.10.0",
36 |     "@typescript-eslint/parser": "^6.10.0",
37 |     "@vitejs/plugin-react": "^4.2.0",
38 |     "@vitejs/plugin-react-swc": "^3.7.2",
39 |     "@vitest/coverage-v8": "^1.0.4",
40 |     "autoprefixer": "^10.4.16",
41 |     "eslint": "^8.53.0",
42 |     "eslint-plugin-react-hooks": "^4.6.0",
43 |     "eslint-plugin-react-refresh": "^0.4.4",
44 |     "happy-dom": "^12.10.3",
45 |     "postcss": "^8.4.32",
46 |     "tailwindcss": "^3.3.6",
47 |     "typescript": "^5.2.2",
48 |     "vite": "^5.0.0",
49 |     "vitest": "^1.0.4"
50 |   }
51 | }
52 | 


--------------------------------------------------------------------------------
/apps/web/postcss.config.js:
--------------------------------------------------------------------------------
1 | export default {
2 |   plugins: {
3 |     tailwindcss: {},
4 |     autoprefixer: {}
5 |   }
6 | };
7 | 


--------------------------------------------------------------------------------
/apps/web/public/images/about-us.jpg:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/about-us.jpg


--------------------------------------------------------------------------------
/apps/web/public/images/contact.jpg:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/contact.jpg


--------------------------------------------------------------------------------
/apps/web/public/images/homepage-hero.webp:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/homepage-hero.webp


--------------------------------------------------------------------------------
/apps/web/public/images/logo.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/logo.png


--------------------------------------------------------------------------------
/apps/web/public/images/logo.svg:
--------------------------------------------------------------------------------
 1 | <svg width="125" height="49" viewBox="0 0 125 49" fill="none" xmlns="http://www.w3.org/2000/svg">
 2 |   <path fill-rule="evenodd" clip-rule="evenodd"
 3 |     d="M12.299 23.96C6.689 27.38 3.841 35.889 6.031 42.685C7.852 48.335 8.69 49.098 11.615 47.766C13.111 47.084 13.864 46.088 13.534 45.229C13.236 44.451 12.72 42.731 12.387 41.407C11.833 39.197 12.079 39 15.392 39C18.541 39 19 39.307 19 41.418C19 45.568 20.054 47 23.107 47H26V37.437V27.873L22.75 28.187C20.11 28.441 19.515 28.922 19.579 30.75C19.646 32.649 19.139 33 16.329 33C12.315 33 12.111 31.845 15.635 29.073C17.408 27.678 19.732 27 22.742 27C26.409 27 27.105 26.715 26.607 25.418C26.273 24.548 26 23.423 26 22.918C26 21.139 15.632 21.927 12.299 23.96ZM30 37.573V47.145L35.75 46.896C43.345 46.566 44.868 46.116 46.087 43.838C46.823 42.462 46.723 41.15 45.729 39.158C44.712 37.12 44.62 35.777 45.381 34.072C47.022 30.395 43.278 28 35.889 28H30V37.573ZM53.763 29.565C48.483 32.43 46.44 39.852 49.791 43.99C51.23 45.768 52.9 46.29 58.291 46.647L65 47.093V37.546V28L60.75 28.04C58.413 28.062 55.268 28.748 53.763 29.565ZM73.286 29.728C69.31 31.708 67 36.365 67 42.401C67 46.844 67.102 47 70 47C72.895 47 73 46.841 73 42.434C73 39.923 73.466 36.998 74.035 35.934C75.491 33.214 78.189 33.431 77.961 36.25C77.861 37.487 77.828 40.413 77.889 42.75C77.989 46.587 78.243 47 80.5 47C82.991 47 83 46.967 83 37.5V28L79.75 28.064C77.963 28.099 75.054 28.848 73.286 29.728ZM89.827 29.701C85.575 34.571 84.575 42.4 87.829 45.345C90.443 47.711 99.148 47.599 101.345 45.171C103.769 42.493 103.461 35.983 100.718 31.898C97.965 27.799 92.458 26.689 89.827 29.701ZM106 37.566V47.133L108.75 46.816C111.102 46.546 111.572 45.952 112 42.717C112.275 40.636 112.838 38.949 113.25 38.967C113.662 38.985 114.45 39 115 39C115.55 39 116 40.83 116 43.066C116 46.913 116.149 47.116 118.75 46.816L121.5 46.5L121.788 37.25L122.075 28H119.038C116.329 28 116 28.325 116 31C116 33.333 115.556 34 114 34C112.444 34 112 33.333 112 31C112 28.333 111.667 28 109 28H106V37.566ZM36 37.5C36 41.333 36.296 42 38 42C40.467 42 40.596 40.161 38.25 38.428C36.848 37.392 36.748 36.883 37.75 35.867C39.429 34.166 39.327 33 37.5 33C36.389 33 36 34.167 36 37.5ZM55.44 35.451C53.357 38.63 53.935 41.416 56.76 41.82C58.8 42.111 59 41.731 59 37.57C59 32.472 57.843 31.783 55.44 35.451ZM92.607 34.582C92.273 35.452 92 37.477 92 39.082C92 41.528 92.404 42 94.5 42C96.662 42 97 41.553 97 38.7C97 34.039 93.922 31.154 92.607 34.582Z"
 4 |     fill="black" />
 5 |   <path
 6 |     d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
 7 |     fill="black" />
 8 |   <path
 9 |     d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
10 |     fill="#D9261E" />
11 | </svg>
12 | 


--------------------------------------------------------------------------------
/apps/web/public/images/property-placeholder.webp:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/lyubo-velikoff/property-ai/9ea1a4f3b53be7c75924f679196207eb068b02d9/apps/web/public/images/property-placeholder.webp


--------------------------------------------------------------------------------
/apps/web/public/vite.svg:
--------------------------------------------------------------------------------
1 | <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>


--------------------------------------------------------------------------------
/apps/web/src/App.css:
--------------------------------------------------------------------------------
 1 | #root {
 2 |   max-width: 1280px;
 3 |   margin: 0 auto;
 4 |   padding: 2rem;
 5 |   text-align: center;
 6 | }
 7 | 
 8 | .logo {
 9 |   height: 6em;
10 |   padding: 1.5em;
11 |   will-change: filter;
12 |   transition: filter 300ms;
13 | }
14 | .logo:hover {
15 |   filter: drop-shadow(0 0 2em #646cffaa);
16 | }
17 | .logo.react:hover {
18 |   filter: drop-shadow(0 0 2em #61dafbaa);
19 | }
20 | 
21 | @keyframes logo-spin {
22 |   from {
23 |     transform: rotate(0deg);
24 |   }
25 |   to {
26 |     transform: rotate(360deg);
27 |   }
28 | }
29 | 
30 | @media (prefers-reduced-motion: no-preference) {
31 |   a:nth-of-type(2) .logo {
32 |     animation: logo-spin infinite 20s linear;
33 |   }
34 | }
35 | 
36 | .card {
37 |   padding: 2em;
38 | }
39 | 
40 | .read-the-docs {
41 |   color: #888;
42 | }
43 | 


--------------------------------------------------------------------------------
/apps/web/src/App.tsx:
--------------------------------------------------------------------------------
 1 | import { BrowserRouter } from 'react-router-dom';
 2 | import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
 3 | import { ReactQueryDevtools } from '@tanstack/react-query-devtools';
 4 | import AppRoutes from './AppRoutes';
 5 | import { ThemeProvider } from './contexts/ThemeContext';
 6 | import { AuthProvider } from './contexts/auth';
 7 | 
 8 | const queryClient = new QueryClient({
 9 |   defaultOptions: {
10 |     queries: {
11 |       retry: 1,
12 |       refetchOnWindowFocus: false,
13 |     },
14 |   },
15 | });
16 | 
17 | export default function App() {
18 |   return (
19 |     <QueryClientProvider client={queryClient}>
20 |       <BrowserRouter>
21 |         <ThemeProvider>
22 |           <AuthProvider>
23 |             <AppRoutes />
24 |           </AuthProvider>
25 |         </ThemeProvider>
26 |       </BrowserRouter>
27 |       <ReactQueryDevtools />
28 |     </QueryClientProvider>
29 |   );
30 | }
31 | 


--------------------------------------------------------------------------------
/apps/web/src/AppRoutes.tsx:
--------------------------------------------------------------------------------
 1 | import { Routes, Route } from 'react-router-dom';
 2 | import Home from './pages/Home';
 3 | import About from './pages/About';
 4 | import Contact from './pages/Contact';
 5 | import PropertyDetails from './pages/PropertyDetails';
 6 | import Properties from './pages/Properties';
 7 | import AdminDashboard from './pages/admin/Dashboard';
 8 | import AdminProperties from './pages/admin/Properties';
 9 | import EditProperty from './pages/admin/EditProperty';
10 | import NewProperty from './pages/admin/NewProperty';
11 | import Messages from './pages/admin/Messages';
12 | import Users from './pages/admin/Users';
13 | import NewUser from './pages/admin/NewUser';
14 | import ProtectedRoute from './components/auth/ProtectedRoute';
15 | import AdminLayout from './components/admin/AdminLayout';
16 | import Layout from './components/layout/Layout';
17 | import Login from './pages/admin/Login';
18 | 
19 | export default function AppRoutes() {
20 |   return (
21 |     <Routes>
22 |       <Route element={<Layout />}>
23 |         <Route path="/" element={<Home />} />
24 |         <Route path="/about" element={<About />} />
25 |         <Route path="/contact" element={<Contact />} />
26 |         <Route path="/properties" element={<Properties />} />
27 |         <Route path="/properties/:id" element={<PropertyDetails />} />
28 |       </Route>
29 | 
30 |       {/* Admin Routes */}
31 |       <Route path="/admin/login" element={<Login />} />
32 |       
33 |       <Route
34 |         path="/admin"
35 |         element={
36 |           <ProtectedRoute>
37 |             <AdminLayout />
38 |           </ProtectedRoute>
39 |         }
40 |       >
41 |         <Route index element={<AdminDashboard />} />
42 |         <Route path="properties" element={<AdminProperties />} />
43 |         <Route path="properties/new" element={<NewProperty />} />
44 |         <Route path="properties/:id/edit" element={<EditProperty />} />
45 |         <Route path="messages" element={<Messages />} />
46 |         <Route path="users" element={<Users />} />
47 |         <Route path="users/new" element={<NewUser />} />
48 |       </Route>
49 |     </Routes>
50 |   );
51 | } 
52 | 


--------------------------------------------------------------------------------
/apps/web/src/assets/react.svg:
--------------------------------------------------------------------------------
1 | <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>


--------------------------------------------------------------------------------
/apps/web/src/components/LoadingSpinner.tsx:
--------------------------------------------------------------------------------
1 | export default function LoadingSpinner() {
2 |   return (
3 |     <div className="w-12 h-12 rounded-full border-4 border-gray-200 border-t-primary-600 animate-spin" />
4 |   );
5 | } 
6 | 


--------------------------------------------------------------------------------
/apps/web/src/components/Logo.tsx:
--------------------------------------------------------------------------------
 1 | import { useTheme } from '../hooks/useTheme';
 2 | 
 3 | export default function Logo({ className = '' }: { className?: string }) {
 4 |   const { isDark } = useTheme();
 5 | 
 6 |   return (
 7 |     <svg 
 8 |       className={className}
 9 |       width="125" 
10 |       height="49" 
11 |       viewBox="0 0 125 49" 
12 |       fill="none" 
13 |       xmlns="http://www.w3.org/2000/svg"
14 |     >
15 |       <path 
16 |         fillRule="evenodd" 
17 |         clipRule="evenodd"
18 |         className={`${isDark ? 'fill-gray-200' : 'fill-gray-900'}`}
19 |         d="M12.299 23.96C6.689 27.38 3.841 35.889 6.031 42.685C7.852 48.335 8.69 49.098 11.615 47.766C13.111 47.084 13.864 46.088 13.534 45.229C13.236 44.451 12.72 42.731 12.387 41.407C11.833 39.197 12.079 39 15.392 39C18.541 39 19 39.307 19 41.418C19 45.568 20.054 47 23.107 47H26V37.437V27.873L22.75 28.187C20.11 28.441 19.515 28.922 19.579 30.75C19.646 32.649 19.139 33 16.329 33C12.315 33 12.111 31.845 15.635 29.073C17.408 27.678 19.732 27 22.742 27C26.409 27 27.105 26.715 26.607 25.418C26.273 24.548 26 23.423 26 22.918C26 21.139 15.632 21.927 12.299 23.96ZM30 37.573V47.145L35.75 46.896C43.345 46.566 44.868 46.116 46.087 43.838C46.823 42.462 46.723 41.15 45.729 39.158C44.712 37.12 44.62 35.777 45.381 34.072C47.022 30.395 43.278 28 35.889 28H30V37.573ZM53.763 29.565C48.483 32.43 46.44 39.852 49.791 43.99C51.23 45.768 52.9 46.29 58.291 46.647L65 47.093V37.546V28L60.75 28.04C58.413 28.062 55.268 28.748 53.763 29.565ZM73.286 29.728C69.31 31.708 67 36.365 67 42.401C67 46.844 67.102 47 70 47C72.895 47 73 46.841 73 42.434C73 39.923 73.466 36.998 74.035 35.934C75.491 33.214 78.189 33.431 77.961 36.25C77.861 37.487 77.828 40.413 77.889 42.75C77.989 46.587 78.243 47 80.5 47C82.991 47 83 46.967 83 37.5V28L79.75 28.064C77.963 28.099 75.054 28.848 73.286 29.728ZM89.827 29.701C85.575 34.571 84.575 42.4 87.829 45.345C90.443 47.711 99.148 47.599 101.345 45.171C103.769 42.493 103.461 35.983 100.718 31.898C97.965 27.799 92.458 26.689 89.827 29.701ZM106 37.566V47.133L108.75 46.816C111.102 46.546 111.572 45.952 112 42.717C112.275 40.636 112.838 38.949 113.25 38.967C113.662 38.985 114.45 39 115 39C115.55 39 116 40.83 116 43.066C116 46.913 116.149 47.116 118.75 46.816L121.5 46.5L121.788 37.25L122.075 28H119.038C116.329 28 116 28.325 116 31C116 33.333 115.556 34 114 34C112.444 34 112 33.333 112 31C112 28.333 111.667 28 109 28H106V37.566ZM36 37.5C36 41.333 36.296 42 38 42C40.467 42 40.596 40.161 38.25 38.428C36.848 37.392 36.748 36.883 37.75 35.867C39.429 34.166 39.327 33 37.5 33C36.389 33 36 34.167 36 37.5ZM55.44 35.451C53.357 38.63 53.935 41.416 56.76 41.82C58.8 42.111 59 41.731 59 37.57C59 32.472 57.843 31.783 55.44 35.451ZM92.607 34.582C92.273 35.452 92 37.477 92 39.082C92 41.528 92.404 42 94.5 42C96.662 42 97 41.553 97 38.7C97 34.039 93.922 31.154 92.607 34.582Z"
20 |       />
21 |       <path
22 |         className="fill-primary-600"
23 |         d="M76.5 16.023L76.79 8.012C76.95 3.605 77.492 0 77.993 0C80.654 0 84 2.517 84 4.518C84 6.455 84.681 6.788 89.75 7.327C94.309 7.813 98.545 9.544 110.207 15.688C118.295 19.949 124.525 23.675 124.052 23.968C123.578 24.261 113.337 24.436 101.295 24.358L79.399 24.215L61.949 14.953C52.352 9.858 43.825 5.728 43 5.775C42.175 5.822 33.175 9.89 23 14.815C4.782 23.633 0 25.665 0 24.59C0 24.29 4.163 22.061 9.25 19.636C14.338 17.212 24.341 12.42 31.48 8.989L44.46 2.751L52.31 3.405C68.712 4.773 68.857 4.819 69.197 8.767C69.443 11.612 70.163 12.632 73 14.15L76.5 16.023Z"
24 |       />
25 |     </svg>
26 |   );
27 | } 
28 | 


--------------------------------------------------------------------------------
/apps/web/src/components/ThemeToggle.tsx:
--------------------------------------------------------------------------------
 1 | import { Fragment } from 'react';
 2 | import { Menu, Transition } from '@headlessui/react';
 3 | import { SunIcon, MoonIcon, ComputerDesktopIcon } from '@heroicons/react/24/outline';
 4 | import { useTheme } from '../contexts/ThemeContext';
 5 | 
 6 | function classNames(...classes: string[]) {
 7 |   return classes.filter(Boolean).join(' ');
 8 | }
 9 | 
10 | export default function ThemeToggle() {
11 |   const { theme, setTheme } = useTheme();
12 | 
13 |   const getIcon = () => {
14 |     switch (theme) {
15 |       case 'light':
16 |         return <SunIcon className="h-5 w-5" aria-hidden="true" />;
17 |       case 'dark':
18 |         return <MoonIcon className="h-5 w-5" aria-hidden="true" />;
19 |       case 'gray':
20 |         return <ComputerDesktopIcon className="h-5 w-5" aria-hidden="true" />;
21 |       default:
22 |         return <SunIcon className="h-5 w-5" aria-hidden="true" />;
23 |     }
24 |   };
25 | 
26 |   const themes = [
27 |     { name: 'Light', value: 'light', icon: SunIcon },
28 |     { name: 'Dark', value: 'dark', icon: MoonIcon },
29 |     { name: 'Gray', value: 'gray', icon: ComputerDesktopIcon },
30 |   ];
31 | 
32 |   return (
33 |     <Menu as="div" className="relative">
34 |       <Menu.Button
35 |         className="rounded-md p-2 text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500"
36 |         aria-label="Select theme"
37 |       >
38 |         {getIcon()}
39 |       </Menu.Button>
40 |       <Transition
41 |         as={Fragment}
42 |         enter="transition ease-out duration-100"
43 |         enterFrom="transform opacity-0 scale-95"
44 |         enterTo="transform opacity-100 scale-100"
45 |         leave="transition ease-in duration-75"
46 |         leaveFrom="transform opacity-100 scale-100"
47 |         leaveTo="transform opacity-0 scale-95"
48 |       >
49 |         <Menu.Items className="absolute right-0 z-10 mt-2 w-36 origin-top-right rounded-md bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
50 |           <div className="py-1">
51 |             {themes.map((themeOption) => (
52 |               <Menu.Item key={themeOption.value}>
53 |                 {({ active }) => (
54 |                   <button
55 |                     onClick={() => setTheme(themeOption.value as 'light' | 'dark' | 'gray')}
56 |                     className={classNames(
57 |                       active ? 'bg-gray-100 dark:bg-[rgb(var(--color-dark-border))]' : '',
58 |                       theme === themeOption.value ? 'text-primary-600 dark:text-primary-500' : 'text-gray-700 dark:text-[rgb(var(--color-dark-text))]',
59 |                       'group flex w-full items-center px-4 py-2 text-sm'
60 |                     )}
61 |                   >
62 |                     <themeOption.icon
63 |                       className={classNames(
64 |                         'mr-3 h-5 w-5',
65 |                         theme === themeOption.value ? 'text-primary-600 dark:text-primary-500' : 'text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))]'
66 |                       )}
67 |                       aria-hidden="true"
68 |                     />
69 |                     {themeOption.name}
70 |                   </button>
71 |                 )}
72 |               </Menu.Item>
73 |             ))}
74 |           </div>
75 |         </Menu.Items>
76 |       </Transition>
77 |     </Menu>
78 |   );
79 | } 
80 | 


--------------------------------------------------------------------------------
/apps/web/src/components/admin/AdminLayout.tsx:
--------------------------------------------------------------------------------
  1 | import { Fragment, useState } from 'react';
  2 | import { Dialog, Menu, Transition } from '@headlessui/react';
  3 | import {
  4 |   Bars3Icon,
  5 |   HomeIcon,
  6 |   UsersIcon,
  7 |   BuildingOfficeIcon,
  8 |   XMarkIcon,
  9 |   EnvelopeIcon,
 10 | } from '@heroicons/react/24/outline';
 11 | import { Link, Outlet, useLocation } from 'react-router-dom';
 12 | import ThemeToggle from '../ThemeToggle';
 13 | import { useAuth } from '../../contexts/auth';
 14 | import { useTheme } from '../../hooks/useTheme';
 15 | import Logo from '../Logo';
 16 | 
 17 | const navigation = [
 18 |   { name: 'Dashboard', href: '/admin', icon: HomeIcon },
 19 |   { name: 'Properties', href: '/admin/properties', icon: BuildingOfficeIcon },
 20 |   { name: 'Users', href: '/admin/users', icon: UsersIcon },
 21 |   { name: 'Messages', href: '/admin/messages', icon: EnvelopeIcon },
 22 | ];
 23 | 
 24 | function classNames(...classes: string[]) {
 25 |   return classes.filter(Boolean).join(' ');
 26 | }
 27 | 
 28 | export default function AdminLayout() {
 29 |   const [sidebarOpen, setSidebarOpen] = useState(false);
 30 |   const location = useLocation();
 31 |   const { user, logout } = useAuth();
 32 |   const { isDark } = useTheme();
 33 | 
 34 |   return (
 35 |     <div className="min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 36 |       <Transition.Root show={sidebarOpen} as={Fragment}>
 37 |         <Dialog as="div" className="relative z-50 lg:hidden" onClose={setSidebarOpen}>
 38 |           <Transition.Child
 39 |             as={Fragment}
 40 |             enter="transition-opacity ease-linear duration-300"
 41 |             enterFrom="opacity-0"
 42 |             enterTo="opacity-100"
 43 |             leave="transition-opacity ease-linear duration-300"
 44 |             leaveFrom="opacity-100"
 45 |             leaveTo="opacity-0"
 46 |           >
 47 |             <div className="fixed inset-0 bg-[rgb(var(--color-dark-bg))]/80" />
 48 |           </Transition.Child>
 49 | 
 50 |           <div className="fixed inset-0 flex">
 51 |             <Transition.Child
 52 |               as={Fragment}
 53 |               enter="transition ease-in-out duration-300 transform"
 54 |               enterFrom="-translate-x-full"
 55 |               enterTo="translate-x-0"
 56 |               leave="transition ease-in-out duration-300 transform"
 57 |               leaveFrom="translate-x-0"
 58 |               leaveTo="-translate-x-full"
 59 |             >
 60 |               <Dialog.Panel className="relative flex flex-1 w-full max-w-xs mr-16">
 61 |                 <Transition.Child
 62 |                   as={Fragment}
 63 |                   enter="ease-in-out duration-300"
 64 |                   enterFrom="opacity-0"
 65 |                   enterTo="opacity-100"
 66 |                   leave="ease-in-out duration-300"
 67 |                   leaveFrom="opacity-100"
 68 |                   leaveTo="opacity-0"
 69 |                 >
 70 |                   <div className="absolute top-0 flex justify-center w-16 pt-5 left-full">
 71 |                     <button type="button" className="-m-2.5 p-2.5" onClick={() => setSidebarOpen(false)}>
 72 |                       <span className="sr-only">Close sidebar</span>
 73 |                       <XMarkIcon className="w-6 h-6 text-white" aria-hidden="true" />
 74 |                     </button>
 75 |                   </div>
 76 |                 </Transition.Child>
 77 |                 <div className="flex grow flex-col gap-y-5 overflow-y-auto bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 pb-4">
 78 |                   <div className="flex items-center h-16 shrink-0">
 79 |                     <Link to="/admin">
 80 |                       <Logo className="w-auto h-8" />
 81 |                     </Link>
 82 |                   </div>
 83 |                   <nav className="flex flex-col flex-1">
 84 |                     <ul role="list" className="flex flex-col flex-1 gap-y-7">
 85 |                       <li>
 86 |                         <ul role="list" className="-mx-2 space-y-1">
 87 |                           {navigation.map((item) => (
 88 |                             <li key={item.name}>
 89 |                               <Link
 90 |                                 to={item.href}
 91 |                                 className={classNames(
 92 |                                   item.href === location.pathname
 93 |                                     ? 'bg-gray-100 text-primary-600'
 94 |                                     : 'text-gray-600 hover:text-primary-600 hover:bg-gray-50 dark:text-[rgb(var(--color-dark-text))] dark:hover:bg-[rgb(var(--color-dark-border))]',
 95 |                                   'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'
 96 |                                 )}
 97 |                               >
 98 |                                 <item.icon
 99 |                                   className={classNames(
100 |                                     item.href === location.pathname
101 |                                       ? 'text-primary-600'
102 |                                       : 'text-gray-400 group-hover:text-primary-600 dark:text-[rgb(var(--color-dark-text-secondary))] dark:group-hover:text-primary-500',
103 |                                     'h-6 w-6 shrink-0'
104 |                                   )}
105 |                                   aria-hidden="true"
106 |                                 />
107 |                                 {item.name}
108 |                               </Link>
109 |                             </li>
110 |                           ))}
111 |                         </ul>
112 |                       </li>
113 |                     </ul>
114 |                   </nav>
115 |                 </div>
116 |               </Dialog.Panel>
117 |             </Transition.Child>
118 |           </div>
119 |         </Dialog>
120 |       </Transition.Root>
121 | 
122 |       {/* Static sidebar for desktop */}
123 |       <div className="hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col">
124 |         <div className="flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 pb-4">
125 |           <div className="flex items-center h-16 shrink-0">
126 |             <Link to="/admin">
127 |               <Logo className="w-auto h-8" />
128 |             </Link>
129 |           </div>
130 |           <nav className="flex flex-col flex-1">
131 |             <ul role="list" className="flex flex-col flex-1 gap-y-7">
132 |               <li>
133 |                 <ul role="list" className="-mx-2 space-y-1">
134 |                   {navigation.map((item) => (
135 |                     <li key={item.name}>
136 |                       <Link
137 |                         to={item.href}
138 |                         className={classNames(
139 |                           item.href === location.pathname
140 |                             ? 'bg-gray-100 text-primary-600'
141 |                             : 'text-gray-600 hover:text-primary-600 hover:bg-gray-50 dark:text-[rgb(var(--color-dark-text))] dark:hover:bg-[rgb(var(--color-dark-border))]',
142 |                           'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'
143 |                         )}
144 |                       >
145 |                         <item.icon
146 |                           className={classNames(
147 |                             item.href === location.pathname
148 |                               ? 'text-primary-600'
149 |                               : 'text-gray-400 group-hover:text-primary-600 dark:text-[rgb(var(--color-dark-text-secondary))] dark:group-hover:text-primary-500',
150 |                             'h-6 w-6 shrink-0'
151 |                           )}
152 |                           aria-hidden="true"
153 |                         />
154 |                         {item.name}
155 |                       </Link>
156 |                     </li>
157 |                   ))}
158 |                 </ul>
159 |               </li>
160 |             </ul>
161 |           </nav>
162 |         </div>
163 |       </div>
164 | 
165 |       <div className="lg:pl-72">
166 |         <div className="sticky top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8">
167 |           <button type="button" className="-m-2.5 p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))] lg:hidden" onClick={() => setSidebarOpen(true)}>
168 |             <span className="sr-only">Open sidebar</span>
169 |             <Bars3Icon className="w-6 h-6" aria-hidden="true" />
170 |           </button>
171 | 
172 |           <div className="flex self-stretch flex-1 gap-x-4 lg:gap-x-6">
173 |             <div className="flex flex-1" />
174 |             <div className="flex items-center gap-x-4 lg:gap-x-6">
175 |               <ThemeToggle />
176 |               <div className="hidden lg:block lg:h-6 lg:w-px lg:bg-gray-200 dark:lg:bg-[rgb(var(--color-dark-border))]" />
177 |               <Menu as="div" className="relative">
178 |                 <Menu.Button className="-m-1.5 flex items-center p-1.5">
179 |                   <span className="sr-only">Open user menu</span>
180 |                   <span className="hidden lg:flex lg:items-center">
181 |                     <span className="flex items-center justify-center w-8 h-8 text-sm font-medium text-white rounded-full bg-primary-600">
182 |                       {user?.name?.split(' ').map(n => n[0]).join('')}
183 |                     </span>
184 |                     <span className="ml-2 text-sm font-semibold leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]" aria-hidden="true">
185 |                       {user?.name}
186 |                     </span>
187 |                   </span>
188 |                 </Menu.Button>
189 |                 <Transition
190 |                   as={Fragment}
191 |                   enter="transition ease-out duration-100"
192 |                   enterFrom="transform opacity-0 scale-95"
193 |                   enterTo="transform opacity-100 scale-100"
194 |                   leave="transition ease-in duration-75"
195 |                   leaveFrom="transform opacity-100 scale-100"
196 |                   leaveTo="transform opacity-0 scale-95"
197 |                 >
198 |                   <Menu.Items className="absolute right-0 z-10 mt-2.5 w-32 origin-top-right rounded-md bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] py-2 shadow-lg ring-1 ring-gray-900/5 dark:ring-[rgb(var(--color-dark-border))] focus:outline-none">
199 |                     <Menu.Item>
200 |                       {({ active }) => (
201 |                         <button
202 |                           onClick={logout}
203 |                           className={classNames(
204 |                             active ? 'bg-gray-50 dark:bg-[rgb(var(--color-dark-border))]' : '',
205 |                             'block w-full px-3 py-1 text-left text-sm leading-6 text-gray-600 dark:text-[rgb(var(--color-dark-text))]'
206 |                           )}
207 |                         >
208 |                           Изход
209 |                         </button>
210 |                       )}
211 |                     </Menu.Item>
212 |                   </Menu.Items>
213 |                 </Transition>
214 |               </Menu>
215 |             </div>
216 |           </div>
217 |         </div>
218 | 
219 |         <main className="py-10">
220 |           <div className="px-4 sm:px-6 lg:px-8">
221 |             <Outlet />
222 |           </div>
223 |         </main>
224 |       </div>
225 |       <Link
226 |         to="/"
227 |         className="fixed z-50 flex items-center p-3 text-white transition-all duration-300 ease-in-out rounded-l-full shadow-lg bottom-24 -right-1 group bg-primary-600 hover:pr-6 hover:right-0 hover:bg-primary-700 hover:shadow-xl hover:translate-x-1"
228 |         title="Към сайта"
229 |       >
230 |         <HomeIcon className="w-6 h-6 transition-transform duration-300 ease-in-out transform group-hover:-rotate-90" aria-hidden="true" />
231 |         <span className="text-sm font-medium max-w-0 group-hover:max-w-[200px] opacity-0 group-hover:opacity-100 transition-all duration-300 ease-in-out whitespace-nowrap overflow-hidden">
232 |           Към сайта
233 |         </span>
234 |       </Link>
235 |     </div>
236 |   );
237 | } 
238 | 


--------------------------------------------------------------------------------
/apps/web/src/components/admin/PropertyForm.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import type { CreatePropertyData, Property } from '../../types/api';
  3 | import { XMarkIcon } from '@heroicons/react/24/outline';
  4 | import { useQuery } from '@tanstack/react-query';
  5 | import { getRegions, getNeighborhoods, getFeatures } from '../../services/locationService';
  6 | import { constructionTypes, furnishingTypes, propertyTypes, locationTypes, categories, currencies } from '../../constants/property';
  7 | 
  8 | interface PropertyFormProps {
  9 |   initialData?: Property;
 10 |   onSubmit: (data: CreatePropertyData, images: File[]) => Promise<void>;
 11 |   isSubmitting?: boolean;
 12 |   onCancel?: () => void;
 13 |   submitLabel?: string;
 14 | }
 15 | 
 16 | export default function PropertyForm({
 17 |   initialData,
 18 |   onSubmit,
 19 |   isSubmitting = false,
 20 |   onCancel,
 21 |   submitLabel = 'Запази'
 22 | }: PropertyFormProps) {
 23 |   // Prepare initial data by converting Property type to CreatePropertyData type
 24 |   const prepareInitialData = (data?: Property): Partial<CreatePropertyData> => {
 25 |     if (!data) return {};
 26 |     const { id, createdAt, updatedAt, features, ...rest } = data;
 27 |     return {
 28 |       ...rest,
 29 |       features: features?.map(f => f.featureId),
 30 |     };
 31 |   };
 32 | 
 33 |   const [data, setData] = useState<CreatePropertyData>({
 34 |     title: '',
 35 |     description: '',
 36 |     price: 0,
 37 |     currency: 'BGN',
 38 |     area_sqm: 0,
 39 |     land_area_sqm: undefined,
 40 |     floor: undefined,
 41 |     total_floors: undefined,
 42 |     construction_type: undefined,
 43 |     furnishing: undefined,
 44 |     location_type: 'CITY',
 45 |     regionId: undefined,
 46 |     neighborhoodId: undefined,
 47 |     has_regulation: false,
 48 |     category: 'SALE',
 49 |     type: 'APARTMENT',
 50 |     featured: false,
 51 |     contact_info: {
 52 |       phone: '',
 53 |       email: '',
 54 |     },
 55 |     ...prepareInitialData(initialData),
 56 |   });
 57 | 
 58 |   const [images, setImages] = useState<File[]>([]);
 59 |   const [errors, setErrors] = useState<Record<string, string>>({});
 60 |   const [selectedFeatures, setSelectedFeatures] = useState<number[]>(
 61 |     initialData?.features?.map(f => f.featureId) || []
 62 |   );
 63 | 
 64 |   const { 
 65 |     data: regions = [], 
 66 |     isLoading: regionsLoading, 
 67 |     error: regionsError 
 68 |   } = useQuery({
 69 |     queryKey: ['regions'],
 70 |     queryFn: getRegions,
 71 |     retry: 3,
 72 |     staleTime: 300000, // 5 minutes
 73 |   });
 74 | 
 75 |   const { 
 76 |     data: neighborhoods = [], 
 77 |     isLoading: neighborhoodsLoading, 
 78 |     error: neighborhoodsError 
 79 |   } = useQuery({
 80 |     queryKey: ['neighborhoods'],
 81 |     queryFn: getNeighborhoods,
 82 |     retry: 3,
 83 |     staleTime: 300000, // 5 minutes
 84 |   });
 85 | 
 86 |   const { 
 87 |     data: features = [], 
 88 |     isLoading: featuresLoading, 
 89 |     error: featuresError 
 90 |   } = useQuery({
 91 |     queryKey: ['features'],
 92 |     queryFn: getFeatures,
 93 |     retry: 3,
 94 |     staleTime: 300000, // 5 minutes
 95 |   });
 96 | 
 97 |   useEffect(() => {
 98 |     if (regionsError) console.error('Regions error:', regionsError);
 99 |     if (neighborhoodsError) console.error('Neighborhoods error:', neighborhoodsError);
100 |     if (featuresError) console.error('Features error:', featuresError);
101 |   }, [regionsError, neighborhoodsError, featuresError]);
102 | 
103 |   const handleSubmit = async (e: React.FormEvent) => {
104 |     e.preventDefault();
105 |     setErrors({});
106 | 
107 |     try {
108 |       await onSubmit({ ...data, features: selectedFeatures }, images);
109 |     } catch (error: any) {
110 |       if (error.response?.data?.errors) {
111 |         setErrors(error.response.data.errors);
112 |       } else {
113 |         setErrors({ general: error.response?.data?.message || 'Възникна грешка при запазването на имота' });
114 |       }
115 |     }
116 |   };
117 | 
118 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
119 |     const { name, value } = e.target;
120 |     if (name.startsWith('contact_info.')) {
121 |       const field = name.split('.')[1];
122 |       setData(prev => ({
123 |         ...prev,
124 |         contact_info: {
125 |           ...prev.contact_info,
126 |           [field]: value,
127 |         },
128 |       }));
129 |     } else if (name === 'has_regulation' || name === 'featured') {
130 |       setData(prev => ({ ...prev, [name]: (e.target as HTMLInputElement).checked }));
131 |     } else {
132 |       setData(prev => ({
133 |         ...prev,
134 |         [name]: value,
135 |       }));
136 |     }
137 |   };
138 | 
139 |   const handleFeatureChange = (featureId: number) => {
140 |     setSelectedFeatures(prev => {
141 |       if (prev.includes(featureId)) {
142 |         return prev.filter(id => id !== featureId);
143 |       }
144 |       return [...prev, featureId];
145 |     });
146 |   };
147 | 
148 |   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
149 |     if (e.target.files) {
150 |       setImages(Array.from(e.target.files));
151 |     }
152 |   };
153 | 
154 |   return (
155 |     <form onSubmit={handleSubmit} className="space-y-6">
156 |       {errors.general && (
157 |         <div className="p-4 text-sm text-red-700 bg-red-100 rounded-lg dark:text-red-200 dark:bg-red-900/50">
158 |           {errors.general}
159 |         </div>
160 |       )}
161 | 
162 |       <div className="space-y-4">
163 |         {/* Basic Info Section */}
164 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
165 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Основна информация</h3>
166 |           <div className="grid grid-cols-1 gap-6">
167 |             <div>
168 |               <label htmlFor="title" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
169 |                 Заглавие
170 |               </label>
171 |               <input
172 |                 type="text"
173 |                 id="title"
174 |                 name="title"
175 |                 value={data.title}
176 |                 onChange={handleChange}
177 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
178 |                   errors.title 
179 |                     ? 'border-red-500 dark:border-red-500' 
180 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
181 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
182 |               />
183 |               {errors.title && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.title}</p>}
184 |             </div>
185 | 
186 |             <div>
187 |               <label htmlFor="description" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
188 |                 Описание
189 |               </label>
190 |               <textarea
191 |                 id="description"
192 |                 name="description"
193 |                 value={data.description}
194 |                 onChange={handleChange}
195 |                 rows={4}
196 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
197 |                   errors.description 
198 |                     ? 'border-red-500 dark:border-red-500' 
199 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
200 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
201 |               />
202 |               {errors.description && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.description}</p>}
203 |             </div>
204 |           </div>
205 |         </div>
206 | 
207 |         {/* Price & Area Section */}
208 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
209 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Цена и площ</h3>
210 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-3">
211 |             <div>
212 |               <label htmlFor="price" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
213 |                 Цена
214 |               </label>
215 |               <div className="flex mt-1 rounded-md shadow-sm">
216 |                 <input
217 |                   type="number"
218 |                   id="price"
219 |                   name="price"
220 |                   value={data.price}
221 |                   onChange={handleChange}
222 |                   className={`block w-full rounded-l-md shadow-sm sm:text-sm ${
223 |                     errors.price 
224 |                       ? 'border-red-500 dark:border-red-500' 
225 |                       : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
226 |                   } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
227 |                 />
228 |                 <select
229 |                   name="currency"
230 |                   value={data.currency}
231 |                   onChange={handleChange}
232 |                   className="border-l-0 border-gray-300 rounded-r-md dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:ring-primary-500 focus:border-primary-500"
233 |                 >
234 |                   {currencies.map(currency => (
235 |                     <option key={currency.value} value={currency.value}>{currency.label}</option>
236 |                   ))}
237 |                 </select>
238 |               </div>
239 |               {errors.price && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.price}</p>}
240 |             </div>
241 | 
242 |             <div>
243 |               <label htmlFor="area_sqm" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
244 |                 Площ (кв.м)
245 |               </label>
246 |               <input
247 |                 type="number"
248 |                 id="area_sqm"
249 |                 name="area_sqm"
250 |                 value={data.area_sqm}
251 |                 onChange={handleChange}
252 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
253 |                   errors.area_sqm 
254 |                     ? 'border-red-500 dark:border-red-500' 
255 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
256 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
257 |               />
258 |               {errors.area_sqm && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.area_sqm}</p>}
259 |             </div>
260 | 
261 |             <div>
262 |               <label htmlFor="land_area_sqm" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
263 |                 Площ на парцела (кв.м)
264 |               </label>
265 |               <input
266 |                 type="number"
267 |                 id="land_area_sqm"
268 |                 name="land_area_sqm"
269 |                 value={data.land_area_sqm || ''}
270 |                 onChange={handleChange}
271 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
272 |               />
273 |             </div>
274 |           </div>
275 |         </div>
276 | 
277 |         {/* Location Section */}
278 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
279 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Локация</h3>
280 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-3">
281 |             <div>
282 |               <label htmlFor="location_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
283 |                 Тип локация
284 |               </label>
285 |               <select
286 |                 id="location_type"
287 |                 name="location_type"
288 |                 value={data.location_type}
289 |                 onChange={handleChange}
290 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
291 |                   errors.location_type 
292 |                     ? 'border-red-500 dark:border-red-500' 
293 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
294 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
295 |               >
296 |                 {locationTypes.map(type => (
297 |                   <option key={type.value} value={type.value}>{type.label}</option>
298 |                 ))}
299 |               </select>
300 |               {errors.location_type && <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.location_type}</p>}
301 |             </div>
302 | 
303 |             <div>
304 |               <label htmlFor="regionId" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
305 |                 Регион
306 |               </label>
307 |               <select
308 |                 id="regionId"
309 |                 name="regionId"
310 |                 value={data.regionId || ''}
311 |                 onChange={handleChange}
312 |                 disabled={regionsLoading}
313 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
314 |               >
315 |                 <option value="">Изберете</option>
316 |                 {regionsLoading ? (
317 |                   <option disabled>Зареждане...</option>
318 |                 ) : regions?.map(region => (
319 |                   <option key={region.id} value={region.id}>{region.name}</option>
320 |                 ))}
321 |               </select>
322 |             </div>
323 | 
324 |             <div>
325 |               <label htmlFor="neighborhoodId" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
326 |                 Квартал
327 |               </label>
328 |               <select
329 |                 id="neighborhoodId"
330 |                 name="neighborhoodId"
331 |                 value={data.neighborhoodId || ''}
332 |                 onChange={handleChange}
333 |                 disabled={neighborhoodsLoading}
334 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
335 |               >
336 |                 <option value="">Изберете</option>
337 |                 {neighborhoodsLoading ? (
338 |                   <option disabled>Зареждане...</option>
339 |                 ) : neighborhoods?.map(neighborhood => (
340 |                   <option key={neighborhood.id} value={neighborhood.id}>{neighborhood.name}</option>
341 |                 ))}
342 |               </select>
343 |             </div>
344 |           </div>
345 |         </div>
346 | 
347 |         {/* Property Details Section */}
348 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
349 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Детайли за имота</h3>
350 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4">
351 |             <div>
352 |               <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
353 |                 Тип имот
354 |               </label>
355 |               <select
356 |                 id="type"
357 |                 name="type"
358 |                 value={data.type}
359 |                 onChange={handleChange}
360 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
361 |               >
362 |                 {propertyTypes.map(type => (
363 |                   <option key={type.value} value={type.value}>{type.label}</option>
364 |                 ))}
365 |               </select>
366 |             </div>
367 | 
368 |             <div>
369 |               <label htmlFor="category" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
370 |                 Категория
371 |               </label>
372 |               <select
373 |                 id="category"
374 |                 name="category"
375 |                 value={data.category}
376 |                 onChange={handleChange}
377 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
378 |               >
379 |                 {categories.map(category => (
380 |                   <option key={category.value} value={category.value}>{category.label}</option>
381 |                 ))}
382 |               </select>
383 |             </div>
384 | 
385 |             <div>
386 |               <label htmlFor="construction_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
387 |                 Вид строителство
388 |               </label>
389 |               <select
390 |                 id="construction_type"
391 |                 name="construction_type"
392 |                 value={data.construction_type || ''}
393 |                 onChange={handleChange}
394 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
395 |               >
396 |                 <option value="">Изберете</option>
397 |                 {constructionTypes.map(type => (
398 |                   <option key={type.value} value={type.value}>{type.label}</option>
399 |                 ))}
400 |               </select>
401 |             </div>
402 | 
403 |             <div>
404 |               <label htmlFor="furnishing" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
405 |                 Обзавеждане
406 |               </label>
407 |               <select
408 |                 id="furnishing"
409 |                 name="furnishing"
410 |                 value={data.furnishing || ''}
411 |                 onChange={handleChange}
412 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
413 |               >
414 |                 <option value="">Изберете</option>
415 |                 {furnishingTypes.map(type => (
416 |                   <option key={type.value} value={type.value}>{type.label}</option>
417 |                 ))}
418 |               </select>
419 |             </div>
420 |           </div>
421 |         </div>
422 | 
423 |         {/* Floor Info & Additional Info */}
424 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
425 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Етажност и допълнителна информация</h3>
426 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-4">
427 |             <div>
428 |               <label htmlFor="floor" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
429 |                 Етаж
430 |               </label>
431 |               <input
432 |                 type="number"
433 |                 id="floor"
434 |                 name="floor"
435 |                 value={data.floor || ''}
436 |                 onChange={handleChange}
437 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
438 |               />
439 |             </div>
440 | 
441 |             <div>
442 |               <label htmlFor="total_floors" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
443 |                 Общо етажи
444 |               </label>
445 |               <input
446 |                 type="number"
447 |                 id="total_floors"
448 |                 name="total_floors"
449 |                 value={data.total_floors || ''}
450 |                 onChange={handleChange}
451 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
452 |               />
453 |             </div>
454 | 
455 |             <div>
456 |               <label htmlFor="has_regulation" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
457 |                 Има регулация
458 |               </label>
459 |               <select
460 |                 id="has_regulation"
461 |                 name="has_regulation"
462 |                 value={data.has_regulation ? 'yes' : 'no'}
463 |                 onChange={(e) => {
464 |                   setData(prev => ({
465 |                     ...prev,
466 |                     has_regulation: e.target.value === 'yes'
467 |                   }));
468 |                 }}
469 |                 className="block w-full mt-1 border-gray-300 rounded-md shadow-sm dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
470 |               >
471 |                 <option value="yes">Да</option>
472 |                 <option value="no">Не</option>
473 |               </select>
474 |             </div>
475 | 
476 |             <div className="flex items-center pt-6">
477 |               <label className="flex items-center">
478 |                 <input
479 |                   type="checkbox"
480 |                   name="featured"
481 |                   checked={data.featured || false}
482 |                   onChange={handleChange}
483 |                   className="w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:border-[rgb(var(--color-dark-border))]"
484 |                 />
485 |                 <span className="ml-2 text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">Препоръчан</span>
486 |               </label>
487 |             </div>
488 |           </div>
489 |         </div>
490 | 
491 |         {/* Contact Info */}
492 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
493 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Контактна информация</h3>
494 |           <div className="grid grid-cols-1 gap-6 sm:grid-cols-2">
495 |             <div>
496 |               <label htmlFor="contact_info.phone" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
497 |                 Телефон за контакт
498 |               </label>
499 |               <input
500 |                 type="tel"
501 |                 id="contact_info.phone"
502 |                 name="contact_info.phone"
503 |                 value={data.contact_info.phone}
504 |                 onChange={handleChange}
505 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
506 |                   errors['contact_info.phone'] 
507 |                     ? 'border-red-500 dark:border-red-500' 
508 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
509 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
510 |               />
511 |               {errors['contact_info.phone'] && (
512 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors['contact_info.phone']}</p>
513 |               )}
514 |             </div>
515 | 
516 |             <div>
517 |               <label htmlFor="contact_info.email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
518 |                 Имейл за контакт
519 |               </label>
520 |               <input
521 |                 type="email"
522 |                 id="contact_info.email"
523 |                 name="contact_info.email"
524 |                 value={data.contact_info.email}
525 |                 onChange={handleChange}
526 |                 className={`mt-1 block w-full rounded-md shadow-sm sm:text-sm ${
527 |                   errors['contact_info.email'] 
528 |                     ? 'border-red-500 dark:border-red-500' 
529 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))]'
530 |                 } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] focus:border-primary-500 focus:ring-primary-500`}
531 |               />
532 |               {errors['contact_info.email'] && (
533 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors['contact_info.email']}</p>
534 |               )}
535 |             </div>
536 |           </div>
537 |         </div>
538 | 
539 |         {/* Features Section */}
540 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
541 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Характеристики</h3>
542 |           {featuresLoading ? (
543 |             <p className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Зареждане на характеристики...</p>
544 |           ) : (
545 |             <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5">
546 |               {features?.map(feature => (
547 |                 <div key={feature.id} className="flex items-center p-2 rounded-md hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))]">
548 |                   <input
549 |                     type="checkbox"
550 |                     id={`feature-${feature.id}`}
551 |                     checked={selectedFeatures.includes(feature.id)}
552 |                     onChange={(e) => {
553 |                       if (e.target.checked) {
554 |                         setSelectedFeatures(prev => [...prev, feature.id]);
555 |                       } else {
556 |                         setSelectedFeatures(prev => prev.filter(id => id !== feature.id));
557 |                       }
558 |                     }}
559 |                     className="w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:border-[rgb(var(--color-dark-border))]"
560 |                   />
561 |                   <label
562 |                     htmlFor={`feature-${feature.id}`}
563 |                     className="block ml-2 text-sm text-gray-700 cursor-pointer dark:text-[rgb(var(--color-dark-text-secondary))]"
564 |                   >
565 |                     {feature.name}
566 |                   </label>
567 |                 </div>
568 |               ))}
569 |             </div>
570 |           )}
571 |           {featuresError && (
572 |             <p className="mt-1 text-sm text-red-600 dark:text-red-400">Грешка при зареждане на характеристиките</p>
573 |           )}
574 |         </div>
575 | 
576 |         {/* Images Section */}
577 |         <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
578 |           <h3 className="mb-4 text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Изображения</h3>
579 |           {initialData?.images && initialData.images.length > 0 && (
580 |             <div>
581 |               <label className="block mb-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
582 |                 Текущи изображения
583 |               </label>
584 |               <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4">
585 |                 {initialData.images.map((image) => (
586 |                   <div key={image.id} className="relative group">
587 |                     <img
588 |                       src={image.url}
589 |                       alt={initialData.title}
590 |                       className="object-cover w-full h-32 rounded-lg"
591 |                       onError={(e) => {
592 |                         const target = e.target as HTMLImageElement;
593 |                         target.onerror = null;
594 |                         target.src = '/images/property-placeholder.webp';
595 |                       }}
596 |                     />
597 |                   </div>
598 |                 ))}
599 |               </div>
600 |             </div>
601 |           )}
602 | 
603 |           {/* Image Upload */}
604 |           <div className="mt-6">
605 |             <label className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
606 |               {initialData?.images?.length ? 'Добави нови изображения' : 'Изображения'}
607 |             </label>
608 |             <div className="flex justify-center px-6 pt-5 pb-6 mt-1 border-2 border-gray-300 border-dashed rounded-md dark:border-gray-600">
609 |               <div className="space-y-1 text-center">
610 |                 <svg
611 |                   className="w-12 h-12 mx-auto text-gray-400"
612 |                   stroke="currentColor"
613 |                   fill="none"
614 |                   viewBox="0 0 48 48"
615 |                   aria-hidden="true"
616 |                 >
617 |                   <path
618 |                     d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
619 |                     strokeWidth={2}
620 |                     strokeLinecap="round"
621 |                     strokeLinejoin="round"
622 |                   />
623 |                 </svg>
624 |                 <div className="flex text-sm text-gray-600 dark:text-gray-400">
625 |                   <label
626 |                     htmlFor="images"
627 |                     className="relative font-medium rounded-md cursor-pointer text-primary-600 hover:text-primary-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500"
628 |                   >
629 |                     <span>Качи файлове</span>
630 |                     <input
631 |                       id="images"
632 |                       name="images"
633 |                       type="file"
634 |                       multiple
635 |                       accept="image/*"
636 |                       onChange={handleImageChange}
637 |                       className="sr-only"
638 |                     />
639 |                   </label>
640 |                   <p className="pl-1">или ги провлачете тук</p>
641 |                 </div>
642 |                 <p className="text-xs text-gray-500 dark:text-gray-400">
643 |                   PNG, JPG, WEBP до 10MB
644 |                 </p>
645 |               </div>
646 |             </div>
647 |             {images.length > 0 && (
648 |               <div className="mt-4">
649 |                 <h4 className="text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">Избрани файлове:</h4>
650 |                 <ul className="mt-2 divide-y divide-gray-200 dark:divide-gray-700">
651 |                   {Array.from(images).map((file, index) => (
652 |                     <li key={index} className="flex items-center justify-between py-2">
653 |                       <span className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">{file.name}</span>
654 |                       <button
655 |                         type="button"
656 |                         onClick={() => setImages(images.filter((_, i) => i !== index))}
657 |                         className="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300"
658 |                       >
659 |                         <XMarkIcon className="w-5 h-5" />
660 |                       </button>
661 |                     </li>
662 |                   ))}
663 |                 </ul>
664 |               </div>
665 |             )}
666 |           </div>
667 |         </div>
668 | 
669 |         <div className="flex justify-end gap-3 sm:col-span-2">
670 |           {onCancel && (
671 |             <button
672 |               type="button"
673 |               onClick={onCancel}
674 |               className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] bg-white dark:bg-[rgb(var(--color-dark-bg))] border border-gray-300 dark:border-[rgb(var(--color-dark-border))] rounded-md shadow-sm hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
675 |             >
676 |               Отказ
677 |             </button>
678 |           )}
679 |           <button
680 |             type="submit"
681 |             disabled={isSubmitting || regionsLoading || neighborhoodsLoading || featuresLoading}
682 |             className="px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
683 |           >
684 |             {isSubmitting ? 'Запазване...' : submitLabel}
685 |           </button>
686 |         </div>
687 |       </div>
688 |     </form>
689 |   );
690 | } 
691 | 


--------------------------------------------------------------------------------
/apps/web/src/components/auth/ProtectedRoute.tsx:
--------------------------------------------------------------------------------
 1 | import { Navigate, useLocation } from 'react-router-dom';
 2 | import { useQuery } from '@tanstack/react-query';
 3 | import api from '../../lib/api';
 4 | import { useAuth } from '../../contexts/auth';
 5 | import LoadingSpinner from '../LoadingSpinner';
 6 | 
 7 | interface Props {
 8 |   children: React.ReactNode;
 9 |   requireAdmin?: boolean;
10 | }
11 | 
12 | export default function ProtectedRoute({ children, requireAdmin = true }: Props) {
13 |   const location = useLocation();
14 |   const { user, isLoading: authLoading, setUser } = useAuth();
15 | 
16 |   const { isLoading: queryLoading, isError } = useQuery({
17 |     queryKey: ['auth', 'me'],
18 |     queryFn: async () => {
19 |       const token = localStorage.getItem('token');
20 |       if (!token) {
21 |         console.log('No token found in localStorage');
22 |         throw new Error('No token');
23 |       }
24 |       
25 |       try {
26 |         console.log('Fetching user data...');
27 |         const response = await api.get('/auth/me');
28 |         const userData = response.data.data.user;
29 |         console.log('User data received:', userData);
30 |         setUser(userData);
31 |         return userData;
32 |       } catch (err) {
33 |         console.error('Error in /auth/me request:', err);
34 |         // Clear auth state on error
35 |         localStorage.removeItem('token');
36 |         setUser(null);
37 |         throw err;
38 |       }
39 |     },
40 |     retry: false,
41 |     // Only run the query if we don't have a user already
42 |     enabled: !user && !!localStorage.getItem('token'),
43 |     staleTime: 1000 * 60 * 5, // Cache for 5 minutes
44 |   });
45 | 
46 |   // Show loading state while checking auth
47 |   if (authLoading || queryLoading) {
48 |     return <LoadingSpinner />;
49 |   }
50 | 
51 |   // If no token exists, redirect to login
52 |   if (!localStorage.getItem('token')) {
53 |     return <Navigate to="/admin/login" state={{ from: location }} replace />;
54 |   }
55 | 
56 |   // If we have an error or no user after loading, redirect to login
57 |   if (isError || !user) {
58 |     return <Navigate to="/admin/login" state={{ from: location }} replace />;
59 |   }
60 | 
61 |   // Check admin access if required
62 |   if (requireAdmin && user.role !== 'ADMIN') {
63 |     return <Navigate to="/" replace />;
64 |   }
65 | 
66 |   return <>{children}</>;
67 | } 
68 | 


--------------------------------------------------------------------------------
/apps/web/src/components/layout/Layout.tsx:
--------------------------------------------------------------------------------
  1 | import { Link, Outlet, useLocation } from 'react-router-dom';
  2 | import { Dialog } from '@headlessui/react';
  3 | import { Bars3Icon, XMarkIcon, Cog6ToothIcon } from '@heroicons/react/24/outline';
  4 | import { useState, useEffect } from 'react';
  5 | import ThemeToggle from '../ThemeToggle';
  6 | import { useAuth } from '../../contexts/auth';
  7 | import { useTheme } from '../../hooks/useTheme';
  8 | import Logo from '../Logo';
  9 | 
 10 | const navigation = [
 11 |   { name: 'Начало', href: '/' },
 12 |   { name: 'Имоти', href: '/properties' },
 13 |   { name: 'За нас', href: '/about' },
 14 |   { name: 'Контакти', href: '/contact' },
 15 | ];
 16 | 
 17 | export default function Layout() {
 18 |   const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
 19 |   const [isScrolled, setIsScrolled] = useState(false);
 20 |   const location = useLocation();
 21 |   const { isAdmin } = useAuth();
 22 |   const { isDark } = useTheme();
 23 | 
 24 |   useEffect(() => {
 25 |     setMobileMenuOpen(false);
 26 |   }, [location]);
 27 | 
 28 |   useEffect(() => {
 29 |     const handleScroll = () => {
 30 |       setIsScrolled(window.scrollY > 10);
 31 |     };
 32 | 
 33 |     window.addEventListener('scroll', handleScroll);
 34 |     return () => window.removeEventListener('scroll', handleScroll);
 35 |   }, []);
 36 | 
 37 |   return (
 38 |     <div className="flex flex-col min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
 39 |       <header className={`sticky top-0 z-50 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))] shadow-sm transition-all duration-300 ${isScrolled ? 'h-16' : 'h-20'}`}>
 40 |         <nav className="container flex justify-between items-center h-full transition-all duration-300">
 41 |           <div className="flex gap-8 items-center">
 42 |             <Link to="/" className="flex items-center">
 43 |               <Logo className={`w-auto transition-all duration-300 ${isScrolled ? 'h-12' : 'h-16'}`} />
 44 |             </Link>
 45 |             <div className="hidden md:flex md:gap-6">
 46 |               {navigation.map((item) => (
 47 |                 <Link
 48 |                   key={item.name}
 49 |                   to={item.href}
 50 |                   className="text-sm font-semibold leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))] hover:text-primary-600 dark:hover:text-primary-500"
 51 |                 >
 52 |                   {item.name}
 53 |                 </Link>
 54 |               ))}
 55 |             </div>
 56 |           </div>
 57 |           <div className="flex items-center gap-4">
 58 |             <ThemeToggle />
 59 |             <div className="flex md:hidden">
 60 |               <button
 61 |                 type="button"
 62 |                 className="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
 63 |                 onClick={() => setMobileMenuOpen(true)}
 64 |               >
 65 |                 <span className="sr-only">Open main menu</span>
 66 |                 <Bars3Icon className="h-6 w-6" aria-hidden="true" />
 67 |               </button>
 68 |             </div>
 69 |           </div>
 70 |         </nav>
 71 |       </header>
 72 | 
 73 |       <Dialog as="div" className="md:hidden" open={mobileMenuOpen} onClose={setMobileMenuOpen}>
 74 |         <div className="fixed inset-0 z-50" />
 75 |         <Dialog.Panel className="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10">
 76 |           <div className="flex items-center justify-between">
 77 |             <Link to="/" className="flex items-center" onClick={() => setMobileMenuOpen(false)}>
 78 |               <Logo className="w-auto h-12" />
 79 |             </Link>
 80 |             <button
 81 |               type="button"
 82 |               className="-m-2.5 rounded-md p-2.5 text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
 83 |               onClick={() => setMobileMenuOpen(false)}
 84 |             >
 85 |               <span className="sr-only">Close menu</span>
 86 |               <XMarkIcon className="h-6 w-6" aria-hidden="true" />
 87 |             </button>
 88 |           </div>
 89 |           <div className="mt-6 flow-root">
 90 |             <div className="-my-6 divide-y divide-gray-500/10">
 91 |               <div className="space-y-2 py-6">
 92 |                 {navigation.map((item) => (
 93 |                   <Link
 94 |                     key={item.name}
 95 |                     to={item.href}
 96 |                     className="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))]"
 97 |                     onClick={() => setMobileMenuOpen(false)}
 98 |                   >
 99 |                     {item.name}
100 |                   </Link>
101 |                 ))}
102 |               </div>
103 |               <div className="py-6">
104 |                 <ThemeToggle />
105 |               </div>
106 |             </div>
107 |           </div>
108 |         </Dialog.Panel>
109 |       </Dialog>
110 | 
111 |       <main className="flex-1">
112 |         <div className="container py-8">
113 |           <Outlet />
114 |         </div>
115 |       </main>
116 | 
117 |       <footer className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))]">
118 |         <div className="container py-8">
119 |           <div className="grid grid-cols-1 gap-8 md:grid-cols-3">
120 |             <div>
121 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Контакти</h3>
122 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
123 |                 <li>Телефон: +359 82 82 82 82</li>
124 |                 <li>Имейл: office@propertyai.bg</li>
125 |                 <li>Адрес: Русе, България</li>
126 |               </ul>
127 |             </div>
128 |             <div>
129 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
130 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
131 |                 <li>Понеделник - Петък: 9:00 - 18:00</li>
132 |                 <li>Събота: 10:00 - 14:00</li>
133 |                 <li>Неделя: Затворено</li>
134 |               </ul>
135 |             </div>
136 |             <div>
137 |               <h3 className="text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Последвайте ни</h3>
138 |               <ul className="mt-4 space-y-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
139 |                 <li>
140 |                   <a href="#" className="hover:text-gray-900 dark:hover:text-[rgb(var(--color-dark-text))]">
141 |                     Facebook
142 |                   </a>
143 |                 </li>
144 |                 <li>
145 |                   <a href="#" className="hover:text-gray-900 dark:hover:text-[rgb(var(--color-dark-text))]">
146 |                     Instagram
147 |                   </a>
148 |                 </li>
149 |               </ul>
150 |             </div>
151 |           </div>
152 |           <div className="pt-8 mt-8 text-sm text-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))]">
153 |             © {new Date().getFullYear()} Property AI. All rights reserved.
154 |           </div>
155 |         </div>
156 |       </footer>
157 |       {isAdmin && (
158 |         <Link
159 |           to="/admin"
160 |           className="fixed bottom-24 -right-1 group flex items-center p-3 bg-primary-600 text-white shadow-lg transition-all duration-300 ease-in-out z-50 rounded-l-full hover:pr-6 hover:right-0 hover:bg-primary-700 hover:shadow-xl hover:translate-x-1"
161 |           title="Admin Panel"
162 |         >
163 |           <Cog6ToothIcon className="h-6 w-6 transform transition-transform duration-300 ease-in-out group-hover:rotate-90" aria-hidden="true" />
164 |           <span className="text-sm font-medium max-w-0 group-hover:max-w-[200px] opacity-0 group-hover:opacity-100 transition-all duration-300 ease-in-out whitespace-nowrap overflow-hidden">
165 |             Admin Panel
166 |           </span>
167 |         </Link>
168 |       )}
169 |     </div>
170 |   );
171 | } 
172 | 


--------------------------------------------------------------------------------
/apps/web/src/components/maps/GoogleMap.tsx:
--------------------------------------------------------------------------------
 1 | import { useCallback, useMemo } from 'react';
 2 | import { GoogleMap as GoogleMapComponent, useLoadScript, Marker } from '@react-google-maps/api';
 3 | 
 4 | interface GoogleMapProps {
 5 |   center: {
 6 |     lat: number;
 7 |     lng: number;
 8 |   };
 9 |   zoom?: number;
10 | }
11 | 
12 | const containerStyle = {
13 |   width: '100%',
14 |   height: '100%',
15 |   borderRadius: '0.5rem'
16 | };
17 | 
18 | export default function GoogleMap({ center, zoom = 15 }: GoogleMapProps) {
19 |   const { isLoaded, loadError } = useLoadScript({
20 |     googleMapsApiKey: import.meta.env.VITE_GOOGLE_MAPS_API_KEY || '',
21 |   });
22 | 
23 |   const options = useMemo(() => ({
24 |     disableDefaultUI: false,
25 |     clickableIcons: true,
26 |     scrollwheel: true,
27 |   }), []);
28 | 
29 |   const onLoad = useCallback((map: google.maps.Map) => {
30 |     const bounds = new window.google.maps.LatLngBounds(center);
31 |     map.fitBounds(bounds);
32 |   }, [center]);
33 | 
34 |   if (loadError) {
35 |     return (
36 |       <div className="flex items-center justify-center w-full h-full text-red-600 dark:text-red-500">
37 |         Error loading maps
38 |       </div>
39 |     );
40 |   }
41 | 
42 |   if (!isLoaded) {
43 |     return (
44 |       <div className="flex items-center justify-center w-full h-full text-gray-600 dark:text-gray-400">
45 |         Loading maps...
46 |       </div>
47 |     );
48 |   }
49 | 
50 |   return (
51 |     <GoogleMapComponent
52 |       mapContainerStyle={containerStyle}
53 |       center={center}
54 |       zoom={zoom}
55 |       options={options}
56 |       onLoad={onLoad}
57 |     >
58 |       <Marker position={center} />
59 |     </GoogleMapComponent>
60 |   );
61 | } 
62 | 


--------------------------------------------------------------------------------
/apps/web/src/components/properties/PropertyCard.tsx:
--------------------------------------------------------------------------------
 1 | import { Link } from 'react-router-dom';
 2 | import { propertyTypeLabels, locationTypeLabels, categoryLabels } from '../../constants/property';
 3 | 
 4 | export interface PropertyCardProps {
 5 |   id: string;
 6 |   title: string;
 7 |   description: string;
 8 |   price: number;
 9 |   currency: string;
10 |   area_sqm: number;
11 |   type: string;
12 |   category: string;
13 |   location_type: 'CITY' | 'REGION';
14 |   images?: Array<{ url: string }>;
15 |   features?: Array<{ featureId: number; name: string }>;
16 |   floor?: number;
17 |   total_floors?: number;
18 |   construction_type?: string;
19 |   furnishing?: string;
20 |   has_regulation?: boolean;
21 |   land_area_sqm?: number;
22 | }
23 | 
24 | export default function PropertyCard({
25 |   id,
26 |   title,
27 |   description,
28 |   price,
29 |   currency,
30 |   area_sqm,
31 |   type,
32 |   category,
33 |   location_type,
34 |   images,
35 | }: PropertyCardProps) {
36 |   const formattedPrice = new Intl.NumberFormat('bg-BG', {
37 |     style: 'currency',
38 |     currency: currency || 'BGN',
39 |     maximumFractionDigits: 0,
40 |   }).format(price);
41 | 
42 |   return (
43 |     <Link
44 |       to={`/properties/${id}`}
45 |       className="flex flex-col overflow-hidden transition-all bg-white rounded-lg shadow-lg hover:shadow-xl dark:shadow-[rgb(var(--color-dark-bg))] dark:bg-[rgb(var(--color-dark-bg-secondary))] group"
46 |     >
47 |       <div className="relative flex-shrink-0 h-48 overflow-hidden">
48 |         <img
49 |           src={images?.[0]?.url || '/images/property-placeholder.webp'}
50 |           alt={title}
51 |           className="object-cover w-full h-full transition-transform duration-300 ease-in-out group-hover:scale-110"
52 |           onError={(e) => {
53 |             const target = e.target as HTMLImageElement;
54 |             target.onerror = null;
55 |             target.src = '/images/property-placeholder.webp';
56 |           }}
57 |         />
58 |       </div>
59 |       <div className="z-10 mr-3 -mt-3 text-right">
60 |         <span className="inline-flex px-3 py-1 text-sm font-medium text-white bg-red-600 rounded-md shadow-sm">
61 |           {categoryLabels[category] || category}
62 |         </span>
63 |       </div>
64 |       <div className="flex flex-col flex-1 p-4">
65 |         <div className="flex-1">
66 |           <h3 className="text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
67 |             {title}
68 |           </h3>
69 |         </div>
70 |         <div className="mt-4">
71 |           <div className="flex items-center justify-between">
72 |             <span className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
73 |               {formattedPrice}
74 |             </span>
75 |             <span className="text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
76 |               {area_sqm} м²
77 |             </span>
78 |           </div>
79 |           <div className="flex items-center justify-between mt-2 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
80 |             <span>{propertyTypeLabels[type] || type}</span>
81 |             <span>{locationTypeLabels[location_type] || location_type}</span>
82 |           </div>
83 |         </div>
84 |       </div>
85 |     </Link>
86 |   );
87 | } 
88 | 


--------------------------------------------------------------------------------
/apps/web/src/components/properties/PropertyCardSkeleton.tsx:
--------------------------------------------------------------------------------
 1 | import React from 'react';
 2 | 
 3 | export default function PropertyCardSkeleton() {
 4 |   return (
 5 |     <div className="flex flex-col overflow-hidden bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-lg">
 6 |       <div className="relative flex-shrink-0 h-48">
 7 |         <div className="absolute inset-0 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] animate-pulse" />
 8 |       </div>
 9 |       <div className="flex flex-col flex-1 p-4">
10 |         <div className="flex-1">
11 |           <div className="h-6 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-3/4 animate-pulse" />
12 |         </div>
13 |         <div className="mt-4">
14 |           <div className="flex items-center justify-between">
15 |             <div className="h-5 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/3 animate-pulse" />
16 |             <div className="h-5 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
17 |           </div>
18 |           <div className="flex items-center justify-between mt-2">
19 |             <div className="h-4 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
20 |             <div className="h-4 bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded w-1/4 animate-pulse" />
21 |           </div>
22 |         </div>
23 |       </div>
24 |     </div>
25 |   );
26 | } 
27 | 


--------------------------------------------------------------------------------
/apps/web/src/constants/property.ts:
--------------------------------------------------------------------------------
 1 | export const constructionTypes = [
 2 |   { value: 'BRICK', label: 'Тухла' },
 3 |   { value: 'EPK', label: 'ЕПК' },
 4 |   { value: 'PK', label: 'ПК' },
 5 |   { value: 'PANEL', label: 'Панел' },
 6 |   { value: 'WOOD_FLOOR', label: 'Дървен гредоред' },
 7 | ] as const;
 8 | 
 9 | export const furnishingTypes = [
10 |   { value: 'FURNISHED', label: 'Обзаведен' },
11 |   { value: 'PARTIALLY_FURNISHED', label: 'Частично обзаведен' },
12 |   { value: 'UNFURNISHED', label: 'Необзаведен' },
13 | ] as const;
14 | 
15 | export const propertyTypes = [
16 |   { value: 'APARTMENT', label: 'Апартамент' },
17 |   { value: 'HOUSE', label: 'Къща' },
18 |   { value: 'PLOT', label: 'Парцел' },
19 |   { value: 'COMMERCIAL', label: 'Търговски имот' },
20 |   { value: 'INDUSTRIAL', label: 'Индустриален имот' },
21 | ] as const;
22 | 
23 | export const locationTypes = [
24 |   { value: 'CITY', label: 'Град' },
25 |   { value: 'REGION', label: 'Регион' },
26 | ] as const;
27 | 
28 | export const categories = [
29 |   { value: 'SALE', label: 'Продажба' },
30 |   { value: 'RENT', label: 'Наем' },
31 | ] as const;
32 | 
33 | export const currencies = [
34 |   { value: 'BGN', label: 'лв.' },
35 |   { value: 'EUR', label: '€' },
36 | ] as const;
37 | 
38 | // Label mappings for direct access
39 | export const propertyTypeLabels: Record<string, string> = Object.fromEntries(
40 |   propertyTypes.map(type => [type.value, type.label])
41 | );
42 | 
43 | export const locationTypeLabels: Record<string, string> = Object.fromEntries(
44 |   locationTypes.map(type => [type.value, type.label])
45 | );
46 | 
47 | export const categoryLabels: Record<string, string> = Object.fromEntries(
48 |   categories.map(category => [category.value, category.label])
49 | );
50 | 
51 | export const constructionTypeLabels: Record<string, string> = Object.fromEntries(
52 |   constructionTypes.map(type => [type.value, type.label])
53 | );
54 | 
55 | export const furnishingTypeLabels: Record<string, string> = Object.fromEntries(
56 |   furnishingTypes.map(type => [type.value, type.label])
57 | );
58 | 
59 | export const currencyLabels: Record<string, string> = Object.fromEntries(
60 |   currencies.map(currency => [currency.value, currency.label])
61 | ); 
62 | 


--------------------------------------------------------------------------------
/apps/web/src/contexts/ThemeContext.tsx:
--------------------------------------------------------------------------------
 1 | import { createContext, useContext, useEffect, useState } from 'react';
 2 | 
 3 | type Theme = 'light' | 'dark' | 'gray';
 4 | 
 5 | interface ThemeContextType {
 6 |   theme: Theme;
 7 |   setTheme: (theme: Theme) => void;
 8 |   toggleTheme: () => void;
 9 | }
10 | 
11 | const ThemeContext = createContext<ThemeContextType | undefined>(undefined);
12 | 
13 | export function ThemeProvider({ children }: { children: React.ReactNode }) {
14 |   const [theme, setTheme] = useState<Theme>(() => {
15 |     const savedTheme = localStorage.getItem('theme');
16 |     if (savedTheme === 'light' || savedTheme === 'dark' || savedTheme === 'gray') {
17 |       return savedTheme as Theme;
18 |     }
19 |     if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
20 |       return 'dark';
21 |     }
22 |     return 'light';
23 |   });
24 | 
25 |   useEffect(() => {
26 |     localStorage.setItem('theme', theme);
27 |     const root = document.documentElement;
28 |     root.classList.remove('light', 'dark', 'gray');
29 |     
30 |     if (theme === 'gray') {
31 |       root.classList.add('dark', 'gray');
32 |     } else {
33 |       root.classList.add(theme);
34 |     }
35 |   }, [theme]);
36 | 
37 |   useEffect(() => {
38 |     const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
39 |     const handleChange = (e: MediaQueryListEvent) => {
40 |       setTheme(e.matches ? 'dark' : 'light');
41 |     };
42 |     mediaQuery.addEventListener('change', handleChange);
43 |     return () => mediaQuery.removeEventListener('change', handleChange);
44 |   }, []);
45 | 
46 |   const toggleTheme = () => {
47 |     setTheme((prevTheme) => {
48 |       switch (prevTheme) {
49 |         case 'light':
50 |           return 'dark';
51 |         case 'dark':
52 |           return 'gray';
53 |         case 'gray':
54 |           return 'light';
55 |         default:
56 |           return 'light';
57 |       }
58 |     });
59 |   };
60 | 
61 |   return (
62 |     <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>
63 |       {children}
64 |     </ThemeContext.Provider>
65 |   );
66 | }
67 | 
68 | export function useTheme() {
69 |   const context = useContext(ThemeContext);
70 |   if (context === undefined) {
71 |     throw new Error('useTheme must be used within a ThemeProvider');
72 |   }
73 |   return {
74 |     ...context,
75 |     isDark: context.theme === 'dark' || context.theme === 'gray'
76 |   };
77 | } 
78 | 


--------------------------------------------------------------------------------
/apps/web/src/contexts/auth.tsx:
--------------------------------------------------------------------------------
  1 | import { createContext, useContext, useState, useEffect, ReactNode } from 'react';
  2 | import { useNavigate } from 'react-router-dom';
  3 | import type { User } from '../types/api';
  4 | import { getCurrentUser, login as loginApi, register as registerApi, logout as logoutApi } from '../services/auth';
  5 | import type { LoginData, RegisterData } from '../services/auth';
  6 | 
  7 | interface AuthContextType {
  8 |   user: User | null;
  9 |   isLoading: boolean;
 10 |   isAuthenticated: boolean;
 11 |   isAdmin: boolean;
 12 |   login: (data: LoginData) => Promise<void>;
 13 |   register: (data: RegisterData) => Promise<void>;
 14 |   logout: () => void;
 15 |   setUser: (user: User | null) => void;
 16 | }
 17 | 
 18 | const AuthContext = createContext<AuthContextType | null>(null);
 19 | 
 20 | export const AuthProvider = ({ children }: { children: ReactNode }) => {
 21 |   const navigate = useNavigate();
 22 |   const [user, setUser] = useState<User | null>(null);
 23 |   const [isLoading, setIsLoading] = useState(true);
 24 | 
 25 |   // Initial auth check
 26 |   useEffect(() => {
 27 |     const token = localStorage.getItem('token');
 28 |     if (!token) {
 29 |       setIsLoading(false);
 30 |       return;
 31 |     }
 32 | 
 33 |     const verifyAuth = async () => {
 34 |       try {
 35 |         console.log('Verifying authentication...');
 36 |         const userData = await getCurrentUser();
 37 |         console.log('User data received:', userData);
 38 |         setUser(userData);
 39 |         // If we're on the login page and verification succeeds, redirect to admin
 40 |         if (window.location.pathname === '/admin/login') {
 41 |           navigate('/admin');
 42 |         }
 43 |       } catch (error) {
 44 |         console.error('Auth verification failed:', error);
 45 |         // Clear both token and user on auth error
 46 |         localStorage.removeItem('token');
 47 |         setUser(null);
 48 |         // Redirect to login if we're on an admin page
 49 |         if (window.location.pathname.startsWith('/admin')) {
 50 |           navigate('/admin/login');
 51 |         }
 52 |       } finally {
 53 |         setIsLoading(false);
 54 |       }
 55 |     };
 56 | 
 57 |     verifyAuth();
 58 |   }, [navigate]);
 59 | 
 60 |   const login = async (data: LoginData) => {
 61 |     try {
 62 |       console.log('Logging in...');
 63 |       const response = await loginApi(data);
 64 |       console.log('Login successful:', response);
 65 |       
 66 |       // Set token first
 67 |       localStorage.setItem('token', response.token);
 68 |       // Then update user state
 69 |       setUser(response.user);
 70 |       navigate('/admin');
 71 |     } catch (error) {
 72 |       console.error('Login failed:', error);
 73 |       // Clear any existing token on login failure
 74 |       localStorage.removeItem('token');
 75 |       setUser(null);
 76 |       throw error;
 77 |     }
 78 |   };
 79 | 
 80 |   const register = async (data: RegisterData) => {
 81 |     try {
 82 |       console.log('Registering...');
 83 |       const response = await registerApi(data);
 84 |       console.log('Registration successful:', response);
 85 |       // Set token first
 86 |       localStorage.setItem('token', response.token);
 87 |       // Then update user state
 88 |       setUser(response.user);
 89 |       navigate('/');
 90 |     } catch (error) {
 91 |       console.error('Registration failed:', error);
 92 |       // Clear any existing token on registration failure
 93 |       localStorage.removeItem('token');
 94 |       setUser(null);
 95 |       throw error;
 96 |     }
 97 |   };
 98 | 
 99 |   const logout = () => {
100 |     console.log('Logging out...');
101 |     logoutApi();
102 |     // Clear both token and user
103 |     localStorage.removeItem('token');
104 |     setUser(null);
105 |     navigate('/admin/login');
106 |   };
107 | 
108 |   const value = {
109 |     user,
110 |     isLoading,
111 |     isAuthenticated: !!user,
112 |     isAdmin: user?.role === 'ADMIN',
113 |     login,
114 |     register,
115 |     logout,
116 |     setUser,
117 |   };
118 | 
119 |   return (
120 |     <AuthContext.Provider value={value}>
121 |       <div data-testid="auth-provider" data-user={JSON.stringify({ user })}>
122 |         {children}
123 |       </div>
124 |     </AuthContext.Provider>
125 |   );
126 | };
127 | 
128 | export const useAuth = () => {
129 |   const context = useContext(AuthContext);
130 |   if (!context) {
131 |     throw new Error('useAuth must be used within an AuthProvider');
132 |   }
133 |   return context;
134 | }; 
135 | 


--------------------------------------------------------------------------------
/apps/web/src/hooks/useDebounce.ts:
--------------------------------------------------------------------------------
 1 | import { useState, useEffect } from 'react';
 2 | 
 3 | export function useDebounce<T>(value: T, delay: number): T {
 4 |   const [debouncedValue, setDebouncedValue] = useState<T>(value);
 5 | 
 6 |   useEffect(() => {
 7 |     const timer = setTimeout(() => {
 8 |       setDebouncedValue(value);
 9 |     }, delay);
10 | 
11 |     return () => {
12 |       clearTimeout(timer);
13 |     };
14 |   }, [value, delay]);
15 | 
16 |   return debouncedValue;
17 | } 
18 | 


--------------------------------------------------------------------------------
/apps/web/src/hooks/useTheme.ts:
--------------------------------------------------------------------------------
 1 | import { useState, useEffect } from 'react';
 2 | 
 3 | export function useTheme() {
 4 |   const [isDark, setIsDark] = useState(() => 
 5 |     document.documentElement.classList.contains('dark')
 6 |   );
 7 | 
 8 |   useEffect(() => {
 9 |     const observer = new MutationObserver((mutations) => {
10 |       mutations.forEach((mutation) => {
11 |         if (mutation.attributeName === 'class') {
12 |           setIsDark(document.documentElement.classList.contains('dark'));
13 |         }
14 |       });
15 |     });
16 | 
17 |     observer.observe(document.documentElement, {
18 |       attributes: true,
19 |       attributeFilter: ['class'],
20 |     });
21 | 
22 |     return () => observer.disconnect();
23 |   }, []);
24 | 
25 |   return { isDark };
26 | } 
27 | 


--------------------------------------------------------------------------------
/apps/web/src/index.css:
--------------------------------------------------------------------------------
  1 | @tailwind base;
  2 | @tailwind components;
  3 | @tailwind utilities;
  4 | 
  5 | @layer base {
  6 |   :root {
  7 |     --color-primary-50: 254 242 242;
  8 |     --color-primary-100: 254 226 226;
  9 |     --color-primary-200: 254 202 202;
 10 |     --color-primary-300: 252 165 165;
 11 |     --color-primary-400: 248 113 113;
 12 |     --color-primary-500: 239 68 68;
 13 |     --color-primary-600: 220 38 38;
 14 |     --color-primary-700: 185 28 28;
 15 |     --color-primary-800: 153 27 27;
 16 |     --color-primary-900: 127 29 29;
 17 |     --color-primary-950: 69 10 10;
 18 | 
 19 |     /* Default light theme colors */
 20 |     --color-dark-bg: 255 255 255;
 21 |     --color-dark-bg-secondary: 249 250 251;
 22 |     --color-dark-text: 17 24 39;
 23 |     --color-dark-text-secondary: 107 114 128;
 24 |     --color-dark-border: 229 231 235;
 25 |   }
 26 | 
 27 |   /* Dark theme - Vercel-like */
 28 |   :root.dark:not(.gray) {
 29 |     --color-dark-bg: 0 0 0;
 30 |     --color-dark-bg-secondary: 17 17 17;
 31 |     --color-dark-text: 255 255 255;
 32 |     --color-dark-text-secondary: 153 153 153;
 33 |     --color-dark-border: 38 38 38;
 34 |   }
 35 | 
 36 |   /* YouTube Dark Theme Colors */
 37 |   :root.dark.gray {
 38 |     --color-dark-bg: 15 15 15;
 39 |     --color-dark-bg-secondary: 33 33 33;
 40 |     --color-dark-text: 241 241 241;
 41 |     --color-dark-text-secondary: 170 170 170;
 42 |     --color-dark-border: 48 48 48;
 43 |   }
 44 | 
 45 |   html {
 46 |     @apply antialiased;
 47 |   }
 48 | 
 49 |   body {
 50 |     @apply bg-white text-gray-900 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))];
 51 |   }
 52 | 
 53 |   .container {
 54 |     @apply px-4 mx-auto max-w-7xl sm:px-6 lg:px-8;
 55 |   }
 56 | }
 57 | 
 58 | @layer components {
 59 |   .btn {
 60 |     @apply inline-flex items-center justify-center px-4 py-2 text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed;
 61 |   }
 62 | 
 63 |   .btn-primary {
 64 |     @apply text-white bg-primary-600 hover:bg-primary-700 focus:ring-primary-500;
 65 |   }
 66 | 
 67 |   .btn-secondary {
 68 |     @apply text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 focus:ring-primary-500 
 69 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 70 |            dark:border-[rgb(var(--color-dark-border))] dark:hover:bg-[rgb(var(--color-dark-border))];
 71 |   }
 72 | 
 73 |   .btn-danger {
 74 |     @apply text-white bg-red-600 hover:bg-red-700 focus:ring-red-500;
 75 |   }
 76 | 
 77 |   .input {
 78 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 79 |            placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6 
 80 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 81 |            dark:ring-[rgb(var(--color-dark-border))] dark:placeholder:text-[rgb(var(--color-dark-text-secondary))];
 82 |   }
 83 | 
 84 |   .select {
 85 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 86 |            focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:max-w-xs sm:text-sm sm:leading-6 
 87 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 88 |            dark:ring-[rgb(var(--color-dark-border))];
 89 |   }
 90 | 
 91 |   .textarea {
 92 |     @apply block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 
 93 |            placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6 
 94 |            dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:text-[rgb(var(--color-dark-text))] 
 95 |            dark:ring-[rgb(var(--color-dark-border))] dark:placeholder:text-[rgb(var(--color-dark-text-secondary))];
 96 |   }
 97 | 
 98 |   .checkbox {
 99 |     @apply w-4 h-4 border-gray-300 rounded text-primary-600 focus:ring-primary-600 
100 |            dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg-secondary))];
101 |   }
102 | 
103 |   .radio {
104 |     @apply w-4 h-4 border-gray-300 text-primary-600 focus:ring-primary-600 
105 |            dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg-secondary))];
106 |   }
107 | 
108 |   .label {
109 |     @apply block text-sm font-medium leading-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))];
110 |   }
111 | 
112 |   .help-text {
113 |     @apply mt-2 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))];
114 |   }
115 | 
116 |   .error-text {
117 |     @apply mt-2 text-sm text-red-600;
118 |   }
119 | }
120 | 
121 | @layer utilities {
122 |   .scrollbar-hide {
123 |     -ms-overflow-style: none;
124 |     scrollbar-width: none;
125 |   }
126 | 
127 |   .scrollbar-hide::-webkit-scrollbar {
128 |     display: none;
129 |   }
130 | }
131 | 


--------------------------------------------------------------------------------
/apps/web/src/lib/analytics.ts:
--------------------------------------------------------------------------------
 1 | import { useEffect } from 'react';
 2 | import { useLocation } from 'react-router-dom';
 3 | 
 4 | declare global {
 5 |   interface Window {
 6 |     gtag: (command: string, ...args: any[]) => void;
 7 |     dataLayer: any[];
 8 |   }
 9 | }
10 | 
11 | export const GA_TRACKING_ID = import.meta.env.VITE_GA_TRACKING_ID;
12 | 
13 | // Initialize Google Analytics
14 | export const initGA = () => {
15 |   // Skip if tracking ID is not configured
16 |   if (!GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
17 |     console.warn('Google Analytics tracking ID not configured');
18 |     return;
19 |   }
20 | 
21 |   const script = document.createElement('script');
22 |   script.async = true;
23 |   script.src = `https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`;
24 |   document.head.appendChild(script);
25 | 
26 |   window.dataLayer = window.dataLayer || [];
27 |   window.gtag = function gtag() {
28 |     window.dataLayer.push(arguments);
29 |   };
30 |   window.gtag('js', new Date());
31 |   window.gtag('config', GA_TRACKING_ID);
32 | };
33 | 
34 | // Track page views
35 | export const pageview = (url: string) => {
36 |   if (!window.gtag || !GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
37 |     return;
38 |   }
39 |   
40 |   window.gtag('config', GA_TRACKING_ID, {
41 |     page_path: url,
42 |   });
43 | };
44 | 
45 | // Track events
46 | export const event = ({ action, category, label, value }: {
47 |   action: string;
48 |   category: string;
49 |   label: string;
50 |   value?: number;
51 | }) => {
52 |   if (!window.gtag || !GA_TRACKING_ID || GA_TRACKING_ID === 'G-XXXXXXXXXX') {
53 |     return;
54 |   }
55 | 
56 |   window.gtag('event', action, {
57 |     event_category: category,
58 |     event_label: label,
59 |     value: value,
60 |   });
61 | };
62 | 
63 | // Hook to track page views
64 | export const usePageTracking = () => {
65 |   const location = useLocation();
66 | 
67 |   useEffect(() => {
68 |     pageview(location.pathname + location.search);
69 |   }, [location]);
70 | }; 
71 | 


--------------------------------------------------------------------------------
/apps/web/src/lib/api.ts:
--------------------------------------------------------------------------------
 1 | import axios from 'axios';
 2 | 
 3 | const api = axios.create({
 4 |   baseURL: import.meta.env.VITE_API_URL || 'http://localhost:3001/api',
 5 |   headers: {
 6 |     'Content-Type': 'application/json',
 7 |   },
 8 | });
 9 | 
10 | // Add a request interceptor to add the auth token
11 | api.interceptors.request.use((config) => {
12 |   const token = localStorage.getItem('token');
13 |   if (token) {
14 |     config.headers.Authorization = `Bearer ${token}`;
15 |   }
16 |   return config;
17 | }, (error) => {
18 |   return Promise.reject(error);
19 | });
20 | 
21 | // Add a response interceptor to handle errors
22 | api.interceptors.response.use(
23 |   (response) => {
24 |     // Return the entire response data
25 |     return response.data;
26 |   },
27 |   (error) => {
28 |     // Handle 401 Unauthorized errors
29 |     if (error.response?.status === 401) {
30 |       // Clear token and redirect to login
31 |       localStorage.removeItem('token');
32 |       
33 |       // Only redirect to login if we're on an admin page
34 |       if (window.location.pathname.startsWith('/admin')) {
35 |         window.location.href = '/admin/login';
36 |       }
37 |       
38 |       return Promise.reject(new Error('Unauthorized - Please log in'));
39 |     }
40 |     
41 |     // Handle network errors
42 |     if (!error.response) {
43 |       return Promise.reject(new Error('Network error - Please check your connection'));
44 |     }
45 |     
46 |     // Handle other API errors
47 |     const errorMessage = error.response.data?.message || 'An error occurred';
48 |     console.error('API Error:', {
49 |       status: error.response.status,
50 |       message: errorMessage,
51 |       path: error.config?.url,
52 |       method: error.config?.method
53 |     });
54 |     
55 |     return Promise.reject(new Error(errorMessage));
56 |   }
57 | );
58 | 
59 | export default api; 
60 | 


--------------------------------------------------------------------------------
/apps/web/src/lib/schemas/property.ts:
--------------------------------------------------------------------------------
 1 | import { z } from 'zod';
 2 | 
 3 | export const propertySchema = z.object({
 4 |   title: z.string().min(1),
 5 |   description: z.string().min(1),
 6 |   price: z.coerce.number().min(0),
 7 |   currency: z.string().default('BGN'),
 8 |   area_sqm: z.coerce.number().min(0),
 9 |   land_area_sqm: z.coerce.number().optional(),
10 |   floor: z.coerce.number().optional(),
11 |   total_floors: z.coerce.number().optional(),
12 |   construction_type: z.string().optional(),
13 |   furnishing: z.string().optional(),
14 |   location_type: z.string().default('CITY'),
15 |   regionId: z.coerce.number().optional(),
16 |   neighborhoodId: z.coerce.number().optional(),
17 |   has_regulation: z.boolean().optional(),
18 |   category: z.string().default('SALE'),
19 |   type: z.string().default('APARTMENT'),
20 |   featured: z.boolean().default(false),
21 |   contact_info: z.object({
22 |     phone: z.string().min(1),
23 |     email: z.string().email(),
24 |   }),
25 | });
26 | 
27 | export type PropertyFormData = z.infer<typeof propertySchema>;
28 | 
29 | export const createPropertySchema = propertySchema;
30 | 
31 | export const updatePropertySchema = propertySchema.partial();
32 | 
33 | export const propertySearchSchema = z.object({
34 |   category: z.string().optional(),
35 |   type: z.string().optional(),
36 |   minPrice: z.coerce.number().optional(),
37 |   maxPrice: z.coerce.number().optional(),
38 |   minArea: z.coerce.number().optional(),
39 |   maxArea: z.coerce.number().optional(),
40 |   location: z.string().optional(),
41 |   currency: z.string().optional(),
42 | });
43 | 
44 | export type PropertySearchParams = z.infer<typeof propertySearchSchema>;
45 | 
46 | export const propertyResponseSchema = propertySchema.extend({
47 |   id: z.string(),
48 |   createdAt: z.string().or(z.date()),
49 |   updatedAt: z.string().or(z.date()),
50 |   images: z.array(z.object({
51 |     id: z.string(),
52 |     url: z.string(),
53 |   })),
54 |   contact_info: z.object({
55 |     id: z.string(),
56 |     phone: z.string(),
57 |     email: z.string(),
58 |   }),
59 | });
60 | 
61 | export type PropertyResponse = z.infer<typeof propertyResponseSchema>; 
62 | 


--------------------------------------------------------------------------------
/apps/web/src/lib/types/index.ts:
--------------------------------------------------------------------------------
 1 | export interface Property {
 2 |   id: string;
 3 |   title: string;
 4 |   price: number;
 5 |   currency: string;
 6 |   area_sqm: number;
 7 |   floor?: string;
 8 |   construction_type?: string;
 9 |   furnishing?: string;
10 |   location: string;
11 |   category: string;
12 |   description: string;
13 |   images: string[];
14 |   contact_info: {
15 |     phone: string;
16 |     email: string;
17 |   };
18 |   created_at: string;
19 |   updated_at: string;
20 | }
21 | 
22 | export type PropertyType = 
23 |   | 'apartment'
24 |   | 'house'
25 |   | 'office'
26 |   | 'shop'
27 |   | 'land'
28 |   | 'industrial';
29 | 
30 | export type PropertyCategory = 
31 |   | 'rent'
32 |   | 'sale';
33 | 
34 | export interface User {
35 |   id: string;
36 |   email: string;
37 |   role: 'admin' | 'user';
38 |   name: string;
39 |   created_at: string;
40 |   updated_at: string;
41 | } 
42 | 


--------------------------------------------------------------------------------
/apps/web/src/main.tsx:
--------------------------------------------------------------------------------
 1 | import { StrictMode } from 'react'
 2 | import { createRoot } from 'react-dom/client'
 3 | import './index.css'
 4 | import App from './App.tsx'
 5 | 
 6 | createRoot(document.getElementById('root')!).render(
 7 |   <StrictMode>
 8 |     <App />
 9 |   </StrictMode>,
10 | )
11 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/About.tsx:
--------------------------------------------------------------------------------
  1 | export default function About() {
  2 |   return (
  3 |     <div className="min-h-screen bg-white dark:bg-[rgb(var(--color-dark-bg))]">
  4 |       <div className="container mx-auto px-4 py-12">
  5 |         <div className="max-w-4xl mx-auto">
  6 |           {/* Hero Section with Image */}
  7 |           <div className="relative rounded-2xl overflow-hidden mb-12 shadow-xl">
  8 |             <img
  9 |               src="/images/about-us.jpg"
 10 |               alt="Авалон Недвижими Имоти Office"
 11 |               className="w-full h-[400px] object-cover"
 12 |             />
 13 |             <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent" />
 14 |             <div className="absolute bottom-0 left-0 right-0 p-8">
 15 |               <h1 className="text-4xl font-bold text-white mb-4">
 16 |                 Авалон Недвижими Имоти
 17 |               </h1>
 18 |               <p className="text-xl text-gray-200">
 19 |                 Една от водещите агенции за недвижими имоти в София
 20 |               </p>
 21 |             </div>
 22 |           </div>
 23 | 
 24 |           <div className="prose prose-lg max-w-none dark:prose-invert">
 25 |             <p className="text-lg leading-relaxed mb-8 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 26 |               Нашата мисия е да предоставяме професионални услуги в областта на недвижимите имоти,
 27 |               съобразени с индивидуалните нужди на всеки клиент. Ние се стремим да бъдем надежден
 28 |               партньор при покупката, продажбата или наемането на имот.
 29 |             </p>
 30 | 
 31 |             <h2 className="text-3xl font-semibold mt-12 mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Нашите услуги</h2>
 32 |             <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
 33 |               <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 34 |                 <ul className="space-y-3">
 35 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 36 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 37 |                     Продажба на жилищни имоти
 38 |                   </li>
 39 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 40 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 41 |                     Отдаване под наем на жилищни имоти
 42 |                   </li>
 43 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 44 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 45 |                     Продажба и наем на търговски площи
 46 |                   </li>
 47 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 48 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 49 |                     Продажба и наем на офис площи
 50 |                   </li>
 51 |                 </ul>
 52 |               </div>
 53 |               <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 54 |                 <ul className="space-y-3">
 55 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 56 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 57 |                     Продажба на парцели и терени
 58 |                   </li>
 59 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 60 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 61 |                     Консултации при сделки с недвижими имоти
 62 |                   </li>
 63 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 64 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 65 |                     Съдействие при ипотечно кредитиране
 66 |                   </li>
 67 |                   <li className="flex items-center text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 68 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 69 |                     Правни консултации
 70 |                   </li>
 71 |                 </ul>
 72 |               </div>
 73 |             </div>
 74 | 
 75 |             <h2 className="text-3xl font-semibold mt-12 mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Информационни системи</h2>
 76 |             <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-6 rounded-lg shadow-sm">
 77 |               <p className="mb-4 text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 78 |                 Ние използваме съвременни информационни системи за управление на нашите имоти и клиенти:
 79 |               </p>
 80 |               <ul className="space-y-4">
 81 |                 <li>
 82 |                   <a
 83 |                     href="https://avalon.bg"
 84 |                     target="_blank"
 85 |                     rel="noopener noreferrer"
 86 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
 87 |                   >
 88 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
 89 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">www.avalon.bg - Официален уебсайт на Авалон Недвижими Имоти</span>
 90 |                   </a>
 91 |                 </li>
 92 |                 <li>
 93 |                   <a
 94 |                     href="https://naemi.avalon.bg"
 95 |                     target="_blank"
 96 |                     rel="noopener noreferrer"
 97 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
 98 |                   >
 99 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
100 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">naemi.avalon.bg - Специализиран портал за наеми</span>
101 |                   </a>
102 |                 </li>
103 |                 <li>
104 |                   <a
105 |                     href="https://prodajbi.avalon.bg"
106 |                     target="_blank"
107 |                     rel="noopener noreferrer"
108 |                     className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400 flex items-center"
109 |                   >
110 |                     <span className="w-2 h-2 bg-primary-600 dark:bg-primary-500 rounded-full mr-2"></span>
111 |                     <span className="text-gray-700 dark:text-[rgb(var(--color-dark-text))]">prodajbi.avalon.bg - Специализиран портал за продажби</span>
112 |                   </a>
113 |                 </li>
114 |               </ul>
115 |             </div>
116 | 
117 |             <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))] p-8 rounded-lg mt-12">
118 |               <h2 className="text-3xl font-semibold mb-6 text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Контакти</h2>
119 |               <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
120 |                 <div className="space-y-4">
121 |                   <div>
122 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Адрес</h3>
123 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">ул. "Цар Асен" 95, София</p>
124 |                   </div>
125 |                   <div>
126 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Телефони</h3>
127 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">+359 888 123 456</p>
128 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">+359 2 123 4567</p>
129 |                   </div>
130 |                 </div>
131 |                 <div className="space-y-4">
132 |                   <div>
133 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Имейл</h3>
134 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">office@avalon.bg</p>
135 |                   </div>
136 |                   <div>
137 |                     <h3 className="font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
138 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Понеделник - Петък: 9:00 - 18:00</p>
139 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Събота: 10:00 - 14:00</p>
140 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Неделя: Почивен ден</p>
141 |                   </div>
142 |                 </div>
143 |               </div>
144 |             </div>
145 |           </div>
146 |         </div>
147 |       </div>
148 |     </div>
149 |   );
150 | } 
151 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/Contact.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useMutation } from '@tanstack/react-query';
  3 | import { submitContactForm } from '../services/contact';
  4 | import { event } from '../lib/analytics';
  5 | 
  6 | export default function Contact() {
  7 |   const [formData, setFormData] = useState({
  8 |     name: '',
  9 |     email: '',
 10 |     message: '',
 11 |   });
 12 | 
 13 |   const [errors, setErrors] = useState<{
 14 |     name?: string;
 15 |     email?: string;
 16 |     message?: string;
 17 |     general?: string;
 18 |   }>({});
 19 | 
 20 |   const [success, setSuccess] = useState(false);
 21 | 
 22 |   const mutation = useMutation({
 23 |     mutationFn: submitContactForm,
 24 |     onSuccess: () => {
 25 |       setSuccess(true);
 26 |       setFormData({ name: '', email: '', message: '' });
 27 |       event({
 28 |         action: 'contact_form_submit',
 29 |         category: 'Contact',
 30 |         label: 'Success',
 31 |         value: 1
 32 |       });
 33 |     },
 34 |     onError: (error: any) => {
 35 |       if (error.response?.data?.errors) {
 36 |         setErrors(error.response.data.errors);
 37 |       } else {
 38 |         setErrors({ general: 'Възникна грешка. Моля, опитайте отново.' });
 39 |       }
 40 |       event({
 41 |         action: 'contact_form_error',
 42 |         category: 'Contact',
 43 |         label: error.response?.data?.message || 'Unknown error'
 44 |       });
 45 |     },
 46 |   });
 47 | 
 48 |   const handleSubmit = async (e: React.FormEvent) => {
 49 |     e.preventDefault();
 50 |     setErrors({});
 51 |     setSuccess(false);
 52 |     mutation.mutate(formData);
 53 |   };
 54 | 
 55 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
 56 |     const { name, value } = e.target;
 57 |     setFormData(prev => ({ ...prev, [name]: value }));
 58 |     if (errors[name as keyof typeof errors]) {
 59 |       setErrors(prev => ({ ...prev, [name]: '' }));
 60 |     }
 61 |   };
 62 | 
 63 |   return (
 64 |     <div className="min-h-screen bg-white dark:bg-[rgb(var(--color-dark-bg))]">
 65 |       <div className="container mx-auto px-4 py-12">
 66 |         <div className="max-w-6xl mx-auto space-y-12">
 67 |           {/* Header Section with Office Image */}
 68 |           <div className="relative h-[300px] rounded-xl overflow-hidden shadow-xl">
 69 |             <img
 70 |               src="/images/contact.jpg"
 71 |               alt="Авалон Недвижими Имоти Office Entrance"
 72 |               className="w-full h-full object-cover"
 73 |             />
 74 |             <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent" />
 75 |             <div className="absolute bottom-0 left-0 right-0 p-8">
 76 |               <h1 className="text-4xl font-bold text-white mb-2">
 77 |                 Свържете се с нас
 78 |               </h1>
 79 |               <p className="text-xl text-gray-200">
 80 |                 Посетете нашия офис или се свържете с нас онлайн
 81 |               </p>
 82 |             </div>
 83 |           </div>
 84 | 
 85 |           {/* Google Maps Embed */}
 86 |           <div className="w-full h-[400px] rounded-xl overflow-hidden shadow-xl border-4 border-white dark:border-[rgb(var(--color-dark-border))]">
 87 |             <iframe
 88 |               src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2932.8747368506897!2d23.321409776882714!3d42.69580097116491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40aa8682cb317bf5%3A0x9cfae3249632c7f4!2sul.%20%22Tsar%20Asen%22%2095%2C%201463%20Sofia%20Center%2C%20Sofia!5e0!3m2!1sen!2sbg!4v1709305169089!5m2!1sen!2sbg"
 89 |               width="100%"
 90 |               height="100%"
 91 |               style={{ border: 0 }}
 92 |               allowFullScreen
 93 |               loading="lazy"
 94 |               referrerPolicy="no-referrer-when-downgrade"
 95 |               title="Office Location"
 96 |               className="rounded-lg"
 97 |             />
 98 |           </div>
 99 | 
100 |           <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
101 |             {/* Contact Form */}
102 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-xl shadow-xl p-8 transform transition-all duration-300 hover:shadow-2xl">
103 |               <h2 className="text-2xl font-semibold mb-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
104 |                 Свържете се с нас
105 |               </h2>
106 |               <form onSubmit={handleSubmit} className="space-y-5">
107 |                 <div>
108 |                   <label htmlFor="name" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
109 |                     Име
110 |                   </label>
111 |                   <input
112 |                     type="text"
113 |                     id="name"
114 |                     name="name"
115 |                     value={formData.name}
116 |                     onChange={handleChange}
117 |                     className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm bg-white dark:bg-[rgb(var(--color-dark-bg))] text-gray-700 dark:text-[rgb(var(--color-dark-text))]"
118 |                   />
119 |                   {errors.name && (
120 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.name}</p>
121 |                   )}
122 |                 </div>
123 | 
124 |                 <div>
125 |                   <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
126 |                     Имейл
127 |                   </label>
128 |                   <input
129 |                     type="email"
130 |                     id="email"
131 |                     name="email"
132 |                     value={formData.email}
133 |                     onChange={handleChange}
134 |                     className={`mt-1 block w-full rounded-lg shadow-sm sm:text-sm transition-colors duration-200
135 |                       ${errors.email 
136 |                         ? 'border-red-500 focus:border-red-500 focus:ring-red-500' 
137 |                         : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:ring-primary-500'
138 |                       } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))]`}
139 |                   />
140 |                   {errors.email && (
141 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.email}</p>
142 |                   )}
143 |                 </div>
144 | 
145 |                 <div>
146 |                   <label htmlFor="message" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
147 |                     Съобщение
148 |                   </label>
149 |                   <textarea
150 |                     id="message"
151 |                     name="message"
152 |                     rows={4}
153 |                     value={formData.message}
154 |                     onChange={handleChange}
155 |                     className={`mt-1 block w-full rounded-lg shadow-sm sm:text-sm transition-colors duration-200
156 |                       ${errors.message 
157 |                         ? 'border-red-500 focus:border-red-500 focus:ring-red-500' 
158 |                         : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:ring-primary-500'
159 |                       } dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))]`}
160 |                   />
161 |                   {errors.message && (
162 |                     <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.message}</p>
163 |                   )}
164 |                 </div>
165 | 
166 |                 {errors.general && (
167 |                   <p className="text-sm text-red-600 dark:text-red-400">{errors.general}</p>
168 |                 )}
169 | 
170 |                 {success && (
171 |                   <div className="p-4 bg-green-50 dark:bg-green-900/30 rounded-lg border border-green-200 dark:border-green-800">
172 |                     <p className="text-sm text-green-700 dark:text-green-300">
173 |                       Благодарим ви! Ще се свържем с вас възможно най-скоро.
174 |                     </p>
175 |                   </div>
176 |                 )}
177 | 
178 |                 <button
179 |                   type="submit"
180 |                   disabled={mutation.isPending}
181 |                   className="w-full px-4 py-3 text-sm font-medium text-white bg-primary-600 rounded-lg hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transition-all duration-200 transform hover:-translate-y-0.5"
182 |                 >
183 |                   {mutation.isPending ? 'Изпращане...' : 'Изпрати'}
184 |                 </button>
185 |               </form>
186 |             </div>
187 | 
188 |             {/* Contact Information */}
189 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-xl shadow-xl p-8 transform transition-all duration-300 hover:shadow-2xl">
190 |               <h2 className="text-2xl font-semibold mb-6 text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
191 |                 Информация за контакт
192 |               </h2>
193 |               <div className="space-y-6">
194 |                 <div>
195 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Адрес</h3>
196 |                   <p className="mt-2 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
197 |                     ул. "Цар Асен" 95<br />
198 |                     София 1000<br />
199 |                     България
200 |                   </p>
201 |                 </div>
202 | 
203 |                 <div>
204 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Телефони</h3>
205 |                   <div className="mt-2 space-y-2">
206 |                     <a 
207 |                       href="tel:+35921234567"
208 |                       className="block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
209 |                     >
210 |                       +359 2 123 4567
211 |                     </a>
212 |                     <a 
213 |                       href="tel:+359888123456"
214 |                       className="block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
215 |                     >
216 |                       +359 888 123 456
217 |                     </a>
218 |                   </div>
219 |                 </div>
220 | 
221 |                 <div>
222 |                   <h3 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имейл</h3>
223 |                   <a 
224 |                     href="mailto:office@avalon.bg"
225 |                     className="mt-2 block text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
226 |                   >
227 |                     office@avalon.bg
228 |                   </a>
229 |                 </div>
230 | 
231 |                 <div>
232 |                   <h3 className="text-lg font-medium text-gray-800 dark:text-[rgb(var(--color-dark-text))]">Работно време</h3>
233 |                   <div className="mt-2 space-y-2">
234 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
235 |                       Понеделник - Петък: 9:00 - 18:00
236 |                     </p>
237 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
238 |                       Събота: 10:00 - 14:00
239 |                     </p>
240 |                     <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
241 |                       Неделя: Затворено
242 |                     </p>
243 |                   </div>
244 |                 </div>
245 |               </div>
246 |             </div>
247 |           </div>
248 |         </div>
249 |       </div>
250 |     </div>
251 |   );
252 | } 
253 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/Home.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import { Link } from 'react-router-dom';
  3 | import { MagnifyingGlassIcon } from '@heroicons/react/24/outline';
  4 | import { getFeaturedProperties } from '../services/propertyService';
  5 | import PropertyCard, { PropertyCardProps } from '../components/properties/PropertyCard';
  6 | 
  7 | const propertyTypes = [
  8 |   'Всички типове',
  9 |   'Апартамент',
 10 |   'Къща',
 11 |   'Парцел',
 12 |   'Търговски имот',
 13 |   'Индустриален имот'
 14 | ];
 15 | 
 16 | const regions = [
 17 |   'Всички райони',
 18 |   'Русе център',
 19 |   'Здравец',
 20 |   'Дружба',
 21 |   'Възраждане',
 22 |   'Чародейка',
 23 |   'Ялта',
 24 |   'Родина',
 25 |   'Цветница',
 26 |   'Централна градска част',
 27 | ];
 28 | 
 29 | export default function Home() {
 30 |   const [selectedType, setSelectedType] = useState('Всички типове');
 31 |   const [selectedRegion, setSelectedRegion] = useState('Всички райони');
 32 |   const [featuredProperties, setFeaturedProperties] = useState<PropertyCardProps[]>([]);
 33 |   const [isLoading, setIsLoading] = useState(true);
 34 |   const [error, setError] = useState<string | null>(null);
 35 | 
 36 |   useEffect(() => {
 37 |     const loadFeaturedProperties = async () => {
 38 |       try {
 39 |         const properties = await getFeaturedProperties();
 40 |         setFeaturedProperties(properties);
 41 |       } catch (err) {
 42 |         setError('Failed to load featured properties');
 43 |         console.error(err);
 44 |       } finally {
 45 |         setIsLoading(false);
 46 |       }
 47 |     };
 48 | 
 49 |     loadFeaturedProperties();
 50 |   }, []);
 51 | 
 52 |   const handleSearch = () => {
 53 |     const params = new URLSearchParams();
 54 |     if (selectedType !== 'Всички типове') params.append('type', selectedType);
 55 |     if (selectedRegion !== 'Всички райони') params.append('region', selectedRegion);
 56 |     window.location.href = `/properties?${params.toString()}`;
 57 |   };
 58 | 
 59 |   return (
 60 |     <div className="flex flex-col">
 61 |       {/* Hero Section with Search Overlay */}
 62 |       <div className="relative">
 63 |         {/* Hero Background */}
 64 |         <div className="relative h-[50vh] min-h-[500px] max-h-[600px] bg-gray-900">
 65 |           <img
 66 |             src="/images/homepage-hero.webp"
 67 |             alt="Luxury Real Estate"
 68 |             className="object-cover object-center absolute inset-0 w-full h-full opacity-60"
 69 |             loading="eager"
 70 |             fetchPriority="high"
 71 |           />
 72 |           <div className="absolute inset-0 bg-gradient-to-b from-gray-900/30 via-gray-900/50 to-gray-900/80" />
 73 |           
 74 |           {/* Hero Content */}
 75 |           <div className="relative h-full flex flex-col justify-center">
 76 |             <div className="px-4 mx-auto max-w-7xl sm:px-6 lg:px-8 text-center">
 77 |               <h1 className="text-3xl font-bold tracking-tight text-white sm:text-4xl lg:text-5xl">
 78 |                 Намерете своя перфектен дом
 79 |               </h1>
 80 |               <p className="mx-auto mt-4 max-w-lg text-lg text-gray-100 sm:max-w-3xl">
 81 |                 Авалон Недвижими Имоти - Вашият надежден партньор в света на недвижимите имоти от 2008 година.
 82 |               </p>
 83 |             </div>
 84 |           </div>
 85 |         </div>
 86 | 
 87 |         {/* Search Box Overlay */}
 88 |         <div className="absolute inset-x-0 bottom-0 z-10 transform translate-y-1/2">
 89 |           <div className="px-4 mx-auto max-w-4xl sm:px-6 lg:px-8">
 90 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-xl backdrop-blur-sm">
 91 |               <div className="p-6">
 92 |                 <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
 93 |                   <div>
 94 |                     <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
 95 |                       Тип имот
 96 |                     </label>
 97 |                     <select
 98 |                       id="type"
 99 |                       value={selectedType}
100 |                       onChange={(e) => setSelectedType(e.target.value)}
101 |                       className="block py-2 pr-10 pl-3 mt-1 w-full text-base rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:outline-none focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
102 |                     >
103 |                       {propertyTypes.map((type) => (
104 |                         <option key={type} value={type}>
105 |                           {type}
106 |                         </option>
107 |                       ))}
108 |                     </select>
109 |                   </div>
110 |                   <div>
111 |                     <label htmlFor="region" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))]">
112 |                       Район
113 |                     </label>
114 |                     <select
115 |                       id="region"
116 |                       value={selectedRegion}
117 |                       onChange={(e) => setSelectedRegion(e.target.value)}
118 |                       className="block py-2 pr-10 pl-3 mt-1 w-full text-base rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:border-primary-500 focus:outline-none focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
119 |                     >
120 |                       {regions.map((region) => (
121 |                         <option key={region} value={region}>
122 |                           {region}
123 |                         </option>
124 |                       ))}
125 |                     </select>
126 |                   </div>
127 |                 </div>
128 |                 <div className="mt-6">
129 |                   <button
130 |                     onClick={handleSearch}
131 |                     className="px-4 py-3 w-full text-sm font-semibold text-white bg-primary-600 rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
132 |                   >
133 |                     <div className="flex justify-center items-center">
134 |                       <MagnifyingGlassIcon className="w-5 h-5" />
135 |                       <span className="ml-2">Търсене</span>
136 |                     </div>
137 |                   </button>
138 |                 </div>
139 |               </div>
140 |             </div>
141 |           </div>
142 |         </div>
143 |       </div>
144 | 
145 |       {/* Featured Properties Section */}
146 |       <div className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
147 |         <div className="px-4 pt-32 pb-16 mx-auto max-w-7xl sm:px-6 lg:px-8">
148 |           <h2 className="text-3xl font-bold text-center text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
149 |             Топ Оферти
150 |           </h2>
151 |           <div className="grid gap-8 mt-12 sm:grid-cols-2 lg:grid-cols-3">
152 |             {isLoading ? (
153 |               // Loading skeletons
154 |               [...Array(3)].map((_, index) => (
155 |                 <div key={index} className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-lg animate-pulse">
156 |                   <div className="bg-gray-200 aspect-w-16 aspect-h-9 dark:bg-[rgb(var(--color-dark-border))]" />
157 |                   <div className="p-4">
158 |                     <div className="w-3/4 h-4 bg-gray-200 rounded dark:bg-[rgb(var(--color-dark-border))]" />
159 |                     <div className="mt-4 w-1/2 h-4 bg-gray-200 rounded dark:bg-[rgb(var(--color-dark-border))]" />
160 |                   </div>
161 |                 </div>
162 |               ))
163 |             ) : error ? (
164 |               <div className="col-span-full p-4 bg-red-50 dark:bg-red-900/30 rounded-lg">
165 |                 <p className="text-sm text-center text-red-700 dark:text-red-300">{error}</p>
166 |               </div>
167 |             ) : featuredProperties.length > 0 ? (
168 |               featuredProperties.map((property) => (
169 |                 <PropertyCard key={property.id} {...property} />
170 |               ))
171 |             ) : (
172 |               <div className="col-span-full text-center text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
173 |                 Няма намерени оферти
174 |               </div>
175 |             )}
176 |           </div>
177 |           {featuredProperties.length > 0 && (
178 |             <div className="mt-12 text-center">
179 |               <Link
180 |                 to="/properties"
181 |                 className="inline-flex items-center px-6 py-3 text-base font-semibold text-white bg-primary-600 rounded-md shadow-sm hover:bg-primary-700"
182 |               >
183 |                 Разгледайте всички имоти
184 |               </Link>
185 |             </div>
186 |           )}
187 |         </div>
188 |       </div>
189 |     </div>
190 |   );
191 | } 
192 | 
193 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/NotFound.tsx:
--------------------------------------------------------------------------------
 1 | import { Link } from 'react-router-dom';
 2 | 
 3 | export default function NotFound() {
 4 |   return (
 5 |     <div className="min-h-screen flex flex-col items-center justify-center px-4">
 6 |       <div className="text-center">
 7 |         <p className="text-6xl font-bold text-primary-600 mb-4">404</p>
 8 |         <h1 className="text-3xl font-semibold text-gray-900 mb-4">
 9 |           Страницата не е намерена
10 |         </h1>
11 |         <p className="text-lg text-gray-600 mb-8">
12 |           Страницата, която търсите, не съществува или е била преместена.
13 |         </p>
14 |         <div className="space-x-4">
15 |           <Link
16 |             to="/"
17 |             className="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
18 |           >
19 |             Към началната страница
20 |           </Link>
21 |           <Link
22 |             to="/contact"
23 |             className="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
24 |           >
25 |             Свържете се с нас
26 |           </Link>
27 |         </div>
28 |       </div>
29 |     </div>
30 |   );
31 | } 
32 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/Properties.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import { useSearchParams } from 'react-router-dom';
  3 | import { ChevronLeftIcon, ChevronRightIcon, FunnelIcon } from '@heroicons/react/24/outline';
  4 | import { CSSTransition, TransitionGroup } from 'react-transition-group';
  5 | import PropertyCard, { PropertyCardProps } from '../components/properties/PropertyCard';
  6 | import PropertyCardSkeleton from '../components/properties/PropertyCardSkeleton';
  7 | import { getProperties, PropertyFilters } from '../services/propertyService';
  8 | import { propertyTypeLabels, locationTypeLabels, categoryLabels, locationTypes } from '../constants/property';
  9 | 
 10 | declare module 'react-transition-group';
 11 | 
 12 | type LocationType = 'CITY' | 'REGION';
 13 | 
 14 | const regions = [
 15 |   'Всички райони',
 16 |   'Русе център',
 17 |   'Здравец',
 18 |   'Дружба',
 19 |   'Възраждане',
 20 |   'Чародейка',
 21 |   'Ялта',
 22 |   'Родина',
 23 |   'Цветница',
 24 |   'Централна градска част',
 25 | ];
 26 | 
 27 | export default function Properties() {
 28 |   const [searchParams, setSearchParams] = useSearchParams();
 29 |   const [properties, setProperties] = useState<PropertyCardProps[]>([]);
 30 |   const [isLoading, setIsLoading] = useState(true);
 31 |   const [error, setError] = useState<string | null>(null);
 32 |   const [totalPages, setTotalPages] = useState(1);
 33 |   const [showFilters, setShowFilters] = useState(false);
 34 | 
 35 |   // Get current filters from URL
 36 |   const currentPage = Number(searchParams.get('page')) || 1;
 37 |   const currentType = searchParams.get('type') || '';
 38 |   const currentRegion = searchParams.get('region') || '';
 39 |   const currentCategory = searchParams.get('category') as 'RENT' | 'SALE' | undefined;
 40 |   const currentMinPrice = searchParams.get('minPrice') ? Number(searchParams.get('minPrice')) : undefined;
 41 |   const currentMaxPrice = searchParams.get('maxPrice') ? Number(searchParams.get('maxPrice')) : undefined;
 42 |   const currentLocationType = searchParams.get('location_type') || '';
 43 | 
 44 |   useEffect(() => {
 45 |     const loadProperties = async () => {
 46 |       setIsLoading(true);
 47 |       setError(null);
 48 | 
 49 |       try {
 50 |         const filters: PropertyFilters = {
 51 |           type: currentType || undefined,
 52 |           region: currentRegion || undefined,
 53 |           category: currentCategory,
 54 |           minPrice: currentMinPrice,
 55 |           maxPrice: currentMaxPrice,
 56 |           location_type: currentLocationType,
 57 |         };
 58 | 
 59 |         const response = await getProperties(filters, currentPage);
 60 |         if (response && response.properties) {
 61 |           setProperties(response.properties);
 62 |           setTotalPages(Math.ceil(response.total / response.pageSize));
 63 |         } else {
 64 |           setProperties([]);
 65 |           setTotalPages(1);
 66 |           setError('No properties found');
 67 |         }
 68 |       } catch (err) {
 69 |         setError('Failed to load properties');
 70 |         setProperties([]);
 71 |         setTotalPages(1);
 72 |         console.error(err);
 73 |       } finally {
 74 |         setIsLoading(false);
 75 |       }
 76 |     };
 77 | 
 78 |     loadProperties();
 79 |   }, [currentPage, currentType, currentRegion, currentCategory, currentMinPrice, currentMaxPrice, currentLocationType]);
 80 | 
 81 |   const handleFilterChange = (filters: Partial<PropertyFilters>) => {
 82 |     const newParams = new URLSearchParams(searchParams);
 83 |     
 84 |     // Reset page when filters change
 85 |     newParams.set('page', '1');
 86 |     
 87 |     // Update filter params
 88 |     Object.entries(filters).forEach(([key, value]) => {
 89 |       if (value) {
 90 |         newParams.set(key, value.toString());
 91 |       } else {
 92 |         newParams.delete(key);
 93 |       }
 94 |     });
 95 | 
 96 |     setSearchParams(newParams);
 97 |   };
 98 | 
 99 |   const handlePageChange = (page: number) => {
100 |     const newParams = new URLSearchParams(searchParams);
101 |     newParams.set('page', page.toString());
102 |     setSearchParams(newParams);
103 |   };
104 | 
105 |   return (
106 |     <div className="min-h-screen bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
107 |       <div className="py-8 mx-auto">
108 |         <div className="flex flex-col gap-8 lg:flex-row">
109 |           {/* Filters */}
110 |           <div className="w-full lg:w-1/5">
111 |             <div className="sticky top-24 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] rounded-lg shadow-sm">
112 |               <h2 className="text-lg font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))] p-4 border-b border-gray-200 dark:border-[rgb(var(--color-dark-border))]">Филтри</h2>
113 |               <div className="p-4 space-y-4">
114 |                 <div>
115 |                   <label htmlFor="type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
116 |                     Тип имот
117 |                   </label>
118 |                   <select
119 |                     id="type"
120 |                     value={currentType}
121 |                     onChange={(e) => handleFilterChange({ type: e.target.value })}
122 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
123 |                   >
124 |                     <option value="">Всички</option>
125 |                     {Object.entries(propertyTypeLabels).map(([value, label]) => (
126 |                       <option key={value} value={value}>
127 |                         {label}
128 |                       </option>
129 |                     ))}
130 |                   </select>
131 |                 </div>
132 | 
133 |                 <div>
134 |                   <label htmlFor="category" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
135 |                     Категория
136 |                   </label>
137 |                   <select
138 |                     id="category"
139 |                     value={currentCategory || ''}
140 |                     onChange={(e) => handleFilterChange({ category: e.target.value as 'RENT' | 'SALE' | undefined })}
141 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
142 |                   >
143 |                     <option value="">Всички</option>
144 |                     {Object.entries(categoryLabels).map(([value, label]) => (
145 |                       <option key={value} value={value}>
146 |                         {label}
147 |                       </option>
148 |                     ))}
149 |                   </select>
150 |                 </div>
151 | 
152 |                 <div>
153 |                   <label htmlFor="location_type" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
154 |                     Локация
155 |                   </label>
156 |                   <select
157 |                     id="location_type"
158 |                     value={currentLocationType}
159 |                     onChange={(e) => {
160 |                       const value = e.target.value;
161 |                       handleFilterChange({ 
162 |                         location_type: value === '' ? undefined : value as 'CITY' | 'REGION'
163 |                       });
164 |                     }}
165 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
166 |                   >
167 |                     <option value="">Всички</option>
168 |                     {locationTypes.map(({ value, label }) => (
169 |                       <option key={value} value={value}>
170 |                         {label}
171 |                       </option>
172 |                     ))}
173 |                   </select>
174 |                 </div>
175 | 
176 |                 <div>
177 |                   <label htmlFor="minPrice" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
178 |                     Минимална цена
179 |                   </label>
180 |                   <input
181 |                     type="number"
182 |                     id="minPrice"
183 |                     value={currentMinPrice || ''}
184 |                     onChange={(e) => handleFilterChange({ minPrice: e.target.value ? Number(e.target.value) : undefined })}
185 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
186 |                   />
187 |                 </div>
188 | 
189 |                 <div>
190 |                   <label htmlFor="maxPrice" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
191 |                     Максимална цена
192 |                   </label>
193 |                   <input
194 |                     type="number"
195 |                     id="maxPrice"
196 |                     value={currentMaxPrice || ''}
197 |                     onChange={(e) => handleFilterChange({ maxPrice: e.target.value ? Number(e.target.value) : undefined })}
198 |                     className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500"
199 |                   />
200 |                 </div>
201 |               </div>
202 |             </div>
203 |           </div>
204 | 
205 |           {/* Properties Grid */}
206 |           <div className="w-full lg:w-4/5">
207 |             <div className="grid grid-cols-1 gap-8 sm:grid-cols-2 xl:grid-cols-3">
208 |               {isLoading ? (
209 |                 Array.from({ length: 6 }).map((_, index) => (
210 |                   <PropertyCardSkeleton key={index} />
211 |                 ))
212 |               ) : properties?.length ? (
213 |                 properties.map((property) => (
214 |                   <PropertyCard key={property.id} {...property} />
215 |                 ))
216 |               ) : (
217 |                 <div className="py-12 text-center col-span-full">
218 |                   <p className="text-lg text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
219 |                     Няма намерени имоти
220 |                   </p>
221 |                 </div>
222 |               )}
223 |             </div>
224 | 
225 |             {/* Pagination */}
226 |             {totalPages > 1 && (
227 |               <div className="mt-8 flex items-center justify-between border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))] pt-4">
228 |                 <div className="flex justify-between flex-1 sm:hidden">
229 |                   <button
230 |                     onClick={() => handlePageChange(currentPage - 1)}
231 |                     disabled={currentPage === 1}
232 |                     className="btn btn-secondary"
233 |                   >
234 |                     Предишна
235 |                   </button>
236 |                   <button
237 |                     onClick={() => handlePageChange(currentPage + 1)}
238 |                     disabled={currentPage === totalPages}
239 |                     className="btn btn-secondary"
240 |                   >
241 |                     Следваща
242 |                   </button>
243 |                 </div>
244 |                 <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
245 |                   <div>
246 |                     <p className="text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
247 |                       Страница <span className="font-medium">{currentPage}</span> от{' '}
248 |                       <span className="font-medium">{totalPages}</span>
249 |                     </p>
250 |                   </div>
251 |                   <div>
252 |                     <nav className="inline-flex -space-x-px rounded-md shadow-sm isolate" aria-label="Pagination">
253 |                       <button
254 |                         onClick={() => handlePageChange(currentPage - 1)}
255 |                         disabled={currentPage === 1}
256 |                         className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:z-20 focus:outline-offset-0 disabled:opacity-50"
257 |                       >
258 |                         <span className="sr-only">Предишна</span>
259 |                         <ChevronLeftIcon className="w-5 h-5" aria-hidden="true" />
260 |                       </button>
261 |                       <button
262 |                         onClick={() => handlePageChange(currentPage + 1)}
263 |                         disabled={currentPage === totalPages}
264 |                         className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:z-20 focus:outline-offset-0 disabled:opacity-50"
265 |                       >
266 |                         <span className="sr-only">Следваща</span>
267 |                         <ChevronRightIcon className="w-5 h-5" aria-hidden="true" />
268 |                       </button>
269 |                     </nav>
270 |                   </div>
271 |                 </div>
272 |               </div>
273 |             )}
274 |           </div>
275 |         </div>
276 |       </div>
277 |     </div>
278 |   );
279 | } 
280 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/PropertyDetails.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect } from 'react';
  2 | import { useParams, Link, useNavigate } from 'react-router-dom';
  3 | import { 
  4 |   BuildingOfficeIcon, 
  5 |   HomeIcon, 
  6 |   MapPinIcon,
  7 |   PhoneIcon,
  8 |   EnvelopeIcon,
  9 |   ArrowLeftIcon,
 10 |   ChevronLeftIcon,
 11 |   ChevronRightIcon,
 12 |   XMarkIcon,
 13 | } from '@heroicons/react/24/outline';
 14 | import { getPropertyById } from '../services/propertyService';
 15 | import { PropertyCardProps } from '../components/properties/PropertyCard';
 16 | import GoogleMap from '../components/maps/GoogleMap';
 17 | import { useQuery } from '@tanstack/react-query';
 18 | import { propertyTypeLabels, locationTypeLabels, categoryLabels } from '../constants/property';
 19 | 
 20 | interface PropertyImage {
 21 |   url: string;
 22 | }
 23 | 
 24 | interface Feature {
 25 |   featureId: number;
 26 |   name: string;
 27 | }
 28 | 
 29 | interface Property extends PropertyCardProps {
 30 |   images?: PropertyImage[];
 31 |   features?: Feature[];
 32 |   floor?: number;
 33 |   total_floors?: number;
 34 |   construction_type?: string;
 35 |   furnishing?: string;
 36 |   has_regulation?: boolean;
 37 |   land_area_sqm?: number;
 38 | }
 39 | 
 40 | function formatPrice(price: number) {
 41 |   return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
 42 | }
 43 | 
 44 | export default function PropertyDetails() {
 45 |   const { id } = useParams();
 46 |   const navigate = useNavigate();
 47 |   const [showContactForm, setShowContactForm] = useState(false);
 48 |   const [activeImage, setActiveImage] = useState(0);
 49 |   const [showFullscreen, setShowFullscreen] = useState(false);
 50 |   const [formData, setFormData] = useState({
 51 |     name: '',
 52 |     email: '',
 53 |     phone: '',
 54 |     message: '',
 55 |   });
 56 | 
 57 |   // Validate ID and navigate if invalid
 58 |   useEffect(() => {
 59 |     if (!id) {
 60 |       navigate('/404');
 61 |     }
 62 |   }, [id, navigate]);
 63 | 
 64 |   // Only proceed with the query if we have a valid ID
 65 |   const { data: property, isLoading, error } = useQuery({
 66 |     queryKey: ['property', id],
 67 |     queryFn: () => getPropertyById(id!),
 68 |     enabled: !!id, // Only run query if ID exists
 69 |   });
 70 | 
 71 |   const handleContactSubmit = async (e: React.FormEvent) => {
 72 |     e.preventDefault();
 73 |     // TODO: Implement contact form submission
 74 |     console.log('Contact form submitted:', formData);
 75 |     setShowContactForm(false);
 76 |   };
 77 | 
 78 |   const handleImageClick = (index: number) => {
 79 |     setActiveImage(index);
 80 |     setShowFullscreen(true);
 81 |   };
 82 | 
 83 |   const handleFullscreenClose = (e: React.MouseEvent) => {
 84 |     // Only close if clicking the backdrop, not the image
 85 |     if (e.target === e.currentTarget) {
 86 |       setShowFullscreen(false);
 87 |     }
 88 |   };
 89 | 
 90 |   const handleKeyDown = (e: KeyboardEvent) => {
 91 |     if (!showFullscreen || !property?.images) return;
 92 |     
 93 |     if (e.key === 'Escape') {
 94 |       setShowFullscreen(false);
 95 |     } else if (e.key === 'ArrowLeft') {
 96 |       setActiveImage((prev) => (prev === 0 ? property.images.length - 1 : prev - 1));
 97 |     } else if (e.key === 'ArrowRight') {
 98 |       setActiveImage((prev) => (prev === property.images.length - 1 ? 0 : prev + 1));
 99 |     }
100 |   };
101 | 
102 |   useEffect(() => {
103 |     window.addEventListener('keydown', handleKeyDown);
104 |     return () => window.removeEventListener('keydown', handleKeyDown);
105 |   }, [showFullscreen, property]);
106 | 
107 |   if (isLoading) {
108 |     return (
109 |       <div className="flex justify-center items-center min-h-screen">
110 |         <div className="w-12 h-12 rounded-full border-t-2 border-b-2 animate-spin border-primary-600"></div>
111 |       </div>
112 |     );
113 |   }
114 | 
115 |   if (error) {
116 |     return (
117 |       <div className="flex flex-col justify-center items-center min-h-screen">
118 |         <h2 className="mb-4 text-2xl font-semibold text-gray-900">Failed to load property details</h2>
119 |         <button 
120 |           onClick={() => navigate(-1)}
121 |           className="px-4 py-2 text-white rounded bg-primary-600 hover:bg-primary-700"
122 |         >
123 |           Go Back
124 |         </button>
125 |       </div>
126 |     );
127 |   }
128 | 
129 |   if (!property) {
130 |     return (
131 |       <div className="flex flex-col justify-center items-center min-h-screen">
132 |         <h2 className="mb-4 text-2xl font-semibold text-gray-900">Property not found</h2>
133 |         <Link 
134 |           to="/properties"
135 |           className="px-4 py-2 text-white rounded bg-primary-600 hover:bg-primary-700"
136 |         >
137 |           View All Properties
138 |         </Link>
139 |       </div>
140 |     );
141 |   }
142 | 
143 |   return (
144 |     <div className="min-h-full bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]">
145 |       <div className="px-4 py-8 mx-auto max-w-7xl sm:px-6 lg:px-8">
146 |         {/* Back button */}
147 |         <Link
148 |           to="/properties"
149 |           className="inline-flex items-center mb-6 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
150 |         >
151 |           <ArrowLeftIcon className="mr-2 w-5 h-5" />
152 |           Обратно към всички имоти
153 |         </Link>
154 | 
155 |         {/* Property Title */}
156 |         <h1 className="mb-6 text-3xl font-bold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
157 |           {property.title}
158 |         </h1>
159 | 
160 |         {/* Property Description */}
161 |         <div className="mb-8">
162 |           <p className="text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-pre-wrap">
163 |             {property.description}
164 |           </p>
165 |         </div>
166 | 
167 |         <div className="grid grid-cols-1 gap-8 lg:grid-cols-3">
168 |           <div className="lg:col-span-2">
169 |             {/* Image Gallery */}
170 |             <div className="space-y-4">
171 |             <div className="overflow-hidden relative w-full rounded-lg" onClick={() => setShowFullscreen(true)}>
172 |                 <img
173 |                   src={property.images?.[activeImage]?.url || '/images/property-placeholder.webp'}
174 |                   alt={property.title}
175 |                   className="object-cover w-full h-auto rounded-lg cursor-pointer"
176 |                   onError={(e) => {
177 |                     const target = e.target as HTMLImageElement;
178 |                     target.onerror = null;
179 |                     target.src = '/images/property-placeholder.webp';
180 |                   }}
181 |                 />
182 |                 {property.images && property.images.length > 1 && (
183 |                   <>
184 |                     <button
185 |                       onClick={(e) => {
186 |                         e.stopPropagation();
187 |                         setActiveImage((prev) => (prev === 0 ? (property.images?.length || 1) - 1 : prev - 1));
188 |                       }}
189 |                       className="absolute left-2 top-1/2 p-2 text-white rounded-full transition-colors -translate-y-1/2 bg-black/50 hover:bg-black/75"
190 |                     >
191 |                       <ChevronLeftIcon className="w-6 h-6" />
192 |                     </button>
193 |                     <button
194 |                       onClick={(e) => {
195 |                         e.stopPropagation();
196 |                         setActiveImage((prev) => (prev === (property.images?.length || 1) - 1 ? 0 : prev + 1));
197 |                       }}
198 |                       className="absolute right-2 top-1/2 p-2 text-white rounded-full transition-colors -translate-y-1/2 bg-black/50 hover:bg-black/75"
199 |                     >
200 |                       <ChevronRightIcon className="w-6 h-6" />
201 |                     </button>
202 |                     <div className="absolute bottom-4 left-1/2 px-3 py-1 text-sm text-white rounded-full -translate-x-1/2 bg-black/50">
203 |                       {activeImage + 1} / {property.images.length}
204 |                     </div>
205 |                   </>
206 |                 )}
207 |               </div>
208 |               {property.images && property.images.length > 1 && (
209 |                 <div className="grid grid-cols-6 gap-2">
210 |                   {property.images.map((img: PropertyImage, index: number) => (
211 |                     <button
212 |                       key={index}
213 |                       onClick={() => handleImageClick(index)}
214 |                       className={`relative aspect-w-16 aspect-h-9 overflow-hidden rounded-lg transition-all ${
215 |                         index === activeImage ? 'ring-2 ring-primary-600 opacity-100' : 'opacity-60 hover:opacity-100'
216 |                       }`}
217 |                     >
218 |                       <img
219 |                         src={img.url}
220 |                         alt={`Property view ${index + 1}`}
221 |                         className="object-cover w-full h-full"
222 |                         onError={(e) => {
223 |                           const target = e.target as HTMLImageElement;
224 |                           target.onerror = null;
225 |                           target.src = '/images/property-placeholder.webp';
226 |                         }}
227 |                       />
228 |                     </button>
229 |                   ))}
230 |                 </div>
231 |               )}
232 |             </div>
233 | 
234 |             {/* Property Details */}
235 |             <div className="mt-8 p-6 bg-white rounded-lg shadow dark:bg-[rgb(var(--color-dark-bg-secondary))]">
236 |               <h2 className="mb-4 text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Детайли за имота</h2>
237 |               <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
238 |                 <div>
239 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Тип имот</h3>
240 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
241 |                     {propertyTypeLabels[property.type] || property.type}
242 |                   </p>
243 |                 </div>
244 |                 <div>
245 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Категория</h3>
246 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
247 |                     {categoryLabels[property.category] || property.category}
248 |                   </p>
249 |                 </div>
250 |                 <div>
251 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Тип локация</h3>
252 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
253 |                     {locationTypeLabels[property.location_type] || property.location_type}
254 |                   </p>
255 |                 </div>
256 |                 <div>
257 |                   <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Площ</h3>
258 |                   <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.area_sqm} м²</p>
259 |                 </div>
260 |                 {property.land_area_sqm && (
261 |                   <div>
262 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Площ на парцела</h3>
263 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.land_area_sqm} м²</p>
264 |                   </div>
265 |                 )}
266 |                 {property.floor && (
267 |                   <div>
268 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Етаж</h3>
269 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.floor} от {property.total_floors || '?'}</p>
270 |                   </div>
271 |                 )}
272 |                 {property.construction_type && (
273 |                   <div>
274 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Строителство</h3>
275 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.construction_type}</p>
276 |                   </div>
277 |                 )}
278 |                 {property.furnishing && (
279 |                   <div>
280 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Обзавеждане</h3>
281 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.furnishing}</p>
282 |                   </div>
283 |                 )}
284 |                 {property.has_regulation !== undefined && (
285 |                   <div>
286 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Регулация</h3>
287 |                     <p className="mt-1 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{property.has_regulation ? 'Да' : 'Не'}</p>
288 |                   </div>
289 |                 )}
290 |                 {property.features && property.features.length > 0 && (
291 |                   <div className="sm:col-span-2">
292 |                     <h3 className="text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">Характеристики</h3>
293 |                     <div className="mt-1 flex flex-wrap gap-2">
294 |                       {property.features.map((feature: Feature) => (
295 |                         <span 
296 |                           key={feature.featureId} 
297 |                           className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200"
298 |                         >
299 |                           {feature.name}
300 |                         </span>
301 |                       ))}
302 |                     </div>
303 |                   </div>
304 |                 )}
305 |               </div>
306 |             </div>
307 |           </div>
308 | 
309 |           {/* Sidebar */}
310 |           <div className="space-y-6">
311 |             {/* Price Card */}
312 |             <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
313 |               <div className="mb-4 text-3xl font-bold text-primary-600">
314 |                 {formatPrice(property.price)}
315 |                 <span className="ml-1 text-xl">{property.currency}</span>
316 |               </div>
317 |               <div className="space-y-4">
318 |                 <button
319 |                   onClick={() => setShowContactForm(true)}
320 |                   className="px-4 py-2 w-full text-white bg-primary-600 rounded-md transition-colors hover:bg-primary-700"
321 |                 >
322 |                   Изпратете запитване
323 |                 </button>
324 |                 <div className="space-y-2">
325 |                   <a
326 |                     href="tel:082519851"
327 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
328 |                   >
329 |                     <PhoneIcon className="w-5 h-5" />
330 |                     082/51-98-51
331 |                   </a>
332 |                   <a
333 |                     href="tel:0895606165"
334 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
335 |                   >
336 |                     <PhoneIcon className="w-5 h-5" />
337 |                     0895606165
338 |                   </a>
339 |                   <a
340 |                     href="mailto:avalon_ds@abv.bg"
341 |                     className="flex gap-2 items-center text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
342 |                   >
343 |                     <EnvelopeIcon className="w-5 h-5" />
344 |                     avalon_ds@abv.bg
345 |                   </a>
346 |                 </div>
347 |               </div>
348 |             </div>
349 | 
350 |             {/* Location Map */}
351 |             <div className="p-6 bg-white rounded-lg shadow-sm dark:bg-[rgb(var(--color-dark-bg-secondary))]">
352 |               <h3 className="mb-4 text-lg font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
353 |                 Локация
354 |               </h3>
355 |               <div className="h-[300px] bg-gray-200 dark:bg-[rgb(var(--color-dark-border))] rounded-lg overflow-hidden">
356 |                 <GoogleMap
357 |                   center={{
358 |                     lat: 43.849699,
359 |                     lng: 25.954861,
360 |                   }}
361 |                 />
362 |               </div>
363 |             </div>
364 |           </div>
365 |         </div>
366 | 
367 |         {/* Contact Form Modal */}
368 |         {showContactForm && (
369 |           <div className="flex fixed inset-0 z-50 justify-center items-center p-4 bg-black bg-opacity-50">
370 |             <div className="p-6 w-full max-w-md bg-white rounded-lg dark:bg-[rgb(var(--color-dark-bg-secondary))]">
371 |               <h3 className="mb-4 text-xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
372 |                 Изпратете запитване
373 |               </h3>
374 |               <form onSubmit={handleContactSubmit} className="space-y-4">
375 |                 <div>
376 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
377 |                     Име
378 |                   </label>
379 |                   <input
380 |                     type="text"
381 |                     required
382 |                     value={formData.name}
383 |                     onChange={(e) => setFormData({ ...formData, name: e.target.value })}
384 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
385 |                   />
386 |                 </div>
387 |                 <div>
388 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
389 |                     Имейл
390 |                   </label>
391 |                   <input
392 |                     type="email"
393 |                     required
394 |                     value={formData.email}
395 |                     onChange={(e) => setFormData({ ...formData, email: e.target.value })}
396 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
397 |                   />
398 |                 </div>
399 |                 <div>
400 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
401 |                     Телефон
402 |                   </label>
403 |                   <input
404 |                     type="tel"
405 |                     required
406 |                     value={formData.phone}
407 |                     onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
408 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
409 |                   />
410 |                 </div>
411 |                 <div>
412 |                   <label className="block mb-1 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
413 |                     Съобщение
414 |                   </label>
415 |                   <textarea
416 |                     required
417 |                     rows={4}
418 |                     value={formData.message}
419 |                     onChange={(e) => setFormData({ ...formData, message: e.target.value })}
420 |                     className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
421 |                   />
422 |                 </div>
423 |                 <div className="flex gap-4 justify-end">
424 |                   <button
425 |                     type="button"
426 |                     onClick={() => setShowContactForm(false)}
427 |                     className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))] hover:text-primary-600 dark:hover:text-primary-500"
428 |                   >
429 |                     Отказ
430 |                   </button>
431 |                   <button
432 |                     type="submit"
433 |                     className="px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
434 |                   >
435 |                     Изпрати
436 |                   </button>
437 |                 </div>
438 |               </form>
439 |             </div>
440 |           </div>
441 |         )}
442 | 
443 |         {/* Fullscreen Image Modal */}
444 |         {showFullscreen && property.images && (
445 |           <div 
446 |             className="flex fixed inset-0 z-50 justify-center items-center bg-black/90"
447 |             onClick={handleFullscreenClose}
448 |           >
449 |             <div className="flex relative justify-center items-center w-full h-full">
450 |               {/* Close button */}
451 |               <button
452 |                 onClick={() => setShowFullscreen(false)}
453 |                 className="absolute top-4 right-4 z-50 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
454 |               >
455 |                 <XMarkIcon className="w-6 h-6" />
456 |               </button>
457 | 
458 |               {/* Main Image */}
459 |               <div className="flex relative justify-center items-center p-4 w-full h-full">
460 |                 <img
461 |                   src={property.images[activeImage]?.url || '/images/property-placeholder.webp'}
462 |                   alt={`Property view ${activeImage + 1}`}
463 |                   className="object-contain max-w-full max-h-full"
464 |                   onError={(e) => {
465 |                     const target = e.target as HTMLImageElement;
466 |                     target.onerror = null;
467 |                     target.src = '/images/property-placeholder.webp';
468 |                   }}
469 |                 />
470 | 
471 |                 {property.images.length > 1 && (
472 |                   <>
473 |                     {/* Previous Button */}
474 |                     <button
475 |                       onClick={(e) => {
476 |                         e.stopPropagation();
477 |                         setActiveImage((prev) => (prev === 0 ? property.images!.length - 1 : prev - 1));
478 |                       }}
479 |                       className="absolute left-4 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
480 |                     >
481 |                       <ChevronLeftIcon className="w-8 h-8" />
482 |                     </button>
483 | 
484 |                     {/* Next Button */}
485 |                     <button
486 |                       onClick={(e) => {
487 |                         e.stopPropagation();
488 |                         setActiveImage((prev) => (prev === property.images!.length - 1 ? 0 : prev + 1));
489 |                       }}
490 |                       className="absolute right-4 p-2 text-white rounded-full transition-colors bg-black/50 hover:bg-black/75"
491 |                     >
492 |                       <ChevronRightIcon className="w-8 h-8" />
493 |                     </button>
494 | 
495 |                     {/* Image Counter */}
496 |                     <div className="absolute bottom-4 left-1/2 px-4 py-2 text-white rounded-full -translate-x-1/2 bg-black/50">
497 |                       {activeImage + 1} / {property.images.length}
498 |                     </div>
499 |                   </>
500 |                 )}
501 |               </div>
502 | 
503 |               {/* Thumbnails */}
504 |               <div className="absolute right-0 bottom-0 left-0 p-4">
505 |                 <div className="flex overflow-x-auto gap-2 justify-center pb-2">
506 |                   {property.images.map((img: PropertyImage, index: number) => (
507 |                     <button
508 |                       key={index}
509 |                       onClick={(e) => {
510 |                         e.stopPropagation();
511 |                         setActiveImage(index);
512 |                       }}
513 |                       className={`relative flex-shrink-0 w-20 h-20 rounded-lg overflow-hidden transition-all ${
514 |                         index === activeImage ? 'ring-2 ring-white opacity-100' : 'opacity-50 hover:opacity-100'
515 |                       }`}
516 |                     >
517 |                       <img
518 |                         src={img.url}
519 |                         alt={`Thumbnail ${index + 1}`}
520 |                         className="object-cover w-full h-full"
521 |                         onError={(e) => {
522 |                           const target = e.target as HTMLImageElement;
523 |                           target.onerror = null;
524 |                           target.src = '/images/property-placeholder.webp';
525 |                         }}
526 |                       />
527 |                     </button>
528 |                   ))}
529 |                 </div>
530 |               </div>
531 |             </div>
532 |           </div>
533 |         )}
534 |       </div>
535 |     </div>
536 |   );
537 | } 
538 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Dashboard.tsx:
--------------------------------------------------------------------------------
  1 | import { useQuery } from '@tanstack/react-query';
  2 | import { Link } from 'react-router-dom';
  3 | import {
  4 |   HomeIcon,
  5 |   ChatBubbleLeftRightIcon,
  6 |   UsersIcon,
  7 | } from '@heroicons/react/24/outline';
  8 | import api from '../../lib/api';
  9 | import type { ApiResponse } from '../../types/api';
 10 | 
 11 | interface Stats {
 12 |   properties: number;
 13 |   messages: number;
 14 |   users: number;
 15 | }
 16 | 
 17 | export default function Dashboard() {
 18 |   const { data: stats, isLoading, error } = useQuery<Stats>({
 19 |     queryKey: ['admin', 'stats'],
 20 |     queryFn: async () => {
 21 |       const response = await api.get<Stats>('/admin/stats');
 22 |       console.log('Stats:', response.data);
 23 |       return response.data;
 24 |     }
 25 |   });
 26 | 
 27 |   const cards = [
 28 |     {
 29 |       name: 'Имоти',
 30 |       value: stats?.properties || 0,
 31 |       icon: HomeIcon,
 32 |       to: '/admin/properties',
 33 |       color: 'bg-red-500',
 34 |     },
 35 |     {
 36 |       name: 'Съобщения',
 37 |       value: stats?.messages || 0,
 38 |       icon: ChatBubbleLeftRightIcon,
 39 |       to: '/admin/messages',
 40 |       color: 'bg-blue-500',
 41 |     },
 42 |     {
 43 |       name: 'Потребители',
 44 |       value: stats?.users || 0,
 45 |       icon: UsersIcon,
 46 |       to: '/admin/users',
 47 |       color: 'bg-green-500',
 48 |     },
 49 |   ];
 50 | 
 51 |   if (isLoading) {
 52 |     return (
 53 |       <div className="min-h-screen flex items-center justify-center">
 54 |         <div className="animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-red-600" />
 55 |       </div>
 56 |     );
 57 |   }
 58 | 
 59 |   return (
 60 |     <div className="p-6">
 61 |       <h1 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Табло</h1>
 62 | 
 63 |       <div className="mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
 64 |         {cards.map((card) => (
 65 |           <Link
 66 |             key={card.name}
 67 |             to={card.to}
 68 |             className="relative overflow-hidden rounded-lg bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-5 shadow sm:px-6 hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] transition-colors duration-200"
 69 |           >
 70 |             <dt>
 71 |               <div className={`absolute rounded-md p-3 ${card.color}`}>
 72 |                 <card.icon className="h-6 w-6 text-white" aria-hidden="true" />
 73 |               </div>
 74 |               <p className="ml-16 truncate text-sm font-medium text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
 75 |                 {card.name}
 76 |               </p>
 77 |             </dt>
 78 |             <dd className="ml-16 flex items-baseline">
 79 |               <p className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">{card.value}</p>
 80 |             </dd>
 81 |           </Link>
 82 |         ))}
 83 |       </div>
 84 | 
 85 |       {/* Recent Activity */}
 86 |       <div className="mt-8">
 87 |         <h2 className="text-lg font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Последна активност</h2>
 88 |         <div className="mt-4 bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow overflow-hidden sm:rounded-md">
 89 |           <ul className="divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))]">
 90 |             {/* Add recent activity items here */}
 91 |             <li className="px-4 py-4 sm:px-6">
 92 |               <div className="flex items-center justify-between">
 93 |                 <p className="text-sm font-medium text-gray-900 dark:text-[rgb(var(--color-dark-text))] truncate">
 94 |                   Скоро ще бъде добавена информация за последната активност
 95 |                 </p>
 96 |               </div>
 97 |             </li>
 98 |           </ul>
 99 |         </div>
100 |       </div>
101 |     </div>
102 |   );
103 | } 
104 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/EditProperty.tsx:
--------------------------------------------------------------------------------
  1 | import { useNavigate, useParams, Link } from 'react-router-dom';
  2 | import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
  3 | import { getProperty, updateProperty } from '../../services/properties';
  4 | import PropertyForm from '../../components/admin/PropertyForm';
  5 | import type { CreatePropertyData } from '../../types/api';
  6 | import LoadingSpinner from '../../components/LoadingSpinner';
  7 | import { ArrowLeftIcon } from '@heroicons/react/24/outline';
  8 | 
  9 | export default function EditProperty() {
 10 |   const { id } = useParams<{ id: string }>();
 11 |   const navigate = useNavigate();
 12 |   const queryClient = useQueryClient();
 13 | 
 14 |   const { data: property, isLoading } = useQuery({
 15 |     queryKey: ['property', id],
 16 |     queryFn: () => getProperty(id!),
 17 |     enabled: !!id,
 18 |   });
 19 | 
 20 |   const { mutate, isPending } = useMutation({
 21 |     mutationFn: async ({ data, images }: { data: CreatePropertyData; images: File[] }) => {
 22 |       const formData = new FormData();
 23 |       
 24 |       // Append property data
 25 |       Object.entries(data).forEach(([key, value]) => {
 26 |         if (key === 'contact_info') {
 27 |           formData.append(key, JSON.stringify(value));
 28 |         } else if (value !== undefined && value !== null) {
 29 |           formData.append(key, String(value));
 30 |         }
 31 |       });
 32 | 
 33 |       // Append images
 34 |       images.forEach((file) => {
 35 |         formData.append('image', file);
 36 |       });
 37 | 
 38 |       return updateProperty(id!, formData);
 39 |     },
 40 |     onSuccess: () => {
 41 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
 42 |       queryClient.invalidateQueries({ queryKey: ['property', id] });
 43 |       navigate('/admin/properties');
 44 |     },
 45 |   });
 46 | 
 47 |   const handleSubmit = async (data: CreatePropertyData, images: File[]) => {
 48 |     mutate({ data, images });
 49 |   };
 50 | 
 51 |   if (isLoading) {
 52 |     return (
 53 |       <div className="flex justify-center items-center h-96">
 54 |         <LoadingSpinner />
 55 |       </div>
 56 |     );
 57 |   }
 58 | 
 59 |   if (!property) {
 60 |     return (
 61 |       <div className="text-center py-12">
 62 |         <h2 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имотът не е намерен</h2>
 63 |         <p className="mt-2 text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">Този имот не съществува или е бил изтрит</p>
 64 |         <button
 65 |           onClick={() => navigate('/admin/properties')}
 66 |           className="mt-4 px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
 67 |         >
 68 |           Към списъка с имоти
 69 |         </button>
 70 |       </div>
 71 |     );
 72 |   }
 73 | 
 74 |   return (
 75 |     <div className="container mx-auto px-4 py-8">
 76 |       <div className="mb-8">
 77 |         <Link
 78 |           to="/admin/properties"
 79 |           className="inline-flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900 dark:text-[rgb(var(--color-dark-text-secondary))] dark:hover:text-[rgb(var(--color-dark-text))]"
 80 |         >
 81 |           <ArrowLeftIcon className="w-4 h-4" />
 82 |           Назад
 83 |         </Link>
 84 |         <h1 className="mt-2 text-2xl font-bold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Редактиране на имот</h1>
 85 |         <div className="flex items-center mt-2">
 86 |           <p className="text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
 87 |             Редактирайте информацията за имота
 88 |           </p>
 89 |           <Link
 90 |             to={`/properties/${id}`}
 91 |             target="_blank"
 92 |             className="ml-4 inline-flex items-center px-3 py-1 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] bg-gray-100 dark:bg-[rgb(var(--color-dark-border))] rounded-md hover:bg-gray-200 dark:hover:bg-[rgb(var(--color-dark-bg))] transition-colors"
 93 |           >
 94 |             <span>Преглед на имота</span>
 95 |             <svg xmlns="http://www.w3.org/2000/svg" className="ml-1.5 w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 96 |               <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
 97 |             </svg>
 98 |           </Link>
 99 |         </div>
100 |       </div>
101 | 
102 |       <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-md rounded-lg p-6">
103 |         <PropertyForm
104 |           initialData={property}
105 |           onSubmit={handleSubmit}
106 |           isSubmitting={isPending}
107 |           onCancel={() => navigate('/admin/properties')}
108 |           submitLabel="Запази промените"
109 |         />
110 |       </div>
111 |     </div>
112 |   );
113 | } 
114 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Login.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useMutation } from '@tanstack/react-query';
  3 | import { useNavigate, useLocation } from 'react-router-dom';
  4 | import { z } from 'zod';
  5 | import { login as loginApi } from '../../services/auth';
  6 | import { useAuth } from '../../contexts/auth';
  7 | import type { AuthResponse } from '../../types/api';
  8 | 
  9 | const loginSchema = z.object({
 10 |   email: z.string().email('Невалиден имейл адрес'),
 11 |   password: z.string().min(6, 'Паролата трябва да е поне 6 символа'),
 12 | });
 13 | 
 14 | type LoginForm = z.infer<typeof loginSchema>;
 15 | 
 16 | export default function Login() {
 17 |   const navigate = useNavigate();
 18 |   const location = useLocation();
 19 |   const { setUser } = useAuth();
 20 |   const from = (location.state as { from?: { pathname: string } })?.from?.pathname || '/admin';
 21 | 
 22 |   const [formData, setFormData] = useState<LoginForm>({
 23 |     email: '',
 24 |     password: '',
 25 |   });
 26 | 
 27 |   const [errors, setErrors] = useState<Partial<LoginForm>>({});
 28 | 
 29 |   const { mutate, isPending } = useMutation<AuthResponse, Error, LoginForm>({
 30 |     mutationFn: loginApi,
 31 |     onSuccess: (data) => {
 32 |       console.log('Mutation success response:', data);
 33 |       localStorage.setItem('token', data.token);
 34 |       setUser({
 35 |         ...data.user,
 36 |         role: data.user.role.toUpperCase() as 'ADMIN' | 'USER'
 37 |       });
 38 |       navigate(from);
 39 |     },
 40 |     onError: (error) => {
 41 |       console.error('Login error:', error);
 42 |       setErrors({
 43 |         email: 'Невалиден имейл или парола',
 44 |         password: 'Невалиден имейл или парола',
 45 |       });
 46 |     },
 47 |   });
 48 | 
 49 |   const handleSubmit = async (e: React.FormEvent) => {
 50 |     e.preventDefault();
 51 |     setErrors({});
 52 | 
 53 |     try {
 54 |       const validatedData = loginSchema.parse(formData);
 55 |       mutate(validatedData);
 56 |     } catch (err) {
 57 |       if (err instanceof z.ZodError) {
 58 |         const fieldErrors: Partial<LoginForm> = {};
 59 |         err.errors.forEach((error) => {
 60 |           if (error.path[0]) {
 61 |             fieldErrors[error.path[0] as keyof LoginForm] = error.message;
 62 |           }
 63 |         });
 64 |         setErrors(fieldErrors);
 65 |       }
 66 |     }
 67 |   };
 68 | 
 69 |   return (
 70 |     <div className="flex items-center justify-center min-h-screen px-4 py-12 bg-white dark:bg-[rgb(var(--color-dark-bg))] sm:px-6 lg:px-8">
 71 |       <div className="w-full max-w-md space-y-8">
 72 |         <div>
 73 |           <h2 className="mt-6 text-3xl font-bold text-center text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
 74 |             Вход в администрацията
 75 |           </h2>
 76 |         </div>
 77 |         <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
 78 |           <div className="-space-y-px rounded-md shadow-sm">
 79 |             <div>
 80 |               <label htmlFor="email" className="sr-only">
 81 |                 Имейл
 82 |               </label>
 83 |               <input
 84 |                 id="email"
 85 |                 name="email"
 86 |                 type="email"
 87 |                 autoComplete="email"
 88 |                 required
 89 |                 value={formData.email}
 90 |                 onChange={(e) => setFormData({ ...formData, email: e.target.value })}
 91 |                 className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${
 92 |                   errors.email
 93 |                     ? 'border-red-300 dark:border-red-500 focus:ring-red-500 focus:border-red-500'
 94 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:ring-primary-500 focus:border-primary-500'
 95 |                 } placeholder-gray-500 dark:placeholder-[rgb(var(--color-dark-text-secondary))] text-gray-900 dark:text-[rgb(var(--color-dark-text))] dark:bg-[rgb(var(--color-dark-bg))] rounded-t-md focus:outline-none focus:z-10 sm:text-sm`}
 96 |                 placeholder="Имейл адрес"
 97 |               />
 98 |               {errors.email && (
 99 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.email}</p>
100 |               )}
101 |             </div>
102 |             <div>
103 |               <label htmlFor="password" className="sr-only">
104 |                 Парола
105 |               </label>
106 |               <input
107 |                 id="password"
108 |                 name="password"
109 |                 type="password"
110 |                 autoComplete="current-password"
111 |                 required
112 |                 value={formData.password}
113 |                 onChange={(e) => setFormData({ ...formData, password: e.target.value })}
114 |                 className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${
115 |                   errors.password
116 |                     ? 'border-red-300 dark:border-red-500 focus:ring-red-500 focus:border-red-500'
117 |                     : 'border-gray-300 dark:border-[rgb(var(--color-dark-border))] focus:ring-primary-500 focus:border-primary-500'
118 |                 } placeholder-gray-500 dark:placeholder-[rgb(var(--color-dark-text-secondary))] text-gray-900 dark:text-[rgb(var(--color-dark-text))] dark:bg-[rgb(var(--color-dark-bg))] rounded-b-md focus:outline-none focus:z-10 sm:text-sm`}
119 |                 placeholder="Парола"
120 |               />
121 |               {errors.password && (
122 |                 <p className="mt-1 text-sm text-red-600 dark:text-red-400">{errors.password}</p>
123 |               )}
124 |             </div>
125 |           </div>
126 | 
127 |           <div>
128 |             <button
129 |               type="submit"
130 |               disabled={isPending}
131 |               className="relative flex justify-center w-full px-3 py-2 text-sm font-semibold text-white rounded-md group bg-primary-600 hover:bg-primary-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600 disabled:opacity-50 dark:focus-visible:outline-offset-[rgb(var(--color-dark-bg))]"
132 |             >
133 |               {isPending ? 'Влизане...' : 'Вход'}
134 |             </button>
135 |           </div>
136 |         </form>
137 |       </div>
138 |     </div>
139 |   );
140 | } 
141 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Messages.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  3 | import { CheckIcon, TrashIcon } from '@heroicons/react/24/outline';
  4 | import { getMessages, markMessageAsRead, deleteMessage } from '../../services/messages';
  5 | import { event } from '../../lib/analytics';
  6 | import type { ContactMessage } from '@prisma/client';
  7 | 
  8 | export default function Messages() {
  9 |   const [page, setPage] = useState(1);
 10 |   const limit = 10;
 11 | 
 12 |   const queryClient = useQueryClient();
 13 | 
 14 |   const { data, isLoading, error } = useQuery({
 15 |     queryKey: ['messages', page],
 16 |     queryFn: () => getMessages(page, limit),
 17 |   });
 18 | 
 19 |   const markAsReadMutation = useMutation({
 20 |     mutationFn: markMessageAsRead,
 21 |     onSuccess: () => {
 22 |       queryClient.invalidateQueries({ queryKey: ['messages'] });
 23 |       
 24 |       // Track successful message mark as read
 25 |       event({
 26 |         action: 'message_mark_read',
 27 |         category: 'Admin',
 28 |         label: 'Success'
 29 |       });
 30 |     },
 31 |     onError: (error: any) => {
 32 |       // Track message mark as read error
 33 |       event({
 34 |         action: 'message_mark_read_error',
 35 |         category: 'Admin',
 36 |         label: error.response?.data?.message || 'Unknown error'
 37 |       });
 38 |     }
 39 |   });
 40 | 
 41 |   const deleteMutation = useMutation({
 42 |     mutationFn: deleteMessage,
 43 |     onSuccess: () => {
 44 |       queryClient.invalidateQueries({ queryKey: ['messages'] });
 45 |       
 46 |       // Track successful message deletion
 47 |       event({
 48 |         action: 'message_delete',
 49 |         category: 'Admin',
 50 |         label: 'Success'
 51 |       });
 52 |     },
 53 |     onError: (error: any) => {
 54 |       // Track message deletion error
 55 |       event({
 56 |         action: 'message_delete_error',
 57 |         category: 'Admin',
 58 |         label: error.response?.data?.message || 'Unknown error'
 59 |       });
 60 |     }
 61 |   });
 62 | 
 63 |   const handleMarkAsRead = async (id: string) => {
 64 |     markAsReadMutation.mutate(id);
 65 |   };
 66 | 
 67 |   const handleDelete = async (id: string) => {
 68 |     if (window.confirm('Сигурни ли сте, че искате да изтриете това съобщение?')) {
 69 |       deleteMutation.mutate(id);
 70 |     }
 71 |   };
 72 | 
 73 |   if (isLoading) {
 74 |     return (
 75 |       <div className="flex justify-center items-center h-64">
 76 |         <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
 77 |       </div>
 78 |     );
 79 |   }
 80 | 
 81 |   if (error) {
 82 |     return (
 83 |       <div className="text-center text-red-600 p-4">
 84 |         Възникна грешка при зареждането на съобщенията
 85 |       </div>
 86 |     );
 87 |   }
 88 | 
 89 |   return (
 90 |     <div className="px-4 sm:px-6 lg:px-8">
 91 |       <div className="sm:flex sm:items-center">
 92 |         <div className="sm:flex-auto">
 93 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Съобщения</h1>
 94 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 95 |             Списък с всички съобщения от контактната форма
 96 |           </p>
 97 |         </div>
 98 |       </div>
 99 | 
100 |       <div className="mt-8 flex flex-col">
101 |         <div className="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
102 |           <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
103 |             <div className="overflow-hidden shadow ring-1 ring-black/5 dark:ring-[rgb(var(--color-dark-border))] md:rounded-lg">
104 |               <table className="min-w-full divide-y divide-gray-300 dark:divide-[rgb(var(--color-dark-border))]">
105 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
106 |                   <tr>
107 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
108 |                       Име
109 |                     </th>
110 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
111 |                       Имейл
112 |                     </th>
113 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
114 |                       Съобщение
115 |                     </th>
116 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
117 |                       Дата
118 |                     </th>
119 |                     <th scope="col" className="relative py-3.5 pl-3 pr-4 sm:pr-6">
120 |                       <span className="sr-only">Действия</span>
121 |                     </th>
122 |                   </tr>
123 |                 </thead>
124 |                 <tbody className="bg-white divide-y divide-gray-200 dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:divide-[rgb(var(--color-dark-border))]">
125 |                   {data?.items.map((message: ContactMessage) => (
126 |                     <tr key={message.id} className={message.isRead ? 'bg-gray-50 dark:bg-[rgb(var(--color-dark-bg))]' : 'bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))]'}>
127 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
128 |                         {message.name}
129 |                       </td>
130 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
131 |                         {message.email}
132 |                       </td>
133 |                       <td className="px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
134 |                         {message.message}
135 |                       </td>
136 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-[rgb(var(--color-dark-text-secondary))]">
137 |                         {new Date(message.createdAt).toLocaleDateString('bg-BG', {
138 |                           year: 'numeric',
139 |                           month: 'long',
140 |                           day: 'numeric',
141 |                           hour: '2-digit',
142 |                           minute: '2-digit'
143 |                         })}
144 |                       </td>
145 |                       <td className="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
146 |                         <button
147 |                           onClick={() => handleMarkAsRead(message.id)}
148 |                           className={`${
149 |                             message.isRead 
150 |                               ? 'text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))]' 
151 |                               : 'text-primary-600 dark:text-primary-500 hover:text-primary-700 dark:hover:text-primary-400'
152 |                           }`}
153 |                         >
154 |                           {message.isRead ? 'Прочетено' : 'Маркирай като прочетено'}
155 |                         </button>
156 |                       </td>
157 |                     </tr>
158 |                   ))}
159 |                 </tbody>
160 |               </table>
161 |             </div>
162 |           </div>
163 |         </div>
164 |       </div>
165 | 
166 |       <div className="mt-4 flex items-center justify-between">
167 |         <div className="flex flex-1 justify-between sm:hidden">
168 |           <button
169 |             onClick={() => setPage(p => Math.max(1, p - 1))}
170 |             disabled={page === 1}
171 |             className="relative inline-flex items-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50"
172 |           >
173 |             Предишна
174 |           </button>
175 |           <button
176 |             onClick={() => setPage(p => p + 1)}
177 |             disabled={!data?.hasNextPage}
178 |             className="relative ml-3 inline-flex items-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50"
179 |           >
180 |             Следваща
181 |           </button>
182 |         </div>
183 |         <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
184 |           <div>
185 |             <p className="text-sm text-gray-700 dark:text-gray-300">
186 |               Показване на <span className="font-medium">{((page - 1) * limit) + 1}</span> до{' '}
187 |               <span className="font-medium">
188 |                 {Math.min(page * limit, data?.total || 0)}
189 |               </span>{' '}
190 |               от <span className="font-medium">{data?.total}</span> резултата
191 |             </p>
192 |           </div>
193 |           <div>
194 |             <nav className="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
195 |               <button
196 |                 onClick={() => setPage(p => Math.max(1, p - 1))}
197 |                 disabled={page === 1}
198 |                 className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 focus:z-20 focus:outline-offset-0 disabled:opacity-50"
199 |               >
200 |                 <span className="sr-only">Предишна</span>
201 |                 <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
202 |                   <path fillRule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clipRule="evenodd" />
203 |                 </svg>
204 |               </button>
205 |               <button
206 |                 onClick={() => setPage(p => p + 1)}
207 |                 disabled={!data?.hasNextPage}
208 |                 className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-gray-500 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 focus:z-20 focus:outline-offset-0 disabled:opacity-50"
209 |               >
210 |                 <span className="sr-only">Следваща</span>
211 |                 <svg className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
212 |                   <path fillRule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clipRule="evenodd" />
213 |                 </svg>
214 |               </button>
215 |             </nav>
216 |           </div>
217 |         </div>
218 |       </div>
219 |     </div>
220 |   );
221 | } 
222 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/NewProperty.tsx:
--------------------------------------------------------------------------------
 1 | import { useNavigate } from 'react-router-dom';
 2 | import { useMutation, useQueryClient } from '@tanstack/react-query';
 3 | import { createProperty } from '../../services/properties';
 4 | import PropertyForm from '../../components/admin/PropertyForm';
 5 | import type { CreatePropertyData } from '../../types/api';
 6 | import { XCircleIcon } from '@heroicons/react/24/outline';
 7 | import { event } from '../../lib/analytics';
 8 | 
 9 | export default function NewProperty() {
10 |   const navigate = useNavigate();
11 |   const queryClient = useQueryClient();
12 | 
13 |   const { mutate, isPending, error } = useMutation({
14 |     mutationFn: async ({ data, images }: { data: CreatePropertyData; images: File[] }) => {
15 |       const formData = new FormData();
16 |       formData.append('data', JSON.stringify(data));
17 |       images.forEach((image) => {
18 |         formData.append('images', image);
19 |       });
20 |       return createProperty(formData);
21 |     },
22 |     onSuccess: () => {
23 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
24 |       navigate('/admin/properties');
25 |       
26 |       event({
27 |         action: 'property_create',
28 |         category: 'Admin',
29 |         label: 'Success'
30 |       });
31 |     },
32 |     onError: (error: any) => {
33 |       event({
34 |         action: 'property_create_error',
35 |         category: 'Admin',
36 |         label: error.message || 'Unknown error'
37 |       });
38 |     }
39 |   });
40 | 
41 |   const handleSubmit = async (data: CreatePropertyData, images: File[]) => {
42 |     mutate({ data, images });
43 |   };
44 | 
45 |   return (
46 |     <div className="px-4 py-6 sm:px-6 lg:px-8">
47 |       <div className="sm:flex sm:items-center">
48 |         <div className="sm:flex-auto">
49 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Нов имот</h1>
50 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
51 |             Добавете нов имот в системата
52 |           </p>
53 |         </div>
54 |       </div>
55 | 
56 |       <div className="mt-8">
57 |         <div>
58 |           <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow sm:rounded-md">
59 |             <div className="px-4 py-5 sm:p-6">
60 |               {error && (
61 |                 <div className="mb-4 p-4 rounded-md bg-red-50 dark:bg-red-900/50">
62 |                   <div className="flex">
63 |                     <div className="flex-shrink-0">
64 |                       <XCircleIcon className="h-5 w-5 text-red-400" aria-hidden="true" />
65 |                     </div>
66 |                     <div className="ml-3">
67 |                       <h3 className="text-sm font-medium text-red-800 dark:text-[rgb(var(--color-dark-text))]">
68 |                         Възникна грешка при създаването на имота
69 |                       </h3>
70 |                       <div className="mt-2 text-sm text-red-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
71 |                         {error instanceof Error ? error.message : 'Unknown error'}
72 |                       </div>
73 |                     </div>
74 |                   </div>
75 |                 </div>
76 |               )}
77 | 
78 |               <PropertyForm
79 |                 onSubmit={handleSubmit}
80 |                 isSubmitting={isPending}
81 |                 submitLabel="Създай"
82 |                 onCancel={() => navigate('/admin/properties')}
83 |               />
84 |             </div>
85 |           </div>
86 |         </div>
87 |       </div>
88 |     </div>
89 |   );
90 | } 
91 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/NewUser.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useNavigate } from 'react-router-dom';
  3 | import { useMutation, useQueryClient } from '@tanstack/react-query';
  4 | import { createUser } from '../../services/users';
  5 | import type { CreateUserData } from '../../types/api';
  6 | import { event } from '../../lib/analytics';
  7 | import { XCircleIcon } from '@heroicons/react/24/outline';
  8 | 
  9 | type UserFormProps = {
 10 |   onSubmit: (data: CreateUserData) => void;
 11 |   isSubmitting: boolean;
 12 |   submitLabel: string;
 13 |   onCancel: () => void;
 14 | };
 15 | 
 16 | function UserForm({ onSubmit, isSubmitting, submitLabel, onCancel }: UserFormProps) {
 17 |   const [formData, setFormData] = useState<CreateUserData>({
 18 |     name: '',
 19 |     email: '',
 20 |     password: '',
 21 |     role: 'USER'
 22 |   });
 23 |   const [errors, setErrors] = useState<Record<string, string>>({});
 24 | 
 25 |   const handleSubmit = (e: React.FormEvent) => {
 26 |     e.preventDefault();
 27 |     onSubmit(formData);
 28 |   };
 29 | 
 30 |   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
 31 |     const { name, value } = e.target;
 32 |     setFormData(prev => ({ ...prev, [name]: value }));
 33 |     if (errors[name]) {
 34 |       setErrors(prev => ({ ...prev, [name]: '' }));
 35 |     }
 36 |   };
 37 | 
 38 |   return (
 39 |     <form className="space-y-6" onSubmit={handleSubmit}>
 40 |       <div>
 41 |         <label htmlFor="name" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 42 |           Име
 43 |         </label>
 44 |         <input
 45 |           type="text"
 46 |           id="name"
 47 |           name="name"
 48 |           value={formData.name}
 49 |           onChange={handleChange}
 50 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 51 |           required
 52 |         />
 53 |       </div>
 54 | 
 55 |       <div>
 56 |         <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 57 |           Имейл
 58 |         </label>
 59 |         <input
 60 |           type="email"
 61 |           id="email"
 62 |           name="email"
 63 |           value={formData.email}
 64 |           onChange={handleChange}
 65 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 66 |           required
 67 |         />
 68 |       </div>
 69 | 
 70 |       <div>
 71 |         <label htmlFor="password" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 72 |           Парола
 73 |         </label>
 74 |         <input
 75 |           type="password"
 76 |           id="password"
 77 |           name="password"
 78 |           value={formData.password}
 79 |           onChange={handleChange}
 80 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 81 |           required
 82 |         />
 83 |       </div>
 84 | 
 85 |       <div>
 86 |         <label htmlFor="role" className="block text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
 87 |           Роля
 88 |         </label>
 89 |         <select
 90 |           id="role"
 91 |           name="role"
 92 |           value={formData.role}
 93 |           onChange={handleChange}
 94 |           className="mt-1 block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm"
 95 |           required
 96 |         >
 97 |           <option value="USER">Потребител</option>
 98 |           <option value="ADMIN">Администратор</option>
 99 |         </select>
100 |       </div>
101 | 
102 |       <div className="flex justify-end space-x-3">
103 |         <button
104 |           type="button"
105 |           onClick={onCancel}
106 |           className="px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] bg-white dark:bg-[rgb(var(--color-dark-bg))] border border-gray-300 dark:border-[rgb(var(--color-dark-border))] rounded-md shadow-sm hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-border))] focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-[rgb(var(--color-dark-bg-secondary))]"
107 |         >
108 |           Отказ
109 |         </button>
110 |         <button
111 |           type="submit"
112 |           disabled={isSubmitting}
113 |           className="px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50"
114 |         >
115 |           {submitLabel}
116 |         </button>
117 |       </div>
118 |     </form>
119 |   );
120 | }
121 | 
122 | export default function NewUser() {
123 |   const navigate = useNavigate();
124 |   const queryClient = useQueryClient();
125 | 
126 |   const { mutate, isPending, error } = useMutation({
127 |     mutationFn: (data: CreateUserData) => createUser({ ...data, updatedAt: new Date() }),
128 |     onSuccess: () => {
129 |       queryClient.invalidateQueries({ queryKey: ['users'] });
130 |       navigate('/admin/users');
131 |       
132 |       event({
133 |         action: 'user_create',
134 |         category: 'Admin',
135 |         label: 'Success'
136 |       });
137 |     },
138 |     onError: (error: any) => {
139 |       event({
140 |         action: 'user_create_error',
141 |         category: 'Admin',
142 |         label: error.message || 'Unknown error'
143 |       });
144 |     }
145 |   });
146 | 
147 |   const handleSubmit = async (data: CreateUserData) => {
148 |     mutate(data);
149 |   };
150 | 
151 |   return (
152 |     <div className="px-4 py-6 sm:px-6 lg:px-8">
153 |       <div className="sm:flex sm:items-center">
154 |         <div className="sm:flex-auto">
155 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Нов потребител</h1>
156 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
157 |             Добавете нов потребител в системата
158 |           </p>
159 |         </div>
160 |       </div>
161 | 
162 |       <div className="mt-8">
163 |         <div className="md:grid md:grid-cols-3 md:gap-6">
164 |           <div className="md:col-span-1">
165 |             <div className="px-4 sm:px-0">
166 |               <h3 className="text-lg font-medium leading-6 text-gray-900 dark:text-gray-100">Информация за потребителя</h3>
167 |               <p className="mt-1 text-sm text-gray-600 dark:text-gray-400">
168 |                 Попълнете информацията за потребителя. Всички полета са задължителни.
169 |               </p>
170 |             </div>
171 |           </div>
172 |           <div className="mt-5 md:col-span-2 md:mt-0">
173 |             <div className="bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow sm:rounded-md">
174 |               <div className="px-4 py-5 sm:p-6">
175 |                 {error && (
176 |                   <div className="mb-4 p-4 rounded-md bg-red-50 dark:bg-red-900/50">
177 |                     <div className="flex">
178 |                       <div className="flex-shrink-0">
179 |                         <XCircleIcon className="h-5 w-5 text-red-400" aria-hidden="true" />
180 |                       </div>
181 |                       <div className="ml-3">
182 |                         <h3 className="text-sm font-medium text-red-800 dark:text-red-200">
183 |                           Възникна грешка при създаването на потребителя
184 |                         </h3>
185 |                         <div className="mt-2 text-sm text-red-700 dark:text-red-300">
186 |                           {error instanceof Error ? error.message : 'Unknown error'}
187 |                         </div>
188 |                       </div>
189 |                     </div>
190 |                   </div>
191 |                 )}
192 | 
193 |                 <UserForm
194 |                   onSubmit={handleSubmit}
195 |                   isSubmitting={isPending}
196 |                   submitLabel="Създай"
197 |                   onCancel={() => navigate('/admin/users')}
198 |                 />
199 |               </div>
200 |             </div>
201 |           </div>
202 |         </div>
203 |       </div>
204 |     </div>
205 |   );
206 | } 
207 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Properties.tsx:
--------------------------------------------------------------------------------
  1 | import { useState, useEffect, useMemo } from 'react';
  2 | import { Link } from 'react-router-dom';
  3 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  4 | import { PencilIcon, TrashIcon, PlusIcon, ArrowLeftIcon, MagnifyingGlassIcon, ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';
  5 | import { getProperties, deleteProperty, type Property, type PropertyFilters } from '../../services/propertyService';
  6 | import { event } from '../../lib/analytics';
  7 | import LoadingSpinner from '../../components/LoadingSpinner';
  8 | import { propertyTypeLabels, locationTypeLabels, categoryLabels, currencyLabels } from '../../constants/property';
  9 | import { useDebounce } from '../../hooks/useDebounce';
 10 | 
 11 | function formatPrice(price: number) {
 12 |   return new Intl.NumberFormat('bg-BG', {
 13 |     maximumFractionDigits: 0,
 14 |   }).format(price);
 15 | }
 16 | 
 17 | export default function Properties() {
 18 |   const [currentPage, setCurrentPage] = useState(1);
 19 |   const [searchQuery, setSearchQuery] = useState('');
 20 |   const debouncedSearch = useDebounce(searchQuery, 300);
 21 |   const queryClient = useQueryClient();
 22 | 
 23 |   const filters = useMemo(() => ({
 24 |     search: debouncedSearch,
 25 |   }), [debouncedSearch]);
 26 | 
 27 |   const { data, isLoading, error, refetch } = useQuery({
 28 |     queryKey: ['properties', currentPage, debouncedSearch],
 29 |     queryFn: () => getProperties(filters, currentPage),
 30 |   });
 31 | 
 32 |   const properties = data?.properties || [];
 33 |   const totalPages = data?.pages || 1;
 34 | 
 35 |   const deleteMutation = useMutation({
 36 |     mutationFn: deleteProperty,
 37 |     onSuccess: () => {
 38 |       queryClient.invalidateQueries({ queryKey: ['properties'] });
 39 |     },
 40 |   });
 41 | 
 42 |   const handleDelete = async (id: string) => {
 43 |     if (window.confirm('Сигурни ли сте, че искате да изтриете този имот?')) {
 44 |       try {
 45 |         await deleteMutation.mutateAsync(id);
 46 |       } catch (error) {
 47 |         console.error('Failed to delete property:', error);
 48 |         alert('Възникна грешка при изтриването на имота');
 49 |       }
 50 |     }
 51 |   };
 52 | 
 53 |   return (
 54 |     <div className="py-6">
 55 |       <div className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
 56 |         <div className="flex justify-between items-center mb-6">
 57 |           <h1 className="text-2xl font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">Имоти</h1>
 58 |           <Link
 59 |             to="/admin/properties/new"
 60 |             className="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
 61 |           >
 62 |             <PlusIcon className="w-5 h-5 mr-2" />
 63 |             Добави имот
 64 |           </Link>
 65 |         </div>
 66 | 
 67 |         <div className="mb-6">
 68 |           <div className="relative">
 69 |             <input
 70 |               type="text"
 71 |               value={searchQuery}
 72 |               onChange={(e) => setSearchQuery(e.target.value)}
 73 |               placeholder="Търси по заглавие..."
 74 |               className="block w-full rounded-md border-gray-300 dark:border-[rgb(var(--color-dark-border))] shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-[rgb(var(--color-dark-bg))] dark:text-[rgb(var(--color-dark-text))] sm:text-sm"
 75 |             />
 76 |             <div className="absolute inset-y-0 right-0 flex items-center pr-3">
 77 |               <MagnifyingGlassIcon className="w-5 h-5 text-gray-400" />
 78 |             </div>
 79 |           </div>
 80 |         </div>
 81 | 
 82 |         {isLoading ? (
 83 |           <div className="flex justify-center items-center min-h-[400px]">
 84 |             <LoadingSpinner />
 85 |           </div>
 86 |         ) : error ? (
 87 |           <div className="flex flex-col items-center justify-center min-h-[400px] p-4">
 88 |             <p className="mb-4 text-center text-red-600">
 89 |               {error instanceof Error ? error.message : 'Възникна грешка при зареждането на имотите'}
 90 |             </p>
 91 |             <button
 92 |               onClick={() => refetch()}
 93 |               className="px-4 py-2 text-white bg-red-600 rounded transition-colors hover:bg-red-700"
 94 |             >
 95 |               Опитайте отново
 96 |             </button>
 97 |           </div>
 98 |         ) : properties.length === 0 ? (
 99 |           <div className="p-8 text-center">
100 |             <h3 className="mb-4 text-lg font-medium text-gray-900">Няма намерени имоти</h3>
101 |             <Link
102 |               to="/admin/properties/new"
103 |               className="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md border border-transparent shadow-sm hover:bg-red-700"
104 |             >
105 |               <PlusIcon className="mr-2 -ml-1 w-5 h-5" aria-hidden="true" />
106 |               Добави нов имот
107 |             </Link>
108 |           </div>
109 |         ) : (
110 |           <div className="overflow-hidden bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] shadow-sm sm:rounded-lg">
111 |             <div className="overflow-x-auto">
112 |               <table className="min-w-full divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))]">
113 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
114 |                   <tr>
115 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
116 |                       Снимка
117 |                     </th>
118 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
119 |                       Заглавие
120 |                     </th>
121 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
122 |                       Тип
123 |                     </th>
124 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
125 |                       Локация
126 |                     </th>
127 |                     <th className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
128 |                       Цена
129 |                     </th>
130 |                     <th className="relative py-3.5 pl-3 pr-4 sm:pr-6">
131 |                       <span className="sr-only">Действия</span>
132 |                     </th>
133 |                   </tr>
134 |                 </thead>
135 |                 <tbody className="divide-y divide-gray-200 dark:divide-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))]">
136 |                   {properties.map((property) => (
137 |                     <tr key={property.id}>
138 |                       <td className="whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6">
139 |                         <div className="h-10 w-10 flex-shrink-0">
140 |                           <img
141 |                             src={property.images?.[0]?.url || '/images/property-placeholder.webp'}
142 |                             alt=""
143 |                             className="h-10 w-10 rounded-full object-cover"
144 |                             onError={(e) => {
145 |                               const target = e.target as HTMLImageElement;
146 |                               target.onerror = null;
147 |                               target.src = '/images/property-placeholder.webp';
148 |                             }}
149 |                           />
150 |                         </div>
151 |                       </td>
152 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
153 |                         <Link
154 |                           to={`/admin/properties/${property.id}/edit`}
155 |                           className="hover:text-primary-600 dark:hover:text-primary-500"
156 |                         >
157 |                           {property.title}
158 |                         </Link>
159 |                       </td>
160 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
161 |                         {propertyTypeLabels[property.type]}
162 |                       </td>
163 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
164 |                         {property.region?.name || property.neighborhood?.name}
165 |                       </td>
166 |                       <td className="whitespace-nowrap px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))]">
167 |                         {formatPrice(property.price)} {currencyLabels[property.currency]}
168 |                       </td>
169 |                       <td className="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
170 |                         <div className="flex items-center justify-end gap-2">
171 |                           <Link
172 |                             to={`/admin/properties/${property.id}/edit`}
173 |                             className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
174 |                           >
175 |                             <PencilIcon className="h-5 w-5" aria-hidden="true" />
176 |                           </Link>
177 |                           <button
178 |                             onClick={() => handleDelete(property.id)}
179 |                             className="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300"
180 |                           >
181 |                             <TrashIcon className="h-5 w-5" aria-hidden="true" />
182 |                           </button>
183 |                         </div>
184 |                       </td>
185 |                     </tr>
186 |                   ))}
187 |                 </tbody>
188 |               </table>
189 |             </div>
190 |           </div>
191 |         )}
192 | 
193 |         {totalPages > 1 && (
194 |           <div className="mt-4 flex items-center justify-between border-t border-gray-200 dark:border-[rgb(var(--color-dark-border))] pt-4">
195 |             <div className="flex flex-1 justify-between sm:hidden">
196 |               <button
197 |                 onClick={() => setCurrentPage(currentPage - 1)}
198 |                 disabled={currentPage === 1}
199 |                 className="relative inline-flex items-center rounded-md border border-gray-300 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))]"
200 |               >
201 |                 Предишна
202 |               </button>
203 |               <button
204 |                 onClick={() => setCurrentPage(currentPage + 1)}
205 |                 disabled={currentPage === totalPages}
206 |                 className="relative ml-3 inline-flex items-center rounded-md border border-gray-300 dark:border-[rgb(var(--color-dark-border))] bg-white dark:bg-[rgb(var(--color-dark-bg-secondary))] px-4 py-2 text-sm font-medium text-gray-700 dark:text-[rgb(var(--color-dark-text))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))]"
207 |               >
208 |                 Следваща
209 |               </button>
210 |             </div>
211 |             <div className="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
212 |               <div>
213 |                 <p className="text-sm text-gray-700 dark:text-[rgb(var(--color-dark-text-secondary))]">
214 |                   Показване на страница <span className="font-medium">{currentPage}</span> от{' '}
215 |                   <span className="font-medium">{totalPages}</span>
216 |                 </p>
217 |               </div>
218 |               <div>
219 |                 <nav className="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
220 |                   <button
221 |                     onClick={() => setCurrentPage(currentPage - 1)}
222 |                     disabled={currentPage === 1}
223 |                     className="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))] ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))] focus:z-20 focus:outline-offset-0"
224 |                   >
225 |                     <span className="sr-only">Предишна</span>
226 |                     <ChevronLeftIcon className="h-5 w-5" aria-hidden="true" />
227 |                   </button>
228 |                   <button
229 |                     onClick={() => setCurrentPage(currentPage + 1)}
230 |                     disabled={currentPage === totalPages}
231 |                     className="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 dark:text-[rgb(var(--color-dark-text-secondary))] ring-1 ring-inset ring-gray-300 dark:ring-[rgb(var(--color-dark-border))] hover:bg-gray-50 dark:hover:bg-[rgb(var(--color-dark-bg))] focus:z-20 focus:outline-offset-0"
232 |                   >
233 |                     <span className="sr-only">Следваща</span>
234 |                     <ChevronRightIcon className="h-5 w-5" aria-hidden="true" />
235 |                   </button>
236 |                 </nav>
237 |               </div>
238 |             </div>
239 |           </div>
240 |         )}
241 |       </div>
242 |     </div>
243 |   );
244 | } 
245 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/Users.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from 'react';
  2 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  3 | import { PlusIcon } from '@heroicons/react/24/outline';
  4 | import { Link } from 'react-router-dom';
  5 | import { getUsers, deleteUser } from '../../services/users';
  6 | import { event } from '../../lib/analytics';
  7 | import type { User } from '@prisma/client';
  8 | import { PencilIcon, TrashIcon } from '@heroicons/react/24/outline';
  9 | 
 10 | export default function Users() {
 11 |   const [page, setPage] = useState(1);
 12 |   const limit = 10;
 13 | 
 14 |   const queryClient = useQueryClient();
 15 | 
 16 |   const { data, isLoading, isError, error } = useQuery({
 17 |     queryKey: ['users', page],
 18 |     queryFn: () => getUsers(page, limit),
 19 |     // Add staleTime to prevent unnecessary refetches
 20 |     staleTime: 1000 * 60 * 5, // 5 minutes
 21 |   });
 22 | 
 23 |   const deleteMutation = useMutation({
 24 |     mutationFn: deleteUser,
 25 |     onSuccess: () => {
 26 |       event({
 27 |         action: 'delete_user',
 28 |         category: 'users',
 29 |         label: 'User deleted successfully'
 30 |       });
 31 |       queryClient.invalidateQueries({ queryKey: ['users'] });
 32 |     },
 33 |     onError: (error) => {
 34 |       event({
 35 |         action: 'delete_user_error',
 36 |         category: 'users',
 37 |         label: error instanceof Error ? error.message : 'Unknown error'
 38 |       });
 39 |     },
 40 |   });
 41 | 
 42 |   const handleDelete = async (id: string) => {
 43 |     if (window.confirm('Сигурни ли сте, че искате да изтриете този потребител?')) {
 44 |       deleteMutation.mutate(id);
 45 |     }
 46 |   };
 47 | 
 48 |   const handleNewUserClick = () => {
 49 |     event({
 50 |       action: 'user_create_click',
 51 |       category: 'Admin',
 52 |       label: 'New User Button Click'
 53 |     });
 54 |   };
 55 | 
 56 |   // Show loading state
 57 |   if (isLoading || !data) {
 58 |     return (
 59 |       <div className="px-4 sm:px-6 lg:px-8">
 60 |         <div className="sm:flex sm:items-center">
 61 |           <div className="sm:flex-auto">
 62 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 63 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 64 |               Списък с всички потребители в системата
 65 |             </p>
 66 |           </div>
 67 |         </div>
 68 |         <div className="p-4 text-center text-gray-600 dark:text-gray-400">
 69 |           Зареждане на потребители...
 70 |         </div>
 71 |       </div>
 72 |     );
 73 |   }
 74 | 
 75 |   // Show error state
 76 |   if (isError) {
 77 |     return (
 78 |       <div className="px-4 sm:px-6 lg:px-8">
 79 |         <div className="sm:flex sm:items-center">
 80 |           <div className="sm:flex-auto">
 81 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
 82 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
 83 |               Списък с всички потребители в системата
 84 |             </p>
 85 |           </div>
 86 |         </div>
 87 |         <div className="p-4 text-center text-red-600 dark:text-red-400">
 88 |           Възникна грешка при зареждането на потребителите: {error instanceof Error ? error.message : 'Unknown error'}
 89 |         </div>
 90 |       </div>
 91 |     );
 92 |   }
 93 | 
 94 |   // Show empty state
 95 |   if (!data?.data?.users?.length) {
 96 |     return (
 97 |       <div className="px-4 sm:px-6 lg:px-8">
 98 |         <div className="sm:flex sm:items-center">
 99 |           <div className="sm:flex-auto">
100 |             <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
101 |             <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
102 |               Списък с всички потребители в системата
103 |             </p>
104 |           </div>
105 |           <div className="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
106 |             <Link
107 |               to="new"
108 |               onClick={handleNewUserClick}
109 |               className="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:w-auto"
110 |             >
111 |               <PlusIcon className="w-5 h-5 mr-2 -ml-1" aria-hidden="true" />
112 |               Нов потребител
113 |             </Link>
114 |           </div>
115 |         </div>
116 |         <div className="p-4 text-center text-gray-600 dark:text-gray-400">
117 |           Няма намерени потребители
118 |         </div>
119 |       </div>
120 |     );
121 |   }
122 | 
123 |   // Show users table
124 |   return (
125 |     <div className="px-4 sm:px-6 lg:px-8">
126 |       <div className="sm:flex sm:items-center">
127 |         <div className="sm:flex-auto">
128 |           <h1 className="text-xl font-semibold text-gray-900 dark:text-gray-100">Потребители</h1>
129 |           <p className="mt-2 text-sm text-gray-700 dark:text-gray-300">
130 |             Списък с всички потребители в системата
131 |           </p>
132 |         </div>
133 |         <div className="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
134 |           <Link
135 |             to="new"
136 |             onClick={handleNewUserClick}
137 |             className="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:w-auto"
138 |           >
139 |             <PlusIcon className="w-5 h-5 mr-2 -ml-1" aria-hidden="true" />
140 |             Нов потребител
141 |           </Link>
142 |         </div>
143 |       </div>
144 | 
145 |       <div className="flex flex-col mt-8">
146 |         <div className="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
147 |           <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
148 |             <div className="overflow-hidden shadow ring-1 ring-black/5 dark:ring-[rgb(var(--color-dark-border))] md:rounded-lg">
149 |               <table className="min-w-full divide-y divide-gray-300 dark:divide-[rgb(var(--color-dark-border))]">
150 |                 <thead className="bg-gray-50 dark:bg-[rgb(var(--color-dark-bg-secondary))]">
151 |                   <tr>
152 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
153 |                       Име
154 |                     </th>
155 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
156 |                       Имейл
157 |                     </th>
158 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
159 |                       Роля
160 |                     </th>
161 |                     <th scope="col" className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-[rgb(var(--color-dark-text))]">
162 |                       Дата на регистрация
163 |                     </th>
164 |                     <th scope="col" className="relative py-3.5 pl-3 pr-4 sm:pr-6">
165 |                       <span className="sr-only">Действия</span>
166 |                     </th>
167 |                   </tr>
168 |                 </thead>
169 |                 <tbody className="bg-white divide-y divide-gray-200 dark:bg-[rgb(var(--color-dark-bg-secondary))] dark:divide-[rgb(var(--color-dark-border))]">
170 |                   {data?.data?.users.map((user: User) => (
171 |                     <tr key={user.id}>
172 |                       <td className="px-3 py-4 text-sm text-gray-900 dark:text-[rgb(var(--color-dark-text))] whitespace-nowrap">
173 |                         {user.name}
174 |                       </td>
175 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
176 |                         {user.email}
177 |                       </td>
178 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
179 |                         {user.role === 'ADMIN' ? 'Администратор' : 'Потребител'}
180 |                       </td>
181 |                       <td className="px-3 py-4 text-sm text-gray-600 dark:text-[rgb(var(--color-dark-text-secondary))] whitespace-nowrap">
182 |                         {new Date(user.createdAt).toLocaleDateString('bg-BG')}
183 |                       </td>
184 |                       <td className="relative py-4 pl-3 pr-4 text-sm font-medium text-right whitespace-nowrap sm:pr-6">
185 |                         <div className="flex items-center justify-end gap-2">
186 |                           <Link
187 |                             to={`/admin/users/${user.id}/edit`}
188 |                             className="text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
189 |                           >
190 |                             <PencilIcon className="w-5 h-5" aria-hidden="true" />
191 |                           </Link>
192 |                           <button
193 |                             onClick={() => handleDelete(user.id)}
194 |                             className="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300"
195 |                           >
196 |                             <TrashIcon className="w-5 h-5" aria-hidden="true" />
197 |                           </button>
198 |                         </div>
199 |                       </td>
200 |                     </tr>
201 |                   ))}
202 |                 </tbody>
203 |               </table>
204 |             </div>
205 |           </div>
206 |         </div>
207 |       </div>
208 |     </div>
209 |   );
210 | } 
211 | 


--------------------------------------------------------------------------------
/apps/web/src/pages/admin/__tests__/Login.test.tsx:
--------------------------------------------------------------------------------
  1 | import { render, screen, fireEvent, waitFor, act } from '@testing-library/react';
  2 | import { vi, describe, it, expect, beforeEach, afterEach } from 'vitest';
  3 | import { BrowserRouter } from 'react-router-dom';
  4 | import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
  5 | import Login from '../Login';
  6 | import { AuthProvider } from '../../../contexts/auth';
  7 | import type { User } from '../../../types/api';
  8 | 
  9 | // Mock the auth service
 10 | vi.mock('../../../services/auth', () => ({
 11 |   login: vi.fn(),
 12 |   getCurrentUser: vi.fn(),
 13 | }));
 14 | 
 15 | // Mock the useNavigate hook
 16 | const mockNavigate = vi.fn();
 17 | vi.mock('react-router-dom', async () => {
 18 |   const actual = await vi.importActual('react-router-dom');
 19 |   return {
 20 |     ...actual,
 21 |     useNavigate: () => mockNavigate,
 22 |   };
 23 | });
 24 | 
 25 | const mockUserData: User = {
 26 |   id: 'test-id',
 27 |   email: 'admin@avalon.bg',
 28 |   name: 'Admin',
 29 |   role: 'ADMIN',
 30 |   createdAt: '2025-01-13T20:16:21.392Z',
 31 | };
 32 | 
 33 | const mockToken = 'mock-jwt-token';
 34 | 
 35 | // Mock localStorage
 36 | const mockStorage: { [key: string]: string } = {};
 37 | const mockLocalStorage = {
 38 |   getItem: vi.fn((key: string) => {
 39 |     console.log('Getting from localStorage:', key, mockStorage[key]);
 40 |     return mockStorage[key] || null;
 41 |   }),
 42 |   setItem: vi.fn((key: string, value: string) => {
 43 |     console.log('Setting in localStorage:', key, value);
 44 |     mockStorage[key] = value;
 45 |   }),
 46 |   removeItem: vi.fn((key: string) => {
 47 |     console.log('Removing from localStorage:', key);
 48 |     delete mockStorage[key];
 49 |   }),
 50 |   clear: vi.fn(() => {
 51 |     console.log('Clearing localStorage');
 52 |     Object.keys(mockStorage).forEach(key => delete mockStorage[key]);
 53 |   }),
 54 |   length: 0,
 55 |   key: vi.fn(),
 56 | };
 57 | Object.defineProperty(window, 'localStorage', {
 58 |   value: mockLocalStorage,
 59 | });
 60 | 
 61 | describe('Login Component', () => {
 62 |   let queryClient: QueryClient;
 63 | 
 64 |   beforeEach(() => {
 65 |     queryClient = new QueryClient({
 66 |       defaultOptions: {
 67 |         queries: {
 68 |           retry: false,
 69 |         },
 70 |       },
 71 |     });
 72 |     // Clear localStorage and reset user state before each test
 73 |     mockLocalStorage.clear();
 74 |     // Reset all mocks
 75 |     vi.clearAllMocks();
 76 |     console.log('Test setup complete - localStorage cleared');
 77 |   });
 78 | 
 79 |   afterEach(() => {
 80 |     mockLocalStorage.clear();
 81 |     vi.clearAllMocks();
 82 |     console.log('Test cleanup complete');
 83 |   });
 84 | 
 85 |   const renderLogin = async () => {
 86 |     console.log('Rendering Login component');
 87 |     let component: ReturnType<typeof render>;
 88 |     await act(async () => {
 89 |       component = render(
 90 |         <BrowserRouter>
 91 |           <QueryClientProvider client={queryClient}>
 92 |             <AuthProvider>
 93 |               <Login />
 94 |             </AuthProvider>
 95 |           </QueryClientProvider>
 96 |         </BrowserRouter>
 97 |       );
 98 |     });
 99 |     return component!;
100 |   };
101 | 
102 |   it('should successfully log in and persist user data', async () => {
103 |     const { login } = await import('../../../services/auth');
104 |     console.log('Setting up login test');
105 |     
106 |     // Mock successful login response
107 |     (login as any).mockResolvedValueOnce({
108 |       user: mockUserData,
109 |       token: mockToken,
110 |     });
111 | 
112 |     await renderLogin();
113 | 
114 |     // Fill in the login form
115 |     const emailInput = screen.getByLabelText(/имейл/i);
116 |     const passwordInput = screen.getByLabelText(/парола/i);
117 |     const submitButton = screen.getByRole('button', { name: /вход/i });
118 | 
119 |     fireEvent.change(emailInput, { target: { value: 'admin@avalon.bg' } });
120 |     fireEvent.change(passwordInput, { target: { value: 'password123' } });
121 |     console.log('Submitting login form');
122 |     
123 |     await act(async () => {
124 |       fireEvent.submit(submitButton);
125 |     });
126 | 
127 |     // Wait for the login to complete and check all effects
128 |     await waitFor(() => {
129 |       expect(login).toHaveBeenCalledWith({
130 |         email: 'admin@avalon.bg',
131 |         password: 'password123',
132 |       });
133 |       expect(mockLocalStorage.setItem).toHaveBeenCalledWith('token', mockToken);
134 |       expect(mockNavigate).toHaveBeenCalledWith('/admin');
135 |     });
136 |     console.log('Login test complete');
137 |   });
138 | 
139 |   it('should persist login state after page refresh', async () => {
140 |     const { getCurrentUser } = await import('../../../services/auth');
141 |     console.log('Setting up persistence test');
142 |     
143 |     // Set up initial auth state with token
144 |     mockStorage['token'] = mockToken;
145 |     
146 |     // Set window.location.pathname to /admin/login
147 |     window.location.pathname = '/admin/login';
148 |     
149 |     // Mock getCurrentUser to return user data in the format expected by the auth context
150 |     (getCurrentUser as any).mockImplementation(async () => {
151 |       console.log('getCurrentUser called with token:', mockStorage['token']);
152 |       if (!mockStorage['token']) {
153 |         throw new Error('No token found');
154 |       }
155 |       // Return the user data directly as the auth context expects
156 |       return mockUserData;
157 |     });
158 |     
159 |     console.log('Initial state set:', { token: mockToken, user: mockUserData });
160 | 
161 |     // Render component which should trigger getCurrentUser
162 |     const { container } = await renderLogin();
163 | 
164 |     // Wait for getCurrentUser to be called and return data
165 |     await waitFor(() => {
166 |       expect(getCurrentUser).toHaveBeenCalled();
167 |     });
168 | 
169 |     // Wait for user state to be updated and navigation to occur
170 |     await waitFor(() => {
171 |       const authProvider = container.querySelector('[data-testid="auth-provider"]');
172 |       expect(authProvider).toHaveAttribute('data-user', JSON.stringify({ user: mockUserData }));
173 |       expect(mockNavigate).toHaveBeenCalledWith('/admin');
174 |     }, { timeout: 3000 });
175 | 
176 |     // Verify token remains in localStorage
177 |     expect(mockStorage['token']).toBe(mockToken);
178 |     
179 |     console.log('Persistence test complete');
180 |   });
181 | 
182 |   it('should handle login failure', async () => {
183 |     const { login } = await import('../../../services/auth');
184 |     console.log('Setting up failure test');
185 |     
186 |     // Mock login failure
187 |     (login as any).mockRejectedValueOnce(new Error('Invalid credentials'));
188 | 
189 |     await renderLogin();
190 | 
191 |     // Fill in the login form
192 |     const emailInput = screen.getByLabelText(/имейл/i);
193 |     const passwordInput = screen.getByLabelText(/парола/i);
194 |     const submitButton = screen.getByRole('button', { name: /вход/i });
195 | 
196 |     fireEvent.change(emailInput, { target: { value: 'wrong@email.com' } });
197 |     fireEvent.change(passwordInput, { target: { value: 'wrongpass' } });
198 |     console.log('Submitting invalid credentials');
199 |     
200 |     await act(async () => {
201 |       fireEvent.submit(submitButton);
202 |     });
203 | 
204 |     // Wait for error messages to appear
205 |     await waitFor(() => {
206 |       const errorMessages = screen.getAllByText(/невалиден имейл или парола/i);
207 |       expect(errorMessages).toHaveLength(2);
208 |       expect(mockNavigate).not.toHaveBeenCalled();
209 |       expect(mockLocalStorage.getItem('token')).toBeNull();
210 |     });
211 |     console.log('Failure test complete');
212 |   });
213 | 
214 |   it('should validate form inputs before submission', async () => {
215 |     const { login } = await import('../../../services/auth');
216 |     console.log('Setting up validation test');
217 |     await renderLogin();
218 | 
219 |     const submitButton = screen.getByRole('button', { name: /вход/i });
220 | 
221 |     // Try to submit empty form
222 |     console.log('Submitting empty form');
223 |     await act(async () => {
224 |       fireEvent.submit(submitButton);
225 |     });
226 | 
227 |     // Check for validation messages
228 |     const emailInput = screen.getByLabelText(/имейл/i);
229 |     fireEvent.change(emailInput, { target: { value: 'invalid-email' } });
230 |     console.log('Entered invalid email');
231 |     
232 |     await waitFor(() => {
233 |       expect(screen.getByText('Невалиден имейл адрес')).toBeInTheDocument();
234 |       expect(login).not.toHaveBeenCalled();
235 |     });
236 |     console.log('Validation test complete');
237 |   });
238 | }); 
239 | 


--------------------------------------------------------------------------------
/apps/web/src/services/auth.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { ApiResponse, AuthResponse, User } from '../types/api';
 3 | 
 4 | export interface LoginData {
 5 |   email: string;
 6 |   password: string;
 7 | }
 8 | 
 9 | export interface RegisterData {
10 |   name: string;
11 |   email: string;
12 |   password: string;
13 | }
14 | 
15 | export const login = async (data: LoginData): Promise<AuthResponse> => {
16 |   const response = await api.post<{ user: User; token: string }>('/auth/login', data);
17 |   console.log('Raw API Response:', response);
18 |   console.log('Response data:', response.data);
19 |   return response.data;
20 | };
21 | 
22 | export const register = async (data: RegisterData): Promise<AuthResponse> => {
23 |   const response = await api.post<ApiResponse<AuthResponse>>('/auth/register', data);
24 |   return response.data.data;
25 | };
26 | 
27 | export const getCurrentUser = async (): Promise<User> => {
28 |   try {
29 |     const response = await api.get<{ user: User }>('/auth/me');
30 |     console.log('Get current user response:', response);
31 |     return response.data.user;
32 |   } catch (error) {
33 |     console.error('Failed to get current user:', error);
34 |     throw error;
35 |   }
36 | };
37 | 
38 | export const logout = () => {
39 |   localStorage.removeItem('token');
40 |   window.location.href = '/admin/login';
41 | }; 
42 | 


--------------------------------------------------------------------------------
/apps/web/src/services/contact.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { ApiResponse, ContactMessage, PaginatedResponse } from '../types/api';
 3 | 
 4 | export interface ContactFormData {
 5 |   name: string;
 6 |   email: string;
 7 |   message: string;
 8 | }
 9 | 
10 | export interface MessageFilters {
11 |   page?: number;
12 |   limit?: number;
13 | }
14 | 
15 | export const submitContactForm = async (data: ContactFormData): Promise<ContactMessage> => {
16 |   const response = await api.post<ApiResponse<{ message: ContactMessage }>>('/contact', data);
17 |   return response.data.data.message;
18 | };
19 | 
20 | export const getMessages = async (filters: MessageFilters = {}): Promise<PaginatedResponse<ContactMessage>> => {
21 |   const params = new URLSearchParams();
22 |   if (filters.page) params.append('page', filters.page.toString());
23 |   if (filters.limit) params.append('limit', filters.limit.toString());
24 | 
25 |   const response = await api.get<ApiResponse<PaginatedResponse<ContactMessage>>>(`/contact/messages?${params}`);
26 |   return response.data.data;
27 | };
28 | 
29 | export const markMessageAsRead = async (id: string): Promise<ContactMessage> => {
30 |   const response = await api.patch<ApiResponse<{ message: ContactMessage }>>(`/contact/messages/${id}/read`);
31 |   return response.data.data.message;
32 | };
33 | 
34 | export const deleteMessage = async (id: string): Promise<void> => {
35 |   await api.delete<ApiResponse<null>>(`/contact/messages/${id}`);
36 | }; 
37 | 


--------------------------------------------------------------------------------
/apps/web/src/services/locationService.ts:
--------------------------------------------------------------------------------
 1 | import { ApiResponse } from '../types/api';
 2 | import api from '../lib/api';
 3 | 
 4 | export interface Region {
 5 |   id: number;
 6 |   name: string;
 7 | }
 8 | 
 9 | export interface Neighborhood {
10 |   id: number;
11 |   name: string;
12 | }
13 | 
14 | export interface Feature {
15 |   id: number;
16 |   name: string;
17 |   type: 'INFRASTRUCTURE' | 'BUILDING';
18 | }
19 | 
20 | type RegionsData = {
21 |   regions: Region[];
22 | }
23 | 
24 | type NeighborhoodsData = {
25 |   neighborhoods: Neighborhood[];
26 | }
27 | 
28 | type FeaturesData = {
29 |   features: Feature[];
30 | }
31 | 
32 | export async function getRegions(): Promise<Region[]> {
33 |   try {
34 |     const { data } = await api.get<RegionsData>('/locations/regions');
35 |     return data.regions;
36 |   } catch (error) {
37 |     console.error('Error fetching regions:', error);
38 |     return [];
39 |   }
40 | }
41 | 
42 | export async function getNeighborhoods(): Promise<Neighborhood[]> {
43 |   try {
44 |     const { data } = await api.get<NeighborhoodsData>('/locations/neighborhoods');
45 |     return data.neighborhoods;
46 |   } catch (error) {
47 |     console.error('Error fetching neighborhoods:', error);
48 |     return [];
49 |   }
50 | }
51 | 
52 | export async function getFeatures(): Promise<Feature[]> {
53 |   try {
54 |     const { data } = await api.get<FeaturesData>('/locations/features');
55 |     return data.features;
56 |   } catch (error) {
57 |     console.error('Error fetching features:', error);
58 |     return [];
59 |   }
60 | } 
61 | 


--------------------------------------------------------------------------------
/apps/web/src/services/messages.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { ContactMessage } from '@prisma/client';
 3 | 
 4 | interface MessagesResponse {
 5 |   success: boolean;
 6 |   data: {
 7 |     items: ContactMessage[];
 8 |     total: number;
 9 |     page: number;
10 |     pages: number;
11 |     hasNextPage: boolean;
12 |   };
13 | }
14 | 
15 | interface MessageResponse {
16 |   success: boolean;
17 |   data: {
18 |     message: ContactMessage;
19 |   };
20 | }
21 | 
22 | interface DeleteMessageResponse {
23 |   success: boolean;
24 |   data: null;
25 | }
26 | 
27 | export async function getMessages(page = 1, limit = 10) {
28 |   const response = await api.get<MessagesResponse>(`/contact/messages?page=${page}&limit=${limit}`);
29 |   return response.data;
30 | }
31 | 
32 | export async function markMessageAsRead(id: string) {
33 |   const response = await api.patch<MessageResponse>(`/contact/messages/${id}/read`);
34 |   return response.data;
35 | }
36 | 
37 | export async function deleteMessage(id: string) {
38 |   const response = await api.delete<DeleteMessageResponse>(`/contact/messages/${id}`);
39 |   return response.data;
40 | } 
41 | 


--------------------------------------------------------------------------------
/apps/web/src/services/properties.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { Property, CreatePropertyData } from '../types/api';
 3 | 
 4 | interface PropertiesResponse {
 5 |   properties: Property[];
 6 |   total: number;
 7 |   page: number;
 8 |   pages: number;
 9 | }
10 | 
11 | interface PropertyResponse {
12 |   property: Property;
13 | }
14 | 
15 | export async function getProperties(page: number, limit: number): Promise<PropertiesResponse> {
16 |   const response = await api.get<PropertiesResponse>(`/admin/properties?page=${page}&limit=${limit}`);
17 |   return response.data;
18 | }
19 | 
20 | export async function getProperty(id: string): Promise<Property> {
21 |   const response = await api.get<PropertyResponse>(`/admin/properties/${id}`);
22 |   return response.data.property;
23 | }
24 | 
25 | export async function createProperty(data: FormData): Promise<Property> {
26 |   const response = await api.post<PropertyResponse>('/admin/properties', data, {
27 |     headers: {
28 |       'Content-Type': 'multipart/form-data',
29 |     },
30 |   });
31 |   return response.data.property;
32 | }
33 | 
34 | export async function updateProperty(id: string, data: FormData): Promise<Property> {
35 |   const response = await api.patch<PropertyResponse>(`/admin/properties/${id}`, data, {
36 |     headers: {
37 |       'Content-Type': 'multipart/form-data',
38 |     },
39 |   });
40 |   return response.data.property;
41 | }
42 | 
43 | export async function deleteProperty(id: string): Promise<void> {
44 |   await api.delete(`/admin/properties/${id}`);
45 | } 
46 | 


--------------------------------------------------------------------------------
/apps/web/src/services/propertyService.ts:
--------------------------------------------------------------------------------
  1 | import { PropertyCardProps } from '../components/properties/PropertyCard';
  2 | 
  3 | const API_URL = import.meta.env.VITE_API_URL;
  4 | 
  5 | export interface PropertyFilters {
  6 |   type?: string;
  7 |   location_type?: 'CITY' | 'REGION';
  8 |   region?: string;
  9 |   minPrice?: number;
 10 |   maxPrice?: number;
 11 |   category?: 'RENT' | 'SALE';
 12 |   search?: string;
 13 | }
 14 | 
 15 | export interface PropertyResponse {
 16 |   properties: Property[];
 17 |   total: number;
 18 |   page: number;
 19 |   pages: number;
 20 |   pageSize: number;
 21 | }
 22 | 
 23 | interface PropertyImage {
 24 |   url: string;
 25 | }
 26 | 
 27 | export interface Property {
 28 |   id: string;
 29 |   title: string;
 30 |   description: string;
 31 |   price: number;
 32 |   currency: 'BGN' | 'EUR' | 'USD';
 33 |   area_sqm: number;
 34 |   floor?: number;
 35 |   construction_type?: string;
 36 |   furnishing?: string;
 37 |   location_type: 'CITY' | 'REGION';
 38 |   category: 'SALE' | 'RENT';
 39 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
 40 |   images?: Array<{ id: string; url: string }>;
 41 |   contact_info: {
 42 |     id: string;
 43 |     phone: string;
 44 |     email: string;
 45 |   };
 46 |   region?: {
 47 |     id: number;
 48 |     name: string;
 49 |   };
 50 |   neighborhood?: {
 51 |     id: number;
 52 |     name: string;
 53 |   };
 54 |   createdAt: string;
 55 |   updatedAt: string;
 56 | }
 57 | 
 58 | export async function getProperties(
 59 |   filters: PropertyFilters = {},
 60 |   page = 1,
 61 |   pageSize = 9
 62 | ): Promise<PropertyResponse> {
 63 |   const params = new URLSearchParams();
 64 |   
 65 |   // Add filters to query params
 66 |   if (filters.type) params.append('type', filters.type);
 67 |   if (filters.region) params.append('region', filters.region);
 68 |   if (filters.minPrice) params.append('minPrice', filters.minPrice.toString());
 69 |   if (filters.maxPrice) params.append('maxPrice', filters.maxPrice.toString());
 70 |   if (filters.category) params.append('category', filters.category);
 71 |   if (filters.location_type) params.append('location_type', filters.location_type);
 72 |   if (filters.search) params.append('search', filters.search);
 73 |   
 74 |   // Add pagination params
 75 |   params.append('page', page.toString());
 76 |   params.append('pageSize', pageSize.toString());
 77 | 
 78 |   try {
 79 |     const response = await fetch(`${API_URL}/properties?${params.toString()}`);
 80 |     if (!response.ok) {
 81 |       throw new Error('Failed to fetch properties');
 82 |     }
 83 |     const data = await response.json();
 84 |     return {
 85 |       properties: data.data?.properties || [],
 86 |       total: data.data?.total || 0,
 87 |       page: data.data?.page || 1,
 88 |       pages: data.data?.pages || 1,
 89 |       pageSize: data.data?.pageSize || pageSize
 90 |     };
 91 |   } catch (error) {
 92 |     console.error('Error fetching properties:', error);
 93 |     throw error;
 94 |   }
 95 | }
 96 | 
 97 | export async function getFeaturedProperties(): Promise<PropertyCardProps[]> {
 98 |   try {
 99 |     const response = await fetch(`${API_URL}/properties/featured`);
100 |     if (!response.ok) {
101 |       throw new Error('Failed to fetch featured properties');
102 |     }
103 |     const data = await response.json();
104 |     return data.data.properties;
105 |   } catch (error) {
106 |     console.error('Error fetching featured properties:', error);
107 |     throw error;
108 |   }
109 | }
110 | 
111 | export async function getPropertyById(id: string): Promise<Property> {
112 |   if (!id) {
113 |     throw new Error('Invalid property ID');
114 |   }
115 | 
116 |   try {
117 |     const response = await fetch(`${API_URL}/properties/${id}`);
118 |     const data = await response.json();
119 | 
120 |     if (!response.ok) {
121 |       throw new Error(data.message || 'Failed to fetch property');
122 |     }
123 | 
124 |     if (data.status === 'error') {
125 |       throw new Error(data.message);
126 |     }
127 | 
128 |     if (!data.data?.property) {
129 |       throw new Error('Property not found');
130 |     }
131 | 
132 |     return data.data.property;
133 |   } catch (error) {
134 |     console.error('Failed to fetch property:', error);
135 |     throw error instanceof Error ? error : new Error('Failed to fetch property details');
136 |   }
137 | }
138 | 
139 | export async function deleteProperty(id: string): Promise<void> {
140 |   if (!id) {
141 |     throw new Error('Invalid property ID');
142 |   }
143 | 
144 |   try {
145 |     const response = await fetch(`${API_URL}/properties/${id}`, {
146 |       method: 'DELETE',
147 |       headers: {
148 |         'Content-Type': 'application/json',
149 |       },
150 |     });
151 | 
152 |     if (!response.ok) {
153 |       const data = await response.json();
154 |       throw new Error(data.message || 'Failed to delete property');
155 |     }
156 |   } catch (error) {
157 |     console.error('Failed to delete property:', error);
158 |     throw error instanceof Error ? error : new Error('Failed to delete property');
159 |   }
160 | } 
161 | 


--------------------------------------------------------------------------------
/apps/web/src/services/users.ts:
--------------------------------------------------------------------------------
 1 | import api from '../lib/api';
 2 | import type { User } from '@prisma/client';
 3 | 
 4 | // The shape of data returned by the API
 5 | interface UsersResponse {
 6 |   users: User[];
 7 |   total: number;
 8 |   page: number;
 9 |   pages: number;
10 | }
11 | 
12 | interface UserResponse {
13 |   user: User;
14 | }
15 | 
16 | export async function getUsers(page: number, limit: number) {
17 |   // The axios interceptor transforms response to be the data property from the API response
18 |   return api.get<UsersResponse>(`/admin/users?page=${page}&limit=${limit}`);
19 | }
20 | 
21 | export async function getUser(id: string): Promise<User> {
22 |   const response = await api.get<UserResponse>(`/admin/users/${id}`);
23 |   return response.user;
24 | }
25 | 
26 | export async function createUser(data: Omit<User, 'id' | 'createdAt'>): Promise<User> {
27 |   const response = await api.post<UserResponse>('/admin/users', data);
28 |   return response.user;
29 | }
30 | 
31 | export async function updateUser(id: string, data: Partial<Omit<User, 'id' | 'createdAt'>>): Promise<User> {
32 |   const response = await api.patch<UserResponse>(`/admin/users/${id}`, data);
33 |   return response.user;
34 | }
35 | 
36 | export async function deleteUser(id: string): Promise<void> {
37 |   await api.delete(`/admin/users/${id}`);
38 | } 
39 | 


--------------------------------------------------------------------------------
/apps/web/src/test/setup.ts:
--------------------------------------------------------------------------------
 1 | import '@testing-library/jest-dom';
 2 | import { vi } from 'vitest';
 3 | 
 4 | // Mock localStorage
 5 | const localStorageMock = {
 6 |   getItem: vi.fn(),
 7 |   setItem: vi.fn(),
 8 |   removeItem: vi.fn(),
 9 |   clear: vi.fn(),
10 |   length: 0,
11 |   key: vi.fn(),
12 | } as Storage;
13 | 
14 | global.localStorage = localStorageMock;
15 | 
16 | // Mock window.location
17 | Object.defineProperty(window, 'location', {
18 |   value: {
19 |     href: '',
20 |     assign: vi.fn(),
21 |     replace: vi.fn(),
22 |     reload: vi.fn(),
23 |     toString: vi.fn(),
24 |   },
25 |   writable: true,
26 | }); 
27 | 


--------------------------------------------------------------------------------
/apps/web/src/types/api.ts:
--------------------------------------------------------------------------------
  1 | export interface ApiResponse<T> {
  2 |   status: 'success' | 'error';
  3 |   data: T;
  4 | }
  5 | 
  6 | export interface User {
  7 |   id: string;
  8 |   name: string;
  9 |   email: string;
 10 |   role: 'ADMIN' | 'USER';
 11 |   createdAt: string;
 12 | }
 13 | 
 14 | export interface AuthResponse {
 15 |   user: User;
 16 |   token: string;
 17 | }
 18 | 
 19 | export interface Property {
 20 |   id: string;
 21 |   title: string;
 22 |   description: string;
 23 |   price: number;
 24 |   currency: 'BGN' | 'EUR' | 'USD';
 25 |   area_sqm: number;
 26 |   land_area_sqm?: number;
 27 |   floor?: number;
 28 |   total_floors?: number;
 29 |   construction_type?: string;
 30 |   furnishing?: string;
 31 |   location_type: 'CITY' | 'REGION';
 32 |   regionId?: number;
 33 |   neighborhoodId?: number;
 34 |   has_regulation?: boolean;
 35 |   category: 'SALE' | 'RENT';
 36 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
 37 |   featured?: boolean;
 38 |   features: { featureId: number }[];
 39 |   images: Image[];
 40 |   contact_info: ContactInfo;
 41 |   createdAt: string;
 42 |   updatedAt: string;
 43 | }
 44 | 
 45 | export interface CreatePropertyData {
 46 |   title: string;
 47 |   description: string;
 48 |   price: number;
 49 |   currency: 'BGN' | 'EUR' | 'USD';
 50 |   area_sqm: number;
 51 |   land_area_sqm?: number;
 52 |   floor?: number;
 53 |   total_floors?: number;
 54 |   construction_type?: string;
 55 |   furnishing?: string;
 56 |   location_type: 'CITY' | 'REGION';
 57 |   regionId?: number;
 58 |   neighborhoodId?: number;
 59 |   has_regulation?: boolean;
 60 |   category: 'SALE' | 'RENT';
 61 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
 62 |   featured?: boolean;
 63 |   features?: number[];
 64 |   contact_info: {
 65 |     phone: string;
 66 |     email: string;
 67 |   };
 68 | }
 69 | 
 70 | export interface Image {
 71 |   id: string;
 72 |   url: string;
 73 |   propertyId: string;
 74 |   createdAt: string;
 75 |   updatedAt: string;
 76 | }
 77 | 
 78 | export interface ContactInfo {
 79 |   id: string;
 80 |   phone: string;
 81 |   email: string;
 82 |   propertyId: string;
 83 | }
 84 | 
 85 | export interface ContactMessage {
 86 |   id: string;
 87 |   name: string;
 88 |   email: string;
 89 |   message: string;
 90 |   isRead: boolean;
 91 |   createdAt: string;
 92 |   updatedAt: string;
 93 | }
 94 | 
 95 | export interface PaginatedResponse<T> {
 96 |   properties: T[];
 97 |   total: number;
 98 |   page: number;
 99 |   pages: number;
100 | }
101 | 
102 | export interface ContactFormData {
103 |   name: string;
104 |   email: string;
105 |   message: string;
106 | }
107 | 
108 | export interface CreateUserData {
109 |   name: string;
110 |   email: string;
111 |   password: string;
112 |   role: 'ADMIN' | 'USER';
113 | }
114 | 
115 | export interface PropertyFormData {
116 |   title: string;
117 |   description: string;
118 |   price: number;
119 |   currency: 'BGN' | 'EUR' | 'USD';
120 |   area_sqm: number;
121 |   floor?: number;
122 |   construction_type?: string;
123 |   furnishing?: string;
124 |   location_type: 'CITY' | 'REGION';
125 |   category: 'SALE' | 'RENT';
126 |   type: 'APARTMENT' | 'HOUSE' | 'PLOT' | 'COMMERCIAL' | 'INDUSTRIAL';
127 |   contact_info: {
128 |     phone: string;
129 |     email: string;
130 |   };
131 |   images?: File[];
132 | } 
133 | 


--------------------------------------------------------------------------------
/apps/web/src/vite-env.d.ts:
--------------------------------------------------------------------------------
1 | /// <reference types="vite/client" />
2 | 


--------------------------------------------------------------------------------
/apps/web/tailwind.config.js:
--------------------------------------------------------------------------------
 1 | /** @type {import('tailwindcss').Config} */
 2 | export default {
 3 |   content: [
 4 |     "./index.html",
 5 |     "./src/**/*.{js,ts,jsx,tsx}",
 6 |     "./src/components/**/*.{js,ts,jsx,tsx}",
 7 |     "./src/pages/**/*.{js,ts,jsx,tsx}",
 8 |     "./src/layout/**/*.{js,ts,jsx,tsx}"
 9 |   ],
10 |   darkMode: "class",
11 |   theme: {
12 |     extend: {
13 |       colors: {
14 |         primary: {
15 |           50: "rgb(var(--color-primary-50) / <alpha-value>)",
16 |           100: "rgb(var(--color-primary-100) / <alpha-value>)",
17 |           200: "rgb(var(--color-primary-200) / <alpha-value>)",
18 |           300: "rgb(var(--color-primary-300) / <alpha-value>)",
19 |           400: "rgb(var(--color-primary-400) / <alpha-value>)",
20 |           500: "rgb(var(--color-primary-500) / <alpha-value>)",
21 |           600: "rgb(var(--color-primary-600) / <alpha-value>)",
22 |           700: "rgb(var(--color-primary-700) / <alpha-value>)",
23 |           800: "rgb(var(--color-primary-800) / <alpha-value>)",
24 |           900: "rgb(var(--color-primary-900) / <alpha-value>)",
25 |           950: "rgb(var(--color-primary-950) / <alpha-value>)"
26 |         }
27 |       },
28 |       fontFamily: {
29 |         sans: ["Inter var", "system-ui", "sans-serif"]
30 |       }
31 |     }
32 |   },
33 |   plugins: [require("@tailwindcss/forms"), require("@tailwindcss/aspect-ratio")]
34 | };
35 | 


--------------------------------------------------------------------------------
/apps/web/tsconfig.app.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
 4 |     "target": "ES2020",
 5 |     "useDefineForClassFields": true,
 6 |     "lib": ["ES2020", "DOM", "DOM.Iterable"],
 7 |     "module": "ESNext",
 8 |     "skipLibCheck": true,
 9 | 
10 |     /* Bundler mode */
11 |     "moduleResolution": "bundler",
12 |     "allowImportingTsExtensions": true,
13 |     "isolatedModules": true,
14 |     "moduleDetection": "force",
15 |     "noEmit": true,
16 |     "jsx": "react-jsx",
17 | 
18 |     /* Linting */
19 |     "strict": true,
20 |     "noUnusedLocals": true,
21 |     "noUnusedParameters": true,
22 |     "noFallthroughCasesInSwitch": true,
23 |     "noUncheckedSideEffectImports": true
24 |   },
25 |   "include": ["src"]
26 | }
27 | 


--------------------------------------------------------------------------------
/apps/web/tsconfig.json:
--------------------------------------------------------------------------------
1 | {
2 |   "files": [],
3 |   "references": [
4 |     { "path": "./tsconfig.app.json" },
5 |     { "path": "./tsconfig.node.json" }
6 |   ]
7 | }
8 | 


--------------------------------------------------------------------------------
/apps/web/tsconfig.node.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
 4 |     "target": "ES2022",
 5 |     "lib": ["ES2023"],
 6 |     "module": "ESNext",
 7 |     "skipLibCheck": true,
 8 | 
 9 |     /* Bundler mode */
10 |     "moduleResolution": "bundler",
11 |     "allowImportingTsExtensions": true,
12 |     "isolatedModules": true,
13 |     "moduleDetection": "force",
14 |     "noEmit": true,
15 | 
16 |     /* Linting */
17 |     "strict": true,
18 |     "noUnusedLocals": true,
19 |     "noUnusedParameters": true,
20 |     "noFallthroughCasesInSwitch": true,
21 |     "noUncheckedSideEffectImports": true
22 |   },
23 |   "include": ["vite.config.ts"]
24 | }
25 | 


--------------------------------------------------------------------------------
/apps/web/vite.config.ts:
--------------------------------------------------------------------------------
 1 | import { defineConfig } from 'vite'
 2 | import react from '@vitejs/plugin-react-swc'
 3 | import path from 'path'
 4 | 
 5 | // https://vitejs.dev/config/
 6 | export default defineConfig({
 7 |   plugins: [react()],
 8 |   css: {
 9 |     postcss: './postcss.config.js',
10 |   },
11 |   resolve: {
12 |     alias: {
13 |       '@': path.resolve(__dirname, './src'),
14 |     },
15 |   },
16 | })
17 | 


--------------------------------------------------------------------------------
/apps/web/vitest.config.ts:
--------------------------------------------------------------------------------
 1 | /// <reference types="vitest" />
 2 | /// <reference types="vite/client" />
 3 | 
 4 | import { defineConfig } from 'vitest/config';
 5 | import react from '@vitejs/plugin-react';
 6 | 
 7 | export default defineConfig({
 8 |   plugins: [react()],
 9 |   test: {
10 |     globals: true,
11 |     environment: 'happy-dom',
12 |     setupFiles: ['./src/test/setup.ts'],
13 |     include: ['**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
14 |     coverage: {
15 |       provider: 'v8',
16 |       reporter: ['text', 'json', 'html'],
17 |     },
18 |   },
19 | }); 
20 | 


--------------------------------------------------------------------------------
/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "avalon-real-estate",
 3 |   "version": "1.0.0",
 4 |   "private": true,
 5 |   "scripts": {
 6 |     "dev": "turbo run dev",
 7 |     "build": "turbo run build",
 8 |     "lint": "turbo run lint",
 9 |     "format": "prettier --write \"**/*.{ts,tsx,md}\""
10 |   },
11 |   "devDependencies": {
12 |     "@typescript-eslint/eslint-plugin": "^6.19.0",
13 |     "@typescript-eslint/parser": "^6.19.0",
14 |     "eslint": "^8.56.0",
15 |     "eslint-config-prettier": "^9.1.0",
16 |     "prettier": "^3.2.4",
17 |     "turbo": "^1.11.3",
18 |     "typescript": "^5.3.3"
19 |   },
20 |   "engines": {
21 |     "node": ">=18.0.0"
22 |   },
23 |   "packageManager": "pnpm@8.14.1"
24 | }
25 | 


--------------------------------------------------------------------------------
/packages/shared-types/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "@avalon/shared-types",
 3 |   "version": "1.0.0",
 4 |   "private": true,
 5 |   "type": "module",
 6 |   "main": "./dist/index.js",
 7 |   "module": "./dist/index.js",
 8 |   "types": "./dist/index.d.ts",
 9 |   "scripts": {
10 |     "build": "tsup",
11 |     "dev": "tsup --watch",
12 |     "clean": "rm -rf dist"
13 |   },
14 |   "devDependencies": {
15 |     "tsup": "^8.0.0",
16 |     "typescript": "^5.4.2"
17 |   }
18 | }
19 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/admin/index.ts:
--------------------------------------------------------------------------------
1 | export interface AdminStatsResponse {
2 |   properties: number;
3 |   messages: number;
4 |   users: number;
5 | } 
6 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/auth/index.ts:
--------------------------------------------------------------------------------
 1 | import type { User } from '../user';
 2 | 
 3 | export interface RegisterInput {
 4 |   name: string;
 5 |   email: string;
 6 |   password: string;
 7 |   passwordConfirm: string;
 8 | }
 9 | 
10 | export interface LoginInput {
11 |   email: string;
12 |   password: string;
13 | }
14 | 
15 | export interface AuthResponse {
16 |   user: User;
17 |   token: string;
18 | }
19 | 
20 | export interface MeResponse {
21 |   user: User;
22 | } 
23 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/common/api.ts:
--------------------------------------------------------------------------------
 1 | /**
 2 |  * Standard API success response
 3 |  */
 4 | export interface ApiSuccessResponse<T> {
 5 |   status: 'success';
 6 |   data: T;
 7 | }
 8 | 
 9 | /**
10 |  * Standard API error response
11 |  */
12 | export interface ApiErrorResponse {
13 |   status: 'error';
14 |   message: string;
15 |   code?: string;
16 |   errors?: Record<string, string[]>;
17 | }
18 | 
19 | /**
20 |  * Union type for all API responses
21 |  */
22 | export type ApiResponse<T> = ApiSuccessResponse<T> | ApiErrorResponse;
23 | 
24 | /**
25 |  * Common error codes
26 |  */
27 | export enum ApiErrorCode {
28 |   VALIDATION_ERROR = 'VALIDATION_ERROR',
29 |   NOT_FOUND = 'NOT_FOUND',
30 |   UNAUTHORIZED = 'UNAUTHORIZED',
31 |   FORBIDDEN = 'FORBIDDEN',
32 |   INTERNAL_ERROR = 'INTERNAL_ERROR'
33 | } 
34 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/common/pagination.ts:
--------------------------------------------------------------------------------
 1 | /**
 2 |  * Common pagination parameters for requests
 3 |  */
 4 | export interface PaginationParams {
 5 |   page?: number;
 6 |   pageSize?: number;
 7 | }
 8 | 
 9 | /**
10 |  * Common pagination metadata for responses
11 |  */
12 | export interface PaginationMeta {
13 |   total: number;
14 |   page: number;
15 |   pageSize: number;
16 |   totalPages: number;
17 |   hasNextPage: boolean;
18 |   hasPreviousPage: boolean;
19 | }
20 | 
21 | /**
22 |  * Base interface for paginated responses
23 |  */
24 | export interface PaginatedResponse<T> {
25 |   data: T[];
26 |   meta: PaginationMeta;
27 | } 
28 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/contact/index.ts:
--------------------------------------------------------------------------------
 1 | import { PaginationParams, PaginatedResponse } from '../common/pagination';
 2 | 
 3 | /**
 4 |  * Contact message
 5 |  */
 6 | export interface ContactMessage {
 7 |   id: string;
 8 |   name: string;
 9 |   email: string;
10 |   message: string;
11 |   isRead: boolean;
12 |   createdAt: string;
13 |   updatedAt: string;
14 | }
15 | 
16 | /**
17 |  * Contact message creation input
18 |  */
19 | export interface CreateContactMessageInput {
20 |   name: string;
21 |   email: string;
22 |   message: string;
23 | }
24 | 
25 | /**
26 |  * Contact message response
27 |  */
28 | export interface ContactMessageResponse {
29 |   message: ContactMessage;
30 | }
31 | 
32 | /**
33 |  * Contact messages list response
34 |  */
35 | export interface ContactMessagesResponse extends PaginatedResponse<ContactMessage> {} 
36 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/index.ts:
--------------------------------------------------------------------------------
 1 | // Common exports
 2 | export * from './common/api';
 3 | export * from './common/pagination';
 4 | 
 5 | // Property exports
 6 | export * from './property/enums';
 7 | export * from './property/base';
 8 | export * from './property/requests';
 9 | export * from './property/responses';
10 | 
11 | // Contact exports
12 | export * from './contact';
13 | 
14 | // Location exports
15 | export * from './location';
16 | 
17 | // User exports
18 | export {
19 |   UserRole,
20 |   User,
21 |   CreateUserInput,
22 |   UpdateUserInput,
23 |   UserResponse,
24 |   UsersResponse
25 | } from './user';
26 | 
27 | // Admin exports
28 | export * from './admin';
29 | 
30 | // Auth exports
31 | export {
32 |   RegisterInput,
33 |   LoginInput,
34 |   AuthResponse,
35 |   MeResponse
36 | } from './auth'; 
37 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/location/index.ts:
--------------------------------------------------------------------------------
 1 | import { PaginatedResponse } from '../common/pagination';
 2 | 
 3 | /**
 4 |  * Feature type
 5 |  */
 6 | export enum FeatureType {
 7 |   INFRASTRUCTURE = 'INFRASTRUCTURE',
 8 |   BUILDING = 'BUILDING'
 9 | }
10 | 
11 | /**
12 |  * Base location interface
13 |  */
14 | export interface Location {
15 |   id: number;
16 |   name: string;
17 |   createdAt: string;
18 |   updatedAt: string;
19 | }
20 | 
21 | /**
22 |  * Region interface
23 |  */
24 | export interface Region extends Location {}
25 | 
26 | /**
27 |  * Neighborhood interface
28 |  */
29 | export interface Neighborhood extends Location {}
30 | 
31 | /**
32 |  * Feature interface
33 |  */
34 | export interface Feature {
35 |   id: number;
36 |   name: string;
37 |   type: FeatureType;
38 |   createdAt: string;
39 |   updatedAt: string;
40 | }
41 | 
42 | /**
43 |  * Location creation input
44 |  */
45 | export interface CreateLocationInput {
46 |   name: string;
47 | }
48 | 
49 | /**
50 |  * Feature creation input
51 |  */
52 | export interface CreateFeatureInput {
53 |   name: string;
54 |   type: FeatureType;
55 | }
56 | 
57 | /**
58 |  * Region response
59 |  */
60 | export interface RegionResponse {
61 |   region: Region;
62 | }
63 | 
64 | /**
65 |  * Regions list response
66 |  */
67 | export interface RegionsResponse {
68 |   regions: Region[];
69 | }
70 | 
71 | /**
72 |  * Neighborhood response
73 |  */
74 | export interface NeighborhoodResponse {
75 |   neighborhood: Neighborhood;
76 | }
77 | 
78 | /**
79 |  * Neighborhoods list response
80 |  */
81 | export interface NeighborhoodsResponse {
82 |   neighborhoods: Neighborhood[];
83 | }
84 | 
85 | /**
86 |  * Feature response
87 |  */
88 | export interface FeatureResponse {
89 |   feature: Feature;
90 | }
91 | 
92 | /**
93 |  * Features list response
94 |  */
95 | export interface FeaturesResponse {
96 |   features: Feature[];
97 | } 
98 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/base.ts:
--------------------------------------------------------------------------------
 1 | import { 
 2 |   PropertyType, 
 3 |   PropertyCategory, 
 4 |   LocationType, 
 5 |   Currency, 
 6 |   ConstructionType, 
 7 |   FurnishingType 
 8 | } from './enums';
 9 | 
10 | export interface ContactInfo {
11 |   id: string;
12 |   phone: string;
13 |   email: string;
14 |   createdAt: string;
15 |   updatedAt: string;
16 | }
17 | 
18 | export interface Image {
19 |   id: string;
20 |   url: string;
21 |   createdAt: string;
22 |   updatedAt: string;
23 | }
24 | 
25 | export interface Property {
26 |   id: string;
27 |   title: string;
28 |   description: string;
29 |   price: number;
30 |   currency: Currency;
31 |   area_sqm: number;
32 |   floor?: number;
33 |   construction_type?: ConstructionType;
34 |   furnishing?: FurnishingType;
35 |   location_type: LocationType;
36 |   category: PropertyCategory;
37 |   type: PropertyType;
38 |   featured?: boolean;
39 |   contact_info?: ContactInfo;
40 |   images?: Image[];
41 |   createdAt: string;
42 |   updatedAt: string;
43 | }
44 | 
45 | export interface CreatePropertyInput {
46 |   title: string;
47 |   description: string;
48 |   price: number;
49 |   currency: Currency;
50 |   area_sqm: number;
51 |   floor?: number;
52 |   construction_type?: ConstructionType;
53 |   furnishing?: FurnishingType;
54 |   location_type?: LocationType;
55 |   category?: PropertyCategory;
56 |   type?: PropertyType;
57 |   featured?: boolean;
58 |   contact_info?: {
59 |     phone: string;
60 |     email: string;
61 |   };
62 | }
63 | 
64 | export interface UpdatePropertyInput extends Partial<CreatePropertyInput> {} 
65 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/enums.ts:
--------------------------------------------------------------------------------
 1 | /**
 2 |  * Type of property
 3 |  */
 4 | export enum PropertyType {
 5 |   APARTMENT = 'APARTMENT',
 6 |   HOUSE = 'HOUSE',
 7 |   VILLA = 'VILLA',
 8 |   OFFICE = 'OFFICE',
 9 |   SHOP = 'SHOP',
10 |   WAREHOUSE = 'WAREHOUSE',
11 |   LAND = 'LAND'
12 | }
13 | 
14 | /**
15 |  * Category of property listing
16 |  */
17 | export enum PropertyCategory {
18 |   SALE = 'SALE',
19 |   RENT = 'RENT'
20 | }
21 | 
22 | /**
23 |  * Type of location
24 |  */
25 | export enum LocationType {
26 |   CITY = 'CITY',
27 |   SUBURB = 'SUBURB',
28 |   VILLAGE = 'VILLAGE',
29 |   SEASIDE = 'SEASIDE',
30 |   MOUNTAIN = 'MOUNTAIN'
31 | }
32 | 
33 | /**
34 |  * Supported currencies
35 |  */
36 | export enum Currency {
37 |   EUR = 'EUR',
38 |   USD = 'USD',
39 |   BGN = 'BGN'
40 | }
41 | 
42 | /**
43 |  * Construction types
44 |  */
45 | export enum ConstructionType {
46 |   BRICK = 'BRICK',
47 |   PANEL = 'PANEL',
48 |   EPK = 'EPK',
49 |   CONCRETE = 'CONCRETE',
50 |   STEEL = 'STEEL',
51 |   WOOD = 'WOOD'
52 | }
53 | 
54 | /**
55 |  * Furnishing status
56 |  */
57 | export enum FurnishingType {
58 |   UNFURNISHED = 'UNFURNISHED',
59 |   SEMI_FURNISHED = 'SEMI_FURNISHED',
60 |   FULLY_FURNISHED = 'FULLY_FURNISHED'
61 | } 
62 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/requests.ts:
--------------------------------------------------------------------------------
 1 | import { 
 2 |   PropertyType, 
 3 |   PropertyCategory, 
 4 |   LocationType, 
 5 |   ConstructionType, 
 6 |   FurnishingType 
 7 | } from './enums';
 8 | 
 9 | export interface GetPropertiesParams {
10 |   page?: string;
11 |   limit?: string;
12 |   min_price?: string;
13 |   max_price?: string;
14 |   min_area?: string;
15 |   max_area?: string;
16 |   type?: PropertyType;
17 |   category?: PropertyCategory;
18 |   location_type?: LocationType;
19 |   construction_type?: ConstructionType;
20 |   furnishing?: FurnishingType;
21 |   featured?: string;
22 | } 
23 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/property/responses.ts:
--------------------------------------------------------------------------------
 1 | import { PaginatedResponse } from '../common/pagination';
 2 | import { Property } from './base';
 3 | 
 4 | /**
 5 |  * Response for a single property
 6 |  */
 7 | export interface PropertyResponse {
 8 |   property: Property;
 9 | }
10 | 
11 | /**
12 |  * Response for multiple properties
13 |  */
14 | export interface PropertiesResponse extends PaginatedResponse<Property> {} 
15 | 


--------------------------------------------------------------------------------
/packages/shared-types/src/user/index.ts:
--------------------------------------------------------------------------------
 1 | import { PaginatedResponse } from '../common/pagination';
 2 | 
 3 | export enum UserRole {
 4 |   ADMIN = 'ADMIN',
 5 |   USER = 'USER'
 6 | }
 7 | 
 8 | export interface User {
 9 |   id: string;
10 |   name: string;
11 |   email: string;
12 |   role: UserRole;
13 |   createdAt: string;
14 | }
15 | 
16 | export interface CreateUserInput {
17 |   name: string;
18 |   email: string;
19 |   password: string;
20 |   role?: UserRole;
21 | }
22 | 
23 | export interface UpdateUserInput extends Partial<CreateUserInput> {}
24 | 
25 | export interface UserResponse {
26 |   user: User;
27 | }
28 | 
29 | export interface UsersResponse {
30 |   users: User[];
31 |   meta: {
32 |     total: number;
33 |     page: number;
34 |     pageSize: number;
35 |     totalPages: number;
36 |     hasNextPage: boolean;
37 |     hasPreviousPage: boolean;
38 |   };
39 | } 
40 | 


--------------------------------------------------------------------------------
/packages/shared-types/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "target": "ES2020",
 4 |     "module": "ESNext",
 5 |     "moduleResolution": "Bundler",
 6 |     "esModuleInterop": true,
 7 |     "strict": true,
 8 |     "skipLibCheck": true,
 9 |     "forceConsistentCasingInFileNames": true,
10 |     "declaration": true,
11 |     "outDir": "dist",
12 |     "rootDir": "src"
13 |   },
14 |   "include": ["src/**/*"],
15 |   "exclude": ["node_modules", "dist"]
16 | }
17 | 


--------------------------------------------------------------------------------
/packages/shared-types/tsup.config.ts:
--------------------------------------------------------------------------------
 1 | import { defineConfig } from 'tsup'
 2 | 
 3 | export default defineConfig({
 4 |   entry: ['src/index.ts'],
 5 |   format: ['esm'],
 6 |   dts: true,
 7 |   splitting: false,
 8 |   sourcemap: true,
 9 |   clean: true,
10 |   treeshake: true
11 | }) 
12 | 


--------------------------------------------------------------------------------
/pnpm-lock.yaml:
--------------------------------------------------------------------------------
   1 | lockfileVersion: '9.0'
   2 | 
   3 | settings:
   4 |   autoInstallPeers: true
   5 |   excludeLinksFromLockfile: false
   6 | 
   7 | importers:
   8 | 
   9 |   .:
  10 |     devDependencies:
  11 |       '@typescript-eslint/eslint-plugin':
  12 |         specifier: ^6.19.0
  13 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
  14 |       '@typescript-eslint/parser':
  15 |         specifier: ^6.19.0
  16 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
  17 |       eslint:
  18 |         specifier: ^8.56.0
  19 |         version: 8.57.1
  20 |       eslint-config-prettier:
  21 |         specifier: ^9.1.0
  22 |         version: 9.1.0(eslint@8.57.1)
  23 |       prettier:
  24 |         specifier: ^3.2.4
  25 |         version: 3.4.2
  26 |       turbo:
  27 |         specifier: ^1.11.3
  28 |         version: 1.13.4
  29 |       typescript:
  30 |         specifier: ^5.3.3
  31 |         version: 5.7.3
  32 | 
  33 |   apps/api:
  34 |     dependencies:
  35 |       '@avalon/shared-types':
  36 |         specifier: workspace:*
  37 |         version: link:../../packages/shared-types
  38 |       '@prisma/client':
  39 |         specifier: ^5.22.0
  40 |         version: 5.22.0(prisma@5.22.0)
  41 |       '@types/nodemailer':
  42 |         specifier: ^6.4.17
  43 |         version: 6.4.17
  44 |       bcryptjs:
  45 |         specifier: ^2.4.3
  46 |         version: 2.4.3
  47 |       cors:
  48 |         specifier: ^2.8.5
  49 |         version: 2.8.5
  50 |       dotenv:
  51 |         specifier: ^16.4.5
  52 |         version: 16.4.7
  53 |       express:
  54 |         specifier: ^4.18.3
  55 |         version: 4.21.2
  56 |       express-rate-limit:
  57 |         specifier: ^7.5.0
  58 |         version: 7.5.0(express@4.21.2)
  59 |       jsonwebtoken:
  60 |         specifier: ^9.0.2
  61 |         version: 9.0.2
  62 |       morgan:
  63 |         specifier: ^1.10.0
  64 |         version: 1.10.0
  65 |       multer:
  66 |         specifier: ^1.4.5-lts.1
  67 |         version: 1.4.5-lts.1
  68 |       nodemailer:
  69 |         specifier: ^6.9.16
  70 |         version: 6.9.16
  71 |       winston:
  72 |         specifier: ^3.17.0
  73 |         version: 3.17.0
  74 |       zod:
  75 |         specifier: ^3.22.4
  76 |         version: 3.24.1
  77 |     devDependencies:
  78 |       '@jest/globals':
  79 |         specifier: ^29.7.0
  80 |         version: 29.7.0
  81 |       '@jest/types':
  82 |         specifier: ^29.6.3
  83 |         version: 29.6.3
  84 |       '@types/bcryptjs':
  85 |         specifier: ^2.4.6
  86 |         version: 2.4.6
  87 |       '@types/cors':
  88 |         specifier: ^2.8.17
  89 |         version: 2.8.17
  90 |       '@types/express':
  91 |         specifier: ^4.17.21
  92 |         version: 4.17.21
  93 |       '@types/jest':
  94 |         specifier: ^29.5.14
  95 |         version: 29.5.14
  96 |       '@types/jsonwebtoken':
  97 |         specifier: ^9.0.5
  98 |         version: 9.0.7
  99 |       '@types/morgan':
 100 |         specifier: ^1.9.9
 101 |         version: 1.9.9
 102 |       '@types/multer':
 103 |         specifier: ^1.4.11
 104 |         version: 1.4.12
 105 |       '@types/node':
 106 |         specifier: ^20.17.12
 107 |         version: 20.17.12
 108 |       '@types/supertest':
 109 |         specifier: ^6.0.2
 110 |         version: 6.0.2
 111 |       '@typescript-eslint/eslint-plugin':
 112 |         specifier: ^6.21.0
 113 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
 114 |       '@typescript-eslint/parser':
 115 |         specifier: ^6.21.0
 116 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
 117 |       cross-env:
 118 |         specifier: ^7.0.3
 119 |         version: 7.0.3
 120 |       jest:
 121 |         specifier: ^29.7.0
 122 |         version: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
 123 |       prisma:
 124 |         specifier: ^5.22.0
 125 |         version: 5.22.0
 126 |       supertest:
 127 |         specifier: ^7.0.0
 128 |         version: 7.0.0
 129 |       ts-jest:
 130 |         specifier: ^29.2.5
 131 |         version: 29.2.5(@babel/core@7.26.0)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.0))(esbuild@0.24.2)(jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))(typescript@5.7.3)
 132 |       tsup:
 133 |         specifier: ^8.3.5
 134 |         version: 8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0)
 135 |       tsx:
 136 |         specifier: ^4.7.1
 137 |         version: 4.19.2
 138 |       typescript:
 139 |         specifier: ^5.4.2
 140 |         version: 5.7.3
 141 | 
 142 |   apps/web:
 143 |     dependencies:
 144 |       '@headlessui/react':
 145 |         specifier: ^1.7.17
 146 |         version: 1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 147 |       '@heroicons/react':
 148 |         specifier: ^2.0.18
 149 |         version: 2.2.0(react@18.3.1)
 150 |       '@react-google-maps/api':
 151 |         specifier: ^2.20.5
 152 |         version: 2.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 153 |       '@tanstack/react-query':
 154 |         specifier: ^5.64.1
 155 |         version: 5.64.1(react@18.3.1)
 156 |       '@tanstack/react-query-devtools':
 157 |         specifier: ^5.64.1
 158 |         version: 5.64.1(@tanstack/react-query@5.64.1(react@18.3.1))(react@18.3.1)
 159 |       axios:
 160 |         specifier: ^1.6.2
 161 |         version: 1.7.9
 162 |       clsx:
 163 |         specifier: ^2.0.0
 164 |         version: 2.1.1
 165 |       react:
 166 |         specifier: ^18.2.0
 167 |         version: 18.3.1
 168 |       react-dom:
 169 |         specifier: ^18.2.0
 170 |         version: 18.3.1(react@18.3.1)
 171 |       react-router-dom:
 172 |         specifier: ^6.20.1
 173 |         version: 6.28.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 174 |       react-transition-group:
 175 |         specifier: ^4.4.5
 176 |         version: 4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 177 |       zod:
 178 |         specifier: ^3.22.4
 179 |         version: 3.24.1
 180 |     devDependencies:
 181 |       '@testing-library/jest-dom':
 182 |         specifier: ^6.1.5
 183 |         version: 6.6.3
 184 |       '@testing-library/react':
 185 |         specifier: ^14.1.2
 186 |         version: 14.3.1(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
 187 |       '@testing-library/user-event':
 188 |         specifier: ^14.5.1
 189 |         version: 14.5.2(@testing-library/dom@9.3.4)
 190 |       '@types/react':
 191 |         specifier: ^18.2.37
 192 |         version: 18.3.18
 193 |       '@types/react-dom':
 194 |         specifier: ^18.2.15
 195 |         version: 18.3.5(@types/react@18.3.18)
 196 |       '@types/react-transition-group':
 197 |         specifier: ^4.4.12
 198 |         version: 4.4.12(@types/react@18.3.18)
 199 |       '@typescript-eslint/eslint-plugin':
 200 |         specifier: ^6.10.0
 201 |         version: 6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)
 202 |       '@typescript-eslint/parser':
 203 |         specifier: ^6.10.0
 204 |         version: 6.21.0(eslint@8.57.1)(typescript@5.7.3)
 205 |       '@vitejs/plugin-react':
 206 |         specifier: ^4.2.0
 207 |         version: 4.3.4(vite@5.4.11(@types/node@20.17.12))
 208 |       '@vitejs/plugin-react-swc':
 209 |         specifier: ^3.7.2
 210 |         version: 3.7.2(vite@5.4.11(@types/node@20.17.12))
 211 |       '@vitest/coverage-v8':
 212 |         specifier: ^1.0.4
 213 |         version: 1.6.0(vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3))
 214 |       autoprefixer:
 215 |         specifier: ^10.4.16
 216 |         version: 10.4.20(postcss@8.4.49)
 217 |       eslint:
 218 |         specifier: ^8.53.0
 219 |         version: 8.57.1
 220 |       eslint-plugin-react-hooks:
 221 |         specifier: ^4.6.0
 222 |         version: 4.6.2(eslint@8.57.1)
 223 |       eslint-plugin-react-refresh:
 224 |         specifier: ^0.4.4
 225 |         version: 0.4.18(eslint@8.57.1)
 226 |       happy-dom:
 227 |         specifier: ^12.10.3
 228 |         version: 12.10.3
 229 |       postcss:
 230 |         specifier: ^8.4.32
 231 |         version: 8.4.49
 232 |       tailwindcss:
 233 |         specifier: ^3.3.6
 234 |         version: 3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
 235 |       typescript:
 236 |         specifier: ^5.2.2
 237 |         version: 5.7.3
 238 |       vite:
 239 |         specifier: ^5.0.0
 240 |         version: 5.4.11(@types/node@20.17.12)
 241 |       vitest:
 242 |         specifier: ^1.0.4
 243 |         version: 1.6.0(@types/node@20.17.12)(happy-dom@12.10.3)
 244 | 
 245 |   packages/shared-types:
 246 |     devDependencies:
 247 |       tsup:
 248 |         specifier: ^8.0.0
 249 |         version: 8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0)
 250 |       typescript:
 251 |         specifier: ^5.4.2
 252 |         version: 5.7.3
 253 | 
 254 | packages:
 255 | 
 256 |   '@adobe/css-tools@4.4.1':
 257 |     resolution: {integrity: sha512-12WGKBQzjUAI4ayyF4IAtfw2QR/IDoqk6jTddXDhtYTJF9ASmoE1zst7cVtP0aL/F1jUJL5r+JxKXKEgHNbEUQ==}
 258 | 
 259 |   '@alloc/quick-lru@5.2.0':
 260 |     resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
 261 |     engines: {node: '>=10'}
 262 | 
 263 |   '@ampproject/remapping@2.3.0':
 264 |     resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
 265 |     engines: {node: '>=6.0.0'}
 266 | 
 267 |   '@babel/code-frame@7.26.2':
 268 |     resolution: {integrity: sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==}
 269 |     engines: {node: '>=6.9.0'}
 270 | 
 271 |   '@babel/compat-data@7.26.5':
 272 |     resolution: {integrity: sha512-XvcZi1KWf88RVbF9wn8MN6tYFloU5qX8KjuF3E1PVBmJ9eypXfs4GRiJwLuTZL0iSnJUKn1BFPa5BPZZJyFzPg==}
 273 |     engines: {node: '>=6.9.0'}
 274 | 
 275 |   '@babel/core@7.26.0':
 276 |     resolution: {integrity: sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==}
 277 |     engines: {node: '>=6.9.0'}
 278 | 
 279 |   '@babel/generator@7.26.5':
 280 |     resolution: {integrity: sha512-2caSP6fN9I7HOe6nqhtft7V4g7/V/gfDsC3Ag4W7kEzzvRGKqiv0pu0HogPiZ3KaVSoNDhUws6IJjDjpfmYIXw==}
 281 |     engines: {node: '>=6.9.0'}
 282 | 
 283 |   '@babel/helper-compilation-targets@7.26.5':
 284 |     resolution: {integrity: sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==}
 285 |     engines: {node: '>=6.9.0'}
 286 | 
 287 |   '@babel/helper-module-imports@7.25.9':
 288 |     resolution: {integrity: sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==}
 289 |     engines: {node: '>=6.9.0'}
 290 | 
 291 |   '@babel/helper-module-transforms@7.26.0':
 292 |     resolution: {integrity: sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==}
 293 |     engines: {node: '>=6.9.0'}
 294 |     peerDependencies:
 295 |       '@babel/core': ^7.0.0
 296 | 
 297 |   '@babel/helper-plugin-utils@7.26.5':
 298 |     resolution: {integrity: sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==}
 299 |     engines: {node: '>=6.9.0'}
 300 | 
 301 |   '@babel/helper-string-parser@7.25.9':
 302 |     resolution: {integrity: sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==}
 303 |     engines: {node: '>=6.9.0'}
 304 | 
 305 |   '@babel/helper-validator-identifier@7.25.9':
 306 |     resolution: {integrity: sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==}
 307 |     engines: {node: '>=6.9.0'}
 308 | 
 309 |   '@babel/helper-validator-option@7.25.9':
 310 |     resolution: {integrity: sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==}
 311 |     engines: {node: '>=6.9.0'}
 312 | 
 313 |   '@babel/helpers@7.26.0':
 314 |     resolution: {integrity: sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==}
 315 |     engines: {node: '>=6.9.0'}
 316 | 
 317 |   '@babel/parser@7.26.5':
 318 |     resolution: {integrity: sha512-SRJ4jYmXRqV1/Xc+TIVG84WjHBXKlxO9sHQnA2Pf12QQEAp1LOh6kDzNHXcUnbH1QI0FDoPPVOt+vyUDucxpaw==}
 319 |     engines: {node: '>=6.0.0'}
 320 |     hasBin: true
 321 | 
 322 |   '@babel/plugin-syntax-async-generators@7.8.4':
 323 |     resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}
 324 |     peerDependencies:
 325 |       '@babel/core': ^7.0.0-0
 326 | 
 327 |   '@babel/plugin-syntax-bigint@7.8.3':
 328 |     resolution: {integrity: sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==}
 329 |     peerDependencies:
 330 |       '@babel/core': ^7.0.0-0
 331 | 
 332 |   '@babel/plugin-syntax-class-properties@7.12.13':
 333 |     resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}
 334 |     peerDependencies:
 335 |       '@babel/core': ^7.0.0-0
 336 | 
 337 |   '@babel/plugin-syntax-class-static-block@7.14.5':
 338 |     resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}
 339 |     engines: {node: '>=6.9.0'}
 340 |     peerDependencies:
 341 |       '@babel/core': ^7.0.0-0
 342 | 
 343 |   '@babel/plugin-syntax-import-attributes@7.26.0':
 344 |     resolution: {integrity: sha512-e2dttdsJ1ZTpi3B9UYGLw41hifAubg19AtCu/2I/F1QNVclOBr1dYpTdmdyZ84Xiz43BS/tCUkMAZNLv12Pi+A==}
 345 |     engines: {node: '>=6.9.0'}
 346 |     peerDependencies:
 347 |       '@babel/core': ^7.0.0-0
 348 | 
 349 |   '@babel/plugin-syntax-import-meta@7.10.4':
 350 |     resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}
 351 |     peerDependencies:
 352 |       '@babel/core': ^7.0.0-0
 353 | 
 354 |   '@babel/plugin-syntax-json-strings@7.8.3':
 355 |     resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}
 356 |     peerDependencies:
 357 |       '@babel/core': ^7.0.0-0
 358 | 
 359 |   '@babel/plugin-syntax-jsx@7.25.9':
 360 |     resolution: {integrity: sha512-ld6oezHQMZsZfp6pWtbjaNDF2tiiCYYDqQszHt5VV437lewP9aSi2Of99CK0D0XB21k7FLgnLcmQKyKzynfeAA==}
 361 |     engines: {node: '>=6.9.0'}
 362 |     peerDependencies:
 363 |       '@babel/core': ^7.0.0-0
 364 | 
 365 |   '@babel/plugin-syntax-logical-assignment-operators@7.10.4':
 366 |     resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}
 367 |     peerDependencies:
 368 |       '@babel/core': ^7.0.0-0
 369 | 
 370 |   '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3':
 371 |     resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}
 372 |     peerDependencies:
 373 |       '@babel/core': ^7.0.0-0
 374 | 
 375 |   '@babel/plugin-syntax-numeric-separator@7.10.4':
 376 |     resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}
 377 |     peerDependencies:
 378 |       '@babel/core': ^7.0.0-0
 379 | 
 380 |   '@babel/plugin-syntax-object-rest-spread@7.8.3':
 381 |     resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}
 382 |     peerDependencies:
 383 |       '@babel/core': ^7.0.0-0
 384 | 
 385 |   '@babel/plugin-syntax-optional-catch-binding@7.8.3':
 386 |     resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}
 387 |     peerDependencies:
 388 |       '@babel/core': ^7.0.0-0
 389 | 
 390 |   '@babel/plugin-syntax-optional-chaining@7.8.3':
 391 |     resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}
 392 |     peerDependencies:
 393 |       '@babel/core': ^7.0.0-0
 394 | 
 395 |   '@babel/plugin-syntax-private-property-in-object@7.14.5':
 396 |     resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}
 397 |     engines: {node: '>=6.9.0'}
 398 |     peerDependencies:
 399 |       '@babel/core': ^7.0.0-0
 400 | 
 401 |   '@babel/plugin-syntax-top-level-await@7.14.5':
 402 |     resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}
 403 |     engines: {node: '>=6.9.0'}
 404 |     peerDependencies:
 405 |       '@babel/core': ^7.0.0-0
 406 | 
 407 |   '@babel/plugin-syntax-typescript@7.25.9':
 408 |     resolution: {integrity: sha512-hjMgRy5hb8uJJjUcdWunWVcoi9bGpJp8p5Ol1229PoN6aytsLwNMgmdftO23wnCLMfVmTwZDWMPNq/D1SY60JQ==}
 409 |     engines: {node: '>=6.9.0'}
 410 |     peerDependencies:
 411 |       '@babel/core': ^7.0.0-0
 412 | 
 413 |   '@babel/plugin-transform-react-jsx-self@7.25.9':
 414 |     resolution: {integrity: sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==}
 415 |     engines: {node: '>=6.9.0'}
 416 |     peerDependencies:
 417 |       '@babel/core': ^7.0.0-0
 418 | 
 419 |   '@babel/plugin-transform-react-jsx-source@7.25.9':
 420 |     resolution: {integrity: sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==}
 421 |     engines: {node: '>=6.9.0'}
 422 |     peerDependencies:
 423 |       '@babel/core': ^7.0.0-0
 424 | 
 425 |   '@babel/runtime@7.26.0':
 426 |     resolution: {integrity: sha512-FDSOghenHTiToteC/QRlv2q3DhPZ/oOXTBoirfWNx1Cx3TMVcGWQtMMmQcSvb/JjpNeGzx8Pq/b4fKEJuWm1sw==}
 427 |     engines: {node: '>=6.9.0'}
 428 | 
 429 |   '@babel/template@7.25.9':
 430 |     resolution: {integrity: sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==}
 431 |     engines: {node: '>=6.9.0'}
 432 | 
 433 |   '@babel/traverse@7.26.5':
 434 |     resolution: {integrity: sha512-rkOSPOw+AXbgtwUga3U4u8RpoK9FEFWBNAlTpcnkLFjL5CT+oyHNuUUC/xx6XefEJ16r38r8Bc/lfp6rYuHeJQ==}
 435 |     engines: {node: '>=6.9.0'}
 436 | 
 437 |   '@babel/types@7.26.5':
 438 |     resolution: {integrity: sha512-L6mZmwFDK6Cjh1nRCLXpa6no13ZIioJDz7mdkzHv399pThrTa/k0nUlNaenOeh2kWu/iaOQYElEpKPUswUa9Vg==}
 439 |     engines: {node: '>=6.9.0'}
 440 | 
 441 |   '@bcoe/v8-coverage@0.2.3':
 442 |     resolution: {integrity: sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==}
 443 | 
 444 |   '@colors/colors@1.6.0':
 445 |     resolution: {integrity: sha512-Ir+AOibqzrIsL6ajt3Rz3LskB7OiMVHqltZmspbW/TJuTVuyOMirVqAkjfY6JISiLHgyNqicAC8AyHHGzNd/dA==}
 446 |     engines: {node: '>=0.1.90'}
 447 | 
 448 |   '@cspotcode/source-map-support@0.8.1':
 449 |     resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}
 450 |     engines: {node: '>=12'}
 451 | 
 452 |   '@dabh/diagnostics@2.0.3':
 453 |     resolution: {integrity: sha512-hrlQOIi7hAfzsMqlGSFyVucrx38O+j6wiGOf//H2ecvIEqYN4ADBSS2iLMh5UFyDunCNniUIPk/q3riFv45xRA==}
 454 | 
 455 |   '@esbuild/aix-ppc64@0.21.5':
 456 |     resolution: {integrity: sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==}
 457 |     engines: {node: '>=12'}
 458 |     cpu: [ppc64]
 459 |     os: [aix]
 460 | 
 461 |   '@esbuild/aix-ppc64@0.23.1':
 462 |     resolution: {integrity: sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==}
 463 |     engines: {node: '>=18'}
 464 |     cpu: [ppc64]
 465 |     os: [aix]
 466 | 
 467 |   '@esbuild/aix-ppc64@0.24.2':
 468 |     resolution: {integrity: sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==}
 469 |     engines: {node: '>=18'}
 470 |     cpu: [ppc64]
 471 |     os: [aix]
 472 | 
 473 |   '@esbuild/android-arm64@0.21.5':
 474 |     resolution: {integrity: sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==}
 475 |     engines: {node: '>=12'}
 476 |     cpu: [arm64]
 477 |     os: [android]
 478 | 
 479 |   '@esbuild/android-arm64@0.23.1':
 480 |     resolution: {integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==}
 481 |     engines: {node: '>=18'}
 482 |     cpu: [arm64]
 483 |     os: [android]
 484 | 
 485 |   '@esbuild/android-arm64@0.24.2':
 486 |     resolution: {integrity: sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==}
 487 |     engines: {node: '>=18'}
 488 |     cpu: [arm64]
 489 |     os: [android]
 490 | 
 491 |   '@esbuild/android-arm@0.21.5':
 492 |     resolution: {integrity: sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==}
 493 |     engines: {node: '>=12'}
 494 |     cpu: [arm]
 495 |     os: [android]
 496 | 
 497 |   '@esbuild/android-arm@0.23.1':
 498 |     resolution: {integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==}
 499 |     engines: {node: '>=18'}
 500 |     cpu: [arm]
 501 |     os: [android]
 502 | 
 503 |   '@esbuild/android-arm@0.24.2':
 504 |     resolution: {integrity: sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==}
 505 |     engines: {node: '>=18'}
 506 |     cpu: [arm]
 507 |     os: [android]
 508 | 
 509 |   '@esbuild/android-x64@0.21.5':
 510 |     resolution: {integrity: sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==}
 511 |     engines: {node: '>=12'}
 512 |     cpu: [x64]
 513 |     os: [android]
 514 | 
 515 |   '@esbuild/android-x64@0.23.1':
 516 |     resolution: {integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==}
 517 |     engines: {node: '>=18'}
 518 |     cpu: [x64]
 519 |     os: [android]
 520 | 
 521 |   '@esbuild/android-x64@0.24.2':
 522 |     resolution: {integrity: sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==}
 523 |     engines: {node: '>=18'}
 524 |     cpu: [x64]
 525 |     os: [android]
 526 | 
 527 |   '@esbuild/darwin-arm64@0.21.5':
 528 |     resolution: {integrity: sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==}
 529 |     engines: {node: '>=12'}
 530 |     cpu: [arm64]
 531 |     os: [darwin]
 532 | 
 533 |   '@esbuild/darwin-arm64@0.23.1':
 534 |     resolution: {integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==}
 535 |     engines: {node: '>=18'}
 536 |     cpu: [arm64]
 537 |     os: [darwin]
 538 | 
 539 |   '@esbuild/darwin-arm64@0.24.2':
 540 |     resolution: {integrity: sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==}
 541 |     engines: {node: '>=18'}
 542 |     cpu: [arm64]
 543 |     os: [darwin]
 544 | 
 545 |   '@esbuild/darwin-x64@0.21.5':
 546 |     resolution: {integrity: sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==}
 547 |     engines: {node: '>=12'}
 548 |     cpu: [x64]
 549 |     os: [darwin]
 550 | 
 551 |   '@esbuild/darwin-x64@0.23.1':
 552 |     resolution: {integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==}
 553 |     engines: {node: '>=18'}
 554 |     cpu: [x64]
 555 |     os: [darwin]
 556 | 
 557 |   '@esbuild/darwin-x64@0.24.2':
 558 |     resolution: {integrity: sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==}
 559 |     engines: {node: '>=18'}
 560 |     cpu: [x64]
 561 |     os: [darwin]
 562 | 
 563 |   '@esbuild/freebsd-arm64@0.21.5':
 564 |     resolution: {integrity: sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==}
 565 |     engines: {node: '>=12'}
 566 |     cpu: [arm64]
 567 |     os: [freebsd]
 568 | 
 569 |   '@esbuild/freebsd-arm64@0.23.1':
 570 |     resolution: {integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==}
 571 |     engines: {node: '>=18'}
 572 |     cpu: [arm64]
 573 |     os: [freebsd]
 574 | 
 575 |   '@esbuild/freebsd-arm64@0.24.2':
 576 |     resolution: {integrity: sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==}
 577 |     engines: {node: '>=18'}
 578 |     cpu: [arm64]
 579 |     os: [freebsd]
 580 | 
 581 |   '@esbuild/freebsd-x64@0.21.5':
 582 |     resolution: {integrity: sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==}
 583 |     engines: {node: '>=12'}
 584 |     cpu: [x64]
 585 |     os: [freebsd]
 586 | 
 587 |   '@esbuild/freebsd-x64@0.23.1':
 588 |     resolution: {integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==}
 589 |     engines: {node: '>=18'}
 590 |     cpu: [x64]
 591 |     os: [freebsd]
 592 | 
 593 |   '@esbuild/freebsd-x64@0.24.2':
 594 |     resolution: {integrity: sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==}
 595 |     engines: {node: '>=18'}
 596 |     cpu: [x64]
 597 |     os: [freebsd]
 598 | 
 599 |   '@esbuild/linux-arm64@0.21.5':
 600 |     resolution: {integrity: sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==}
 601 |     engines: {node: '>=12'}
 602 |     cpu: [arm64]
 603 |     os: [linux]
 604 | 
 605 |   '@esbuild/linux-arm64@0.23.1':
 606 |     resolution: {integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==}
 607 |     engines: {node: '>=18'}
 608 |     cpu: [arm64]
 609 |     os: [linux]
 610 | 
 611 |   '@esbuild/linux-arm64@0.24.2':
 612 |     resolution: {integrity: sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==}
 613 |     engines: {node: '>=18'}
 614 |     cpu: [arm64]
 615 |     os: [linux]
 616 | 
 617 |   '@esbuild/linux-arm@0.21.5':
 618 |     resolution: {integrity: sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==}
 619 |     engines: {node: '>=12'}
 620 |     cpu: [arm]
 621 |     os: [linux]
 622 | 
 623 |   '@esbuild/linux-arm@0.23.1':
 624 |     resolution: {integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==}
 625 |     engines: {node: '>=18'}
 626 |     cpu: [arm]
 627 |     os: [linux]
 628 | 
 629 |   '@esbuild/linux-arm@0.24.2':
 630 |     resolution: {integrity: sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==}
 631 |     engines: {node: '>=18'}
 632 |     cpu: [arm]
 633 |     os: [linux]
 634 | 
 635 |   '@esbuild/linux-ia32@0.21.5':
 636 |     resolution: {integrity: sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==}
 637 |     engines: {node: '>=12'}
 638 |     cpu: [ia32]
 639 |     os: [linux]
 640 | 
 641 |   '@esbuild/linux-ia32@0.23.1':
 642 |     resolution: {integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==}
 643 |     engines: {node: '>=18'}
 644 |     cpu: [ia32]
 645 |     os: [linux]
 646 | 
 647 |   '@esbuild/linux-ia32@0.24.2':
 648 |     resolution: {integrity: sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==}
 649 |     engines: {node: '>=18'}
 650 |     cpu: [ia32]
 651 |     os: [linux]
 652 | 
 653 |   '@esbuild/linux-loong64@0.21.5':
 654 |     resolution: {integrity: sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==}
 655 |     engines: {node: '>=12'}
 656 |     cpu: [loong64]
 657 |     os: [linux]
 658 | 
 659 |   '@esbuild/linux-loong64@0.23.1':
 660 |     resolution: {integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==}
 661 |     engines: {node: '>=18'}
 662 |     cpu: [loong64]
 663 |     os: [linux]
 664 | 
 665 |   '@esbuild/linux-loong64@0.24.2':
 666 |     resolution: {integrity: sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==}
 667 |     engines: {node: '>=18'}
 668 |     cpu: [loong64]
 669 |     os: [linux]
 670 | 
 671 |   '@esbuild/linux-mips64el@0.21.5':
 672 |     resolution: {integrity: sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==}
 673 |     engines: {node: '>=12'}
 674 |     cpu: [mips64el]
 675 |     os: [linux]
 676 | 
 677 |   '@esbuild/linux-mips64el@0.23.1':
 678 |     resolution: {integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==}
 679 |     engines: {node: '>=18'}
 680 |     cpu: [mips64el]
 681 |     os: [linux]
 682 | 
 683 |   '@esbuild/linux-mips64el@0.24.2':
 684 |     resolution: {integrity: sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==}
 685 |     engines: {node: '>=18'}
 686 |     cpu: [mips64el]
 687 |     os: [linux]
 688 | 
 689 |   '@esbuild/linux-ppc64@0.21.5':
 690 |     resolution: {integrity: sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==}
 691 |     engines: {node: '>=12'}
 692 |     cpu: [ppc64]
 693 |     os: [linux]
 694 | 
 695 |   '@esbuild/linux-ppc64@0.23.1':
 696 |     resolution: {integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==}
 697 |     engines: {node: '>=18'}
 698 |     cpu: [ppc64]
 699 |     os: [linux]
 700 | 
 701 |   '@esbuild/linux-ppc64@0.24.2':
 702 |     resolution: {integrity: sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==}
 703 |     engines: {node: '>=18'}
 704 |     cpu: [ppc64]
 705 |     os: [linux]
 706 | 
 707 |   '@esbuild/linux-riscv64@0.21.5':
 708 |     resolution: {integrity: sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==}
 709 |     engines: {node: '>=12'}
 710 |     cpu: [riscv64]
 711 |     os: [linux]
 712 | 
 713 |   '@esbuild/linux-riscv64@0.23.1':
 714 |     resolution: {integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==}
 715 |     engines: {node: '>=18'}
 716 |     cpu: [riscv64]
 717 |     os: [linux]
 718 | 
 719 |   '@esbuild/linux-riscv64@0.24.2':
 720 |     resolution: {integrity: sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==}
 721 |     engines: {node: '>=18'}
 722 |     cpu: [riscv64]
 723 |     os: [linux]
 724 | 
 725 |   '@esbuild/linux-s390x@0.21.5':
 726 |     resolution: {integrity: sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==}
 727 |     engines: {node: '>=12'}
 728 |     cpu: [s390x]
 729 |     os: [linux]
 730 | 
 731 |   '@esbuild/linux-s390x@0.23.1':
 732 |     resolution: {integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==}
 733 |     engines: {node: '>=18'}
 734 |     cpu: [s390x]
 735 |     os: [linux]
 736 | 
 737 |   '@esbuild/linux-s390x@0.24.2':
 738 |     resolution: {integrity: sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==}
 739 |     engines: {node: '>=18'}
 740 |     cpu: [s390x]
 741 |     os: [linux]
 742 | 
 743 |   '@esbuild/linux-x64@0.21.5':
 744 |     resolution: {integrity: sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==}
 745 |     engines: {node: '>=12'}
 746 |     cpu: [x64]
 747 |     os: [linux]
 748 | 
 749 |   '@esbuild/linux-x64@0.23.1':
 750 |     resolution: {integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==}
 751 |     engines: {node: '>=18'}
 752 |     cpu: [x64]
 753 |     os: [linux]
 754 | 
 755 |   '@esbuild/linux-x64@0.24.2':
 756 |     resolution: {integrity: sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==}
 757 |     engines: {node: '>=18'}
 758 |     cpu: [x64]
 759 |     os: [linux]
 760 | 
 761 |   '@esbuild/netbsd-arm64@0.24.2':
 762 |     resolution: {integrity: sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==}
 763 |     engines: {node: '>=18'}
 764 |     cpu: [arm64]
 765 |     os: [netbsd]
 766 | 
 767 |   '@esbuild/netbsd-x64@0.21.5':
 768 |     resolution: {integrity: sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==}
 769 |     engines: {node: '>=12'}
 770 |     cpu: [x64]
 771 |     os: [netbsd]
 772 | 
 773 |   '@esbuild/netbsd-x64@0.23.1':
 774 |     resolution: {integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==}
 775 |     engines: {node: '>=18'}
 776 |     cpu: [x64]
 777 |     os: [netbsd]
 778 | 
 779 |   '@esbuild/netbsd-x64@0.24.2':
 780 |     resolution: {integrity: sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==}
 781 |     engines: {node: '>=18'}
 782 |     cpu: [x64]
 783 |     os: [netbsd]
 784 | 
 785 |   '@esbuild/openbsd-arm64@0.23.1':
 786 |     resolution: {integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==}
 787 |     engines: {node: '>=18'}
 788 |     cpu: [arm64]
 789 |     os: [openbsd]
 790 | 
 791 |   '@esbuild/openbsd-arm64@0.24.2':
 792 |     resolution: {integrity: sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==}
 793 |     engines: {node: '>=18'}
 794 |     cpu: [arm64]
 795 |     os: [openbsd]
 796 | 
 797 |   '@esbuild/openbsd-x64@0.21.5':
 798 |     resolution: {integrity: sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==}
 799 |     engines: {node: '>=12'}
 800 |     cpu: [x64]
 801 |     os: [openbsd]
 802 | 
 803 |   '@esbuild/openbsd-x64@0.23.1':
 804 |     resolution: {integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==}
 805 |     engines: {node: '>=18'}
 806 |     cpu: [x64]
 807 |     os: [openbsd]
 808 | 
 809 |   '@esbuild/openbsd-x64@0.24.2':
 810 |     resolution: {integrity: sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==}
 811 |     engines: {node: '>=18'}
 812 |     cpu: [x64]
 813 |     os: [openbsd]
 814 | 
 815 |   '@esbuild/sunos-x64@0.21.5':
 816 |     resolution: {integrity: sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==}
 817 |     engines: {node: '>=12'}
 818 |     cpu: [x64]
 819 |     os: [sunos]
 820 | 
 821 |   '@esbuild/sunos-x64@0.23.1':
 822 |     resolution: {integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==}
 823 |     engines: {node: '>=18'}
 824 |     cpu: [x64]
 825 |     os: [sunos]
 826 | 
 827 |   '@esbuild/sunos-x64@0.24.2':
 828 |     resolution: {integrity: sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==}
 829 |     engines: {node: '>=18'}
 830 |     cpu: [x64]
 831 |     os: [sunos]
 832 | 
 833 |   '@esbuild/win32-arm64@0.21.5':
 834 |     resolution: {integrity: sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==}
 835 |     engines: {node: '>=12'}
 836 |     cpu: [arm64]
 837 |     os: [win32]
 838 | 
 839 |   '@esbuild/win32-arm64@0.23.1':
 840 |     resolution: {integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==}
 841 |     engines: {node: '>=18'}
 842 |     cpu: [arm64]
 843 |     os: [win32]
 844 | 
 845 |   '@esbuild/win32-arm64@0.24.2':
 846 |     resolution: {integrity: sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==}
 847 |     engines: {node: '>=18'}
 848 |     cpu: [arm64]
 849 |     os: [win32]
 850 | 
 851 |   '@esbuild/win32-ia32@0.21.5':
 852 |     resolution: {integrity: sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==}
 853 |     engines: {node: '>=12'}
 854 |     cpu: [ia32]
 855 |     os: [win32]
 856 | 
 857 |   '@esbuild/win32-ia32@0.23.1':
 858 |     resolution: {integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==}
 859 |     engines: {node: '>=18'}
 860 |     cpu: [ia32]
 861 |     os: [win32]
 862 | 
 863 |   '@esbuild/win32-ia32@0.24.2':
 864 |     resolution: {integrity: sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==}
 865 |     engines: {node: '>=18'}
 866 |     cpu: [ia32]
 867 |     os: [win32]
 868 | 
 869 |   '@esbuild/win32-x64@0.21.5':
 870 |     resolution: {integrity: sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==}
 871 |     engines: {node: '>=12'}
 872 |     cpu: [x64]
 873 |     os: [win32]
 874 | 
 875 |   '@esbuild/win32-x64@0.23.1':
 876 |     resolution: {integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==}
 877 |     engines: {node: '>=18'}
 878 |     cpu: [x64]
 879 |     os: [win32]
 880 | 
 881 |   '@esbuild/win32-x64@0.24.2':
 882 |     resolution: {integrity: sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==}
 883 |     engines: {node: '>=18'}
 884 |     cpu: [x64]
 885 |     os: [win32]
 886 | 
 887 |   '@eslint-community/eslint-utils@4.4.1':
 888 |     resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}
 889 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
 890 |     peerDependencies:
 891 |       eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
 892 | 
 893 |   '@eslint-community/regexpp@4.12.1':
 894 |     resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
 895 |     engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}
 896 | 
 897 |   '@eslint/eslintrc@2.1.4':
 898 |     resolution: {integrity: sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==}
 899 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
 900 | 
 901 |   '@eslint/js@8.57.1':
 902 |     resolution: {integrity: sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==}
 903 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
 904 | 
 905 |   '@googlemaps/js-api-loader@1.16.8':
 906 |     resolution: {integrity: sha512-CROqqwfKotdO6EBjZO/gQGVTbeDps5V7Mt9+8+5Q+jTg5CRMi3Ii/L9PmV3USROrt2uWxtGzJHORmByxyo9pSQ==}
 907 | 
 908 |   '@googlemaps/markerclusterer@2.5.3':
 909 |     resolution: {integrity: sha512-x7lX0R5yYOoiNectr10wLgCBasNcXFHiADIBdmn7jQllF2B5ENQw5XtZK+hIw4xnV0Df0xhN4LN98XqA5jaiOw==}
 910 | 
 911 |   '@headlessui/react@1.7.19':
 912 |     resolution: {integrity: sha512-Ll+8q3OlMJfJbAKM/+/Y2q6PPYbryqNTXDbryx7SXLIDamkF6iQFbriYHga0dY44PvDhvvBWCx1Xj4U5+G4hOw==}
 913 |     engines: {node: '>=10'}
 914 |     peerDependencies:
 915 |       react: ^16 || ^17 || ^18
 916 |       react-dom: ^16 || ^17 || ^18
 917 | 
 918 |   '@heroicons/react@2.2.0':
 919 |     resolution: {integrity: sha512-LMcepvRaS9LYHJGsF0zzmgKCUim/X3N/DQKc4jepAXJ7l8QxJ1PmxJzqplF2Z3FE4PqBAIGyJAQ/w4B5dsqbtQ==}
 920 |     peerDependencies:
 921 |       react: '>= 16 || ^19.0.0-rc'
 922 | 
 923 |   '@humanwhocodes/config-array@0.13.0':
 924 |     resolution: {integrity: sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==}
 925 |     engines: {node: '>=10.10.0'}
 926 |     deprecated: Use @eslint/config-array instead
 927 | 
 928 |   '@humanwhocodes/module-importer@1.0.1':
 929 |     resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
 930 |     engines: {node: '>=12.22'}
 931 | 
 932 |   '@humanwhocodes/object-schema@2.0.3':
 933 |     resolution: {integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==}
 934 |     deprecated: Use @eslint/object-schema instead
 935 | 
 936 |   '@isaacs/cliui@8.0.2':
 937 |     resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}
 938 |     engines: {node: '>=12'}
 939 | 
 940 |   '@istanbuljs/load-nyc-config@1.1.0':
 941 |     resolution: {integrity: sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==}
 942 |     engines: {node: '>=8'}
 943 | 
 944 |   '@istanbuljs/schema@0.1.3':
 945 |     resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}
 946 |     engines: {node: '>=8'}
 947 | 
 948 |   '@jest/console@29.7.0':
 949 |     resolution: {integrity: sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==}
 950 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 951 | 
 952 |   '@jest/core@29.7.0':
 953 |     resolution: {integrity: sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==}
 954 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 955 |     peerDependencies:
 956 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
 957 |     peerDependenciesMeta:
 958 |       node-notifier:
 959 |         optional: true
 960 | 
 961 |   '@jest/environment@29.7.0':
 962 |     resolution: {integrity: sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==}
 963 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 964 | 
 965 |   '@jest/expect-utils@29.7.0':
 966 |     resolution: {integrity: sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==}
 967 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 968 | 
 969 |   '@jest/expect@29.7.0':
 970 |     resolution: {integrity: sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==}
 971 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 972 | 
 973 |   '@jest/fake-timers@29.7.0':
 974 |     resolution: {integrity: sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==}
 975 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 976 | 
 977 |   '@jest/globals@29.7.0':
 978 |     resolution: {integrity: sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==}
 979 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 980 | 
 981 |   '@jest/reporters@29.7.0':
 982 |     resolution: {integrity: sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==}
 983 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 984 |     peerDependencies:
 985 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
 986 |     peerDependenciesMeta:
 987 |       node-notifier:
 988 |         optional: true
 989 | 
 990 |   '@jest/schemas@29.6.3':
 991 |     resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}
 992 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 993 | 
 994 |   '@jest/source-map@29.6.3':
 995 |     resolution: {integrity: sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==}
 996 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
 997 | 
 998 |   '@jest/test-result@29.7.0':
 999 |     resolution: {integrity: sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==}
1000 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1001 | 
1002 |   '@jest/test-sequencer@29.7.0':
1003 |     resolution: {integrity: sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==}
1004 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1005 | 
1006 |   '@jest/transform@29.7.0':
1007 |     resolution: {integrity: sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==}
1008 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1009 | 
1010 |   '@jest/types@29.6.3':
1011 |     resolution: {integrity: sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==}
1012 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1013 | 
1014 |   '@jridgewell/gen-mapping@0.3.8':
1015 |     resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}
1016 |     engines: {node: '>=6.0.0'}
1017 | 
1018 |   '@jridgewell/resolve-uri@3.1.2':
1019 |     resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
1020 |     engines: {node: '>=6.0.0'}
1021 | 
1022 |   '@jridgewell/set-array@1.2.1':
1023 |     resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
1024 |     engines: {node: '>=6.0.0'}
1025 | 
1026 |   '@jridgewell/sourcemap-codec@1.5.0':
1027 |     resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}
1028 | 
1029 |   '@jridgewell/trace-mapping@0.3.25':
1030 |     resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}
1031 | 
1032 |   '@jridgewell/trace-mapping@0.3.9':
1033 |     resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}
1034 | 
1035 |   '@nodelib/fs.scandir@2.1.5':
1036 |     resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
1037 |     engines: {node: '>= 8'}
1038 | 
1039 |   '@nodelib/fs.stat@2.0.5':
1040 |     resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
1041 |     engines: {node: '>= 8'}
1042 | 
1043 |   '@nodelib/fs.walk@1.2.8':
1044 |     resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
1045 |     engines: {node: '>= 8'}
1046 | 
1047 |   '@pkgjs/parseargs@0.11.0':
1048 |     resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}
1049 |     engines: {node: '>=14'}
1050 | 
1051 |   '@prisma/client@5.22.0':
1052 |     resolution: {integrity: sha512-M0SVXfyHnQREBKxCgyo7sffrKttwE6R8PMq330MIUF0pTwjUhLbW84pFDlf06B27XyCR++VtjugEnIHdr07SVA==}
1053 |     engines: {node: '>=16.13'}
1054 |     peerDependencies:
1055 |       prisma: '*'
1056 |     peerDependenciesMeta:
1057 |       prisma:
1058 |         optional: true
1059 | 
1060 |   '@prisma/debug@5.22.0':
1061 |     resolution: {integrity: sha512-AUt44v3YJeggO2ZU5BkXI7M4hu9BF2zzH2iF2V5pyXT/lRTyWiElZ7It+bRH1EshoMRxHgpYg4VB6rCM+mG5jQ==}
1062 | 
1063 |   '@prisma/engines-version@5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2':
1064 |     resolution: {integrity: sha512-2PTmxFR2yHW/eB3uqWtcgRcgAbG1rwG9ZriSvQw+nnb7c4uCr3RAcGMb6/zfE88SKlC1Nj2ziUvc96Z379mHgQ==}
1065 | 
1066 |   '@prisma/engines@5.22.0':
1067 |     resolution: {integrity: sha512-UNjfslWhAt06kVL3CjkuYpHAWSO6L4kDCVPegV6itt7nD1kSJavd3vhgAEhjglLJJKEdJ7oIqDJ+yHk6qO8gPA==}
1068 | 
1069 |   '@prisma/fetch-engine@5.22.0':
1070 |     resolution: {integrity: sha512-bkrD/Mc2fSvkQBV5EpoFcZ87AvOgDxbG99488a5cexp5Ccny+UM6MAe/UFkUC0wLYD9+9befNOqGiIJhhq+HbA==}
1071 | 
1072 |   '@prisma/get-platform@5.22.0':
1073 |     resolution: {integrity: sha512-pHhpQdr1UPFpt+zFfnPazhulaZYCUqeIcPpJViYoq9R+D/yw4fjE+CtnsnKzPYm0ddUbeXUzjGVGIRVgPDCk4Q==}
1074 | 
1075 |   '@react-google-maps/api@2.20.5':
1076 |     resolution: {integrity: sha512-Dx3faV4d7JXFSD7SB8ePIt5LOB72mNGHKFp/hIQVaPEsLJlEi4ID+XL6HM3Xw10AzGbr4KS/eQSi3OAaN7YttQ==}
1077 |     peerDependencies:
1078 |       react: ^16.8 || ^17 || ^18 || ^19
1079 |       react-dom: ^16.8 || ^17 || ^18 || ^19
1080 | 
1081 |   '@react-google-maps/infobox@2.20.0':
1082 |     resolution: {integrity: sha512-03PJHjohhaVLkX6+NHhlr8CIlvUxWaXhryqDjyaZ8iIqqix/nV8GFdz9O3m5OsjtxtNho09F/15j14yV0nuyLQ==}
1083 | 
1084 |   '@react-google-maps/marker-clusterer@2.20.0':
1085 |     resolution: {integrity: sha512-tieX9Va5w1yP88vMgfH1pHTacDQ9TgDTjox3tLlisKDXRQWdjw+QeVVghhf5XqqIxXHgPdcGwBvKY6UP+SIvLw==}
1086 | 
1087 |   '@remix-run/router@1.21.0':
1088 |     resolution: {integrity: sha512-xfSkCAchbdG5PnbrKqFWwia4Bi61nH+wm8wLEqfHDyp7Y3dZzgqS2itV8i4gAq9pC2HsTpwyBC6Ds8VHZ96JlA==}
1089 |     engines: {node: '>=14.0.0'}
1090 | 
1091 |   '@rollup/rollup-android-arm-eabi@4.30.1':
1092 |     resolution: {integrity: sha512-pSWY+EVt3rJ9fQ3IqlrEUtXh3cGqGtPDH1FQlNZehO2yYxCHEX1SPsz1M//NXwYfbTlcKr9WObLnJX9FsS9K1Q==}
1093 |     cpu: [arm]
1094 |     os: [android]
1095 | 
1096 |   '@rollup/rollup-android-arm64@4.30.1':
1097 |     resolution: {integrity: sha512-/NA2qXxE3D/BRjOJM8wQblmArQq1YoBVJjrjoTSBS09jgUisq7bqxNHJ8kjCHeV21W/9WDGwJEWSN0KQ2mtD/w==}
1098 |     cpu: [arm64]
1099 |     os: [android]
1100 | 
1101 |   '@rollup/rollup-darwin-arm64@4.30.1':
1102 |     resolution: {integrity: sha512-r7FQIXD7gB0WJ5mokTUgUWPl0eYIH0wnxqeSAhuIwvnnpjdVB8cRRClyKLQr7lgzjctkbp5KmswWszlwYln03Q==}
1103 |     cpu: [arm64]
1104 |     os: [darwin]
1105 | 
1106 |   '@rollup/rollup-darwin-x64@4.30.1':
1107 |     resolution: {integrity: sha512-x78BavIwSH6sqfP2xeI1hd1GpHL8J4W2BXcVM/5KYKoAD3nNsfitQhvWSw+TFtQTLZ9OmlF+FEInEHyubut2OA==}
1108 |     cpu: [x64]
1109 |     os: [darwin]
1110 | 
1111 |   '@rollup/rollup-freebsd-arm64@4.30.1':
1112 |     resolution: {integrity: sha512-HYTlUAjbO1z8ywxsDFWADfTRfTIIy/oUlfIDmlHYmjUP2QRDTzBuWXc9O4CXM+bo9qfiCclmHk1x4ogBjOUpUQ==}
1113 |     cpu: [arm64]
1114 |     os: [freebsd]
1115 | 
1116 |   '@rollup/rollup-freebsd-x64@4.30.1':
1117 |     resolution: {integrity: sha512-1MEdGqogQLccphhX5myCJqeGNYTNcmTyaic9S7CG3JhwuIByJ7J05vGbZxsizQthP1xpVx7kd3o31eOogfEirw==}
1118 |     cpu: [x64]
1119 |     os: [freebsd]
1120 | 
1121 |   '@rollup/rollup-linux-arm-gnueabihf@4.30.1':
1122 |     resolution: {integrity: sha512-PaMRNBSqCx7K3Wc9QZkFx5+CX27WFpAMxJNiYGAXfmMIKC7jstlr32UhTgK6T07OtqR+wYlWm9IxzennjnvdJg==}
1123 |     cpu: [arm]
1124 |     os: [linux]
1125 | 
1126 |   '@rollup/rollup-linux-arm-musleabihf@4.30.1':
1127 |     resolution: {integrity: sha512-B8Rcyj9AV7ZlEFqvB5BubG5iO6ANDsRKlhIxySXcF1axXYUyqwBok+XZPgIYGBgs7LDXfWfifxhw0Ik57T0Yug==}
1128 |     cpu: [arm]
1129 |     os: [linux]
1130 | 
1131 |   '@rollup/rollup-linux-arm64-gnu@4.30.1':
1132 |     resolution: {integrity: sha512-hqVyueGxAj3cBKrAI4aFHLV+h0Lv5VgWZs9CUGqr1z0fZtlADVV1YPOij6AhcK5An33EXaxnDLmJdQikcn5NEw==}
1133 |     cpu: [arm64]
1134 |     os: [linux]
1135 | 
1136 |   '@rollup/rollup-linux-arm64-musl@4.30.1':
1137 |     resolution: {integrity: sha512-i4Ab2vnvS1AE1PyOIGp2kXni69gU2DAUVt6FSXeIqUCPIR3ZlheMW3oP2JkukDfu3PsexYRbOiJrY+yVNSk9oA==}
1138 |     cpu: [arm64]
1139 |     os: [linux]
1140 | 
1141 |   '@rollup/rollup-linux-loongarch64-gnu@4.30.1':
1142 |     resolution: {integrity: sha512-fARcF5g296snX0oLGkVxPmysetwUk2zmHcca+e9ObOovBR++9ZPOhqFUM61UUZ2EYpXVPN1redgqVoBB34nTpQ==}
1143 |     cpu: [loong64]
1144 |     os: [linux]
1145 | 
1146 |   '@rollup/rollup-linux-powerpc64le-gnu@4.30.1':
1147 |     resolution: {integrity: sha512-GLrZraoO3wVT4uFXh67ElpwQY0DIygxdv0BNW9Hkm3X34wu+BkqrDrkcsIapAY+N2ATEbvak0XQ9gxZtCIA5Rw==}
1148 |     cpu: [ppc64]
1149 |     os: [linux]
1150 | 
1151 |   '@rollup/rollup-linux-riscv64-gnu@4.30.1':
1152 |     resolution: {integrity: sha512-0WKLaAUUHKBtll0wvOmh6yh3S0wSU9+yas923JIChfxOaaBarmb/lBKPF0w/+jTVozFnOXJeRGZ8NvOxvk/jcw==}
1153 |     cpu: [riscv64]
1154 |     os: [linux]
1155 | 
1156 |   '@rollup/rollup-linux-s390x-gnu@4.30.1':
1157 |     resolution: {integrity: sha512-GWFs97Ruxo5Bt+cvVTQkOJ6TIx0xJDD/bMAOXWJg8TCSTEK8RnFeOeiFTxKniTc4vMIaWvCplMAFBt9miGxgkA==}
1158 |     cpu: [s390x]
1159 |     os: [linux]
1160 | 
1161 |   '@rollup/rollup-linux-x64-gnu@4.30.1':
1162 |     resolution: {integrity: sha512-UtgGb7QGgXDIO+tqqJ5oZRGHsDLO8SlpE4MhqpY9Llpzi5rJMvrK6ZGhsRCST2abZdBqIBeXW6WPD5fGK5SDwg==}
1163 |     cpu: [x64]
1164 |     os: [linux]
1165 | 
1166 |   '@rollup/rollup-linux-x64-musl@4.30.1':
1167 |     resolution: {integrity: sha512-V9U8Ey2UqmQsBT+xTOeMzPzwDzyXmnAoO4edZhL7INkwQcaW1Ckv3WJX3qrrp/VHaDkEWIBWhRwP47r8cdrOow==}
1168 |     cpu: [x64]
1169 |     os: [linux]
1170 | 
1171 |   '@rollup/rollup-win32-arm64-msvc@4.30.1':
1172 |     resolution: {integrity: sha512-WabtHWiPaFF47W3PkHnjbmWawnX/aE57K47ZDT1BXTS5GgrBUEpvOzq0FI0V/UYzQJgdb8XlhVNH8/fwV8xDjw==}
1173 |     cpu: [arm64]
1174 |     os: [win32]
1175 | 
1176 |   '@rollup/rollup-win32-ia32-msvc@4.30.1':
1177 |     resolution: {integrity: sha512-pxHAU+Zv39hLUTdQQHUVHf4P+0C47y/ZloorHpzs2SXMRqeAWmGghzAhfOlzFHHwjvgokdFAhC4V+6kC1lRRfw==}
1178 |     cpu: [ia32]
1179 |     os: [win32]
1180 | 
1181 |   '@rollup/rollup-win32-x64-msvc@4.30.1':
1182 |     resolution: {integrity: sha512-D6qjsXGcvhTjv0kI4fU8tUuBDF/Ueee4SVX79VfNDXZa64TfCW1Slkb6Z7O1p7vflqZjcmOVdZlqf8gvJxc6og==}
1183 |     cpu: [x64]
1184 |     os: [win32]
1185 | 
1186 |   '@sinclair/typebox@0.27.8':
1187 |     resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}
1188 | 
1189 |   '@sinonjs/commons@3.0.1':
1190 |     resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}
1191 | 
1192 |   '@sinonjs/fake-timers@10.3.0':
1193 |     resolution: {integrity: sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==}
1194 | 
1195 |   '@swc/core-darwin-arm64@1.10.7':
1196 |     resolution: {integrity: sha512-SI0OFg987P6hcyT0Dbng3YRISPS9uhLX1dzW4qRrfqQdb0i75lPJ2YWe9CN47HBazrIA5COuTzrD2Dc0TcVsSQ==}
1197 |     engines: {node: '>=10'}
1198 |     cpu: [arm64]
1199 |     os: [darwin]
1200 | 
1201 |   '@swc/core-darwin-x64@1.10.7':
1202 |     resolution: {integrity: sha512-RFIAmWVicD/l3RzxgHW0R/G1ya/6nyMspE2cAeDcTbjHi0I5qgdhBWd6ieXOaqwEwiCd0Mot1g2VZrLGoBLsjQ==}
1203 |     engines: {node: '>=10'}
1204 |     cpu: [x64]
1205 |     os: [darwin]
1206 | 
1207 |   '@swc/core-linux-arm-gnueabihf@1.10.7':
1208 |     resolution: {integrity: sha512-QP8vz7yELWfop5mM5foN6KkLylVO7ZUgWSF2cA0owwIaziactB2hCPZY5QU690coJouk9KmdFsPWDnaCFUP8tg==}
1209 |     engines: {node: '>=10'}
1210 |     cpu: [arm]
1211 |     os: [linux]
1212 | 
1213 |   '@swc/core-linux-arm64-gnu@1.10.7':
1214 |     resolution: {integrity: sha512-NgUDBGQcOeLNR+EOpmUvSDIP/F7i/OVOKxst4wOvT5FTxhnkWrW+StJGKj+DcUVSK5eWOYboSXr1y+Hlywwokw==}
1215 |     engines: {node: '>=10'}
1216 |     cpu: [arm64]
1217 |     os: [linux]
1218 | 
1219 |   '@swc/core-linux-arm64-musl@1.10.7':
1220 |     resolution: {integrity: sha512-gp5Un3EbeSThBIh6oac5ZArV/CsSmTKj5jNuuUAuEsML3VF9vqPO+25VuxCvsRf/z3py+xOWRaN2HY/rjMeZog==}
1221 |     engines: {node: '>=10'}
1222 |     cpu: [arm64]
1223 |     os: [linux]
1224 | 
1225 |   '@swc/core-linux-x64-gnu@1.10.7':
1226 |     resolution: {integrity: sha512-k/OxLLMl/edYqbZyUNg6/bqEHTXJT15l9WGqsl/2QaIGwWGvles8YjruQYQ9d4h/thSXLT9gd8bExU2D0N+bUA==}
1227 |     engines: {node: '>=10'}
1228 |     cpu: [x64]
1229 |     os: [linux]
1230 | 
1231 |   '@swc/core-linux-x64-musl@1.10.7':
1232 |     resolution: {integrity: sha512-XeDoURdWt/ybYmXLCEE8aSiTOzEn0o3Dx5l9hgt0IZEmTts7HgHHVeRgzGXbR4yDo0MfRuX5nE1dYpTmCz0uyA==}
1233 |     engines: {node: '>=10'}
1234 |     cpu: [x64]
1235 |     os: [linux]
1236 | 
1237 |   '@swc/core-win32-arm64-msvc@1.10.7':
1238 |     resolution: {integrity: sha512-nYAbi/uLS+CU0wFtBx8TquJw2uIMKBnl04LBmiVoFrsIhqSl+0MklaA9FVMGA35NcxSJfcm92Prl2W2LfSnTqQ==}
1239 |     engines: {node: '>=10'}
1240 |     cpu: [arm64]
1241 |     os: [win32]
1242 | 
1243 |   '@swc/core-win32-ia32-msvc@1.10.7':
1244 |     resolution: {integrity: sha512-+aGAbsDsIxeLxw0IzyQLtvtAcI1ctlXVvVcXZMNXIXtTURM876yNrufRo4ngoXB3jnb1MLjIIjgXfFs/eZTUSw==}
1245 |     engines: {node: '>=10'}
1246 |     cpu: [ia32]
1247 |     os: [win32]
1248 | 
1249 |   '@swc/core-win32-x64-msvc@1.10.7':
1250 |     resolution: {integrity: sha512-TBf4clpDBjF/UUnkKrT0/th76/zwvudk5wwobiTFqDywMApHip5O0VpBgZ+4raY2TM8k5+ujoy7bfHb22zu17Q==}
1251 |     engines: {node: '>=10'}
1252 |     cpu: [x64]
1253 |     os: [win32]
1254 | 
1255 |   '@swc/core@1.10.7':
1256 |     resolution: {integrity: sha512-py91kjI1jV5D5W/Q+PurBdGsdU5TFbrzamP7zSCqLdMcHkKi3rQEM5jkQcZr0MXXSJTaayLxS3MWYTBIkzPDrg==}
1257 |     engines: {node: '>=10'}
1258 |     peerDependencies:
1259 |       '@swc/helpers': '*'
1260 |     peerDependenciesMeta:
1261 |       '@swc/helpers':
1262 |         optional: true
1263 | 
1264 |   '@swc/counter@0.1.3':
1265 |     resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}
1266 | 
1267 |   '@swc/types@0.1.17':
1268 |     resolution: {integrity: sha512-V5gRru+aD8YVyCOMAjMpWR1Ui577DD5KSJsHP8RAxopAH22jFz6GZd/qxqjO6MJHQhcsjvjOFXyDhyLQUnMveQ==}
1269 | 
1270 |   '@tanstack/query-core@5.64.1':
1271 |     resolution: {integrity: sha512-978Wx4Wl4UJZbmvU/rkaM9cQtXXrbhK0lsz/UZhYIbyKYA8E4LdomTwyh2GHZ4oU0BKKoDH4YlKk2VscCUgNmg==}
1272 | 
1273 |   '@tanstack/query-devtools@5.62.16':
1274 |     resolution: {integrity: sha512-3ff6UBJr0H3nIhfLSl9911rvKqXf0u4B58jl0uYdDWLqPk9pCvYIbxC35cGxK2+8INl4IaFVUHb/IdgWrNkg3Q==}
1275 | 
1276 |   '@tanstack/react-query-devtools@5.64.1':
1277 |     resolution: {integrity: sha512-8ajcGE3wXYlb4KuJnkFYkJwJKc/qmPNTpQD7YTgLRMBPTGGp1xk7VMzxL87DoXuweO8luplUUblJJ3noVs/luQ==}
1278 |     peerDependencies:
1279 |       '@tanstack/react-query': ^5.64.1
1280 |       react: ^18 || ^19
1281 | 
1282 |   '@tanstack/react-query@5.64.1':
1283 |     resolution: {integrity: sha512-vW5ggHpIO2Yjj44b4sB+Fd3cdnlMJppXRBJkEHvld6FXh3j5dwWJoQo7mGtKI2RbSFyiyu/PhGAy0+Vv5ev9Eg==}
1284 |     peerDependencies:
1285 |       react: ^18 || ^19
1286 | 
1287 |   '@tanstack/react-virtual@3.11.2':
1288 |     resolution: {integrity: sha512-OuFzMXPF4+xZgx8UzJha0AieuMihhhaWG0tCqpp6tDzlFwOmNBPYMuLOtMJ1Tr4pXLHmgjcWhG6RlknY2oNTdQ==}
1289 |     peerDependencies:
1290 |       react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
1291 |       react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
1292 | 
1293 |   '@tanstack/virtual-core@3.11.2':
1294 |     resolution: {integrity: sha512-vTtpNt7mKCiZ1pwU9hfKPhpdVO2sVzFQsxoVBGtOSHxlrRRzYr8iQ2TlwbAcRYCcEiZ9ECAM8kBzH0v2+VzfKw==}
1295 | 
1296 |   '@testing-library/dom@9.3.4':
1297 |     resolution: {integrity: sha512-FlS4ZWlp97iiNWig0Muq8p+3rVDjRiYE+YKGbAqXOu9nwJFFOdL00kFpz42M+4huzYi86vAK1sOOfyOG45muIQ==}
1298 |     engines: {node: '>=14'}
1299 | 
1300 |   '@testing-library/jest-dom@6.6.3':
1301 |     resolution: {integrity: sha512-IteBhl4XqYNkM54f4ejhLRJiZNqcSCoXUOG2CPK7qbD322KjQozM4kHQOfkG2oln9b9HTYqs+Sae8vBATubxxA==}
1302 |     engines: {node: '>=14', npm: '>=6', yarn: '>=1'}
1303 | 
1304 |   '@testing-library/react@14.3.1':
1305 |     resolution: {integrity: sha512-H99XjUhWQw0lTgyMN05W3xQG1Nh4lq574D8keFf1dDoNTJgp66VbJozRaczoF+wsiaPJNt/TcnfpLGufGxSrZQ==}
1306 |     engines: {node: '>=14'}
1307 |     peerDependencies:
1308 |       react: ^18.0.0
1309 |       react-dom: ^18.0.0
1310 | 
1311 |   '@testing-library/user-event@14.5.2':
1312 |     resolution: {integrity: sha512-YAh82Wh4TIrxYLmfGcixwD18oIjyC1pFQC2Y01F2lzV2HTMiYrI0nze0FD0ocB//CKS/7jIUgae+adPqxK5yCQ==}
1313 |     engines: {node: '>=12', npm: '>=6'}
1314 |     peerDependencies:
1315 |       '@testing-library/dom': '>=7.21.4'
1316 | 
1317 |   '@tsconfig/node10@1.0.11':
1318 |     resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}
1319 | 
1320 |   '@tsconfig/node12@1.0.11':
1321 |     resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}
1322 | 
1323 |   '@tsconfig/node14@1.0.3':
1324 |     resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}
1325 | 
1326 |   '@tsconfig/node16@1.0.4':
1327 |     resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}
1328 | 
1329 |   '@types/aria-query@5.0.4':
1330 |     resolution: {integrity: sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==}
1331 | 
1332 |   '@types/babel__core@7.20.5':
1333 |     resolution: {integrity: sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==}
1334 | 
1335 |   '@types/babel__generator@7.6.8':
1336 |     resolution: {integrity: sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==}
1337 | 
1338 |   '@types/babel__template@7.4.4':
1339 |     resolution: {integrity: sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==}
1340 | 
1341 |   '@types/babel__traverse@7.20.6':
1342 |     resolution: {integrity: sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==}
1343 | 
1344 |   '@types/bcryptjs@2.4.6':
1345 |     resolution: {integrity: sha512-9xlo6R2qDs5uixm0bcIqCeMCE6HiQsIyel9KQySStiyqNl2tnj2mP3DX1Nf56MD6KMenNNlBBsy3LJ7gUEQPXQ==}
1346 | 
1347 |   '@types/body-parser@1.19.5':
1348 |     resolution: {integrity: sha512-fB3Zu92ucau0iQ0JMCFQE7b/dv8Ot07NI3KaZIkIUNXq82k4eBAqUaneXfleGY9JWskeS9y+u0nXMyspcuQrCg==}
1349 | 
1350 |   '@types/connect@3.4.38':
1351 |     resolution: {integrity: sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==}
1352 | 
1353 |   '@types/cookiejar@2.1.5':
1354 |     resolution: {integrity: sha512-he+DHOWReW0nghN24E1WUqM0efK4kI9oTqDm6XmK8ZPe2djZ90BSNdGnIyCLzCPw7/pogPlGbzI2wHGGmi4O/Q==}
1355 | 
1356 |   '@types/cors@2.8.17':
1357 |     resolution: {integrity: sha512-8CGDvrBj1zgo2qE+oS3pOCyYNqCPryMWY2bGfwA0dcfopWGgxs+78df0Rs3rc9THP4JkOhLsAa+15VdpAqkcUA==}
1358 | 
1359 |   '@types/estree@1.0.6':
1360 |     resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}
1361 | 
1362 |   '@types/express-serve-static-core@4.19.6':
1363 |     resolution: {integrity: sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==}
1364 | 
1365 |   '@types/express@4.17.21':
1366 |     resolution: {integrity: sha512-ejlPM315qwLpaQlQDTjPdsUFSc6ZsP4AN6AlWnogPjQ7CVi7PYF3YVz+CY3jE2pwYf7E/7HlDAN0rV2GxTG0HQ==}
1367 | 
1368 |   '@types/google.maps@3.58.1':
1369 |     resolution: {integrity: sha512-X9QTSvGJ0nCfMzYOnaVs/k6/4L+7F5uCS+4iUmkLEls6J9S/Phv+m/i3mDeyc49ZBgwab3EFO1HEoBY7k98EGQ==}
1370 | 
1371 |   '@types/graceful-fs@4.1.9':
1372 |     resolution: {integrity: sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==}
1373 | 
1374 |   '@types/http-errors@2.0.4':
1375 |     resolution: {integrity: sha512-D0CFMMtydbJAegzOyHjtiKPLlvnm3iTZyZRSZoLq2mRhDdmLfIWOCYPfQJ4cu2erKghU++QvjcUjp/5h7hESpA==}
1376 | 
1377 |   '@types/istanbul-lib-coverage@2.0.6':
1378 |     resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}
1379 | 
1380 |   '@types/istanbul-lib-report@3.0.3':
1381 |     resolution: {integrity: sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==}
1382 | 
1383 |   '@types/istanbul-reports@3.0.4':
1384 |     resolution: {integrity: sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==}
1385 | 
1386 |   '@types/jest@29.5.14':
1387 |     resolution: {integrity: sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==}
1388 | 
1389 |   '@types/json-schema@7.0.15':
1390 |     resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
1391 | 
1392 |   '@types/jsonwebtoken@9.0.7':
1393 |     resolution: {integrity: sha512-ugo316mmTYBl2g81zDFnZ7cfxlut3o+/EQdaP7J8QN2kY6lJ22hmQYCK5EHcJHbrW+dkCGSCPgbG8JtYj6qSrg==}
1394 | 
1395 |   '@types/methods@1.1.4':
1396 |     resolution: {integrity: sha512-ymXWVrDiCxTBE3+RIrrP533E70eA+9qu7zdWoHuOmGujkYtzf4HQF96b8nwHLqhuf4ykX61IGRIB38CC6/sImQ==}
1397 | 
1398 |   '@types/mime@1.3.5':
1399 |     resolution: {integrity: sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==}
1400 | 
1401 |   '@types/morgan@1.9.9':
1402 |     resolution: {integrity: sha512-iRYSDKVaC6FkGSpEVVIvrRGw0DfJMiQzIn3qr2G5B3C//AWkulhXgaBd7tS9/J79GWSYMTHGs7PfI5b3Y8m+RQ==}
1403 | 
1404 |   '@types/multer@1.4.12':
1405 |     resolution: {integrity: sha512-pQ2hoqvXiJt2FP9WQVLPRO+AmiIm/ZYkavPlIQnx282u4ZrVdztx0pkh3jjpQt0Kz+YI0YhSG264y08UJKoUQg==}
1406 | 
1407 |   '@types/node@20.17.12':
1408 |     resolution: {integrity: sha512-vo/wmBgMIiEA23A/knMfn/cf37VnuF52nZh5ZoW0GWt4e4sxNquibrMRJ7UQsA06+MBx9r/H1jsI9grYjQCQlw==}
1409 | 
1410 |   '@types/nodemailer@6.4.17':
1411 |     resolution: {integrity: sha512-I9CCaIp6DTldEg7vyUTZi8+9Vo0hi1/T8gv3C89yk1rSAAzoKQ8H8ki/jBYJSFoH/BisgLP8tkZMlQ91CIquww==}
1412 | 
1413 |   '@types/prop-types@15.7.14':
1414 |     resolution: {integrity: sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==}
1415 | 
1416 |   '@types/qs@6.9.17':
1417 |     resolution: {integrity: sha512-rX4/bPcfmvxHDv0XjfJELTTr+iB+tn032nPILqHm5wbthUUUuVtNGGqzhya9XUxjTP8Fpr0qYgSZZKxGY++svQ==}
1418 | 
1419 |   '@types/range-parser@1.2.7':
1420 |     resolution: {integrity: sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==}
1421 | 
1422 |   '@types/react-dom@18.3.5':
1423 |     resolution: {integrity: sha512-P4t6saawp+b/dFrUr2cvkVsfvPguwsxtH6dNIYRllMsefqFzkZk5UIjzyDOv5g1dXIPdG4Sp1yCR4Z6RCUsG/Q==}
1424 |     peerDependencies:
1425 |       '@types/react': ^18.0.0
1426 | 
1427 |   '@types/react-transition-group@4.4.12':
1428 |     resolution: {integrity: sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==}
1429 |     peerDependencies:
1430 |       '@types/react': '*'
1431 | 
1432 |   '@types/react@18.3.18':
1433 |     resolution: {integrity: sha512-t4yC+vtgnkYjNSKlFx1jkAhH8LgTo2N/7Qvi83kdEaUtMDiwpbLAktKDaAMlRcJ5eSxZkH74eEGt1ky31d7kfQ==}
1434 | 
1435 |   '@types/semver@7.5.8':
1436 |     resolution: {integrity: sha512-I8EUhyrgfLrcTkzV3TSsGyl1tSuPrEDzr0yd5m90UgNxQkyDXULk3b6MlQqTCpZpNtWe1K0hzclnZkTcLBe2UQ==}
1437 | 
1438 |   '@types/send@0.17.4':
1439 |     resolution: {integrity: sha512-x2EM6TJOybec7c52BX0ZspPodMsQUd5L6PRwOunVyVUhXiBSKf3AezDL8Dgvgt5o0UfKNfuA0eMLr2wLT4AiBA==}
1440 | 
1441 |   '@types/serve-static@1.15.7':
1442 |     resolution: {integrity: sha512-W8Ym+h8nhuRwaKPaDw34QUkwsGi6Rc4yYqvKFo5rm2FUEhCFbzVWrxXUxuKK8TASjWsysJY0nsmNCGhCOIsrOw==}
1443 | 
1444 |   '@types/stack-utils@2.0.3':
1445 |     resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}
1446 | 
1447 |   '@types/superagent@8.1.9':
1448 |     resolution: {integrity: sha512-pTVjI73witn+9ILmoJdajHGW2jkSaOzhiFYF1Rd3EQ94kymLqB9PjD9ISg7WaALC7+dCHT0FGe9T2LktLq/3GQ==}
1449 | 
1450 |   '@types/supertest@6.0.2':
1451 |     resolution: {integrity: sha512-137ypx2lk/wTQbW6An6safu9hXmajAifU/s7szAHLN/FeIm5w7yR0Wkl9fdJMRSHwOn4HLAI0DaB2TOORuhPDg==}
1452 | 
1453 |   '@types/triple-beam@1.3.5':
1454 |     resolution: {integrity: sha512-6WaYesThRMCl19iryMYP7/x2OVgCtbIVflDGFpWnb9irXI3UjYE4AzmYuiUKY1AJstGijoY+MgUszMgRxIYTYw==}
1455 | 
1456 |   '@types/yargs-parser@21.0.3':
1457 |     resolution: {integrity: sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==}
1458 | 
1459 |   '@types/yargs@17.0.33':
1460 |     resolution: {integrity: sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==}
1461 | 
1462 |   '@typescript-eslint/eslint-plugin@6.21.0':
1463 |     resolution: {integrity: sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==}
1464 |     engines: {node: ^16.0.0 || >=18.0.0}
1465 |     peerDependencies:
1466 |       '@typescript-eslint/parser': ^6.0.0 || ^6.0.0-alpha
1467 |       eslint: ^7.0.0 || ^8.0.0
1468 |       typescript: '*'
1469 |     peerDependenciesMeta:
1470 |       typescript:
1471 |         optional: true
1472 | 
1473 |   '@typescript-eslint/parser@6.21.0':
1474 |     resolution: {integrity: sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==}
1475 |     engines: {node: ^16.0.0 || >=18.0.0}
1476 |     peerDependencies:
1477 |       eslint: ^7.0.0 || ^8.0.0
1478 |       typescript: '*'
1479 |     peerDependenciesMeta:
1480 |       typescript:
1481 |         optional: true
1482 | 
1483 |   '@typescript-eslint/scope-manager@6.21.0':
1484 |     resolution: {integrity: sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==}
1485 |     engines: {node: ^16.0.0 || >=18.0.0}
1486 | 
1487 |   '@typescript-eslint/type-utils@6.21.0':
1488 |     resolution: {integrity: sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==}
1489 |     engines: {node: ^16.0.0 || >=18.0.0}
1490 |     peerDependencies:
1491 |       eslint: ^7.0.0 || ^8.0.0
1492 |       typescript: '*'
1493 |     peerDependenciesMeta:
1494 |       typescript:
1495 |         optional: true
1496 | 
1497 |   '@typescript-eslint/types@6.21.0':
1498 |     resolution: {integrity: sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==}
1499 |     engines: {node: ^16.0.0 || >=18.0.0}
1500 | 
1501 |   '@typescript-eslint/typescript-estree@6.21.0':
1502 |     resolution: {integrity: sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==}
1503 |     engines: {node: ^16.0.0 || >=18.0.0}
1504 |     peerDependencies:
1505 |       typescript: '*'
1506 |     peerDependenciesMeta:
1507 |       typescript:
1508 |         optional: true
1509 | 
1510 |   '@typescript-eslint/utils@6.21.0':
1511 |     resolution: {integrity: sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==}
1512 |     engines: {node: ^16.0.0 || >=18.0.0}
1513 |     peerDependencies:
1514 |       eslint: ^7.0.0 || ^8.0.0
1515 | 
1516 |   '@typescript-eslint/visitor-keys@6.21.0':
1517 |     resolution: {integrity: sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==}
1518 |     engines: {node: ^16.0.0 || >=18.0.0}
1519 | 
1520 |   '@ungap/structured-clone@1.2.1':
1521 |     resolution: {integrity: sha512-fEzPV3hSkSMltkw152tJKNARhOupqbH96MZWyRjNaYZOMIzbrTeQDG+MTc6Mr2pgzFQzFxAfmhGDNP5QK++2ZA==}
1522 | 
1523 |   '@vitejs/plugin-react-swc@3.7.2':
1524 |     resolution: {integrity: sha512-y0byko2b2tSVVf5Gpng1eEhX1OvPC7x8yns1Fx8jDzlJp4LS6CMkCPfLw47cjyoMrshQDoQw4qcgjsU9VvlCew==}
1525 |     peerDependencies:
1526 |       vite: ^4 || ^5 || ^6
1527 | 
1528 |   '@vitejs/plugin-react@4.3.4':
1529 |     resolution: {integrity: sha512-SCCPBJtYLdE8PX/7ZQAs1QAZ8Jqwih+0VBLum1EGqmCCQal+MIUqLCzj3ZUy8ufbC0cAM4LRlSTm7IQJwWT4ug==}
1530 |     engines: {node: ^14.18.0 || >=16.0.0}
1531 |     peerDependencies:
1532 |       vite: ^4.2.0 || ^5.0.0 || ^6.0.0
1533 | 
1534 |   '@vitest/coverage-v8@1.6.0':
1535 |     resolution: {integrity: sha512-KvapcbMY/8GYIG0rlwwOKCVNRc0OL20rrhFkg/CHNzncV03TE2XWvO5w9uZYoxNiMEBacAJt3unSOiZ7svePew==}
1536 |     peerDependencies:
1537 |       vitest: 1.6.0
1538 | 
1539 |   '@vitest/expect@1.6.0':
1540 |     resolution: {integrity: sha512-ixEvFVQjycy/oNgHjqsL6AZCDduC+tflRluaHIzKIsdbzkLn2U/iBnVeJwB6HsIjQBdfMR8Z0tRxKUsvFJEeWQ==}
1541 | 
1542 |   '@vitest/runner@1.6.0':
1543 |     resolution: {integrity: sha512-P4xgwPjwesuBiHisAVz/LSSZtDjOTPYZVmNAnpHHSR6ONrf8eCJOFRvUwdHn30F5M1fxhqtl7QZQUk2dprIXAg==}
1544 | 
1545 |   '@vitest/snapshot@1.6.0':
1546 |     resolution: {integrity: sha512-+Hx43f8Chus+DCmygqqfetcAZrDJwvTj0ymqjQq4CvmpKFSTVteEOBzCusu1x2tt4OJcvBflyHUE0DZSLgEMtQ==}
1547 | 
1548 |   '@vitest/spy@1.6.0':
1549 |     resolution: {integrity: sha512-leUTap6B/cqi/bQkXUu6bQV5TZPx7pmMBKBQiI0rJA8c3pB56ZsaTbREnF7CJfmvAS4V2cXIBAh/3rVwrrCYgw==}
1550 | 
1551 |   '@vitest/utils@1.6.0':
1552 |     resolution: {integrity: sha512-21cPiuGMoMZwiOHa2i4LXkMkMkCGzA+MVFV70jRwHo95dL4x/ts5GZhML1QWuy7yfp3WzK3lRvZi3JnXTYqrBw==}
1553 | 
1554 |   accepts@1.3.8:
1555 |     resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}
1556 |     engines: {node: '>= 0.6'}
1557 | 
1558 |   acorn-jsx@5.3.2:
1559 |     resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
1560 |     peerDependencies:
1561 |       acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
1562 | 
1563 |   acorn-walk@8.3.4:
1564 |     resolution: {integrity: sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==}
1565 |     engines: {node: '>=0.4.0'}
1566 | 
1567 |   acorn@8.14.0:
1568 |     resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}
1569 |     engines: {node: '>=0.4.0'}
1570 |     hasBin: true
1571 | 
1572 |   ajv@6.12.6:
1573 |     resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
1574 | 
1575 |   ansi-escapes@4.3.2:
1576 |     resolution: {integrity: sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==}
1577 |     engines: {node: '>=8'}
1578 | 
1579 |   ansi-regex@5.0.1:
1580 |     resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
1581 |     engines: {node: '>=8'}
1582 | 
1583 |   ansi-regex@6.1.0:
1584 |     resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}
1585 |     engines: {node: '>=12'}
1586 | 
1587 |   ansi-styles@4.3.0:
1588 |     resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
1589 |     engines: {node: '>=8'}
1590 | 
1591 |   ansi-styles@5.2.0:
1592 |     resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}
1593 |     engines: {node: '>=10'}
1594 | 
1595 |   ansi-styles@6.2.1:
1596 |     resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
1597 |     engines: {node: '>=12'}
1598 | 
1599 |   any-promise@1.3.0:
1600 |     resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}
1601 | 
1602 |   anymatch@3.1.3:
1603 |     resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
1604 |     engines: {node: '>= 8'}
1605 | 
1606 |   append-field@1.0.0:
1607 |     resolution: {integrity: sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==}
1608 | 
1609 |   arg@4.1.3:
1610 |     resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}
1611 | 
1612 |   arg@5.0.2:
1613 |     resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}
1614 | 
1615 |   argparse@1.0.10:
1616 |     resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}
1617 | 
1618 |   argparse@2.0.1:
1619 |     resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}
1620 | 
1621 |   aria-query@5.1.3:
1622 |     resolution: {integrity: sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==}
1623 | 
1624 |   aria-query@5.3.2:
1625 |     resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}
1626 |     engines: {node: '>= 0.4'}
1627 | 
1628 |   array-buffer-byte-length@1.0.2:
1629 |     resolution: {integrity: sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==}
1630 |     engines: {node: '>= 0.4'}
1631 | 
1632 |   array-flatten@1.1.1:
1633 |     resolution: {integrity: sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==}
1634 | 
1635 |   array-union@2.1.0:
1636 |     resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}
1637 |     engines: {node: '>=8'}
1638 | 
1639 |   asap@2.0.6:
1640 |     resolution: {integrity: sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==}
1641 | 
1642 |   assertion-error@1.1.0:
1643 |     resolution: {integrity: sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==}
1644 | 
1645 |   async@3.2.6:
1646 |     resolution: {integrity: sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==}
1647 | 
1648 |   asynckit@0.4.0:
1649 |     resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}
1650 | 
1651 |   autoprefixer@10.4.20:
1652 |     resolution: {integrity: sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==}
1653 |     engines: {node: ^10 || ^12 || >=14}
1654 |     hasBin: true
1655 |     peerDependencies:
1656 |       postcss: ^8.1.0
1657 | 
1658 |   available-typed-arrays@1.0.7:
1659 |     resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
1660 |     engines: {node: '>= 0.4'}
1661 | 
1662 |   axios@1.7.9:
1663 |     resolution: {integrity: sha512-LhLcE7Hbiryz8oMDdDptSrWowmB4Bl6RCt6sIJKpRB4XtVf0iEgewX3au/pJqm+Py1kCASkb/FFKjxQaLtxJvw==}
1664 | 
1665 |   babel-jest@29.7.0:
1666 |     resolution: {integrity: sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==}
1667 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1668 |     peerDependencies:
1669 |       '@babel/core': ^7.8.0
1670 | 
1671 |   babel-plugin-istanbul@6.1.1:
1672 |     resolution: {integrity: sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==}
1673 |     engines: {node: '>=8'}
1674 | 
1675 |   babel-plugin-jest-hoist@29.6.3:
1676 |     resolution: {integrity: sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==}
1677 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1678 | 
1679 |   babel-preset-current-node-syntax@1.1.0:
1680 |     resolution: {integrity: sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==}
1681 |     peerDependencies:
1682 |       '@babel/core': ^7.0.0
1683 | 
1684 |   babel-preset-jest@29.6.3:
1685 |     resolution: {integrity: sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==}
1686 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1687 |     peerDependencies:
1688 |       '@babel/core': ^7.0.0
1689 | 
1690 |   balanced-match@1.0.2:
1691 |     resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
1692 | 
1693 |   basic-auth@2.0.1:
1694 |     resolution: {integrity: sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==}
1695 |     engines: {node: '>= 0.8'}
1696 | 
1697 |   bcryptjs@2.4.3:
1698 |     resolution: {integrity: sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==}
1699 | 
1700 |   binary-extensions@2.3.0:
1701 |     resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
1702 |     engines: {node: '>=8'}
1703 | 
1704 |   body-parser@1.20.3:
1705 |     resolution: {integrity: sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==}
1706 |     engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}
1707 | 
1708 |   brace-expansion@1.1.11:
1709 |     resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}
1710 | 
1711 |   brace-expansion@2.0.1:
1712 |     resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}
1713 | 
1714 |   braces@3.0.3:
1715 |     resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
1716 |     engines: {node: '>=8'}
1717 | 
1718 |   browserslist@4.24.4:
1719 |     resolution: {integrity: sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==}
1720 |     engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
1721 |     hasBin: true
1722 | 
1723 |   bs-logger@0.2.6:
1724 |     resolution: {integrity: sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==}
1725 |     engines: {node: '>= 6'}
1726 | 
1727 |   bser@2.1.1:
1728 |     resolution: {integrity: sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==}
1729 | 
1730 |   buffer-equal-constant-time@1.0.1:
1731 |     resolution: {integrity: sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==}
1732 | 
1733 |   buffer-from@1.1.2:
1734 |     resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}
1735 | 
1736 |   bundle-require@5.1.0:
1737 |     resolution: {integrity: sha512-3WrrOuZiyaaZPWiEt4G3+IffISVC9HYlWueJEBWED4ZH4aIAC2PnkdnuRrR94M+w6yGWn4AglWtJtBI8YqvgoA==}
1738 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
1739 |     peerDependencies:
1740 |       esbuild: '>=0.18'
1741 | 
1742 |   busboy@1.6.0:
1743 |     resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}
1744 |     engines: {node: '>=10.16.0'}
1745 | 
1746 |   bytes@3.1.2:
1747 |     resolution: {integrity: sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==}
1748 |     engines: {node: '>= 0.8'}
1749 | 
1750 |   cac@6.7.14:
1751 |     resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}
1752 |     engines: {node: '>=8'}
1753 | 
1754 |   call-bind-apply-helpers@1.0.1:
1755 |     resolution: {integrity: sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==}
1756 |     engines: {node: '>= 0.4'}
1757 | 
1758 |   call-bind@1.0.8:
1759 |     resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}
1760 |     engines: {node: '>= 0.4'}
1761 | 
1762 |   call-bound@1.0.3:
1763 |     resolution: {integrity: sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==}
1764 |     engines: {node: '>= 0.4'}
1765 | 
1766 |   callsites@3.1.0:
1767 |     resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
1768 |     engines: {node: '>=6'}
1769 | 
1770 |   camelcase-css@2.0.1:
1771 |     resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
1772 |     engines: {node: '>= 6'}
1773 | 
1774 |   camelcase@5.3.1:
1775 |     resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}
1776 |     engines: {node: '>=6'}
1777 | 
1778 |   camelcase@6.3.0:
1779 |     resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}
1780 |     engines: {node: '>=10'}
1781 | 
1782 |   caniuse-lite@1.0.30001692:
1783 |     resolution: {integrity: sha512-A95VKan0kdtrsnMubMKxEKUKImOPSuCpYgxSQBo036P5YYgVIcOYJEgt/txJWqObiRQeISNCfef9nvlQ0vbV7A==}
1784 | 
1785 |   chai@4.5.0:
1786 |     resolution: {integrity: sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==}
1787 |     engines: {node: '>=4'}
1788 | 
1789 |   chalk@3.0.0:
1790 |     resolution: {integrity: sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==}
1791 |     engines: {node: '>=8'}
1792 | 
1793 |   chalk@4.1.2:
1794 |     resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
1795 |     engines: {node: '>=10'}
1796 | 
1797 |   char-regex@1.0.2:
1798 |     resolution: {integrity: sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==}
1799 |     engines: {node: '>=10'}
1800 | 
1801 |   check-error@1.0.3:
1802 |     resolution: {integrity: sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==}
1803 | 
1804 |   chokidar@3.6.0:
1805 |     resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
1806 |     engines: {node: '>= 8.10.0'}
1807 | 
1808 |   chokidar@4.0.3:
1809 |     resolution: {integrity: sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==}
1810 |     engines: {node: '>= 14.16.0'}
1811 | 
1812 |   ci-info@3.9.0:
1813 |     resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}
1814 |     engines: {node: '>=8'}
1815 | 
1816 |   cjs-module-lexer@1.4.1:
1817 |     resolution: {integrity: sha512-cuSVIHi9/9E/+821Qjdvngor+xpnlwnuwIyZOaLmHBVdXL+gP+I6QQB9VkO7RI77YIcTV+S1W9AreJ5eN63JBA==}
1818 | 
1819 |   client-only@0.0.1:
1820 |     resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}
1821 | 
1822 |   cliui@8.0.1:
1823 |     resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
1824 |     engines: {node: '>=12'}
1825 | 
1826 |   clsx@2.1.1:
1827 |     resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}
1828 |     engines: {node: '>=6'}
1829 | 
1830 |   co@4.6.0:
1831 |     resolution: {integrity: sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==}
1832 |     engines: {iojs: '>= 1.0.0', node: '>= 0.12.0'}
1833 | 
1834 |   collect-v8-coverage@1.0.2:
1835 |     resolution: {integrity: sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==}
1836 | 
1837 |   color-convert@1.9.3:
1838 |     resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}
1839 | 
1840 |   color-convert@2.0.1:
1841 |     resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
1842 |     engines: {node: '>=7.0.0'}
1843 | 
1844 |   color-name@1.1.3:
1845 |     resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}
1846 | 
1847 |   color-name@1.1.4:
1848 |     resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}
1849 | 
1850 |   color-string@1.9.1:
1851 |     resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}
1852 | 
1853 |   color@3.2.1:
1854 |     resolution: {integrity: sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==}
1855 | 
1856 |   colorspace@1.1.4:
1857 |     resolution: {integrity: sha512-BgvKJiuVu1igBUF2kEjRCZXol6wiiGbY5ipL/oVPwm0BL9sIpMIzM8IK7vwuxIIzOXMV3Ey5w+vxhm0rR/TN8w==}
1858 | 
1859 |   combined-stream@1.0.8:
1860 |     resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}
1861 |     engines: {node: '>= 0.8'}
1862 | 
1863 |   commander@4.1.1:
1864 |     resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}
1865 |     engines: {node: '>= 6'}
1866 | 
1867 |   component-emitter@1.3.1:
1868 |     resolution: {integrity: sha512-T0+barUSQRTUQASh8bx02dl+DhF54GtIDY13Y3m9oWTklKbb3Wv974meRpeZ3lp1JpLVECWWNHC4vaG2XHXouQ==}
1869 | 
1870 |   concat-map@0.0.1:
1871 |     resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
1872 | 
1873 |   concat-stream@1.6.2:
1874 |     resolution: {integrity: sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==}
1875 |     engines: {'0': node >= 0.8}
1876 | 
1877 |   confbox@0.1.8:
1878 |     resolution: {integrity: sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==}
1879 | 
1880 |   consola@3.4.0:
1881 |     resolution: {integrity: sha512-EiPU8G6dQG0GFHNR8ljnZFki/8a+cQwEQ+7wpxdChl02Q8HXlwEZWD5lqAF8vC2sEC3Tehr8hy7vErz88LHyUA==}
1882 |     engines: {node: ^14.18.0 || >=16.10.0}
1883 | 
1884 |   content-disposition@0.5.4:
1885 |     resolution: {integrity: sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==}
1886 |     engines: {node: '>= 0.6'}
1887 | 
1888 |   content-type@1.0.5:
1889 |     resolution: {integrity: sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==}
1890 |     engines: {node: '>= 0.6'}
1891 | 
1892 |   convert-source-map@2.0.0:
1893 |     resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}
1894 | 
1895 |   cookie-signature@1.0.6:
1896 |     resolution: {integrity: sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==}
1897 | 
1898 |   cookie@0.7.1:
1899 |     resolution: {integrity: sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==}
1900 |     engines: {node: '>= 0.6'}
1901 | 
1902 |   cookiejar@2.1.4:
1903 |     resolution: {integrity: sha512-LDx6oHrK+PhzLKJU9j5S7/Y3jM/mUHvD/DeI1WQmJn652iPC5Y4TBzC9l+5OMOXlyTTA+SmVUPm0HQUwpD5Jqw==}
1904 | 
1905 |   core-util-is@1.0.3:
1906 |     resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}
1907 | 
1908 |   cors@2.8.5:
1909 |     resolution: {integrity: sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==}
1910 |     engines: {node: '>= 0.10'}
1911 | 
1912 |   create-jest@29.7.0:
1913 |     resolution: {integrity: sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==}
1914 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
1915 |     hasBin: true
1916 | 
1917 |   create-require@1.1.1:
1918 |     resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}
1919 | 
1920 |   cross-env@7.0.3:
1921 |     resolution: {integrity: sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==}
1922 |     engines: {node: '>=10.14', npm: '>=6', yarn: '>=1'}
1923 |     hasBin: true
1924 | 
1925 |   cross-spawn@7.0.6:
1926 |     resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
1927 |     engines: {node: '>= 8'}
1928 | 
1929 |   css.escape@1.5.1:
1930 |     resolution: {integrity: sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==}
1931 | 
1932 |   cssesc@3.0.0:
1933 |     resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
1934 |     engines: {node: '>=4'}
1935 |     hasBin: true
1936 | 
1937 |   csstype@3.1.3:
1938 |     resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
1939 | 
1940 |   debug@2.6.9:
1941 |     resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}
1942 |     peerDependencies:
1943 |       supports-color: '*'
1944 |     peerDependenciesMeta:
1945 |       supports-color:
1946 |         optional: true
1947 | 
1948 |   debug@4.4.0:
1949 |     resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}
1950 |     engines: {node: '>=6.0'}
1951 |     peerDependencies:
1952 |       supports-color: '*'
1953 |     peerDependenciesMeta:
1954 |       supports-color:
1955 |         optional: true
1956 | 
1957 |   dedent@1.5.3:
1958 |     resolution: {integrity: sha512-NHQtfOOW68WD8lgypbLA5oT+Bt0xXJhiYvoR6SmmNXZfpzOGXwdKWmcwG8N7PwVVWV3eF/68nmD9BaJSsTBhyQ==}
1959 |     peerDependencies:
1960 |       babel-plugin-macros: ^3.1.0
1961 |     peerDependenciesMeta:
1962 |       babel-plugin-macros:
1963 |         optional: true
1964 | 
1965 |   deep-eql@4.1.4:
1966 |     resolution: {integrity: sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==}
1967 |     engines: {node: '>=6'}
1968 | 
1969 |   deep-equal@2.2.3:
1970 |     resolution: {integrity: sha512-ZIwpnevOurS8bpT4192sqAowWM76JDKSHYzMLty3BZGSswgq6pBaH3DhCSW5xVAZICZyKdOBPjwww5wfgT/6PA==}
1971 |     engines: {node: '>= 0.4'}
1972 | 
1973 |   deep-is@0.1.4:
1974 |     resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
1975 | 
1976 |   deepmerge@4.3.1:
1977 |     resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}
1978 |     engines: {node: '>=0.10.0'}
1979 | 
1980 |   define-data-property@1.1.4:
1981 |     resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
1982 |     engines: {node: '>= 0.4'}
1983 | 
1984 |   define-properties@1.2.1:
1985 |     resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
1986 |     engines: {node: '>= 0.4'}
1987 | 
1988 |   delayed-stream@1.0.0:
1989 |     resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}
1990 |     engines: {node: '>=0.4.0'}
1991 | 
1992 |   depd@2.0.0:
1993 |     resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}
1994 |     engines: {node: '>= 0.8'}
1995 | 
1996 |   destroy@1.2.0:
1997 |     resolution: {integrity: sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==}
1998 |     engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}
1999 | 
2000 |   detect-newline@3.1.0:
2001 |     resolution: {integrity: sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==}
2002 |     engines: {node: '>=8'}
2003 | 
2004 |   dezalgo@1.0.4:
2005 |     resolution: {integrity: sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==}
2006 | 
2007 |   didyoumean@1.2.2:
2008 |     resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}
2009 | 
2010 |   diff-sequences@29.6.3:
2011 |     resolution: {integrity: sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==}
2012 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2013 | 
2014 |   diff@4.0.2:
2015 |     resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}
2016 |     engines: {node: '>=0.3.1'}
2017 | 
2018 |   dir-glob@3.0.1:
2019 |     resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}
2020 |     engines: {node: '>=8'}
2021 | 
2022 |   dlv@1.1.3:
2023 |     resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}
2024 | 
2025 |   doctrine@3.0.0:
2026 |     resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}
2027 |     engines: {node: '>=6.0.0'}
2028 | 
2029 |   dom-accessibility-api@0.5.16:
2030 |     resolution: {integrity: sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==}
2031 | 
2032 |   dom-accessibility-api@0.6.3:
2033 |     resolution: {integrity: sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==}
2034 | 
2035 |   dom-helpers@5.2.1:
2036 |     resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}
2037 | 
2038 |   dotenv@16.4.7:
2039 |     resolution: {integrity: sha512-47qPchRCykZC03FhkYAhrvwU4xDBFIj1QPqaarj6mdM/hgUzfPHcpkHJOn3mJAufFeeAxAzeGsr5X0M4k6fLZQ==}
2040 |     engines: {node: '>=12'}
2041 | 
2042 |   dunder-proto@1.0.1:
2043 |     resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
2044 |     engines: {node: '>= 0.4'}
2045 | 
2046 |   eastasianwidth@0.2.0:
2047 |     resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}
2048 | 
2049 |   ecdsa-sig-formatter@1.0.11:
2050 |     resolution: {integrity: sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==}
2051 | 
2052 |   ee-first@1.1.1:
2053 |     resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}
2054 | 
2055 |   ejs@3.1.10:
2056 |     resolution: {integrity: sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==}
2057 |     engines: {node: '>=0.10.0'}
2058 |     hasBin: true
2059 | 
2060 |   electron-to-chromium@1.5.80:
2061 |     resolution: {integrity: sha512-LTrKpW0AqIuHwmlVNV+cjFYTnXtM9K37OGhpe0ZI10ScPSxqVSryZHIY3WnCS5NSYbBODRTZyhRMS2h5FAEqAw==}
2062 | 
2063 |   emittery@0.13.1:
2064 |     resolution: {integrity: sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==}
2065 |     engines: {node: '>=12'}
2066 | 
2067 |   emoji-regex@8.0.0:
2068 |     resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}
2069 | 
2070 |   emoji-regex@9.2.2:
2071 |     resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}
2072 | 
2073 |   enabled@2.0.0:
2074 |     resolution: {integrity: sha512-AKrN98kuwOzMIdAizXGI86UFBoo26CL21UM763y1h/GMSJ4/OHU9k2YlsmBpyScFo/wbLzWQJBMCW4+IO3/+OQ==}
2075 | 
2076 |   encodeurl@1.0.2:
2077 |     resolution: {integrity: sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==}
2078 |     engines: {node: '>= 0.8'}
2079 | 
2080 |   encodeurl@2.0.0:
2081 |     resolution: {integrity: sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==}
2082 |     engines: {node: '>= 0.8'}
2083 | 
2084 |   entities@4.5.0:
2085 |     resolution: {integrity: sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==}
2086 |     engines: {node: '>=0.12'}
2087 | 
2088 |   error-ex@1.3.2:
2089 |     resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}
2090 | 
2091 |   es-define-property@1.0.1:
2092 |     resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}
2093 |     engines: {node: '>= 0.4'}
2094 | 
2095 |   es-errors@1.3.0:
2096 |     resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
2097 |     engines: {node: '>= 0.4'}
2098 | 
2099 |   es-get-iterator@1.1.3:
2100 |     resolution: {integrity: sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==}
2101 | 
2102 |   es-object-atoms@1.0.0:
2103 |     resolution: {integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==}
2104 |     engines: {node: '>= 0.4'}
2105 | 
2106 |   esbuild@0.21.5:
2107 |     resolution: {integrity: sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==}
2108 |     engines: {node: '>=12'}
2109 |     hasBin: true
2110 | 
2111 |   esbuild@0.23.1:
2112 |     resolution: {integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==}
2113 |     engines: {node: '>=18'}
2114 |     hasBin: true
2115 | 
2116 |   esbuild@0.24.2:
2117 |     resolution: {integrity: sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==}
2118 |     engines: {node: '>=18'}
2119 |     hasBin: true
2120 | 
2121 |   escalade@3.2.0:
2122 |     resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}
2123 |     engines: {node: '>=6'}
2124 | 
2125 |   escape-html@1.0.3:
2126 |     resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}
2127 | 
2128 |   escape-string-regexp@2.0.0:
2129 |     resolution: {integrity: sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==}
2130 |     engines: {node: '>=8'}
2131 | 
2132 |   escape-string-regexp@4.0.0:
2133 |     resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
2134 |     engines: {node: '>=10'}
2135 | 
2136 |   eslint-config-prettier@9.1.0:
2137 |     resolution: {integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==}
2138 |     hasBin: true
2139 |     peerDependencies:
2140 |       eslint: '>=7.0.0'
2141 | 
2142 |   eslint-plugin-react-hooks@4.6.2:
2143 |     resolution: {integrity: sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==}
2144 |     engines: {node: '>=10'}
2145 |     peerDependencies:
2146 |       eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0
2147 | 
2148 |   eslint-plugin-react-refresh@0.4.18:
2149 |     resolution: {integrity: sha512-IRGEoFn3OKalm3hjfolEWGqoF/jPqeEYFp+C8B0WMzwGwBMvlRDQd06kghDhF0C61uJ6WfSDhEZE/sAQjduKgw==}
2150 |     peerDependencies:
2151 |       eslint: '>=8.40'
2152 | 
2153 |   eslint-scope@7.2.2:
2154 |     resolution: {integrity: sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==}
2155 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2156 | 
2157 |   eslint-visitor-keys@3.4.3:
2158 |     resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
2159 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2160 | 
2161 |   eslint@8.57.1:
2162 |     resolution: {integrity: sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==}
2163 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2164 |     deprecated: This version is no longer supported. Please see https://eslint.org/version-support for other options.
2165 |     hasBin: true
2166 | 
2167 |   espree@9.6.1:
2168 |     resolution: {integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==}
2169 |     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
2170 | 
2171 |   esprima@4.0.1:
2172 |     resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
2173 |     engines: {node: '>=4'}
2174 |     hasBin: true
2175 | 
2176 |   esquery@1.6.0:
2177 |     resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
2178 |     engines: {node: '>=0.10'}
2179 | 
2180 |   esrecurse@4.3.0:
2181 |     resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
2182 |     engines: {node: '>=4.0'}
2183 | 
2184 |   estraverse@5.3.0:
2185 |     resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
2186 |     engines: {node: '>=4.0'}
2187 | 
2188 |   estree-walker@3.0.3:
2189 |     resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}
2190 | 
2191 |   esutils@2.0.3:
2192 |     resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
2193 |     engines: {node: '>=0.10.0'}
2194 | 
2195 |   etag@1.8.1:
2196 |     resolution: {integrity: sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==}
2197 |     engines: {node: '>= 0.6'}
2198 | 
2199 |   execa@5.1.1:
2200 |     resolution: {integrity: sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==}
2201 |     engines: {node: '>=10'}
2202 | 
2203 |   execa@8.0.1:
2204 |     resolution: {integrity: sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==}
2205 |     engines: {node: '>=16.17'}
2206 | 
2207 |   exit@0.1.2:
2208 |     resolution: {integrity: sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==}
2209 |     engines: {node: '>= 0.8.0'}
2210 | 
2211 |   expect@29.7.0:
2212 |     resolution: {integrity: sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==}
2213 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2214 | 
2215 |   express-rate-limit@7.5.0:
2216 |     resolution: {integrity: sha512-eB5zbQh5h+VenMPM3fh+nw1YExi5nMr6HUCR62ELSP11huvxm/Uir1H1QEyTkk5QX6A58pX6NmaTMceKZ0Eodg==}
2217 |     engines: {node: '>= 16'}
2218 |     peerDependencies:
2219 |       express: ^4.11 || 5 || ^5.0.0-beta.1
2220 | 
2221 |   express@4.21.2:
2222 |     resolution: {integrity: sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==}
2223 |     engines: {node: '>= 0.10.0'}
2224 | 
2225 |   fast-deep-equal@3.1.3:
2226 |     resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
2227 | 
2228 |   fast-glob@3.3.3:
2229 |     resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
2230 |     engines: {node: '>=8.6.0'}
2231 | 
2232 |   fast-json-stable-stringify@2.1.0:
2233 |     resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
2234 | 
2235 |   fast-levenshtein@2.0.6:
2236 |     resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
2237 | 
2238 |   fast-safe-stringify@2.1.1:
2239 |     resolution: {integrity: sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==}
2240 | 
2241 |   fastq@1.18.0:
2242 |     resolution: {integrity: sha512-QKHXPW0hD8g4UET03SdOdunzSouc9N4AuHdsX8XNcTsuz+yYFILVNIX4l9yHABMhiEI9Db0JTTIpu0wB+Y1QQw==}
2243 | 
2244 |   fb-watchman@2.0.2:
2245 |     resolution: {integrity: sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==}
2246 | 
2247 |   fdir@6.4.2:
2248 |     resolution: {integrity: sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==}
2249 |     peerDependencies:
2250 |       picomatch: ^3 || ^4
2251 |     peerDependenciesMeta:
2252 |       picomatch:
2253 |         optional: true
2254 | 
2255 |   fecha@4.2.3:
2256 |     resolution: {integrity: sha512-OP2IUU6HeYKJi3i0z4A19kHMQoLVs4Hc+DPqqxI2h/DPZHTm/vjsfC6P0b4jCMy14XizLBqvndQ+UilD7707Jw==}
2257 | 
2258 |   file-entry-cache@6.0.1:
2259 |     resolution: {integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==}
2260 |     engines: {node: ^10.12.0 || >=12.0.0}
2261 | 
2262 |   filelist@1.0.4:
2263 |     resolution: {integrity: sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==}
2264 | 
2265 |   fill-range@7.1.1:
2266 |     resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
2267 |     engines: {node: '>=8'}
2268 | 
2269 |   finalhandler@1.3.1:
2270 |     resolution: {integrity: sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==}
2271 |     engines: {node: '>= 0.8'}
2272 | 
2273 |   find-up@4.1.0:
2274 |     resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}
2275 |     engines: {node: '>=8'}
2276 | 
2277 |   find-up@5.0.0:
2278 |     resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
2279 |     engines: {node: '>=10'}
2280 | 
2281 |   flat-cache@3.2.0:
2282 |     resolution: {integrity: sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==}
2283 |     engines: {node: ^10.12.0 || >=12.0.0}
2284 | 
2285 |   flatted@3.3.2:
2286 |     resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}
2287 | 
2288 |   fn.name@1.1.0:
2289 |     resolution: {integrity: sha512-GRnmB5gPyJpAhTQdSZTSp9uaPSvl09KoYcMQtsB9rQoOmzs9dH6ffeccH+Z+cv6P68Hu5bC6JjRh4Ah/mHSNRw==}
2290 | 
2291 |   follow-redirects@1.15.9:
2292 |     resolution: {integrity: sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==}
2293 |     engines: {node: '>=4.0'}
2294 |     peerDependencies:
2295 |       debug: '*'
2296 |     peerDependenciesMeta:
2297 |       debug:
2298 |         optional: true
2299 | 
2300 |   for-each@0.3.3:
2301 |     resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}
2302 | 
2303 |   foreground-child@3.3.0:
2304 |     resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}
2305 |     engines: {node: '>=14'}
2306 | 
2307 |   form-data@4.0.1:
2308 |     resolution: {integrity: sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==}
2309 |     engines: {node: '>= 6'}
2310 | 
2311 |   formidable@3.5.2:
2312 |     resolution: {integrity: sha512-Jqc1btCy3QzRbJaICGwKcBfGWuLADRerLzDqi2NwSt/UkXLsHJw2TVResiaoBufHVHy9aSgClOHCeJsSsFLTbg==}
2313 | 
2314 |   forwarded@0.2.0:
2315 |     resolution: {integrity: sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==}
2316 |     engines: {node: '>= 0.6'}
2317 | 
2318 |   fraction.js@4.3.7:
2319 |     resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}
2320 | 
2321 |   fresh@0.5.2:
2322 |     resolution: {integrity: sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==}
2323 |     engines: {node: '>= 0.6'}
2324 | 
2325 |   fs.realpath@1.0.0:
2326 |     resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}
2327 | 
2328 |   fsevents@2.3.3:
2329 |     resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
2330 |     engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
2331 |     os: [darwin]
2332 | 
2333 |   function-bind@1.1.2:
2334 |     resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
2335 | 
2336 |   functions-have-names@1.2.3:
2337 |     resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
2338 | 
2339 |   gensync@1.0.0-beta.2:
2340 |     resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
2341 |     engines: {node: '>=6.9.0'}
2342 | 
2343 |   get-caller-file@2.0.5:
2344 |     resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
2345 |     engines: {node: 6.* || 8.* || >= 10.*}
2346 | 
2347 |   get-func-name@2.0.2:
2348 |     resolution: {integrity: sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==}
2349 | 
2350 |   get-intrinsic@1.2.7:
2351 |     resolution: {integrity: sha512-VW6Pxhsrk0KAOqs3WEd0klDiF/+V7gQOpAvY1jVU/LHmaD/kQO4523aiJuikX/QAKYiW6x8Jh+RJej1almdtCA==}
2352 |     engines: {node: '>= 0.4'}
2353 | 
2354 |   get-package-type@0.1.0:
2355 |     resolution: {integrity: sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==}
2356 |     engines: {node: '>=8.0.0'}
2357 | 
2358 |   get-proto@1.0.1:
2359 |     resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}
2360 |     engines: {node: '>= 0.4'}
2361 | 
2362 |   get-stream@6.0.1:
2363 |     resolution: {integrity: sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==}
2364 |     engines: {node: '>=10'}
2365 | 
2366 |   get-stream@8.0.1:
2367 |     resolution: {integrity: sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==}
2368 |     engines: {node: '>=16'}
2369 | 
2370 |   get-tsconfig@4.8.1:
2371 |     resolution: {integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==}
2372 | 
2373 |   glob-parent@5.1.2:
2374 |     resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
2375 |     engines: {node: '>= 6'}
2376 | 
2377 |   glob-parent@6.0.2:
2378 |     resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
2379 |     engines: {node: '>=10.13.0'}
2380 | 
2381 |   glob@10.4.5:
2382 |     resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}
2383 |     hasBin: true
2384 | 
2385 |   glob@7.2.3:
2386 |     resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
2387 |     deprecated: Glob versions prior to v9 are no longer supported
2388 | 
2389 |   globals@11.12.0:
2390 |     resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
2391 |     engines: {node: '>=4'}
2392 | 
2393 |   globals@13.24.0:
2394 |     resolution: {integrity: sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==}
2395 |     engines: {node: '>=8'}
2396 | 
2397 |   globby@11.1.0:
2398 |     resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}
2399 |     engines: {node: '>=10'}
2400 | 
2401 |   gopd@1.2.0:
2402 |     resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
2403 |     engines: {node: '>= 0.4'}
2404 | 
2405 |   graceful-fs@4.2.11:
2406 |     resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}
2407 | 
2408 |   graphemer@1.4.0:
2409 |     resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}
2410 | 
2411 |   happy-dom@12.10.3:
2412 |     resolution: {integrity: sha512-JzUXOh0wdNGY54oKng5hliuBkq/+aT1V3YpTM+lrN/GoLQTANZsMaIvmHiHe612rauHvPJnDZkZ+5GZR++1Abg==}
2413 | 
2414 |   has-bigints@1.1.0:
2415 |     resolution: {integrity: sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==}
2416 |     engines: {node: '>= 0.4'}
2417 | 
2418 |   has-flag@4.0.0:
2419 |     resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
2420 |     engines: {node: '>=8'}
2421 | 
2422 |   has-property-descriptors@1.0.2:
2423 |     resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}
2424 | 
2425 |   has-symbols@1.1.0:
2426 |     resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
2427 |     engines: {node: '>= 0.4'}
2428 | 
2429 |   has-tostringtag@1.0.2:
2430 |     resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
2431 |     engines: {node: '>= 0.4'}
2432 | 
2433 |   hasown@2.0.2:
2434 |     resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
2435 |     engines: {node: '>= 0.4'}
2436 | 
2437 |   hexoid@2.0.0:
2438 |     resolution: {integrity: sha512-qlspKUK7IlSQv2o+5I7yhUd7TxlOG2Vr5LTa3ve2XSNVKAL/n/u/7KLvKmFNimomDIKvZFXWHv0T12mv7rT8Aw==}
2439 |     engines: {node: '>=8'}
2440 | 
2441 |   html-escaper@2.0.2:
2442 |     resolution: {integrity: sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==}
2443 | 
2444 |   http-errors@2.0.0:
2445 |     resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}
2446 |     engines: {node: '>= 0.8'}
2447 | 
2448 |   human-signals@2.1.0:
2449 |     resolution: {integrity: sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==}
2450 |     engines: {node: '>=10.17.0'}
2451 | 
2452 |   human-signals@5.0.0:
2453 |     resolution: {integrity: sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==}
2454 |     engines: {node: '>=16.17.0'}
2455 | 
2456 |   iconv-lite@0.4.24:
2457 |     resolution: {integrity: sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==}
2458 |     engines: {node: '>=0.10.0'}
2459 | 
2460 |   iconv-lite@0.6.3:
2461 |     resolution: {integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==}
2462 |     engines: {node: '>=0.10.0'}
2463 | 
2464 |   ignore@5.3.2:
2465 |     resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
2466 |     engines: {node: '>= 4'}
2467 | 
2468 |   import-fresh@3.3.0:
2469 |     resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}
2470 |     engines: {node: '>=6'}
2471 | 
2472 |   import-local@3.2.0:
2473 |     resolution: {integrity: sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==}
2474 |     engines: {node: '>=8'}
2475 |     hasBin: true
2476 | 
2477 |   imurmurhash@0.1.4:
2478 |     resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
2479 |     engines: {node: '>=0.8.19'}
2480 | 
2481 |   indent-string@4.0.0:
2482 |     resolution: {integrity: sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==}
2483 |     engines: {node: '>=8'}
2484 | 
2485 |   inflight@1.0.6:
2486 |     resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
2487 |     deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
2488 | 
2489 |   inherits@2.0.4:
2490 |     resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}
2491 | 
2492 |   internal-slot@1.1.0:
2493 |     resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
2494 |     engines: {node: '>= 0.4'}
2495 | 
2496 |   invariant@2.2.4:
2497 |     resolution: {integrity: sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==}
2498 | 
2499 |   ipaddr.js@1.9.1:
2500 |     resolution: {integrity: sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==}
2501 |     engines: {node: '>= 0.10'}
2502 | 
2503 |   is-arguments@1.2.0:
2504 |     resolution: {integrity: sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==}
2505 |     engines: {node: '>= 0.4'}
2506 | 
2507 |   is-array-buffer@3.0.5:
2508 |     resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
2509 |     engines: {node: '>= 0.4'}
2510 | 
2511 |   is-arrayish@0.2.1:
2512 |     resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}
2513 | 
2514 |   is-arrayish@0.3.2:
2515 |     resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}
2516 | 
2517 |   is-bigint@1.1.0:
2518 |     resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}
2519 |     engines: {node: '>= 0.4'}
2520 | 
2521 |   is-binary-path@2.1.0:
2522 |     resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
2523 |     engines: {node: '>=8'}
2524 | 
2525 |   is-boolean-object@1.2.1:
2526 |     resolution: {integrity: sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==}
2527 |     engines: {node: '>= 0.4'}
2528 | 
2529 |   is-callable@1.2.7:
2530 |     resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
2531 |     engines: {node: '>= 0.4'}
2532 | 
2533 |   is-core-module@2.16.1:
2534 |     resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
2535 |     engines: {node: '>= 0.4'}
2536 | 
2537 |   is-date-object@1.1.0:
2538 |     resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}
2539 |     engines: {node: '>= 0.4'}
2540 | 
2541 |   is-extglob@2.1.1:
2542 |     resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
2543 |     engines: {node: '>=0.10.0'}
2544 | 
2545 |   is-fullwidth-code-point@3.0.0:
2546 |     resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
2547 |     engines: {node: '>=8'}
2548 | 
2549 |   is-generator-fn@2.1.0:
2550 |     resolution: {integrity: sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==}
2551 |     engines: {node: '>=6'}
2552 | 
2553 |   is-glob@4.0.3:
2554 |     resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
2555 |     engines: {node: '>=0.10.0'}
2556 | 
2557 |   is-map@2.0.3:
2558 |     resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}
2559 |     engines: {node: '>= 0.4'}
2560 | 
2561 |   is-number-object@1.1.1:
2562 |     resolution: {integrity: sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==}
2563 |     engines: {node: '>= 0.4'}
2564 | 
2565 |   is-number@7.0.0:
2566 |     resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
2567 |     engines: {node: '>=0.12.0'}
2568 | 
2569 |   is-path-inside@3.0.3:
2570 |     resolution: {integrity: sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==}
2571 |     engines: {node: '>=8'}
2572 | 
2573 |   is-regex@1.2.1:
2574 |     resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}
2575 |     engines: {node: '>= 0.4'}
2576 | 
2577 |   is-set@2.0.3:
2578 |     resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}
2579 |     engines: {node: '>= 0.4'}
2580 | 
2581 |   is-shared-array-buffer@1.0.4:
2582 |     resolution: {integrity: sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==}
2583 |     engines: {node: '>= 0.4'}
2584 | 
2585 |   is-stream@2.0.1:
2586 |     resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}
2587 |     engines: {node: '>=8'}
2588 | 
2589 |   is-stream@3.0.0:
2590 |     resolution: {integrity: sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==}
2591 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
2592 | 
2593 |   is-string@1.1.1:
2594 |     resolution: {integrity: sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==}
2595 |     engines: {node: '>= 0.4'}
2596 | 
2597 |   is-symbol@1.1.1:
2598 |     resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}
2599 |     engines: {node: '>= 0.4'}
2600 | 
2601 |   is-weakmap@2.0.2:
2602 |     resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}
2603 |     engines: {node: '>= 0.4'}
2604 | 
2605 |   is-weakset@2.0.4:
2606 |     resolution: {integrity: sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==}
2607 |     engines: {node: '>= 0.4'}
2608 | 
2609 |   isarray@1.0.0:
2610 |     resolution: {integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==}
2611 | 
2612 |   isarray@2.0.5:
2613 |     resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}
2614 | 
2615 |   isexe@2.0.0:
2616 |     resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}
2617 | 
2618 |   istanbul-lib-coverage@3.2.2:
2619 |     resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}
2620 |     engines: {node: '>=8'}
2621 | 
2622 |   istanbul-lib-instrument@5.2.1:
2623 |     resolution: {integrity: sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==}
2624 |     engines: {node: '>=8'}
2625 | 
2626 |   istanbul-lib-instrument@6.0.3:
2627 |     resolution: {integrity: sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==}
2628 |     engines: {node: '>=10'}
2629 | 
2630 |   istanbul-lib-report@3.0.1:
2631 |     resolution: {integrity: sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==}
2632 |     engines: {node: '>=10'}
2633 | 
2634 |   istanbul-lib-source-maps@4.0.1:
2635 |     resolution: {integrity: sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==}
2636 |     engines: {node: '>=10'}
2637 | 
2638 |   istanbul-lib-source-maps@5.0.6:
2639 |     resolution: {integrity: sha512-yg2d+Em4KizZC5niWhQaIomgf5WlL4vOOjZ5xGCmF8SnPE/mDWWXgvRExdcpCgh9lLRRa1/fSYp2ymmbJ1pI+A==}
2640 |     engines: {node: '>=10'}
2641 | 
2642 |   istanbul-reports@3.1.7:
2643 |     resolution: {integrity: sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==}
2644 |     engines: {node: '>=8'}
2645 | 
2646 |   jackspeak@3.4.3:
2647 |     resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}
2648 | 
2649 |   jake@10.9.2:
2650 |     resolution: {integrity: sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==}
2651 |     engines: {node: '>=10'}
2652 |     hasBin: true
2653 | 
2654 |   jest-changed-files@29.7.0:
2655 |     resolution: {integrity: sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==}
2656 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2657 | 
2658 |   jest-circus@29.7.0:
2659 |     resolution: {integrity: sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==}
2660 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2661 | 
2662 |   jest-cli@29.7.0:
2663 |     resolution: {integrity: sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==}
2664 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2665 |     hasBin: true
2666 |     peerDependencies:
2667 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
2668 |     peerDependenciesMeta:
2669 |       node-notifier:
2670 |         optional: true
2671 | 
2672 |   jest-config@29.7.0:
2673 |     resolution: {integrity: sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==}
2674 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2675 |     peerDependencies:
2676 |       '@types/node': '*'
2677 |       ts-node: '>=9.0.0'
2678 |     peerDependenciesMeta:
2679 |       '@types/node':
2680 |         optional: true
2681 |       ts-node:
2682 |         optional: true
2683 | 
2684 |   jest-diff@29.7.0:
2685 |     resolution: {integrity: sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==}
2686 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2687 | 
2688 |   jest-docblock@29.7.0:
2689 |     resolution: {integrity: sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==}
2690 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2691 | 
2692 |   jest-each@29.7.0:
2693 |     resolution: {integrity: sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==}
2694 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2695 | 
2696 |   jest-environment-node@29.7.0:
2697 |     resolution: {integrity: sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==}
2698 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2699 | 
2700 |   jest-get-type@29.6.3:
2701 |     resolution: {integrity: sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==}
2702 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2703 | 
2704 |   jest-haste-map@29.7.0:
2705 |     resolution: {integrity: sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==}
2706 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2707 | 
2708 |   jest-leak-detector@29.7.0:
2709 |     resolution: {integrity: sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==}
2710 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2711 | 
2712 |   jest-matcher-utils@29.7.0:
2713 |     resolution: {integrity: sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==}
2714 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2715 | 
2716 |   jest-message-util@29.7.0:
2717 |     resolution: {integrity: sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==}
2718 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2719 | 
2720 |   jest-mock@29.7.0:
2721 |     resolution: {integrity: sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==}
2722 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2723 | 
2724 |   jest-pnp-resolver@1.2.3:
2725 |     resolution: {integrity: sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==}
2726 |     engines: {node: '>=6'}
2727 |     peerDependencies:
2728 |       jest-resolve: '*'
2729 |     peerDependenciesMeta:
2730 |       jest-resolve:
2731 |         optional: true
2732 | 
2733 |   jest-regex-util@29.6.3:
2734 |     resolution: {integrity: sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==}
2735 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2736 | 
2737 |   jest-resolve-dependencies@29.7.0:
2738 |     resolution: {integrity: sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==}
2739 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2740 | 
2741 |   jest-resolve@29.7.0:
2742 |     resolution: {integrity: sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==}
2743 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2744 | 
2745 |   jest-runner@29.7.0:
2746 |     resolution: {integrity: sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==}
2747 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2748 | 
2749 |   jest-runtime@29.7.0:
2750 |     resolution: {integrity: sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==}
2751 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2752 | 
2753 |   jest-snapshot@29.7.0:
2754 |     resolution: {integrity: sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==}
2755 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2756 | 
2757 |   jest-util@29.7.0:
2758 |     resolution: {integrity: sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==}
2759 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2760 | 
2761 |   jest-validate@29.7.0:
2762 |     resolution: {integrity: sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==}
2763 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2764 | 
2765 |   jest-watcher@29.7.0:
2766 |     resolution: {integrity: sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==}
2767 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2768 | 
2769 |   jest-worker@29.7.0:
2770 |     resolution: {integrity: sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==}
2771 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2772 | 
2773 |   jest@29.7.0:
2774 |     resolution: {integrity: sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==}
2775 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
2776 |     hasBin: true
2777 |     peerDependencies:
2778 |       node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0
2779 |     peerDependenciesMeta:
2780 |       node-notifier:
2781 |         optional: true
2782 | 
2783 |   jiti@1.21.7:
2784 |     resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}
2785 |     hasBin: true
2786 | 
2787 |   joycon@3.1.1:
2788 |     resolution: {integrity: sha512-34wB/Y7MW7bzjKRjUKTa46I2Z7eV62Rkhva+KkopW7Qvv/OSWBqvkSY7vusOPrNuZcUG3tApvdVgNB8POj3SPw==}
2789 |     engines: {node: '>=10'}
2790 | 
2791 |   js-tokens@4.0.0:
2792 |     resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}
2793 | 
2794 |   js-tokens@9.0.1:
2795 |     resolution: {integrity: sha512-mxa9E9ITFOt0ban3j6L5MpjwegGz6lBQmM1IJkWeBZGcMxto50+eWdjC/52xDbS2vy0k7vIMK0Fe2wfL9OQSpQ==}
2796 | 
2797 |   js-yaml@3.14.1:
2798 |     resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
2799 |     hasBin: true
2800 | 
2801 |   js-yaml@4.1.0:
2802 |     resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
2803 |     hasBin: true
2804 | 
2805 |   jsesc@3.1.0:
2806 |     resolution: {integrity: sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==}
2807 |     engines: {node: '>=6'}
2808 |     hasBin: true
2809 | 
2810 |   json-buffer@3.0.1:
2811 |     resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}
2812 | 
2813 |   json-parse-even-better-errors@2.3.1:
2814 |     resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}
2815 | 
2816 |   json-schema-traverse@0.4.1:
2817 |     resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
2818 | 
2819 |   json-stable-stringify-without-jsonify@1.0.1:
2820 |     resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
2821 | 
2822 |   json5@2.2.3:
2823 |     resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
2824 |     engines: {node: '>=6'}
2825 |     hasBin: true
2826 | 
2827 |   jsonwebtoken@9.0.2:
2828 |     resolution: {integrity: sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==}
2829 |     engines: {node: '>=12', npm: '>=6'}
2830 | 
2831 |   jwa@1.4.1:
2832 |     resolution: {integrity: sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==}
2833 | 
2834 |   jws@3.2.2:
2835 |     resolution: {integrity: sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==}
2836 | 
2837 |   kdbush@4.0.2:
2838 |     resolution: {integrity: sha512-WbCVYJ27Sz8zi9Q7Q0xHC+05iwkm3Znipc2XTlrnJbsHMYktW4hPhXUE8Ys1engBrvffoSCqbil1JQAa7clRpA==}
2839 | 
2840 |   keyv@4.5.4:
2841 |     resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
2842 | 
2843 |   kleur@3.0.3:
2844 |     resolution: {integrity: sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==}
2845 |     engines: {node: '>=6'}
2846 | 
2847 |   kuler@2.0.0:
2848 |     resolution: {integrity: sha512-Xq9nH7KlWZmXAtodXDDRE7vs6DU1gTU8zYDHDiWLSip45Egwq3plLHzPn27NgvzL2r1LMPC1vdqh98sQxtqj4A==}
2849 | 
2850 |   leven@3.1.0:
2851 |     resolution: {integrity: sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==}
2852 |     engines: {node: '>=6'}
2853 | 
2854 |   levn@0.4.1:
2855 |     resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
2856 |     engines: {node: '>= 0.8.0'}
2857 | 
2858 |   lilconfig@3.1.3:
2859 |     resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}
2860 |     engines: {node: '>=14'}
2861 | 
2862 |   lines-and-columns@1.2.4:
2863 |     resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}
2864 | 
2865 |   load-tsconfig@0.2.5:
2866 |     resolution: {integrity: sha512-IXO6OCs9yg8tMKzfPZ1YmheJbZCiEsnBdcB03l0OcfK9prKnJb96siuHCr5Fl37/yo9DnKU+TLpxzTUspw9shg==}
2867 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
2868 | 
2869 |   local-pkg@0.5.1:
2870 |     resolution: {integrity: sha512-9rrA30MRRP3gBD3HTGnC6cDFpaE1kVDWxWgqWJUN0RvDNAo+Nz/9GxB+nHOH0ifbVFy0hSA1V6vFDvnx54lTEQ==}
2871 |     engines: {node: '>=14'}
2872 | 
2873 |   locate-path@5.0.0:
2874 |     resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}
2875 |     engines: {node: '>=8'}
2876 | 
2877 |   locate-path@6.0.0:
2878 |     resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
2879 |     engines: {node: '>=10'}
2880 | 
2881 |   lodash.includes@4.3.0:
2882 |     resolution: {integrity: sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==}
2883 | 
2884 |   lodash.isboolean@3.0.3:
2885 |     resolution: {integrity: sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==}
2886 | 
2887 |   lodash.isinteger@4.0.4:
2888 |     resolution: {integrity: sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==}
2889 | 
2890 |   lodash.isnumber@3.0.3:
2891 |     resolution: {integrity: sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==}
2892 | 
2893 |   lodash.isplainobject@4.0.6:
2894 |     resolution: {integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==}
2895 | 
2896 |   lodash.isstring@4.0.1:
2897 |     resolution: {integrity: sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==}
2898 | 
2899 |   lodash.memoize@4.1.2:
2900 |     resolution: {integrity: sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==}
2901 | 
2902 |   lodash.merge@4.6.2:
2903 |     resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
2904 | 
2905 |   lodash.once@4.1.1:
2906 |     resolution: {integrity: sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==}
2907 | 
2908 |   lodash.sortby@4.7.0:
2909 |     resolution: {integrity: sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA==}
2910 | 
2911 |   lodash@4.17.21:
2912 |     resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}
2913 | 
2914 |   logform@2.7.0:
2915 |     resolution: {integrity: sha512-TFYA4jnP7PVbmlBIfhlSe+WKxs9dklXMTEGcBCIvLhE/Tn3H6Gk1norupVW7m5Cnd4bLcr08AytbyV/xj7f/kQ==}
2916 |     engines: {node: '>= 12.0.0'}
2917 | 
2918 |   loose-envify@1.4.0:
2919 |     resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
2920 |     hasBin: true
2921 | 
2922 |   loupe@2.3.7:
2923 |     resolution: {integrity: sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==}
2924 | 
2925 |   lru-cache@10.4.3:
2926 |     resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}
2927 | 
2928 |   lru-cache@5.1.1:
2929 |     resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}
2930 | 
2931 |   lz-string@1.5.0:
2932 |     resolution: {integrity: sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==}
2933 |     hasBin: true
2934 | 
2935 |   magic-string@0.30.17:
2936 |     resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}
2937 | 
2938 |   magicast@0.3.5:
2939 |     resolution: {integrity: sha512-L0WhttDl+2BOsybvEOLK7fW3UA0OQ0IQ2d6Zl2x/a6vVRs3bAY0ECOSHHeL5jD+SbOpOCUEi0y1DgHEn9Qn1AQ==}
2940 | 
2941 |   make-dir@4.0.0:
2942 |     resolution: {integrity: sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==}
2943 |     engines: {node: '>=10'}
2944 | 
2945 |   make-error@1.3.6:
2946 |     resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}
2947 | 
2948 |   makeerror@1.0.12:
2949 |     resolution: {integrity: sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==}
2950 | 
2951 |   math-intrinsics@1.1.0:
2952 |     resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}
2953 |     engines: {node: '>= 0.4'}
2954 | 
2955 |   media-typer@0.3.0:
2956 |     resolution: {integrity: sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==}
2957 |     engines: {node: '>= 0.6'}
2958 | 
2959 |   merge-descriptors@1.0.3:
2960 |     resolution: {integrity: sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==}
2961 | 
2962 |   merge-stream@2.0.0:
2963 |     resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}
2964 | 
2965 |   merge2@1.4.1:
2966 |     resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
2967 |     engines: {node: '>= 8'}
2968 | 
2969 |   methods@1.1.2:
2970 |     resolution: {integrity: sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==}
2971 |     engines: {node: '>= 0.6'}
2972 | 
2973 |   micromatch@4.0.8:
2974 |     resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
2975 |     engines: {node: '>=8.6'}
2976 | 
2977 |   mime-db@1.52.0:
2978 |     resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
2979 |     engines: {node: '>= 0.6'}
2980 | 
2981 |   mime-types@2.1.35:
2982 |     resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
2983 |     engines: {node: '>= 0.6'}
2984 | 
2985 |   mime@1.6.0:
2986 |     resolution: {integrity: sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==}
2987 |     engines: {node: '>=4'}
2988 |     hasBin: true
2989 | 
2990 |   mime@2.6.0:
2991 |     resolution: {integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==}
2992 |     engines: {node: '>=4.0.0'}
2993 |     hasBin: true
2994 | 
2995 |   mimic-fn@2.1.0:
2996 |     resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}
2997 |     engines: {node: '>=6'}
2998 | 
2999 |   mimic-fn@4.0.0:
3000 |     resolution: {integrity: sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==}
3001 |     engines: {node: '>=12'}
3002 | 
3003 |   min-indent@1.0.1:
3004 |     resolution: {integrity: sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==}
3005 |     engines: {node: '>=4'}
3006 | 
3007 |   minimatch@3.1.2:
3008 |     resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
3009 | 
3010 |   minimatch@5.1.6:
3011 |     resolution: {integrity: sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==}
3012 |     engines: {node: '>=10'}
3013 | 
3014 |   minimatch@9.0.3:
3015 |     resolution: {integrity: sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==}
3016 |     engines: {node: '>=16 || 14 >=14.17'}
3017 | 
3018 |   minimatch@9.0.5:
3019 |     resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
3020 |     engines: {node: '>=16 || 14 >=14.17'}
3021 | 
3022 |   minimist@1.2.8:
3023 |     resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
3024 | 
3025 |   minipass@7.1.2:
3026 |     resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
3027 |     engines: {node: '>=16 || 14 >=14.17'}
3028 | 
3029 |   mkdirp@0.5.6:
3030 |     resolution: {integrity: sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==}
3031 |     hasBin: true
3032 | 
3033 |   mlly@1.7.4:
3034 |     resolution: {integrity: sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==}
3035 | 
3036 |   morgan@1.10.0:
3037 |     resolution: {integrity: sha512-AbegBVI4sh6El+1gNwvD5YIck7nSA36weD7xvIxG4in80j/UoK8AEGaWnnz8v1GxonMCltmlNs5ZKbGvl9b1XQ==}
3038 |     engines: {node: '>= 0.8.0'}
3039 | 
3040 |   ms@2.0.0:
3041 |     resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}
3042 | 
3043 |   ms@2.1.3:
3044 |     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
3045 | 
3046 |   multer@1.4.5-lts.1:
3047 |     resolution: {integrity: sha512-ywPWvcDMeH+z9gQq5qYHCCy+ethsk4goepZ45GLD63fOu0YcNecQxi64nDs3qluZB+murG3/D4dJ7+dGctcCQQ==}
3048 |     engines: {node: '>= 6.0.0'}
3049 | 
3050 |   mz@2.7.0:
3051 |     resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}
3052 | 
3053 |   nanoid@3.3.8:
3054 |     resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}
3055 |     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
3056 |     hasBin: true
3057 | 
3058 |   natural-compare@1.4.0:
3059 |     resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}
3060 | 
3061 |   negotiator@0.6.3:
3062 |     resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}
3063 |     engines: {node: '>= 0.6'}
3064 | 
3065 |   node-int64@0.4.0:
3066 |     resolution: {integrity: sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==}
3067 | 
3068 |   node-releases@2.0.19:
3069 |     resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}
3070 | 
3071 |   nodemailer@6.9.16:
3072 |     resolution: {integrity: sha512-psAuZdTIRN08HKVd/E8ObdV6NO7NTBY3KsC30F7M4H1OnmLCUNaS56FpYxyb26zWLSyYF9Ozch9KYHhHegsiOQ==}
3073 |     engines: {node: '>=6.0.0'}
3074 | 
3075 |   normalize-path@3.0.0:
3076 |     resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
3077 |     engines: {node: '>=0.10.0'}
3078 | 
3079 |   normalize-range@0.1.2:
3080 |     resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}
3081 |     engines: {node: '>=0.10.0'}
3082 | 
3083 |   npm-run-path@4.0.1:
3084 |     resolution: {integrity: sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==}
3085 |     engines: {node: '>=8'}
3086 | 
3087 |   npm-run-path@5.3.0:
3088 |     resolution: {integrity: sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==}
3089 |     engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}
3090 | 
3091 |   object-assign@4.1.1:
3092 |     resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
3093 |     engines: {node: '>=0.10.0'}
3094 | 
3095 |   object-hash@3.0.0:
3096 |     resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}
3097 |     engines: {node: '>= 6'}
3098 | 
3099 |   object-inspect@1.13.3:
3100 |     resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}
3101 |     engines: {node: '>= 0.4'}
3102 | 
3103 |   object-is@1.1.6:
3104 |     resolution: {integrity: sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==}
3105 |     engines: {node: '>= 0.4'}
3106 | 
3107 |   object-keys@1.1.1:
3108 |     resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
3109 |     engines: {node: '>= 0.4'}
3110 | 
3111 |   object.assign@4.1.7:
3112 |     resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}
3113 |     engines: {node: '>= 0.4'}
3114 | 
3115 |   on-finished@2.3.0:
3116 |     resolution: {integrity: sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==}
3117 |     engines: {node: '>= 0.8'}
3118 | 
3119 |   on-finished@2.4.1:
3120 |     resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}
3121 |     engines: {node: '>= 0.8'}
3122 | 
3123 |   on-headers@1.0.2:
3124 |     resolution: {integrity: sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==}
3125 |     engines: {node: '>= 0.8'}
3126 | 
3127 |   once@1.4.0:
3128 |     resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}
3129 | 
3130 |   one-time@1.0.0:
3131 |     resolution: {integrity: sha512-5DXOiRKwuSEcQ/l0kGCF6Q3jcADFv5tSmRaJck/OqkVFcOzutB134KRSfF0xDrL39MNnqxbHBbUUcjZIhTgb2g==}
3132 | 
3133 |   onetime@5.1.2:
3134 |     resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}
3135 |     engines: {node: '>=6'}
3136 | 
3137 |   onetime@6.0.0:
3138 |     resolution: {integrity: sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==}
3139 |     engines: {node: '>=12'}
3140 | 
3141 |   optionator@0.9.4:
3142 |     resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
3143 |     engines: {node: '>= 0.8.0'}
3144 | 
3145 |   p-limit@2.3.0:
3146 |     resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}
3147 |     engines: {node: '>=6'}
3148 | 
3149 |   p-limit@3.1.0:
3150 |     resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
3151 |     engines: {node: '>=10'}
3152 | 
3153 |   p-limit@5.0.0:
3154 |     resolution: {integrity: sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==}
3155 |     engines: {node: '>=18'}
3156 | 
3157 |   p-locate@4.1.0:
3158 |     resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}
3159 |     engines: {node: '>=8'}
3160 | 
3161 |   p-locate@5.0.0:
3162 |     resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
3163 |     engines: {node: '>=10'}
3164 | 
3165 |   p-try@2.2.0:
3166 |     resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}
3167 |     engines: {node: '>=6'}
3168 | 
3169 |   package-json-from-dist@1.0.1:
3170 |     resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}
3171 | 
3172 |   parent-module@1.0.1:
3173 |     resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
3174 |     engines: {node: '>=6'}
3175 | 
3176 |   parse-json@5.2.0:
3177 |     resolution: {integrity: sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==}
3178 |     engines: {node: '>=8'}
3179 | 
3180 |   parseurl@1.3.3:
3181 |     resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}
3182 |     engines: {node: '>= 0.8'}
3183 | 
3184 |   path-exists@4.0.0:
3185 |     resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
3186 |     engines: {node: '>=8'}
3187 | 
3188 |   path-is-absolute@1.0.1:
3189 |     resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
3190 |     engines: {node: '>=0.10.0'}
3191 | 
3192 |   path-key@3.1.1:
3193 |     resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
3194 |     engines: {node: '>=8'}
3195 | 
3196 |   path-key@4.0.0:
3197 |     resolution: {integrity: sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==}
3198 |     engines: {node: '>=12'}
3199 | 
3200 |   path-parse@1.0.7:
3201 |     resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}
3202 | 
3203 |   path-scurry@1.11.1:
3204 |     resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}
3205 |     engines: {node: '>=16 || 14 >=14.18'}
3206 | 
3207 |   path-to-regexp@0.1.12:
3208 |     resolution: {integrity: sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==}
3209 | 
3210 |   path-type@4.0.0:
3211 |     resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}
3212 |     engines: {node: '>=8'}
3213 | 
3214 |   pathe@1.1.2:
3215 |     resolution: {integrity: sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==}
3216 | 
3217 |   pathe@2.0.1:
3218 |     resolution: {integrity: sha512-6jpjMpOth5S9ITVu5clZ7NOgHNsv5vRQdheL9ztp2vZmM6fRbLvyua1tiBIL4lk8SAe3ARzeXEly6siXCjDHDw==}
3219 | 
3220 |   pathval@1.1.1:
3221 |     resolution: {integrity: sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==}
3222 | 
3223 |   picocolors@1.1.1:
3224 |     resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}
3225 | 
3226 |   picomatch@2.3.1:
3227 |     resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
3228 |     engines: {node: '>=8.6'}
3229 | 
3230 |   picomatch@4.0.2:
3231 |     resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}
3232 |     engines: {node: '>=12'}
3233 | 
3234 |   pify@2.3.0:
3235 |     resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}
3236 |     engines: {node: '>=0.10.0'}
3237 | 
3238 |   pirates@4.0.6:
3239 |     resolution: {integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==}
3240 |     engines: {node: '>= 6'}
3241 | 
3242 |   pkg-dir@4.2.0:
3243 |     resolution: {integrity: sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==}
3244 |     engines: {node: '>=8'}
3245 | 
3246 |   pkg-types@1.3.0:
3247 |     resolution: {integrity: sha512-kS7yWjVFCkIw9hqdJBoMxDdzEngmkr5FXeWZZfQ6GoYacjVnsW6l2CcYW/0ThD0vF4LPJgVYnrg4d0uuhwYQbg==}
3248 | 
3249 |   possible-typed-array-names@1.0.0:
3250 |     resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}
3251 |     engines: {node: '>= 0.4'}
3252 | 
3253 |   postcss-import@15.1.0:
3254 |     resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}
3255 |     engines: {node: '>=14.0.0'}
3256 |     peerDependencies:
3257 |       postcss: ^8.0.0
3258 | 
3259 |   postcss-js@4.0.1:
3260 |     resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}
3261 |     engines: {node: ^12 || ^14 || >= 16}
3262 |     peerDependencies:
3263 |       postcss: ^8.4.21
3264 | 
3265 |   postcss-load-config@4.0.2:
3266 |     resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}
3267 |     engines: {node: '>= 14'}
3268 |     peerDependencies:
3269 |       postcss: '>=8.0.9'
3270 |       ts-node: '>=9.0.0'
3271 |     peerDependenciesMeta:
3272 |       postcss:
3273 |         optional: true
3274 |       ts-node:
3275 |         optional: true
3276 | 
3277 |   postcss-load-config@6.0.1:
3278 |     resolution: {integrity: sha512-oPtTM4oerL+UXmx+93ytZVN82RrlY/wPUV8IeDxFrzIjXOLF1pN+EmKPLbubvKHT2HC20xXsCAH2Z+CKV6Oz/g==}
3279 |     engines: {node: '>= 18'}
3280 |     peerDependencies:
3281 |       jiti: '>=1.21.0'
3282 |       postcss: '>=8.0.9'
3283 |       tsx: ^4.8.1
3284 |       yaml: ^2.4.2
3285 |     peerDependenciesMeta:
3286 |       jiti:
3287 |         optional: true
3288 |       postcss:
3289 |         optional: true
3290 |       tsx:
3291 |         optional: true
3292 |       yaml:
3293 |         optional: true
3294 | 
3295 |   postcss-nested@6.2.0:
3296 |     resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}
3297 |     engines: {node: '>=12.0'}
3298 |     peerDependencies:
3299 |       postcss: ^8.2.14
3300 | 
3301 |   postcss-selector-parser@6.1.2:
3302 |     resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}
3303 |     engines: {node: '>=4'}
3304 | 
3305 |   postcss-value-parser@4.2.0:
3306 |     resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}
3307 | 
3308 |   postcss@8.4.49:
3309 |     resolution: {integrity: sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==}
3310 |     engines: {node: ^10 || ^12 || >=14}
3311 | 
3312 |   prelude-ls@1.2.1:
3313 |     resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
3314 |     engines: {node: '>= 0.8.0'}
3315 | 
3316 |   prettier@3.4.2:
3317 |     resolution: {integrity: sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==}
3318 |     engines: {node: '>=14'}
3319 |     hasBin: true
3320 | 
3321 |   pretty-format@27.5.1:
3322 |     resolution: {integrity: sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==}
3323 |     engines: {node: ^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0}
3324 | 
3325 |   pretty-format@29.7.0:
3326 |     resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}
3327 |     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
3328 | 
3329 |   prisma@5.22.0:
3330 |     resolution: {integrity: sha512-vtpjW3XuYCSnMsNVBjLMNkTj6OZbudcPPTPYHqX0CJfpcdWciI1dM8uHETwmDxxiqEwCIE6WvXucWUetJgfu/A==}
3331 |     engines: {node: '>=16.13'}
3332 |     hasBin: true
3333 | 
3334 |   process-nextick-args@2.0.1:
3335 |     resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}
3336 | 
3337 |   prompts@2.4.2:
3338 |     resolution: {integrity: sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==}
3339 |     engines: {node: '>= 6'}
3340 | 
3341 |   prop-types@15.8.1:
3342 |     resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}
3343 | 
3344 |   proxy-addr@2.0.7:
3345 |     resolution: {integrity: sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==}
3346 |     engines: {node: '>= 0.10'}
3347 | 
3348 |   proxy-from-env@1.1.0:
3349 |     resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}
3350 | 
3351 |   punycode@2.3.1:
3352 |     resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
3353 |     engines: {node: '>=6'}
3354 | 
3355 |   pure-rand@6.1.0:
3356 |     resolution: {integrity: sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==}
3357 | 
3358 |   qs@6.13.0:
3359 |     resolution: {integrity: sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==}
3360 |     engines: {node: '>=0.6'}
3361 | 
3362 |   queue-microtask@1.2.3:
3363 |     resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
3364 | 
3365 |   range-parser@1.2.1:
3366 |     resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}
3367 |     engines: {node: '>= 0.6'}
3368 | 
3369 |   raw-body@2.5.2:
3370 |     resolution: {integrity: sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==}
3371 |     engines: {node: '>= 0.8'}
3372 | 
3373 |   react-dom@18.3.1:
3374 |     resolution: {integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==}
3375 |     peerDependencies:
3376 |       react: ^18.3.1
3377 | 
3378 |   react-is@16.13.1:
3379 |     resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
3380 | 
3381 |   react-is@17.0.2:
3382 |     resolution: {integrity: sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==}
3383 | 
3384 |   react-is@18.3.1:
3385 |     resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}
3386 | 
3387 |   react-refresh@0.14.2:
3388 |     resolution: {integrity: sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==}
3389 |     engines: {node: '>=0.10.0'}
3390 | 
3391 |   react-router-dom@6.28.1:
3392 |     resolution: {integrity: sha512-YraE27C/RdjcZwl5UCqF/ffXnZDxpJdk9Q6jw38SZHjXs7NNdpViq2l2c7fO7+4uWaEfcwfGCv3RSg4e1By/fQ==}
3393 |     engines: {node: '>=14.0.0'}
3394 |     peerDependencies:
3395 |       react: '>=16.8'
3396 |       react-dom: '>=16.8'
3397 | 
3398 |   react-router@6.28.1:
3399 |     resolution: {integrity: sha512-2omQTA3rkMljmrvvo6WtewGdVh45SpL9hGiCI9uUrwGGfNFDIvGK4gYJsKlJoNVi6AQZcopSCballL+QGOm7fA==}
3400 |     engines: {node: '>=14.0.0'}
3401 |     peerDependencies:
3402 |       react: '>=16.8'
3403 | 
3404 |   react-transition-group@4.4.5:
3405 |     resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}
3406 |     peerDependencies:
3407 |       react: '>=16.6.0'
3408 |       react-dom: '>=16.6.0'
3409 | 
3410 |   react@18.3.1:
3411 |     resolution: {integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==}
3412 |     engines: {node: '>=0.10.0'}
3413 | 
3414 |   read-cache@1.0.0:
3415 |     resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}
3416 | 
3417 |   readable-stream@2.3.8:
3418 |     resolution: {integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==}
3419 | 
3420 |   readable-stream@3.6.2:
3421 |     resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}
3422 |     engines: {node: '>= 6'}
3423 | 
3424 |   readdirp@3.6.0:
3425 |     resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
3426 |     engines: {node: '>=8.10.0'}
3427 | 
3428 |   readdirp@4.1.1:
3429 |     resolution: {integrity: sha512-h80JrZu/MHUZCyHu5ciuoI0+WxsCxzxJTILn6Fs8rxSnFPh+UVHYfeIxK1nVGugMqkfC4vJcBOYbkfkwYK0+gw==}
3430 |     engines: {node: '>= 14.18.0'}
3431 | 
3432 |   redent@3.0.0:
3433 |     resolution: {integrity: sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==}
3434 |     engines: {node: '>=8'}
3435 | 
3436 |   regenerator-runtime@0.14.1:
3437 |     resolution: {integrity: sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==}
3438 | 
3439 |   regexp.prototype.flags@1.5.4:
3440 |     resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}
3441 |     engines: {node: '>= 0.4'}
3442 | 
3443 |   require-directory@2.1.1:
3444 |     resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
3445 |     engines: {node: '>=0.10.0'}
3446 | 
3447 |   resolve-cwd@3.0.0:
3448 |     resolution: {integrity: sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==}
3449 |     engines: {node: '>=8'}
3450 | 
3451 |   resolve-from@4.0.0:
3452 |     resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
3453 |     engines: {node: '>=4'}
3454 | 
3455 |   resolve-from@5.0.0:
3456 |     resolution: {integrity: sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==}
3457 |     engines: {node: '>=8'}
3458 | 
3459 |   resolve-pkg-maps@1.0.0:
3460 |     resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}
3461 | 
3462 |   resolve.exports@2.0.3:
3463 |     resolution: {integrity: sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==}
3464 |     engines: {node: '>=10'}
3465 | 
3466 |   resolve@1.22.10:
3467 |     resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
3468 |     engines: {node: '>= 0.4'}
3469 |     hasBin: true
3470 | 
3471 |   reusify@1.0.4:
3472 |     resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
3473 |     engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
3474 | 
3475 |   rimraf@3.0.2:
3476 |     resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
3477 |     deprecated: Rimraf versions prior to v4 are no longer supported
3478 |     hasBin: true
3479 | 
3480 |   rollup@4.30.1:
3481 |     resolution: {integrity: sha512-mlJ4glW020fPuLi7DkM/lN97mYEZGWeqBnrljzN0gs7GLctqX3lNWxKQ7Gl712UAX+6fog/L3jh4gb7R6aVi3w==}
3482 |     engines: {node: '>=18.0.0', npm: '>=8.0.0'}
3483 |     hasBin: true
3484 | 
3485 |   run-parallel@1.2.0:
3486 |     resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
3487 | 
3488 |   safe-buffer@5.1.2:
3489 |     resolution: {integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==}
3490 | 
3491 |   safe-buffer@5.2.1:
3492 |     resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}
3493 | 
3494 |   safe-regex-test@1.1.0:
3495 |     resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
3496 |     engines: {node: '>= 0.4'}
3497 | 
3498 |   safe-stable-stringify@2.5.0:
3499 |     resolution: {integrity: sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==}
3500 |     engines: {node: '>=10'}
3501 | 
3502 |   safer-buffer@2.1.2:
3503 |     resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}
3504 | 
3505 |   scheduler@0.23.2:
3506 |     resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}
3507 | 
3508 |   semver@6.3.1:
3509 |     resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
3510 |     hasBin: true
3511 | 
3512 |   semver@7.6.3:
3513 |     resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}
3514 |     engines: {node: '>=10'}
3515 |     hasBin: true
3516 | 
3517 |   send@0.19.0:
3518 |     resolution: {integrity: sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==}
3519 |     engines: {node: '>= 0.8.0'}
3520 | 
3521 |   serve-static@1.16.2:
3522 |     resolution: {integrity: sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==}
3523 |     engines: {node: '>= 0.8.0'}
3524 | 
3525 |   set-function-length@1.2.2:
3526 |     resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
3527 |     engines: {node: '>= 0.4'}
3528 | 
3529 |   set-function-name@2.0.2:
3530 |     resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}
3531 |     engines: {node: '>= 0.4'}
3532 | 
3533 |   setprototypeof@1.2.0:
3534 |     resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}
3535 | 
3536 |   shebang-command@2.0.0:
3537 |     resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
3538 |     engines: {node: '>=8'}
3539 | 
3540 |   shebang-regex@3.0.0:
3541 |     resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
3542 |     engines: {node: '>=8'}
3543 | 
3544 |   side-channel-list@1.0.0:
3545 |     resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}
3546 |     engines: {node: '>= 0.4'}
3547 | 
3548 |   side-channel-map@1.0.1:
3549 |     resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}
3550 |     engines: {node: '>= 0.4'}
3551 | 
3552 |   side-channel-weakmap@1.0.2:
3553 |     resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}
3554 |     engines: {node: '>= 0.4'}
3555 | 
3556 |   side-channel@1.1.0:
3557 |     resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}
3558 |     engines: {node: '>= 0.4'}
3559 | 
3560 |   siginfo@2.0.0:
3561 |     resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}
3562 | 
3563 |   signal-exit@3.0.7:
3564 |     resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}
3565 | 
3566 |   signal-exit@4.1.0:
3567 |     resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
3568 |     engines: {node: '>=14'}
3569 | 
3570 |   simple-swizzle@0.2.2:
3571 |     resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}
3572 | 
3573 |   sisteransi@1.0.5:
3574 |     resolution: {integrity: sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==}
3575 | 
3576 |   slash@3.0.0:
3577 |     resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}
3578 |     engines: {node: '>=8'}
3579 | 
3580 |   source-map-js@1.2.1:
3581 |     resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
3582 |     engines: {node: '>=0.10.0'}
3583 | 
3584 |   source-map-support@0.5.13:
3585 |     resolution: {integrity: sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==}
3586 | 
3587 |   source-map@0.6.1:
3588 |     resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
3589 |     engines: {node: '>=0.10.0'}
3590 | 
3591 |   source-map@0.8.0-beta.0:
3592 |     resolution: {integrity: sha512-2ymg6oRBpebeZi9UUNsgQ89bhx01TcTkmNTGnNO88imTmbSgy4nfujrgVEFKWpMTEGA11EDkTt7mqObTPdigIA==}
3593 |     engines: {node: '>= 8'}
3594 | 
3595 |   sprintf-js@1.0.3:
3596 |     resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}
3597 | 
3598 |   stack-trace@0.0.10:
3599 |     resolution: {integrity: sha512-KGzahc7puUKkzyMt+IqAep+TVNbKP+k2Lmwhub39m1AsTSkaDutx56aDCo+HLDzf/D26BIHTJWNiTG1KAJiQCg==}
3600 | 
3601 |   stack-utils@2.0.6:
3602 |     resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}
3603 |     engines: {node: '>=10'}
3604 | 
3605 |   stackback@0.0.2:
3606 |     resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}
3607 | 
3608 |   statuses@2.0.1:
3609 |     resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}
3610 |     engines: {node: '>= 0.8'}
3611 | 
3612 |   std-env@3.8.0:
3613 |     resolution: {integrity: sha512-Bc3YwwCB+OzldMxOXJIIvC6cPRWr/LxOp48CdQTOkPyk/t4JWWJbrilwBd7RJzKV8QW7tJkcgAmeuLLJugl5/w==}
3614 | 
3615 |   stop-iteration-iterator@1.1.0:
3616 |     resolution: {integrity: sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==}
3617 |     engines: {node: '>= 0.4'}
3618 | 
3619 |   streamsearch@1.1.0:
3620 |     resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}
3621 |     engines: {node: '>=10.0.0'}
3622 | 
3623 |   string-length@4.0.2:
3624 |     resolution: {integrity: sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==}
3625 |     engines: {node: '>=10'}
3626 | 
3627 |   string-width@4.2.3:
3628 |     resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
3629 |     engines: {node: '>=8'}
3630 | 
3631 |   string-width@5.1.2:
3632 |     resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}
3633 |     engines: {node: '>=12'}
3634 | 
3635 |   string_decoder@1.1.1:
3636 |     resolution: {integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==}
3637 | 
3638 |   strip-ansi@6.0.1:
3639 |     resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
3640 |     engines: {node: '>=8'}
3641 | 
3642 |   strip-ansi@7.1.0:
3643 |     resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}
3644 |     engines: {node: '>=12'}
3645 | 
3646 |   strip-bom@4.0.0:
3647 |     resolution: {integrity: sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==}
3648 |     engines: {node: '>=8'}
3649 | 
3650 |   strip-final-newline@2.0.0:
3651 |     resolution: {integrity: sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==}
3652 |     engines: {node: '>=6'}
3653 | 
3654 |   strip-final-newline@3.0.0:
3655 |     resolution: {integrity: sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==}
3656 |     engines: {node: '>=12'}
3657 | 
3658 |   strip-indent@3.0.0:
3659 |     resolution: {integrity: sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==}
3660 |     engines: {node: '>=8'}
3661 | 
3662 |   strip-json-comments@3.1.1:
3663 |     resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
3664 |     engines: {node: '>=8'}
3665 | 
3666 |   strip-literal@2.1.1:
3667 |     resolution: {integrity: sha512-631UJ6O00eNGfMiWG78ck80dfBab8X6IVFB51jZK5Icd7XAs60Z5y7QdSd/wGIklnWvRbUNloVzhOKKmutxQ6Q==}
3668 | 
3669 |   sucrase@3.35.0:
3670 |     resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}
3671 |     engines: {node: '>=16 || 14 >=14.17'}
3672 |     hasBin: true
3673 | 
3674 |   superagent@9.0.2:
3675 |     resolution: {integrity: sha512-xuW7dzkUpcJq7QnhOsnNUgtYp3xRwpt2F7abdRYIpCsAt0hhUqia0EdxyXZQQpNmGtsCzYHryaKSV3q3GJnq7w==}
3676 |     engines: {node: '>=14.18.0'}
3677 | 
3678 |   supercluster@8.0.1:
3679 |     resolution: {integrity: sha512-IiOea5kJ9iqzD2t7QJq/cREyLHTtSmUT6gQsweojg9WH2sYJqZK9SswTu6jrscO6D1G5v5vYZ9ru/eq85lXeZQ==}
3680 | 
3681 |   supertest@7.0.0:
3682 |     resolution: {integrity: sha512-qlsr7fIC0lSddmA3tzojvzubYxvlGtzumcdHgPwbFWMISQwL22MhM2Y3LNt+6w9Yyx7559VW5ab70dgphm8qQA==}
3683 |     engines: {node: '>=14.18.0'}
3684 | 
3685 |   supports-color@7.2.0:
3686 |     resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
3687 |     engines: {node: '>=8'}
3688 | 
3689 |   supports-color@8.1.1:
3690 |     resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}
3691 |     engines: {node: '>=10'}
3692 | 
3693 |   supports-preserve-symlinks-flag@1.0.0:
3694 |     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
3695 |     engines: {node: '>= 0.4'}
3696 | 
3697 |   tailwindcss@3.4.17:
3698 |     resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}
3699 |     engines: {node: '>=14.0.0'}
3700 |     hasBin: true
3701 | 
3702 |   test-exclude@6.0.0:
3703 |     resolution: {integrity: sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==}
3704 |     engines: {node: '>=8'}
3705 | 
3706 |   text-hex@1.0.0:
3707 |     resolution: {integrity: sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==}
3708 | 
3709 |   text-table@0.2.0:
3710 |     resolution: {integrity: sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==}
3711 | 
3712 |   thenify-all@1.6.0:
3713 |     resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}
3714 |     engines: {node: '>=0.8'}
3715 | 
3716 |   thenify@3.3.1:
3717 |     resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}
3718 | 
3719 |   tinybench@2.9.0:
3720 |     resolution: {integrity: sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==}
3721 | 
3722 |   tinyexec@0.3.2:
3723 |     resolution: {integrity: sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==}
3724 | 
3725 |   tinyglobby@0.2.10:
3726 |     resolution: {integrity: sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==}
3727 |     engines: {node: '>=12.0.0'}
3728 | 
3729 |   tinypool@0.8.4:
3730 |     resolution: {integrity: sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==}
3731 |     engines: {node: '>=14.0.0'}
3732 | 
3733 |   tinyspy@2.2.1:
3734 |     resolution: {integrity: sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==}
3735 |     engines: {node: '>=14.0.0'}
3736 | 
3737 |   tmpl@1.0.5:
3738 |     resolution: {integrity: sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==}
3739 | 
3740 |   to-regex-range@5.0.1:
3741 |     resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
3742 |     engines: {node: '>=8.0'}
3743 | 
3744 |   toidentifier@1.0.1:
3745 |     resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}
3746 |     engines: {node: '>=0.6'}
3747 | 
3748 |   tr46@1.0.1:
3749 |     resolution: {integrity: sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==}
3750 | 
3751 |   tree-kill@1.2.2:
3752 |     resolution: {integrity: sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==}
3753 |     hasBin: true
3754 | 
3755 |   triple-beam@1.4.1:
3756 |     resolution: {integrity: sha512-aZbgViZrg1QNcG+LULa7nhZpJTZSLm/mXnHXnbAbjmN5aSa0y7V+wvv6+4WaBtpISJzThKy+PIPxc1Nq1EJ9mg==}
3757 |     engines: {node: '>= 14.0.0'}
3758 | 
3759 |   ts-api-utils@1.4.3:
3760 |     resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}
3761 |     engines: {node: '>=16'}
3762 |     peerDependencies:
3763 |       typescript: '>=4.2.0'
3764 | 
3765 |   ts-interface-checker@0.1.13:
3766 |     resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}
3767 | 
3768 |   ts-jest@29.2.5:
3769 |     resolution: {integrity: sha512-KD8zB2aAZrcKIdGk4OwpJggeLcH1FgrICqDSROWqlnJXGCXK4Mn6FcdK2B6670Xr73lHMG1kHw8R87A0ecZ+vA==}
3770 |     engines: {node: ^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0}
3771 |     hasBin: true
3772 |     peerDependencies:
3773 |       '@babel/core': '>=7.0.0-beta.0 <8'
3774 |       '@jest/transform': ^29.0.0
3775 |       '@jest/types': ^29.0.0
3776 |       babel-jest: ^29.0.0
3777 |       esbuild: '*'
3778 |       jest: ^29.0.0
3779 |       typescript: '>=4.3 <6'
3780 |     peerDependenciesMeta:
3781 |       '@babel/core':
3782 |         optional: true
3783 |       '@jest/transform':
3784 |         optional: true
3785 |       '@jest/types':
3786 |         optional: true
3787 |       babel-jest:
3788 |         optional: true
3789 |       esbuild:
3790 |         optional: true
3791 | 
3792 |   ts-node@10.9.2:
3793 |     resolution: {integrity: sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==}
3794 |     hasBin: true
3795 |     peerDependencies:
3796 |       '@swc/core': '>=1.2.50'
3797 |       '@swc/wasm': '>=1.2.50'
3798 |       '@types/node': '*'
3799 |       typescript: '>=2.7'
3800 |     peerDependenciesMeta:
3801 |       '@swc/core':
3802 |         optional: true
3803 |       '@swc/wasm':
3804 |         optional: true
3805 | 
3806 |   tsup@8.3.5:
3807 |     resolution: {integrity: sha512-Tunf6r6m6tnZsG9GYWndg0z8dEV7fD733VBFzFJ5Vcm1FtlXB8xBD/rtrBi2a3YKEV7hHtxiZtW5EAVADoe1pA==}
3808 |     engines: {node: '>=18'}
3809 |     hasBin: true
3810 |     peerDependencies:
3811 |       '@microsoft/api-extractor': ^7.36.0
3812 |       '@swc/core': ^1
3813 |       postcss: ^8.4.12
3814 |       typescript: '>=4.5.0'
3815 |     peerDependenciesMeta:
3816 |       '@microsoft/api-extractor':
3817 |         optional: true
3818 |       '@swc/core':
3819 |         optional: true
3820 |       postcss:
3821 |         optional: true
3822 |       typescript:
3823 |         optional: true
3824 | 
3825 |   tsx@4.19.2:
3826 |     resolution: {integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==}
3827 |     engines: {node: '>=18.0.0'}
3828 |     hasBin: true
3829 | 
3830 |   turbo-darwin-64@1.13.4:
3831 |     resolution: {integrity: sha512-A0eKd73R7CGnRinTiS7txkMElg+R5rKFp9HV7baDiEL4xTG1FIg/56Vm7A5RVgg8UNgG2qNnrfatJtb+dRmNdw==}
3832 |     cpu: [x64]
3833 |     os: [darwin]
3834 | 
3835 |   turbo-darwin-arm64@1.13.4:
3836 |     resolution: {integrity: sha512-eG769Q0NF6/Vyjsr3mKCnkG/eW6dKMBZk6dxWOdrHfrg6QgfkBUk0WUUujzdtVPiUIvsh4l46vQrNVd9EOtbyA==}
3837 |     cpu: [arm64]
3838 |     os: [darwin]
3839 | 
3840 |   turbo-linux-64@1.13.4:
3841 |     resolution: {integrity: sha512-Bq0JphDeNw3XEi+Xb/e4xoKhs1DHN7OoLVUbTIQz+gazYjigVZvtwCvgrZI7eW9Xo1eOXM2zw2u1DGLLUfmGkQ==}
3842 |     cpu: [x64]
3843 |     os: [linux]
3844 | 
3845 |   turbo-linux-arm64@1.13.4:
3846 |     resolution: {integrity: sha512-BJcXw1DDiHO/okYbaNdcWN6szjXyHWx9d460v6fCHY65G8CyqGU3y2uUTPK89o8lq/b2C8NK0yZD+Vp0f9VoIg==}
3847 |     cpu: [arm64]
3848 |     os: [linux]
3849 | 
3850 |   turbo-windows-64@1.13.4:
3851 |     resolution: {integrity: sha512-OFFhXHOFLN7A78vD/dlVuuSSVEB3s9ZBj18Tm1hk3aW1HTWTuAw0ReN6ZNlVObZUHvGy8d57OAGGxf2bT3etQw==}
3852 |     cpu: [x64]
3853 |     os: [win32]
3854 | 
3855 |   turbo-windows-arm64@1.13.4:
3856 |     resolution: {integrity: sha512-u5A+VOKHswJJmJ8o8rcilBfU5U3Y1TTAfP9wX8bFh8teYF1ghP0EhtMRLjhtp6RPa+XCxHHVA2CiC3gbh5eg5g==}
3857 |     cpu: [arm64]
3858 |     os: [win32]
3859 | 
3860 |   turbo@1.13.4:
3861 |     resolution: {integrity: sha512-1q7+9UJABuBAHrcC4Sxp5lOqYS5mvxRrwa33wpIyM18hlOCpRD/fTJNxZ0vhbMcJmz15o9kkVm743mPn7p6jpQ==}
3862 |     hasBin: true
3863 | 
3864 |   type-check@0.4.0:
3865 |     resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
3866 |     engines: {node: '>= 0.8.0'}
3867 | 
3868 |   type-detect@4.0.8:
3869 |     resolution: {integrity: sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==}
3870 |     engines: {node: '>=4'}
3871 | 
3872 |   type-detect@4.1.0:
3873 |     resolution: {integrity: sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==}
3874 |     engines: {node: '>=4'}
3875 | 
3876 |   type-fest@0.20.2:
3877 |     resolution: {integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==}
3878 |     engines: {node: '>=10'}
3879 | 
3880 |   type-fest@0.21.3:
3881 |     resolution: {integrity: sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==}
3882 |     engines: {node: '>=10'}
3883 | 
3884 |   type-is@1.6.18:
3885 |     resolution: {integrity: sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==}
3886 |     engines: {node: '>= 0.6'}
3887 | 
3888 |   typedarray@0.0.6:
3889 |     resolution: {integrity: sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==}
3890 | 
3891 |   typescript@5.7.3:
3892 |     resolution: {integrity: sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==}
3893 |     engines: {node: '>=14.17'}
3894 |     hasBin: true
3895 | 
3896 |   ufo@1.5.4:
3897 |     resolution: {integrity: sha512-UsUk3byDzKd04EyoZ7U4DOlxQaD14JUKQl6/P7wiX4FNvUfm3XL246n9W5AmqwW5RSFJ27NAuM0iLscAOYUiGQ==}
3898 | 
3899 |   undici-types@6.19.8:
3900 |     resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}
3901 | 
3902 |   unpipe@1.0.0:
3903 |     resolution: {integrity: sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==}
3904 |     engines: {node: '>= 0.8'}
3905 | 
3906 |   update-browserslist-db@1.1.2:
3907 |     resolution: {integrity: sha512-PPypAm5qvlD7XMZC3BujecnaOxwhrtoFR+Dqkk5Aa/6DssiH0ibKoketaj9w8LP7Bont1rYeoV5plxD7RTEPRg==}
3908 |     hasBin: true
3909 |     peerDependencies:
3910 |       browserslist: '>= 4.21.0'
3911 | 
3912 |   uri-js@4.4.1:
3913 |     resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}
3914 | 
3915 |   util-deprecate@1.0.2:
3916 |     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
3917 | 
3918 |   utils-merge@1.0.1:
3919 |     resolution: {integrity: sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==}
3920 |     engines: {node: '>= 0.4.0'}
3921 | 
3922 |   v8-compile-cache-lib@3.0.1:
3923 |     resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}
3924 | 
3925 |   v8-to-istanbul@9.3.0:
3926 |     resolution: {integrity: sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==}
3927 |     engines: {node: '>=10.12.0'}
3928 | 
3929 |   vary@1.1.2:
3930 |     resolution: {integrity: sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==}
3931 |     engines: {node: '>= 0.8'}
3932 | 
3933 |   vite-node@1.6.0:
3934 |     resolution: {integrity: sha512-de6HJgzC+TFzOu0NTC4RAIsyf/DY/ibWDYQUcuEA84EMHhcefTUGkjFHKKEJhQN4A+6I0u++kr3l36ZF2d7XRw==}
3935 |     engines: {node: ^18.0.0 || >=20.0.0}
3936 |     hasBin: true
3937 | 
3938 |   vite@5.4.11:
3939 |     resolution: {integrity: sha512-c7jFQRklXua0mTzneGW9QVyxFjUgwcihC4bXEtujIo2ouWCe1Ajt/amn2PCxYnhYfd5k09JX3SB7OYWFKYqj8Q==}
3940 |     engines: {node: ^18.0.0 || >=20.0.0}
3941 |     hasBin: true
3942 |     peerDependencies:
3943 |       '@types/node': ^18.0.0 || >=20.0.0
3944 |       less: '*'
3945 |       lightningcss: ^1.21.0
3946 |       sass: '*'
3947 |       sass-embedded: '*'
3948 |       stylus: '*'
3949 |       sugarss: '*'
3950 |       terser: ^5.4.0
3951 |     peerDependenciesMeta:
3952 |       '@types/node':
3953 |         optional: true
3954 |       less:
3955 |         optional: true
3956 |       lightningcss:
3957 |         optional: true
3958 |       sass:
3959 |         optional: true
3960 |       sass-embedded:
3961 |         optional: true
3962 |       stylus:
3963 |         optional: true
3964 |       sugarss:
3965 |         optional: true
3966 |       terser:
3967 |         optional: true
3968 | 
3969 |   vitest@1.6.0:
3970 |     resolution: {integrity: sha512-H5r/dN06swuFnzNFhq/dnz37bPXnq8xB2xB5JOVk8K09rUtoeNN+LHWkoQ0A/i3hvbUKKcCei9KpbxqHMLhLLA==}
3971 |     engines: {node: ^18.0.0 || >=20.0.0}
3972 |     hasBin: true
3973 |     peerDependencies:
3974 |       '@edge-runtime/vm': '*'
3975 |       '@types/node': ^18.0.0 || >=20.0.0
3976 |       '@vitest/browser': 1.6.0
3977 |       '@vitest/ui': 1.6.0
3978 |       happy-dom: '*'
3979 |       jsdom: '*'
3980 |     peerDependenciesMeta:
3981 |       '@edge-runtime/vm':
3982 |         optional: true
3983 |       '@types/node':
3984 |         optional: true
3985 |       '@vitest/browser':
3986 |         optional: true
3987 |       '@vitest/ui':
3988 |         optional: true
3989 |       happy-dom:
3990 |         optional: true
3991 |       jsdom:
3992 |         optional: true
3993 | 
3994 |   walker@1.0.8:
3995 |     resolution: {integrity: sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==}
3996 | 
3997 |   webidl-conversions@4.0.2:
3998 |     resolution: {integrity: sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==}
3999 | 
4000 |   webidl-conversions@7.0.0:
4001 |     resolution: {integrity: sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==}
4002 |     engines: {node: '>=12'}
4003 | 
4004 |   whatwg-encoding@2.0.0:
4005 |     resolution: {integrity: sha512-p41ogyeMUrw3jWclHWTQg1k05DSVXPLcVxRTYsXUk+ZooOCZLcoYgPZ/HL/D/N+uQPOtcp1me1WhBEaX02mhWg==}
4006 |     engines: {node: '>=12'}
4007 | 
4008 |   whatwg-mimetype@3.0.0:
4009 |     resolution: {integrity: sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==}
4010 |     engines: {node: '>=12'}
4011 | 
4012 |   whatwg-url@7.1.0:
4013 |     resolution: {integrity: sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==}
4014 | 
4015 |   which-boxed-primitive@1.1.1:
4016 |     resolution: {integrity: sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==}
4017 |     engines: {node: '>= 0.4'}
4018 | 
4019 |   which-collection@1.0.2:
4020 |     resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}
4021 |     engines: {node: '>= 0.4'}
4022 | 
4023 |   which-typed-array@1.1.18:
4024 |     resolution: {integrity: sha512-qEcY+KJYlWyLH9vNbsr6/5j59AXk5ni5aakf8ldzBvGde6Iz4sxZGkJyWSAueTG7QhOvNRYb1lDdFmL5Td0QKA==}
4025 |     engines: {node: '>= 0.4'}
4026 | 
4027 |   which@2.0.2:
4028 |     resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
4029 |     engines: {node: '>= 8'}
4030 |     hasBin: true
4031 | 
4032 |   why-is-node-running@2.3.0:
4033 |     resolution: {integrity: sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==}
4034 |     engines: {node: '>=8'}
4035 |     hasBin: true
4036 | 
4037 |   winston-transport@4.9.0:
4038 |     resolution: {integrity: sha512-8drMJ4rkgaPo1Me4zD/3WLfI/zPdA9o2IipKODunnGDcuqbHwjsbB79ylv04LCGGzU0xQ6vTznOMpQGaLhhm6A==}
4039 |     engines: {node: '>= 12.0.0'}
4040 | 
4041 |   winston@3.17.0:
4042 |     resolution: {integrity: sha512-DLiFIXYC5fMPxaRg832S6F5mJYvePtmO5G9v9IgUFPhXm9/GkXarH/TUrBAVzhTCzAj9anE/+GjrgXp/54nOgw==}
4043 |     engines: {node: '>= 12.0.0'}
4044 | 
4045 |   word-wrap@1.2.5:
4046 |     resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
4047 |     engines: {node: '>=0.10.0'}
4048 | 
4049 |   wrap-ansi@7.0.0:
4050 |     resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
4051 |     engines: {node: '>=10'}
4052 | 
4053 |   wrap-ansi@8.1.0:
4054 |     resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}
4055 |     engines: {node: '>=12'}
4056 | 
4057 |   wrappy@1.0.2:
4058 |     resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}
4059 | 
4060 |   write-file-atomic@4.0.2:
4061 |     resolution: {integrity: sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==}
4062 |     engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
4063 | 
4064 |   xtend@4.0.2:
4065 |     resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}
4066 |     engines: {node: '>=0.4'}
4067 | 
4068 |   y18n@5.0.8:
4069 |     resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
4070 |     engines: {node: '>=10'}
4071 | 
4072 |   yallist@3.1.1:
4073 |     resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}
4074 | 
4075 |   yaml@2.7.0:
4076 |     resolution: {integrity: sha512-+hSoy/QHluxmC9kCIJyL/uyFmLmc+e5CFR5Wa+bpIhIj85LVb9ZH2nVnqrHoSvKogwODv0ClqZkmiSSaIH5LTA==}
4077 |     engines: {node: '>= 14'}
4078 |     hasBin: true
4079 | 
4080 |   yargs-parser@21.1.1:
4081 |     resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
4082 |     engines: {node: '>=12'}
4083 | 
4084 |   yargs@17.7.2:
4085 |     resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
4086 |     engines: {node: '>=12'}
4087 | 
4088 |   yn@3.1.1:
4089 |     resolution: {integrity: sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==}
4090 |     engines: {node: '>=6'}
4091 | 
4092 |   yocto-queue@0.1.0:
4093 |     resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
4094 |     engines: {node: '>=10'}
4095 | 
4096 |   yocto-queue@1.1.1:
4097 |     resolution: {integrity: sha512-b4JR1PFR10y1mKjhHY9LaGo6tmrgjit7hxVIeAmyMw3jegXR4dhYqLaQF5zMXZxY7tLpMyJeLjr1C4rLmkVe8g==}
4098 |     engines: {node: '>=12.20'}
4099 | 
4100 |   zod@3.24.1:
4101 |     resolution: {integrity: sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==}
4102 | 
4103 | snapshots:
4104 | 
4105 |   '@adobe/css-tools@4.4.1': {}
4106 | 
4107 |   '@alloc/quick-lru@5.2.0': {}
4108 | 
4109 |   '@ampproject/remapping@2.3.0':
4110 |     dependencies:
4111 |       '@jridgewell/gen-mapping': 0.3.8
4112 |       '@jridgewell/trace-mapping': 0.3.25
4113 | 
4114 |   '@babel/code-frame@7.26.2':
4115 |     dependencies:
4116 |       '@babel/helper-validator-identifier': 7.25.9
4117 |       js-tokens: 4.0.0
4118 |       picocolors: 1.1.1
4119 | 
4120 |   '@babel/compat-data@7.26.5': {}
4121 | 
4122 |   '@babel/core@7.26.0':
4123 |     dependencies:
4124 |       '@ampproject/remapping': 2.3.0
4125 |       '@babel/code-frame': 7.26.2
4126 |       '@babel/generator': 7.26.5
4127 |       '@babel/helper-compilation-targets': 7.26.5
4128 |       '@babel/helper-module-transforms': 7.26.0(@babel/core@7.26.0)
4129 |       '@babel/helpers': 7.26.0
4130 |       '@babel/parser': 7.26.5
4131 |       '@babel/template': 7.25.9
4132 |       '@babel/traverse': 7.26.5
4133 |       '@babel/types': 7.26.5
4134 |       convert-source-map: 2.0.0
4135 |       debug: 4.4.0
4136 |       gensync: 1.0.0-beta.2
4137 |       json5: 2.2.3
4138 |       semver: 6.3.1
4139 |     transitivePeerDependencies:
4140 |       - supports-color
4141 | 
4142 |   '@babel/generator@7.26.5':
4143 |     dependencies:
4144 |       '@babel/parser': 7.26.5
4145 |       '@babel/types': 7.26.5
4146 |       '@jridgewell/gen-mapping': 0.3.8
4147 |       '@jridgewell/trace-mapping': 0.3.25
4148 |       jsesc: 3.1.0
4149 | 
4150 |   '@babel/helper-compilation-targets@7.26.5':
4151 |     dependencies:
4152 |       '@babel/compat-data': 7.26.5
4153 |       '@babel/helper-validator-option': 7.25.9
4154 |       browserslist: 4.24.4
4155 |       lru-cache: 5.1.1
4156 |       semver: 6.3.1
4157 | 
4158 |   '@babel/helper-module-imports@7.25.9':
4159 |     dependencies:
4160 |       '@babel/traverse': 7.26.5
4161 |       '@babel/types': 7.26.5
4162 |     transitivePeerDependencies:
4163 |       - supports-color
4164 | 
4165 |   '@babel/helper-module-transforms@7.26.0(@babel/core@7.26.0)':
4166 |     dependencies:
4167 |       '@babel/core': 7.26.0
4168 |       '@babel/helper-module-imports': 7.25.9
4169 |       '@babel/helper-validator-identifier': 7.25.9
4170 |       '@babel/traverse': 7.26.5
4171 |     transitivePeerDependencies:
4172 |       - supports-color
4173 | 
4174 |   '@babel/helper-plugin-utils@7.26.5': {}
4175 | 
4176 |   '@babel/helper-string-parser@7.25.9': {}
4177 | 
4178 |   '@babel/helper-validator-identifier@7.25.9': {}
4179 | 
4180 |   '@babel/helper-validator-option@7.25.9': {}
4181 | 
4182 |   '@babel/helpers@7.26.0':
4183 |     dependencies:
4184 |       '@babel/template': 7.25.9
4185 |       '@babel/types': 7.26.5
4186 | 
4187 |   '@babel/parser@7.26.5':
4188 |     dependencies:
4189 |       '@babel/types': 7.26.5
4190 | 
4191 |   '@babel/plugin-syntax-async-generators@7.8.4(@babel/core@7.26.0)':
4192 |     dependencies:
4193 |       '@babel/core': 7.26.0
4194 |       '@babel/helper-plugin-utils': 7.26.5
4195 | 
4196 |   '@babel/plugin-syntax-bigint@7.8.3(@babel/core@7.26.0)':
4197 |     dependencies:
4198 |       '@babel/core': 7.26.0
4199 |       '@babel/helper-plugin-utils': 7.26.5
4200 | 
4201 |   '@babel/plugin-syntax-class-properties@7.12.13(@babel/core@7.26.0)':
4202 |     dependencies:
4203 |       '@babel/core': 7.26.0
4204 |       '@babel/helper-plugin-utils': 7.26.5
4205 | 
4206 |   '@babel/plugin-syntax-class-static-block@7.14.5(@babel/core@7.26.0)':
4207 |     dependencies:
4208 |       '@babel/core': 7.26.0
4209 |       '@babel/helper-plugin-utils': 7.26.5
4210 | 
4211 |   '@babel/plugin-syntax-import-attributes@7.26.0(@babel/core@7.26.0)':
4212 |     dependencies:
4213 |       '@babel/core': 7.26.0
4214 |       '@babel/helper-plugin-utils': 7.26.5
4215 | 
4216 |   '@babel/plugin-syntax-import-meta@7.10.4(@babel/core@7.26.0)':
4217 |     dependencies:
4218 |       '@babel/core': 7.26.0
4219 |       '@babel/helper-plugin-utils': 7.26.5
4220 | 
4221 |   '@babel/plugin-syntax-json-strings@7.8.3(@babel/core@7.26.0)':
4222 |     dependencies:
4223 |       '@babel/core': 7.26.0
4224 |       '@babel/helper-plugin-utils': 7.26.5
4225 | 
4226 |   '@babel/plugin-syntax-jsx@7.25.9(@babel/core@7.26.0)':
4227 |     dependencies:
4228 |       '@babel/core': 7.26.0
4229 |       '@babel/helper-plugin-utils': 7.26.5
4230 | 
4231 |   '@babel/plugin-syntax-logical-assignment-operators@7.10.4(@babel/core@7.26.0)':
4232 |     dependencies:
4233 |       '@babel/core': 7.26.0
4234 |       '@babel/helper-plugin-utils': 7.26.5
4235 | 
4236 |   '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3(@babel/core@7.26.0)':
4237 |     dependencies:
4238 |       '@babel/core': 7.26.0
4239 |       '@babel/helper-plugin-utils': 7.26.5
4240 | 
4241 |   '@babel/plugin-syntax-numeric-separator@7.10.4(@babel/core@7.26.0)':
4242 |     dependencies:
4243 |       '@babel/core': 7.26.0
4244 |       '@babel/helper-plugin-utils': 7.26.5
4245 | 
4246 |   '@babel/plugin-syntax-object-rest-spread@7.8.3(@babel/core@7.26.0)':
4247 |     dependencies:
4248 |       '@babel/core': 7.26.0
4249 |       '@babel/helper-plugin-utils': 7.26.5
4250 | 
4251 |   '@babel/plugin-syntax-optional-catch-binding@7.8.3(@babel/core@7.26.0)':
4252 |     dependencies:
4253 |       '@babel/core': 7.26.0
4254 |       '@babel/helper-plugin-utils': 7.26.5
4255 | 
4256 |   '@babel/plugin-syntax-optional-chaining@7.8.3(@babel/core@7.26.0)':
4257 |     dependencies:
4258 |       '@babel/core': 7.26.0
4259 |       '@babel/helper-plugin-utils': 7.26.5
4260 | 
4261 |   '@babel/plugin-syntax-private-property-in-object@7.14.5(@babel/core@7.26.0)':
4262 |     dependencies:
4263 |       '@babel/core': 7.26.0
4264 |       '@babel/helper-plugin-utils': 7.26.5
4265 | 
4266 |   '@babel/plugin-syntax-top-level-await@7.14.5(@babel/core@7.26.0)':
4267 |     dependencies:
4268 |       '@babel/core': 7.26.0
4269 |       '@babel/helper-plugin-utils': 7.26.5
4270 | 
4271 |   '@babel/plugin-syntax-typescript@7.25.9(@babel/core@7.26.0)':
4272 |     dependencies:
4273 |       '@babel/core': 7.26.0
4274 |       '@babel/helper-plugin-utils': 7.26.5
4275 | 
4276 |   '@babel/plugin-transform-react-jsx-self@7.25.9(@babel/core@7.26.0)':
4277 |     dependencies:
4278 |       '@babel/core': 7.26.0
4279 |       '@babel/helper-plugin-utils': 7.26.5
4280 | 
4281 |   '@babel/plugin-transform-react-jsx-source@7.25.9(@babel/core@7.26.0)':
4282 |     dependencies:
4283 |       '@babel/core': 7.26.0
4284 |       '@babel/helper-plugin-utils': 7.26.5
4285 | 
4286 |   '@babel/runtime@7.26.0':
4287 |     dependencies:
4288 |       regenerator-runtime: 0.14.1
4289 | 
4290 |   '@babel/template@7.25.9':
4291 |     dependencies:
4292 |       '@babel/code-frame': 7.26.2
4293 |       '@babel/parser': 7.26.5
4294 |       '@babel/types': 7.26.5
4295 | 
4296 |   '@babel/traverse@7.26.5':
4297 |     dependencies:
4298 |       '@babel/code-frame': 7.26.2
4299 |       '@babel/generator': 7.26.5
4300 |       '@babel/parser': 7.26.5
4301 |       '@babel/template': 7.25.9
4302 |       '@babel/types': 7.26.5
4303 |       debug: 4.4.0
4304 |       globals: 11.12.0
4305 |     transitivePeerDependencies:
4306 |       - supports-color
4307 | 
4308 |   '@babel/types@7.26.5':
4309 |     dependencies:
4310 |       '@babel/helper-string-parser': 7.25.9
4311 |       '@babel/helper-validator-identifier': 7.25.9
4312 | 
4313 |   '@bcoe/v8-coverage@0.2.3': {}
4314 | 
4315 |   '@colors/colors@1.6.0': {}
4316 | 
4317 |   '@cspotcode/source-map-support@0.8.1':
4318 |     dependencies:
4319 |       '@jridgewell/trace-mapping': 0.3.9
4320 |     optional: true
4321 | 
4322 |   '@dabh/diagnostics@2.0.3':
4323 |     dependencies:
4324 |       colorspace: 1.1.4
4325 |       enabled: 2.0.0
4326 |       kuler: 2.0.0
4327 | 
4328 |   '@esbuild/aix-ppc64@0.21.5':
4329 |     optional: true
4330 | 
4331 |   '@esbuild/aix-ppc64@0.23.1':
4332 |     optional: true
4333 | 
4334 |   '@esbuild/aix-ppc64@0.24.2':
4335 |     optional: true
4336 | 
4337 |   '@esbuild/android-arm64@0.21.5':
4338 |     optional: true
4339 | 
4340 |   '@esbuild/android-arm64@0.23.1':
4341 |     optional: true
4342 | 
4343 |   '@esbuild/android-arm64@0.24.2':
4344 |     optional: true
4345 | 
4346 |   '@esbuild/android-arm@0.21.5':
4347 |     optional: true
4348 | 
4349 |   '@esbuild/android-arm@0.23.1':
4350 |     optional: true
4351 | 
4352 |   '@esbuild/android-arm@0.24.2':
4353 |     optional: true
4354 | 
4355 |   '@esbuild/android-x64@0.21.5':
4356 |     optional: true
4357 | 
4358 |   '@esbuild/android-x64@0.23.1':
4359 |     optional: true
4360 | 
4361 |   '@esbuild/android-x64@0.24.2':
4362 |     optional: true
4363 | 
4364 |   '@esbuild/darwin-arm64@0.21.5':
4365 |     optional: true
4366 | 
4367 |   '@esbuild/darwin-arm64@0.23.1':
4368 |     optional: true
4369 | 
4370 |   '@esbuild/darwin-arm64@0.24.2':
4371 |     optional: true
4372 | 
4373 |   '@esbuild/darwin-x64@0.21.5':
4374 |     optional: true
4375 | 
4376 |   '@esbuild/darwin-x64@0.23.1':
4377 |     optional: true
4378 | 
4379 |   '@esbuild/darwin-x64@0.24.2':
4380 |     optional: true
4381 | 
4382 |   '@esbuild/freebsd-arm64@0.21.5':
4383 |     optional: true
4384 | 
4385 |   '@esbuild/freebsd-arm64@0.23.1':
4386 |     optional: true
4387 | 
4388 |   '@esbuild/freebsd-arm64@0.24.2':
4389 |     optional: true
4390 | 
4391 |   '@esbuild/freebsd-x64@0.21.5':
4392 |     optional: true
4393 | 
4394 |   '@esbuild/freebsd-x64@0.23.1':
4395 |     optional: true
4396 | 
4397 |   '@esbuild/freebsd-x64@0.24.2':
4398 |     optional: true
4399 | 
4400 |   '@esbuild/linux-arm64@0.21.5':
4401 |     optional: true
4402 | 
4403 |   '@esbuild/linux-arm64@0.23.1':
4404 |     optional: true
4405 | 
4406 |   '@esbuild/linux-arm64@0.24.2':
4407 |     optional: true
4408 | 
4409 |   '@esbuild/linux-arm@0.21.5':
4410 |     optional: true
4411 | 
4412 |   '@esbuild/linux-arm@0.23.1':
4413 |     optional: true
4414 | 
4415 |   '@esbuild/linux-arm@0.24.2':
4416 |     optional: true
4417 | 
4418 |   '@esbuild/linux-ia32@0.21.5':
4419 |     optional: true
4420 | 
4421 |   '@esbuild/linux-ia32@0.23.1':
4422 |     optional: true
4423 | 
4424 |   '@esbuild/linux-ia32@0.24.2':
4425 |     optional: true
4426 | 
4427 |   '@esbuild/linux-loong64@0.21.5':
4428 |     optional: true
4429 | 
4430 |   '@esbuild/linux-loong64@0.23.1':
4431 |     optional: true
4432 | 
4433 |   '@esbuild/linux-loong64@0.24.2':
4434 |     optional: true
4435 | 
4436 |   '@esbuild/linux-mips64el@0.21.5':
4437 |     optional: true
4438 | 
4439 |   '@esbuild/linux-mips64el@0.23.1':
4440 |     optional: true
4441 | 
4442 |   '@esbuild/linux-mips64el@0.24.2':
4443 |     optional: true
4444 | 
4445 |   '@esbuild/linux-ppc64@0.21.5':
4446 |     optional: true
4447 | 
4448 |   '@esbuild/linux-ppc64@0.23.1':
4449 |     optional: true
4450 | 
4451 |   '@esbuild/linux-ppc64@0.24.2':
4452 |     optional: true
4453 | 
4454 |   '@esbuild/linux-riscv64@0.21.5':
4455 |     optional: true
4456 | 
4457 |   '@esbuild/linux-riscv64@0.23.1':
4458 |     optional: true
4459 | 
4460 |   '@esbuild/linux-riscv64@0.24.2':
4461 |     optional: true
4462 | 
4463 |   '@esbuild/linux-s390x@0.21.5':
4464 |     optional: true
4465 | 
4466 |   '@esbuild/linux-s390x@0.23.1':
4467 |     optional: true
4468 | 
4469 |   '@esbuild/linux-s390x@0.24.2':
4470 |     optional: true
4471 | 
4472 |   '@esbuild/linux-x64@0.21.5':
4473 |     optional: true
4474 | 
4475 |   '@esbuild/linux-x64@0.23.1':
4476 |     optional: true
4477 | 
4478 |   '@esbuild/linux-x64@0.24.2':
4479 |     optional: true
4480 | 
4481 |   '@esbuild/netbsd-arm64@0.24.2':
4482 |     optional: true
4483 | 
4484 |   '@esbuild/netbsd-x64@0.21.5':
4485 |     optional: true
4486 | 
4487 |   '@esbuild/netbsd-x64@0.23.1':
4488 |     optional: true
4489 | 
4490 |   '@esbuild/netbsd-x64@0.24.2':
4491 |     optional: true
4492 | 
4493 |   '@esbuild/openbsd-arm64@0.23.1':
4494 |     optional: true
4495 | 
4496 |   '@esbuild/openbsd-arm64@0.24.2':
4497 |     optional: true
4498 | 
4499 |   '@esbuild/openbsd-x64@0.21.5':
4500 |     optional: true
4501 | 
4502 |   '@esbuild/openbsd-x64@0.23.1':
4503 |     optional: true
4504 | 
4505 |   '@esbuild/openbsd-x64@0.24.2':
4506 |     optional: true
4507 | 
4508 |   '@esbuild/sunos-x64@0.21.5':
4509 |     optional: true
4510 | 
4511 |   '@esbuild/sunos-x64@0.23.1':
4512 |     optional: true
4513 | 
4514 |   '@esbuild/sunos-x64@0.24.2':
4515 |     optional: true
4516 | 
4517 |   '@esbuild/win32-arm64@0.21.5':
4518 |     optional: true
4519 | 
4520 |   '@esbuild/win32-arm64@0.23.1':
4521 |     optional: true
4522 | 
4523 |   '@esbuild/win32-arm64@0.24.2':
4524 |     optional: true
4525 | 
4526 |   '@esbuild/win32-ia32@0.21.5':
4527 |     optional: true
4528 | 
4529 |   '@esbuild/win32-ia32@0.23.1':
4530 |     optional: true
4531 | 
4532 |   '@esbuild/win32-ia32@0.24.2':
4533 |     optional: true
4534 | 
4535 |   '@esbuild/win32-x64@0.21.5':
4536 |     optional: true
4537 | 
4538 |   '@esbuild/win32-x64@0.23.1':
4539 |     optional: true
4540 | 
4541 |   '@esbuild/win32-x64@0.24.2':
4542 |     optional: true
4543 | 
4544 |   '@eslint-community/eslint-utils@4.4.1(eslint@8.57.1)':
4545 |     dependencies:
4546 |       eslint: 8.57.1
4547 |       eslint-visitor-keys: 3.4.3
4548 | 
4549 |   '@eslint-community/regexpp@4.12.1': {}
4550 | 
4551 |   '@eslint/eslintrc@2.1.4':
4552 |     dependencies:
4553 |       ajv: 6.12.6
4554 |       debug: 4.4.0
4555 |       espree: 9.6.1
4556 |       globals: 13.24.0
4557 |       ignore: 5.3.2
4558 |       import-fresh: 3.3.0
4559 |       js-yaml: 4.1.0
4560 |       minimatch: 3.1.2
4561 |       strip-json-comments: 3.1.1
4562 |     transitivePeerDependencies:
4563 |       - supports-color
4564 | 
4565 |   '@eslint/js@8.57.1': {}
4566 | 
4567 |   '@googlemaps/js-api-loader@1.16.8': {}
4568 | 
4569 |   '@googlemaps/markerclusterer@2.5.3':
4570 |     dependencies:
4571 |       fast-deep-equal: 3.1.3
4572 |       supercluster: 8.0.1
4573 | 
4574 |   '@headlessui/react@1.7.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
4575 |     dependencies:
4576 |       '@tanstack/react-virtual': 3.11.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
4577 |       client-only: 0.0.1
4578 |       react: 18.3.1
4579 |       react-dom: 18.3.1(react@18.3.1)
4580 | 
4581 |   '@heroicons/react@2.2.0(react@18.3.1)':
4582 |     dependencies:
4583 |       react: 18.3.1
4584 | 
4585 |   '@humanwhocodes/config-array@0.13.0':
4586 |     dependencies:
4587 |       '@humanwhocodes/object-schema': 2.0.3
4588 |       debug: 4.4.0
4589 |       minimatch: 3.1.2
4590 |     transitivePeerDependencies:
4591 |       - supports-color
4592 | 
4593 |   '@humanwhocodes/module-importer@1.0.1': {}
4594 | 
4595 |   '@humanwhocodes/object-schema@2.0.3': {}
4596 | 
4597 |   '@isaacs/cliui@8.0.2':
4598 |     dependencies:
4599 |       string-width: 5.1.2
4600 |       string-width-cjs: string-width@4.2.3
4601 |       strip-ansi: 7.1.0
4602 |       strip-ansi-cjs: strip-ansi@6.0.1
4603 |       wrap-ansi: 8.1.0
4604 |       wrap-ansi-cjs: wrap-ansi@7.0.0
4605 | 
4606 |   '@istanbuljs/load-nyc-config@1.1.0':
4607 |     dependencies:
4608 |       camelcase: 5.3.1
4609 |       find-up: 4.1.0
4610 |       get-package-type: 0.1.0
4611 |       js-yaml: 3.14.1
4612 |       resolve-from: 5.0.0
4613 | 
4614 |   '@istanbuljs/schema@0.1.3': {}
4615 | 
4616 |   '@jest/console@29.7.0':
4617 |     dependencies:
4618 |       '@jest/types': 29.6.3
4619 |       '@types/node': 20.17.12
4620 |       chalk: 4.1.2
4621 |       jest-message-util: 29.7.0
4622 |       jest-util: 29.7.0
4623 |       slash: 3.0.0
4624 | 
4625 |   '@jest/core@29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))':
4626 |     dependencies:
4627 |       '@jest/console': 29.7.0
4628 |       '@jest/reporters': 29.7.0
4629 |       '@jest/test-result': 29.7.0
4630 |       '@jest/transform': 29.7.0
4631 |       '@jest/types': 29.6.3
4632 |       '@types/node': 20.17.12
4633 |       ansi-escapes: 4.3.2
4634 |       chalk: 4.1.2
4635 |       ci-info: 3.9.0
4636 |       exit: 0.1.2
4637 |       graceful-fs: 4.2.11
4638 |       jest-changed-files: 29.7.0
4639 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
4640 |       jest-haste-map: 29.7.0
4641 |       jest-message-util: 29.7.0
4642 |       jest-regex-util: 29.6.3
4643 |       jest-resolve: 29.7.0
4644 |       jest-resolve-dependencies: 29.7.0
4645 |       jest-runner: 29.7.0
4646 |       jest-runtime: 29.7.0
4647 |       jest-snapshot: 29.7.0
4648 |       jest-util: 29.7.0
4649 |       jest-validate: 29.7.0
4650 |       jest-watcher: 29.7.0
4651 |       micromatch: 4.0.8
4652 |       pretty-format: 29.7.0
4653 |       slash: 3.0.0
4654 |       strip-ansi: 6.0.1
4655 |     transitivePeerDependencies:
4656 |       - babel-plugin-macros
4657 |       - supports-color
4658 |       - ts-node
4659 | 
4660 |   '@jest/environment@29.7.0':
4661 |     dependencies:
4662 |       '@jest/fake-timers': 29.7.0
4663 |       '@jest/types': 29.6.3
4664 |       '@types/node': 20.17.12
4665 |       jest-mock: 29.7.0
4666 | 
4667 |   '@jest/expect-utils@29.7.0':
4668 |     dependencies:
4669 |       jest-get-type: 29.6.3
4670 | 
4671 |   '@jest/expect@29.7.0':
4672 |     dependencies:
4673 |       expect: 29.7.0
4674 |       jest-snapshot: 29.7.0
4675 |     transitivePeerDependencies:
4676 |       - supports-color
4677 | 
4678 |   '@jest/fake-timers@29.7.0':
4679 |     dependencies:
4680 |       '@jest/types': 29.6.3
4681 |       '@sinonjs/fake-timers': 10.3.0
4682 |       '@types/node': 20.17.12
4683 |       jest-message-util: 29.7.0
4684 |       jest-mock: 29.7.0
4685 |       jest-util: 29.7.0
4686 | 
4687 |   '@jest/globals@29.7.0':
4688 |     dependencies:
4689 |       '@jest/environment': 29.7.0
4690 |       '@jest/expect': 29.7.0
4691 |       '@jest/types': 29.6.3
4692 |       jest-mock: 29.7.0
4693 |     transitivePeerDependencies:
4694 |       - supports-color
4695 | 
4696 |   '@jest/reporters@29.7.0':
4697 |     dependencies:
4698 |       '@bcoe/v8-coverage': 0.2.3
4699 |       '@jest/console': 29.7.0
4700 |       '@jest/test-result': 29.7.0
4701 |       '@jest/transform': 29.7.0
4702 |       '@jest/types': 29.6.3
4703 |       '@jridgewell/trace-mapping': 0.3.25
4704 |       '@types/node': 20.17.12
4705 |       chalk: 4.1.2
4706 |       collect-v8-coverage: 1.0.2
4707 |       exit: 0.1.2
4708 |       glob: 7.2.3
4709 |       graceful-fs: 4.2.11
4710 |       istanbul-lib-coverage: 3.2.2
4711 |       istanbul-lib-instrument: 6.0.3
4712 |       istanbul-lib-report: 3.0.1
4713 |       istanbul-lib-source-maps: 4.0.1
4714 |       istanbul-reports: 3.1.7
4715 |       jest-message-util: 29.7.0
4716 |       jest-util: 29.7.0
4717 |       jest-worker: 29.7.0
4718 |       slash: 3.0.0
4719 |       string-length: 4.0.2
4720 |       strip-ansi: 6.0.1
4721 |       v8-to-istanbul: 9.3.0
4722 |     transitivePeerDependencies:
4723 |       - supports-color
4724 | 
4725 |   '@jest/schemas@29.6.3':
4726 |     dependencies:
4727 |       '@sinclair/typebox': 0.27.8
4728 | 
4729 |   '@jest/source-map@29.6.3':
4730 |     dependencies:
4731 |       '@jridgewell/trace-mapping': 0.3.25
4732 |       callsites: 3.1.0
4733 |       graceful-fs: 4.2.11
4734 | 
4735 |   '@jest/test-result@29.7.0':
4736 |     dependencies:
4737 |       '@jest/console': 29.7.0
4738 |       '@jest/types': 29.6.3
4739 |       '@types/istanbul-lib-coverage': 2.0.6
4740 |       collect-v8-coverage: 1.0.2
4741 | 
4742 |   '@jest/test-sequencer@29.7.0':
4743 |     dependencies:
4744 |       '@jest/test-result': 29.7.0
4745 |       graceful-fs: 4.2.11
4746 |       jest-haste-map: 29.7.0
4747 |       slash: 3.0.0
4748 | 
4749 |   '@jest/transform@29.7.0':
4750 |     dependencies:
4751 |       '@babel/core': 7.26.0
4752 |       '@jest/types': 29.6.3
4753 |       '@jridgewell/trace-mapping': 0.3.25
4754 |       babel-plugin-istanbul: 6.1.1
4755 |       chalk: 4.1.2
4756 |       convert-source-map: 2.0.0
4757 |       fast-json-stable-stringify: 2.1.0
4758 |       graceful-fs: 4.2.11
4759 |       jest-haste-map: 29.7.0
4760 |       jest-regex-util: 29.6.3
4761 |       jest-util: 29.7.0
4762 |       micromatch: 4.0.8
4763 |       pirates: 4.0.6
4764 |       slash: 3.0.0
4765 |       write-file-atomic: 4.0.2
4766 |     transitivePeerDependencies:
4767 |       - supports-color
4768 | 
4769 |   '@jest/types@29.6.3':
4770 |     dependencies:
4771 |       '@jest/schemas': 29.6.3
4772 |       '@types/istanbul-lib-coverage': 2.0.6
4773 |       '@types/istanbul-reports': 3.0.4
4774 |       '@types/node': 20.17.12
4775 |       '@types/yargs': 17.0.33
4776 |       chalk: 4.1.2
4777 | 
4778 |   '@jridgewell/gen-mapping@0.3.8':
4779 |     dependencies:
4780 |       '@jridgewell/set-array': 1.2.1
4781 |       '@jridgewell/sourcemap-codec': 1.5.0
4782 |       '@jridgewell/trace-mapping': 0.3.25
4783 | 
4784 |   '@jridgewell/resolve-uri@3.1.2': {}
4785 | 
4786 |   '@jridgewell/set-array@1.2.1': {}
4787 | 
4788 |   '@jridgewell/sourcemap-codec@1.5.0': {}
4789 | 
4790 |   '@jridgewell/trace-mapping@0.3.25':
4791 |     dependencies:
4792 |       '@jridgewell/resolve-uri': 3.1.2
4793 |       '@jridgewell/sourcemap-codec': 1.5.0
4794 | 
4795 |   '@jridgewell/trace-mapping@0.3.9':
4796 |     dependencies:
4797 |       '@jridgewell/resolve-uri': 3.1.2
4798 |       '@jridgewell/sourcemap-codec': 1.5.0
4799 |     optional: true
4800 | 
4801 |   '@nodelib/fs.scandir@2.1.5':
4802 |     dependencies:
4803 |       '@nodelib/fs.stat': 2.0.5
4804 |       run-parallel: 1.2.0
4805 | 
4806 |   '@nodelib/fs.stat@2.0.5': {}
4807 | 
4808 |   '@nodelib/fs.walk@1.2.8':
4809 |     dependencies:
4810 |       '@nodelib/fs.scandir': 2.1.5
4811 |       fastq: 1.18.0
4812 | 
4813 |   '@pkgjs/parseargs@0.11.0':
4814 |     optional: true
4815 | 
4816 |   '@prisma/client@5.22.0(prisma@5.22.0)':
4817 |     optionalDependencies:
4818 |       prisma: 5.22.0
4819 | 
4820 |   '@prisma/debug@5.22.0': {}
4821 | 
4822 |   '@prisma/engines-version@5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2': {}
4823 | 
4824 |   '@prisma/engines@5.22.0':
4825 |     dependencies:
4826 |       '@prisma/debug': 5.22.0
4827 |       '@prisma/engines-version': 5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2
4828 |       '@prisma/fetch-engine': 5.22.0
4829 |       '@prisma/get-platform': 5.22.0
4830 | 
4831 |   '@prisma/fetch-engine@5.22.0':
4832 |     dependencies:
4833 |       '@prisma/debug': 5.22.0
4834 |       '@prisma/engines-version': 5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2
4835 |       '@prisma/get-platform': 5.22.0
4836 | 
4837 |   '@prisma/get-platform@5.22.0':
4838 |     dependencies:
4839 |       '@prisma/debug': 5.22.0
4840 | 
4841 |   '@react-google-maps/api@2.20.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
4842 |     dependencies:
4843 |       '@googlemaps/js-api-loader': 1.16.8
4844 |       '@googlemaps/markerclusterer': 2.5.3
4845 |       '@react-google-maps/infobox': 2.20.0
4846 |       '@react-google-maps/marker-clusterer': 2.20.0
4847 |       '@types/google.maps': 3.58.1
4848 |       invariant: 2.2.4
4849 |       react: 18.3.1
4850 |       react-dom: 18.3.1(react@18.3.1)
4851 | 
4852 |   '@react-google-maps/infobox@2.20.0': {}
4853 | 
4854 |   '@react-google-maps/marker-clusterer@2.20.0': {}
4855 | 
4856 |   '@remix-run/router@1.21.0': {}
4857 | 
4858 |   '@rollup/rollup-android-arm-eabi@4.30.1':
4859 |     optional: true
4860 | 
4861 |   '@rollup/rollup-android-arm64@4.30.1':
4862 |     optional: true
4863 | 
4864 |   '@rollup/rollup-darwin-arm64@4.30.1':
4865 |     optional: true
4866 | 
4867 |   '@rollup/rollup-darwin-x64@4.30.1':
4868 |     optional: true
4869 | 
4870 |   '@rollup/rollup-freebsd-arm64@4.30.1':
4871 |     optional: true
4872 | 
4873 |   '@rollup/rollup-freebsd-x64@4.30.1':
4874 |     optional: true
4875 | 
4876 |   '@rollup/rollup-linux-arm-gnueabihf@4.30.1':
4877 |     optional: true
4878 | 
4879 |   '@rollup/rollup-linux-arm-musleabihf@4.30.1':
4880 |     optional: true
4881 | 
4882 |   '@rollup/rollup-linux-arm64-gnu@4.30.1':
4883 |     optional: true
4884 | 
4885 |   '@rollup/rollup-linux-arm64-musl@4.30.1':
4886 |     optional: true
4887 | 
4888 |   '@rollup/rollup-linux-loongarch64-gnu@4.30.1':
4889 |     optional: true
4890 | 
4891 |   '@rollup/rollup-linux-powerpc64le-gnu@4.30.1':
4892 |     optional: true
4893 | 
4894 |   '@rollup/rollup-linux-riscv64-gnu@4.30.1':
4895 |     optional: true
4896 | 
4897 |   '@rollup/rollup-linux-s390x-gnu@4.30.1':
4898 |     optional: true
4899 | 
4900 |   '@rollup/rollup-linux-x64-gnu@4.30.1':
4901 |     optional: true
4902 | 
4903 |   '@rollup/rollup-linux-x64-musl@4.30.1':
4904 |     optional: true
4905 | 
4906 |   '@rollup/rollup-win32-arm64-msvc@4.30.1':
4907 |     optional: true
4908 | 
4909 |   '@rollup/rollup-win32-ia32-msvc@4.30.1':
4910 |     optional: true
4911 | 
4912 |   '@rollup/rollup-win32-x64-msvc@4.30.1':
4913 |     optional: true
4914 | 
4915 |   '@sinclair/typebox@0.27.8': {}
4916 | 
4917 |   '@sinonjs/commons@3.0.1':
4918 |     dependencies:
4919 |       type-detect: 4.0.8
4920 | 
4921 |   '@sinonjs/fake-timers@10.3.0':
4922 |     dependencies:
4923 |       '@sinonjs/commons': 3.0.1
4924 | 
4925 |   '@swc/core-darwin-arm64@1.10.7':
4926 |     optional: true
4927 | 
4928 |   '@swc/core-darwin-x64@1.10.7':
4929 |     optional: true
4930 | 
4931 |   '@swc/core-linux-arm-gnueabihf@1.10.7':
4932 |     optional: true
4933 | 
4934 |   '@swc/core-linux-arm64-gnu@1.10.7':
4935 |     optional: true
4936 | 
4937 |   '@swc/core-linux-arm64-musl@1.10.7':
4938 |     optional: true
4939 | 
4940 |   '@swc/core-linux-x64-gnu@1.10.7':
4941 |     optional: true
4942 | 
4943 |   '@swc/core-linux-x64-musl@1.10.7':
4944 |     optional: true
4945 | 
4946 |   '@swc/core-win32-arm64-msvc@1.10.7':
4947 |     optional: true
4948 | 
4949 |   '@swc/core-win32-ia32-msvc@1.10.7':
4950 |     optional: true
4951 | 
4952 |   '@swc/core-win32-x64-msvc@1.10.7':
4953 |     optional: true
4954 | 
4955 |   '@swc/core@1.10.7':
4956 |     dependencies:
4957 |       '@swc/counter': 0.1.3
4958 |       '@swc/types': 0.1.17
4959 |     optionalDependencies:
4960 |       '@swc/core-darwin-arm64': 1.10.7
4961 |       '@swc/core-darwin-x64': 1.10.7
4962 |       '@swc/core-linux-arm-gnueabihf': 1.10.7
4963 |       '@swc/core-linux-arm64-gnu': 1.10.7
4964 |       '@swc/core-linux-arm64-musl': 1.10.7
4965 |       '@swc/core-linux-x64-gnu': 1.10.7
4966 |       '@swc/core-linux-x64-musl': 1.10.7
4967 |       '@swc/core-win32-arm64-msvc': 1.10.7
4968 |       '@swc/core-win32-ia32-msvc': 1.10.7
4969 |       '@swc/core-win32-x64-msvc': 1.10.7
4970 | 
4971 |   '@swc/counter@0.1.3': {}
4972 | 
4973 |   '@swc/types@0.1.17':
4974 |     dependencies:
4975 |       '@swc/counter': 0.1.3
4976 | 
4977 |   '@tanstack/query-core@5.64.1': {}
4978 | 
4979 |   '@tanstack/query-devtools@5.62.16': {}
4980 | 
4981 |   '@tanstack/react-query-devtools@5.64.1(@tanstack/react-query@5.64.1(react@18.3.1))(react@18.3.1)':
4982 |     dependencies:
4983 |       '@tanstack/query-devtools': 5.62.16
4984 |       '@tanstack/react-query': 5.64.1(react@18.3.1)
4985 |       react: 18.3.1
4986 | 
4987 |   '@tanstack/react-query@5.64.1(react@18.3.1)':
4988 |     dependencies:
4989 |       '@tanstack/query-core': 5.64.1
4990 |       react: 18.3.1
4991 | 
4992 |   '@tanstack/react-virtual@3.11.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
4993 |     dependencies:
4994 |       '@tanstack/virtual-core': 3.11.2
4995 |       react: 18.3.1
4996 |       react-dom: 18.3.1(react@18.3.1)
4997 | 
4998 |   '@tanstack/virtual-core@3.11.2': {}
4999 | 
5000 |   '@testing-library/dom@9.3.4':
5001 |     dependencies:
5002 |       '@babel/code-frame': 7.26.2
5003 |       '@babel/runtime': 7.26.0
5004 |       '@types/aria-query': 5.0.4
5005 |       aria-query: 5.1.3
5006 |       chalk: 4.1.2
5007 |       dom-accessibility-api: 0.5.16
5008 |       lz-string: 1.5.0
5009 |       pretty-format: 27.5.1
5010 | 
5011 |   '@testing-library/jest-dom@6.6.3':
5012 |     dependencies:
5013 |       '@adobe/css-tools': 4.4.1
5014 |       aria-query: 5.3.2
5015 |       chalk: 3.0.0
5016 |       css.escape: 1.5.1
5017 |       dom-accessibility-api: 0.6.3
5018 |       lodash: 4.17.21
5019 |       redent: 3.0.0
5020 | 
5021 |   '@testing-library/react@14.3.1(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
5022 |     dependencies:
5023 |       '@babel/runtime': 7.26.0
5024 |       '@testing-library/dom': 9.3.4
5025 |       '@types/react-dom': 18.3.5(@types/react@18.3.18)
5026 |       react: 18.3.1
5027 |       react-dom: 18.3.1(react@18.3.1)
5028 |     transitivePeerDependencies:
5029 |       - '@types/react'
5030 | 
5031 |   '@testing-library/user-event@14.5.2(@testing-library/dom@9.3.4)':
5032 |     dependencies:
5033 |       '@testing-library/dom': 9.3.4
5034 | 
5035 |   '@tsconfig/node10@1.0.11':
5036 |     optional: true
5037 | 
5038 |   '@tsconfig/node12@1.0.11':
5039 |     optional: true
5040 | 
5041 |   '@tsconfig/node14@1.0.3':
5042 |     optional: true
5043 | 
5044 |   '@tsconfig/node16@1.0.4':
5045 |     optional: true
5046 | 
5047 |   '@types/aria-query@5.0.4': {}
5048 | 
5049 |   '@types/babel__core@7.20.5':
5050 |     dependencies:
5051 |       '@babel/parser': 7.26.5
5052 |       '@babel/types': 7.26.5
5053 |       '@types/babel__generator': 7.6.8
5054 |       '@types/babel__template': 7.4.4
5055 |       '@types/babel__traverse': 7.20.6
5056 | 
5057 |   '@types/babel__generator@7.6.8':
5058 |     dependencies:
5059 |       '@babel/types': 7.26.5
5060 | 
5061 |   '@types/babel__template@7.4.4':
5062 |     dependencies:
5063 |       '@babel/parser': 7.26.5
5064 |       '@babel/types': 7.26.5
5065 | 
5066 |   '@types/babel__traverse@7.20.6':
5067 |     dependencies:
5068 |       '@babel/types': 7.26.5
5069 | 
5070 |   '@types/bcryptjs@2.4.6': {}
5071 | 
5072 |   '@types/body-parser@1.19.5':
5073 |     dependencies:
5074 |       '@types/connect': 3.4.38
5075 |       '@types/node': 20.17.12
5076 | 
5077 |   '@types/connect@3.4.38':
5078 |     dependencies:
5079 |       '@types/node': 20.17.12
5080 | 
5081 |   '@types/cookiejar@2.1.5': {}
5082 | 
5083 |   '@types/cors@2.8.17':
5084 |     dependencies:
5085 |       '@types/node': 20.17.12
5086 | 
5087 |   '@types/estree@1.0.6': {}
5088 | 
5089 |   '@types/express-serve-static-core@4.19.6':
5090 |     dependencies:
5091 |       '@types/node': 20.17.12
5092 |       '@types/qs': 6.9.17
5093 |       '@types/range-parser': 1.2.7
5094 |       '@types/send': 0.17.4
5095 | 
5096 |   '@types/express@4.17.21':
5097 |     dependencies:
5098 |       '@types/body-parser': 1.19.5
5099 |       '@types/express-serve-static-core': 4.19.6
5100 |       '@types/qs': 6.9.17
5101 |       '@types/serve-static': 1.15.7
5102 | 
5103 |   '@types/google.maps@3.58.1': {}
5104 | 
5105 |   '@types/graceful-fs@4.1.9':
5106 |     dependencies:
5107 |       '@types/node': 20.17.12
5108 | 
5109 |   '@types/http-errors@2.0.4': {}
5110 | 
5111 |   '@types/istanbul-lib-coverage@2.0.6': {}
5112 | 
5113 |   '@types/istanbul-lib-report@3.0.3':
5114 |     dependencies:
5115 |       '@types/istanbul-lib-coverage': 2.0.6
5116 | 
5117 |   '@types/istanbul-reports@3.0.4':
5118 |     dependencies:
5119 |       '@types/istanbul-lib-report': 3.0.3
5120 | 
5121 |   '@types/jest@29.5.14':
5122 |     dependencies:
5123 |       expect: 29.7.0
5124 |       pretty-format: 29.7.0
5125 | 
5126 |   '@types/json-schema@7.0.15': {}
5127 | 
5128 |   '@types/jsonwebtoken@9.0.7':
5129 |     dependencies:
5130 |       '@types/node': 20.17.12
5131 | 
5132 |   '@types/methods@1.1.4': {}
5133 | 
5134 |   '@types/mime@1.3.5': {}
5135 | 
5136 |   '@types/morgan@1.9.9':
5137 |     dependencies:
5138 |       '@types/node': 20.17.12
5139 | 
5140 |   '@types/multer@1.4.12':
5141 |     dependencies:
5142 |       '@types/express': 4.17.21
5143 | 
5144 |   '@types/node@20.17.12':
5145 |     dependencies:
5146 |       undici-types: 6.19.8
5147 | 
5148 |   '@types/nodemailer@6.4.17':
5149 |     dependencies:
5150 |       '@types/node': 20.17.12
5151 | 
5152 |   '@types/prop-types@15.7.14': {}
5153 | 
5154 |   '@types/qs@6.9.17': {}
5155 | 
5156 |   '@types/range-parser@1.2.7': {}
5157 | 
5158 |   '@types/react-dom@18.3.5(@types/react@18.3.18)':
5159 |     dependencies:
5160 |       '@types/react': 18.3.18
5161 | 
5162 |   '@types/react-transition-group@4.4.12(@types/react@18.3.18)':
5163 |     dependencies:
5164 |       '@types/react': 18.3.18
5165 | 
5166 |   '@types/react@18.3.18':
5167 |     dependencies:
5168 |       '@types/prop-types': 15.7.14
5169 |       csstype: 3.1.3
5170 | 
5171 |   '@types/semver@7.5.8': {}
5172 | 
5173 |   '@types/send@0.17.4':
5174 |     dependencies:
5175 |       '@types/mime': 1.3.5
5176 |       '@types/node': 20.17.12
5177 | 
5178 |   '@types/serve-static@1.15.7':
5179 |     dependencies:
5180 |       '@types/http-errors': 2.0.4
5181 |       '@types/node': 20.17.12
5182 |       '@types/send': 0.17.4
5183 | 
5184 |   '@types/stack-utils@2.0.3': {}
5185 | 
5186 |   '@types/superagent@8.1.9':
5187 |     dependencies:
5188 |       '@types/cookiejar': 2.1.5
5189 |       '@types/methods': 1.1.4
5190 |       '@types/node': 20.17.12
5191 |       form-data: 4.0.1
5192 | 
5193 |   '@types/supertest@6.0.2':
5194 |     dependencies:
5195 |       '@types/methods': 1.1.4
5196 |       '@types/superagent': 8.1.9
5197 | 
5198 |   '@types/triple-beam@1.3.5': {}
5199 | 
5200 |   '@types/yargs-parser@21.0.3': {}
5201 | 
5202 |   '@types/yargs@17.0.33':
5203 |     dependencies:
5204 |       '@types/yargs-parser': 21.0.3
5205 | 
5206 |   '@typescript-eslint/eslint-plugin@6.21.0(@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3))(eslint@8.57.1)(typescript@5.7.3)':
5207 |     dependencies:
5208 |       '@eslint-community/regexpp': 4.12.1
5209 |       '@typescript-eslint/parser': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5210 |       '@typescript-eslint/scope-manager': 6.21.0
5211 |       '@typescript-eslint/type-utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5212 |       '@typescript-eslint/utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5213 |       '@typescript-eslint/visitor-keys': 6.21.0
5214 |       debug: 4.4.0
5215 |       eslint: 8.57.1
5216 |       graphemer: 1.4.0
5217 |       ignore: 5.3.2
5218 |       natural-compare: 1.4.0
5219 |       semver: 7.6.3
5220 |       ts-api-utils: 1.4.3(typescript@5.7.3)
5221 |     optionalDependencies:
5222 |       typescript: 5.7.3
5223 |     transitivePeerDependencies:
5224 |       - supports-color
5225 | 
5226 |   '@typescript-eslint/parser@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
5227 |     dependencies:
5228 |       '@typescript-eslint/scope-manager': 6.21.0
5229 |       '@typescript-eslint/types': 6.21.0
5230 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
5231 |       '@typescript-eslint/visitor-keys': 6.21.0
5232 |       debug: 4.4.0
5233 |       eslint: 8.57.1
5234 |     optionalDependencies:
5235 |       typescript: 5.7.3
5236 |     transitivePeerDependencies:
5237 |       - supports-color
5238 | 
5239 |   '@typescript-eslint/scope-manager@6.21.0':
5240 |     dependencies:
5241 |       '@typescript-eslint/types': 6.21.0
5242 |       '@typescript-eslint/visitor-keys': 6.21.0
5243 | 
5244 |   '@typescript-eslint/type-utils@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
5245 |     dependencies:
5246 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
5247 |       '@typescript-eslint/utils': 6.21.0(eslint@8.57.1)(typescript@5.7.3)
5248 |       debug: 4.4.0
5249 |       eslint: 8.57.1
5250 |       ts-api-utils: 1.4.3(typescript@5.7.3)
5251 |     optionalDependencies:
5252 |       typescript: 5.7.3
5253 |     transitivePeerDependencies:
5254 |       - supports-color
5255 | 
5256 |   '@typescript-eslint/types@6.21.0': {}
5257 | 
5258 |   '@typescript-eslint/typescript-estree@6.21.0(typescript@5.7.3)':
5259 |     dependencies:
5260 |       '@typescript-eslint/types': 6.21.0
5261 |       '@typescript-eslint/visitor-keys': 6.21.0
5262 |       debug: 4.4.0
5263 |       globby: 11.1.0
5264 |       is-glob: 4.0.3
5265 |       minimatch: 9.0.3
5266 |       semver: 7.6.3
5267 |       ts-api-utils: 1.4.3(typescript@5.7.3)
5268 |     optionalDependencies:
5269 |       typescript: 5.7.3
5270 |     transitivePeerDependencies:
5271 |       - supports-color
5272 | 
5273 |   '@typescript-eslint/utils@6.21.0(eslint@8.57.1)(typescript@5.7.3)':
5274 |     dependencies:
5275 |       '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
5276 |       '@types/json-schema': 7.0.15
5277 |       '@types/semver': 7.5.8
5278 |       '@typescript-eslint/scope-manager': 6.21.0
5279 |       '@typescript-eslint/types': 6.21.0
5280 |       '@typescript-eslint/typescript-estree': 6.21.0(typescript@5.7.3)
5281 |       eslint: 8.57.1
5282 |       semver: 7.6.3
5283 |     transitivePeerDependencies:
5284 |       - supports-color
5285 |       - typescript
5286 | 
5287 |   '@typescript-eslint/visitor-keys@6.21.0':
5288 |     dependencies:
5289 |       '@typescript-eslint/types': 6.21.0
5290 |       eslint-visitor-keys: 3.4.3
5291 | 
5292 |   '@ungap/structured-clone@1.2.1': {}
5293 | 
5294 |   '@vitejs/plugin-react-swc@3.7.2(vite@5.4.11(@types/node@20.17.12))':
5295 |     dependencies:
5296 |       '@swc/core': 1.10.7
5297 |       vite: 5.4.11(@types/node@20.17.12)
5298 |     transitivePeerDependencies:
5299 |       - '@swc/helpers'
5300 | 
5301 |   '@vitejs/plugin-react@4.3.4(vite@5.4.11(@types/node@20.17.12))':
5302 |     dependencies:
5303 |       '@babel/core': 7.26.0
5304 |       '@babel/plugin-transform-react-jsx-self': 7.25.9(@babel/core@7.26.0)
5305 |       '@babel/plugin-transform-react-jsx-source': 7.25.9(@babel/core@7.26.0)
5306 |       '@types/babel__core': 7.20.5
5307 |       react-refresh: 0.14.2
5308 |       vite: 5.4.11(@types/node@20.17.12)
5309 |     transitivePeerDependencies:
5310 |       - supports-color
5311 | 
5312 |   '@vitest/coverage-v8@1.6.0(vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3))':
5313 |     dependencies:
5314 |       '@ampproject/remapping': 2.3.0
5315 |       '@bcoe/v8-coverage': 0.2.3
5316 |       debug: 4.4.0
5317 |       istanbul-lib-coverage: 3.2.2
5318 |       istanbul-lib-report: 3.0.1
5319 |       istanbul-lib-source-maps: 5.0.6
5320 |       istanbul-reports: 3.1.7
5321 |       magic-string: 0.30.17
5322 |       magicast: 0.3.5
5323 |       picocolors: 1.1.1
5324 |       std-env: 3.8.0
5325 |       strip-literal: 2.1.1
5326 |       test-exclude: 6.0.0
5327 |       vitest: 1.6.0(@types/node@20.17.12)(happy-dom@12.10.3)
5328 |     transitivePeerDependencies:
5329 |       - supports-color
5330 | 
5331 |   '@vitest/expect@1.6.0':
5332 |     dependencies:
5333 |       '@vitest/spy': 1.6.0
5334 |       '@vitest/utils': 1.6.0
5335 |       chai: 4.5.0
5336 | 
5337 |   '@vitest/runner@1.6.0':
5338 |     dependencies:
5339 |       '@vitest/utils': 1.6.0
5340 |       p-limit: 5.0.0
5341 |       pathe: 1.1.2
5342 | 
5343 |   '@vitest/snapshot@1.6.0':
5344 |     dependencies:
5345 |       magic-string: 0.30.17
5346 |       pathe: 1.1.2
5347 |       pretty-format: 29.7.0
5348 | 
5349 |   '@vitest/spy@1.6.0':
5350 |     dependencies:
5351 |       tinyspy: 2.2.1
5352 | 
5353 |   '@vitest/utils@1.6.0':
5354 |     dependencies:
5355 |       diff-sequences: 29.6.3
5356 |       estree-walker: 3.0.3
5357 |       loupe: 2.3.7
5358 |       pretty-format: 29.7.0
5359 | 
5360 |   accepts@1.3.8:
5361 |     dependencies:
5362 |       mime-types: 2.1.35
5363 |       negotiator: 0.6.3
5364 | 
5365 |   acorn-jsx@5.3.2(acorn@8.14.0):
5366 |     dependencies:
5367 |       acorn: 8.14.0
5368 | 
5369 |   acorn-walk@8.3.4:
5370 |     dependencies:
5371 |       acorn: 8.14.0
5372 | 
5373 |   acorn@8.14.0: {}
5374 | 
5375 |   ajv@6.12.6:
5376 |     dependencies:
5377 |       fast-deep-equal: 3.1.3
5378 |       fast-json-stable-stringify: 2.1.0
5379 |       json-schema-traverse: 0.4.1
5380 |       uri-js: 4.4.1
5381 | 
5382 |   ansi-escapes@4.3.2:
5383 |     dependencies:
5384 |       type-fest: 0.21.3
5385 | 
5386 |   ansi-regex@5.0.1: {}
5387 | 
5388 |   ansi-regex@6.1.0: {}
5389 | 
5390 |   ansi-styles@4.3.0:
5391 |     dependencies:
5392 |       color-convert: 2.0.1
5393 | 
5394 |   ansi-styles@5.2.0: {}
5395 | 
5396 |   ansi-styles@6.2.1: {}
5397 | 
5398 |   any-promise@1.3.0: {}
5399 | 
5400 |   anymatch@3.1.3:
5401 |     dependencies:
5402 |       normalize-path: 3.0.0
5403 |       picomatch: 2.3.1
5404 | 
5405 |   append-field@1.0.0: {}
5406 | 
5407 |   arg@4.1.3:
5408 |     optional: true
5409 | 
5410 |   arg@5.0.2: {}
5411 | 
5412 |   argparse@1.0.10:
5413 |     dependencies:
5414 |       sprintf-js: 1.0.3
5415 | 
5416 |   argparse@2.0.1: {}
5417 | 
5418 |   aria-query@5.1.3:
5419 |     dependencies:
5420 |       deep-equal: 2.2.3
5421 | 
5422 |   aria-query@5.3.2: {}
5423 | 
5424 |   array-buffer-byte-length@1.0.2:
5425 |     dependencies:
5426 |       call-bound: 1.0.3
5427 |       is-array-buffer: 3.0.5
5428 | 
5429 |   array-flatten@1.1.1: {}
5430 | 
5431 |   array-union@2.1.0: {}
5432 | 
5433 |   asap@2.0.6: {}
5434 | 
5435 |   assertion-error@1.1.0: {}
5436 | 
5437 |   async@3.2.6: {}
5438 | 
5439 |   asynckit@0.4.0: {}
5440 | 
5441 |   autoprefixer@10.4.20(postcss@8.4.49):
5442 |     dependencies:
5443 |       browserslist: 4.24.4
5444 |       caniuse-lite: 1.0.30001692
5445 |       fraction.js: 4.3.7
5446 |       normalize-range: 0.1.2
5447 |       picocolors: 1.1.1
5448 |       postcss: 8.4.49
5449 |       postcss-value-parser: 4.2.0
5450 | 
5451 |   available-typed-arrays@1.0.7:
5452 |     dependencies:
5453 |       possible-typed-array-names: 1.0.0
5454 | 
5455 |   axios@1.7.9:
5456 |     dependencies:
5457 |       follow-redirects: 1.15.9
5458 |       form-data: 4.0.1
5459 |       proxy-from-env: 1.1.0
5460 |     transitivePeerDependencies:
5461 |       - debug
5462 | 
5463 |   babel-jest@29.7.0(@babel/core@7.26.0):
5464 |     dependencies:
5465 |       '@babel/core': 7.26.0
5466 |       '@jest/transform': 29.7.0
5467 |       '@types/babel__core': 7.20.5
5468 |       babel-plugin-istanbul: 6.1.1
5469 |       babel-preset-jest: 29.6.3(@babel/core@7.26.0)
5470 |       chalk: 4.1.2
5471 |       graceful-fs: 4.2.11
5472 |       slash: 3.0.0
5473 |     transitivePeerDependencies:
5474 |       - supports-color
5475 | 
5476 |   babel-plugin-istanbul@6.1.1:
5477 |     dependencies:
5478 |       '@babel/helper-plugin-utils': 7.26.5
5479 |       '@istanbuljs/load-nyc-config': 1.1.0
5480 |       '@istanbuljs/schema': 0.1.3
5481 |       istanbul-lib-instrument: 5.2.1
5482 |       test-exclude: 6.0.0
5483 |     transitivePeerDependencies:
5484 |       - supports-color
5485 | 
5486 |   babel-plugin-jest-hoist@29.6.3:
5487 |     dependencies:
5488 |       '@babel/template': 7.25.9
5489 |       '@babel/types': 7.26.5
5490 |       '@types/babel__core': 7.20.5
5491 |       '@types/babel__traverse': 7.20.6
5492 | 
5493 |   babel-preset-current-node-syntax@1.1.0(@babel/core@7.26.0):
5494 |     dependencies:
5495 |       '@babel/core': 7.26.0
5496 |       '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.26.0)
5497 |       '@babel/plugin-syntax-bigint': 7.8.3(@babel/core@7.26.0)
5498 |       '@babel/plugin-syntax-class-properties': 7.12.13(@babel/core@7.26.0)
5499 |       '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.26.0)
5500 |       '@babel/plugin-syntax-import-attributes': 7.26.0(@babel/core@7.26.0)
5501 |       '@babel/plugin-syntax-import-meta': 7.10.4(@babel/core@7.26.0)
5502 |       '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.26.0)
5503 |       '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.26.0)
5504 |       '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.26.0)
5505 |       '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.26.0)
5506 |       '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.26.0)
5507 |       '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.26.0)
5508 |       '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.26.0)
5509 |       '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.26.0)
5510 |       '@babel/plugin-syntax-top-level-await': 7.14.5(@babel/core@7.26.0)
5511 | 
5512 |   babel-preset-jest@29.6.3(@babel/core@7.26.0):
5513 |     dependencies:
5514 |       '@babel/core': 7.26.0
5515 |       babel-plugin-jest-hoist: 29.6.3
5516 |       babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.0)
5517 | 
5518 |   balanced-match@1.0.2: {}
5519 | 
5520 |   basic-auth@2.0.1:
5521 |     dependencies:
5522 |       safe-buffer: 5.1.2
5523 | 
5524 |   bcryptjs@2.4.3: {}
5525 | 
5526 |   binary-extensions@2.3.0: {}
5527 | 
5528 |   body-parser@1.20.3:
5529 |     dependencies:
5530 |       bytes: 3.1.2
5531 |       content-type: 1.0.5
5532 |       debug: 2.6.9
5533 |       depd: 2.0.0
5534 |       destroy: 1.2.0
5535 |       http-errors: 2.0.0
5536 |       iconv-lite: 0.4.24
5537 |       on-finished: 2.4.1
5538 |       qs: 6.13.0
5539 |       raw-body: 2.5.2
5540 |       type-is: 1.6.18
5541 |       unpipe: 1.0.0
5542 |     transitivePeerDependencies:
5543 |       - supports-color
5544 | 
5545 |   brace-expansion@1.1.11:
5546 |     dependencies:
5547 |       balanced-match: 1.0.2
5548 |       concat-map: 0.0.1
5549 | 
5550 |   brace-expansion@2.0.1:
5551 |     dependencies:
5552 |       balanced-match: 1.0.2
5553 | 
5554 |   braces@3.0.3:
5555 |     dependencies:
5556 |       fill-range: 7.1.1
5557 | 
5558 |   browserslist@4.24.4:
5559 |     dependencies:
5560 |       caniuse-lite: 1.0.30001692
5561 |       electron-to-chromium: 1.5.80
5562 |       node-releases: 2.0.19
5563 |       update-browserslist-db: 1.1.2(browserslist@4.24.4)
5564 | 
5565 |   bs-logger@0.2.6:
5566 |     dependencies:
5567 |       fast-json-stable-stringify: 2.1.0
5568 | 
5569 |   bser@2.1.1:
5570 |     dependencies:
5571 |       node-int64: 0.4.0
5572 | 
5573 |   buffer-equal-constant-time@1.0.1: {}
5574 | 
5575 |   buffer-from@1.1.2: {}
5576 | 
5577 |   bundle-require@5.1.0(esbuild@0.24.2):
5578 |     dependencies:
5579 |       esbuild: 0.24.2
5580 |       load-tsconfig: 0.2.5
5581 | 
5582 |   busboy@1.6.0:
5583 |     dependencies:
5584 |       streamsearch: 1.1.0
5585 | 
5586 |   bytes@3.1.2: {}
5587 | 
5588 |   cac@6.7.14: {}
5589 | 
5590 |   call-bind-apply-helpers@1.0.1:
5591 |     dependencies:
5592 |       es-errors: 1.3.0
5593 |       function-bind: 1.1.2
5594 | 
5595 |   call-bind@1.0.8:
5596 |     dependencies:
5597 |       call-bind-apply-helpers: 1.0.1
5598 |       es-define-property: 1.0.1
5599 |       get-intrinsic: 1.2.7
5600 |       set-function-length: 1.2.2
5601 | 
5602 |   call-bound@1.0.3:
5603 |     dependencies:
5604 |       call-bind-apply-helpers: 1.0.1
5605 |       get-intrinsic: 1.2.7
5606 | 
5607 |   callsites@3.1.0: {}
5608 | 
5609 |   camelcase-css@2.0.1: {}
5610 | 
5611 |   camelcase@5.3.1: {}
5612 | 
5613 |   camelcase@6.3.0: {}
5614 | 
5615 |   caniuse-lite@1.0.30001692: {}
5616 | 
5617 |   chai@4.5.0:
5618 |     dependencies:
5619 |       assertion-error: 1.1.0
5620 |       check-error: 1.0.3
5621 |       deep-eql: 4.1.4
5622 |       get-func-name: 2.0.2
5623 |       loupe: 2.3.7
5624 |       pathval: 1.1.1
5625 |       type-detect: 4.1.0
5626 | 
5627 |   chalk@3.0.0:
5628 |     dependencies:
5629 |       ansi-styles: 4.3.0
5630 |       supports-color: 7.2.0
5631 | 
5632 |   chalk@4.1.2:
5633 |     dependencies:
5634 |       ansi-styles: 4.3.0
5635 |       supports-color: 7.2.0
5636 | 
5637 |   char-regex@1.0.2: {}
5638 | 
5639 |   check-error@1.0.3:
5640 |     dependencies:
5641 |       get-func-name: 2.0.2
5642 | 
5643 |   chokidar@3.6.0:
5644 |     dependencies:
5645 |       anymatch: 3.1.3
5646 |       braces: 3.0.3
5647 |       glob-parent: 5.1.2
5648 |       is-binary-path: 2.1.0
5649 |       is-glob: 4.0.3
5650 |       normalize-path: 3.0.0
5651 |       readdirp: 3.6.0
5652 |     optionalDependencies:
5653 |       fsevents: 2.3.3
5654 | 
5655 |   chokidar@4.0.3:
5656 |     dependencies:
5657 |       readdirp: 4.1.1
5658 | 
5659 |   ci-info@3.9.0: {}
5660 | 
5661 |   cjs-module-lexer@1.4.1: {}
5662 | 
5663 |   client-only@0.0.1: {}
5664 | 
5665 |   cliui@8.0.1:
5666 |     dependencies:
5667 |       string-width: 4.2.3
5668 |       strip-ansi: 6.0.1
5669 |       wrap-ansi: 7.0.0
5670 | 
5671 |   clsx@2.1.1: {}
5672 | 
5673 |   co@4.6.0: {}
5674 | 
5675 |   collect-v8-coverage@1.0.2: {}
5676 | 
5677 |   color-convert@1.9.3:
5678 |     dependencies:
5679 |       color-name: 1.1.3
5680 | 
5681 |   color-convert@2.0.1:
5682 |     dependencies:
5683 |       color-name: 1.1.4
5684 | 
5685 |   color-name@1.1.3: {}
5686 | 
5687 |   color-name@1.1.4: {}
5688 | 
5689 |   color-string@1.9.1:
5690 |     dependencies:
5691 |       color-name: 1.1.4
5692 |       simple-swizzle: 0.2.2
5693 | 
5694 |   color@3.2.1:
5695 |     dependencies:
5696 |       color-convert: 1.9.3
5697 |       color-string: 1.9.1
5698 | 
5699 |   colorspace@1.1.4:
5700 |     dependencies:
5701 |       color: 3.2.1
5702 |       text-hex: 1.0.0
5703 | 
5704 |   combined-stream@1.0.8:
5705 |     dependencies:
5706 |       delayed-stream: 1.0.0
5707 | 
5708 |   commander@4.1.1: {}
5709 | 
5710 |   component-emitter@1.3.1: {}
5711 | 
5712 |   concat-map@0.0.1: {}
5713 | 
5714 |   concat-stream@1.6.2:
5715 |     dependencies:
5716 |       buffer-from: 1.1.2
5717 |       inherits: 2.0.4
5718 |       readable-stream: 2.3.8
5719 |       typedarray: 0.0.6
5720 | 
5721 |   confbox@0.1.8: {}
5722 | 
5723 |   consola@3.4.0: {}
5724 | 
5725 |   content-disposition@0.5.4:
5726 |     dependencies:
5727 |       safe-buffer: 5.2.1
5728 | 
5729 |   content-type@1.0.5: {}
5730 | 
5731 |   convert-source-map@2.0.0: {}
5732 | 
5733 |   cookie-signature@1.0.6: {}
5734 | 
5735 |   cookie@0.7.1: {}
5736 | 
5737 |   cookiejar@2.1.4: {}
5738 | 
5739 |   core-util-is@1.0.3: {}
5740 | 
5741 |   cors@2.8.5:
5742 |     dependencies:
5743 |       object-assign: 4.1.1
5744 |       vary: 1.1.2
5745 | 
5746 |   create-jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
5747 |     dependencies:
5748 |       '@jest/types': 29.6.3
5749 |       chalk: 4.1.2
5750 |       exit: 0.1.2
5751 |       graceful-fs: 4.2.11
5752 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
5753 |       jest-util: 29.7.0
5754 |       prompts: 2.4.2
5755 |     transitivePeerDependencies:
5756 |       - '@types/node'
5757 |       - babel-plugin-macros
5758 |       - supports-color
5759 |       - ts-node
5760 | 
5761 |   create-require@1.1.1:
5762 |     optional: true
5763 | 
5764 |   cross-env@7.0.3:
5765 |     dependencies:
5766 |       cross-spawn: 7.0.6
5767 | 
5768 |   cross-spawn@7.0.6:
5769 |     dependencies:
5770 |       path-key: 3.1.1
5771 |       shebang-command: 2.0.0
5772 |       which: 2.0.2
5773 | 
5774 |   css.escape@1.5.1: {}
5775 | 
5776 |   cssesc@3.0.0: {}
5777 | 
5778 |   csstype@3.1.3: {}
5779 | 
5780 |   debug@2.6.9:
5781 |     dependencies:
5782 |       ms: 2.0.0
5783 | 
5784 |   debug@4.4.0:
5785 |     dependencies:
5786 |       ms: 2.1.3
5787 | 
5788 |   dedent@1.5.3: {}
5789 | 
5790 |   deep-eql@4.1.4:
5791 |     dependencies:
5792 |       type-detect: 4.1.0
5793 | 
5794 |   deep-equal@2.2.3:
5795 |     dependencies:
5796 |       array-buffer-byte-length: 1.0.2
5797 |       call-bind: 1.0.8
5798 |       es-get-iterator: 1.1.3
5799 |       get-intrinsic: 1.2.7
5800 |       is-arguments: 1.2.0
5801 |       is-array-buffer: 3.0.5
5802 |       is-date-object: 1.1.0
5803 |       is-regex: 1.2.1
5804 |       is-shared-array-buffer: 1.0.4
5805 |       isarray: 2.0.5
5806 |       object-is: 1.1.6
5807 |       object-keys: 1.1.1
5808 |       object.assign: 4.1.7
5809 |       regexp.prototype.flags: 1.5.4
5810 |       side-channel: 1.1.0
5811 |       which-boxed-primitive: 1.1.1
5812 |       which-collection: 1.0.2
5813 |       which-typed-array: 1.1.18
5814 | 
5815 |   deep-is@0.1.4: {}
5816 | 
5817 |   deepmerge@4.3.1: {}
5818 | 
5819 |   define-data-property@1.1.4:
5820 |     dependencies:
5821 |       es-define-property: 1.0.1
5822 |       es-errors: 1.3.0
5823 |       gopd: 1.2.0
5824 | 
5825 |   define-properties@1.2.1:
5826 |     dependencies:
5827 |       define-data-property: 1.1.4
5828 |       has-property-descriptors: 1.0.2
5829 |       object-keys: 1.1.1
5830 | 
5831 |   delayed-stream@1.0.0: {}
5832 | 
5833 |   depd@2.0.0: {}
5834 | 
5835 |   destroy@1.2.0: {}
5836 | 
5837 |   detect-newline@3.1.0: {}
5838 | 
5839 |   dezalgo@1.0.4:
5840 |     dependencies:
5841 |       asap: 2.0.6
5842 |       wrappy: 1.0.2
5843 | 
5844 |   didyoumean@1.2.2: {}
5845 | 
5846 |   diff-sequences@29.6.3: {}
5847 | 
5848 |   diff@4.0.2:
5849 |     optional: true
5850 | 
5851 |   dir-glob@3.0.1:
5852 |     dependencies:
5853 |       path-type: 4.0.0
5854 | 
5855 |   dlv@1.1.3: {}
5856 | 
5857 |   doctrine@3.0.0:
5858 |     dependencies:
5859 |       esutils: 2.0.3
5860 | 
5861 |   dom-accessibility-api@0.5.16: {}
5862 | 
5863 |   dom-accessibility-api@0.6.3: {}
5864 | 
5865 |   dom-helpers@5.2.1:
5866 |     dependencies:
5867 |       '@babel/runtime': 7.26.0
5868 |       csstype: 3.1.3
5869 | 
5870 |   dotenv@16.4.7: {}
5871 | 
5872 |   dunder-proto@1.0.1:
5873 |     dependencies:
5874 |       call-bind-apply-helpers: 1.0.1
5875 |       es-errors: 1.3.0
5876 |       gopd: 1.2.0
5877 | 
5878 |   eastasianwidth@0.2.0: {}
5879 | 
5880 |   ecdsa-sig-formatter@1.0.11:
5881 |     dependencies:
5882 |       safe-buffer: 5.2.1
5883 | 
5884 |   ee-first@1.1.1: {}
5885 | 
5886 |   ejs@3.1.10:
5887 |     dependencies:
5888 |       jake: 10.9.2
5889 | 
5890 |   electron-to-chromium@1.5.80: {}
5891 | 
5892 |   emittery@0.13.1: {}
5893 | 
5894 |   emoji-regex@8.0.0: {}
5895 | 
5896 |   emoji-regex@9.2.2: {}
5897 | 
5898 |   enabled@2.0.0: {}
5899 | 
5900 |   encodeurl@1.0.2: {}
5901 | 
5902 |   encodeurl@2.0.0: {}
5903 | 
5904 |   entities@4.5.0: {}
5905 | 
5906 |   error-ex@1.3.2:
5907 |     dependencies:
5908 |       is-arrayish: 0.2.1
5909 | 
5910 |   es-define-property@1.0.1: {}
5911 | 
5912 |   es-errors@1.3.0: {}
5913 | 
5914 |   es-get-iterator@1.1.3:
5915 |     dependencies:
5916 |       call-bind: 1.0.8
5917 |       get-intrinsic: 1.2.7
5918 |       has-symbols: 1.1.0
5919 |       is-arguments: 1.2.0
5920 |       is-map: 2.0.3
5921 |       is-set: 2.0.3
5922 |       is-string: 1.1.1
5923 |       isarray: 2.0.5
5924 |       stop-iteration-iterator: 1.1.0
5925 | 
5926 |   es-object-atoms@1.0.0:
5927 |     dependencies:
5928 |       es-errors: 1.3.0
5929 | 
5930 |   esbuild@0.21.5:
5931 |     optionalDependencies:
5932 |       '@esbuild/aix-ppc64': 0.21.5
5933 |       '@esbuild/android-arm': 0.21.5
5934 |       '@esbuild/android-arm64': 0.21.5
5935 |       '@esbuild/android-x64': 0.21.5
5936 |       '@esbuild/darwin-arm64': 0.21.5
5937 |       '@esbuild/darwin-x64': 0.21.5
5938 |       '@esbuild/freebsd-arm64': 0.21.5
5939 |       '@esbuild/freebsd-x64': 0.21.5
5940 |       '@esbuild/linux-arm': 0.21.5
5941 |       '@esbuild/linux-arm64': 0.21.5
5942 |       '@esbuild/linux-ia32': 0.21.5
5943 |       '@esbuild/linux-loong64': 0.21.5
5944 |       '@esbuild/linux-mips64el': 0.21.5
5945 |       '@esbuild/linux-ppc64': 0.21.5
5946 |       '@esbuild/linux-riscv64': 0.21.5
5947 |       '@esbuild/linux-s390x': 0.21.5
5948 |       '@esbuild/linux-x64': 0.21.5
5949 |       '@esbuild/netbsd-x64': 0.21.5
5950 |       '@esbuild/openbsd-x64': 0.21.5
5951 |       '@esbuild/sunos-x64': 0.21.5
5952 |       '@esbuild/win32-arm64': 0.21.5
5953 |       '@esbuild/win32-ia32': 0.21.5
5954 |       '@esbuild/win32-x64': 0.21.5
5955 | 
5956 |   esbuild@0.23.1:
5957 |     optionalDependencies:
5958 |       '@esbuild/aix-ppc64': 0.23.1
5959 |       '@esbuild/android-arm': 0.23.1
5960 |       '@esbuild/android-arm64': 0.23.1
5961 |       '@esbuild/android-x64': 0.23.1
5962 |       '@esbuild/darwin-arm64': 0.23.1
5963 |       '@esbuild/darwin-x64': 0.23.1
5964 |       '@esbuild/freebsd-arm64': 0.23.1
5965 |       '@esbuild/freebsd-x64': 0.23.1
5966 |       '@esbuild/linux-arm': 0.23.1
5967 |       '@esbuild/linux-arm64': 0.23.1
5968 |       '@esbuild/linux-ia32': 0.23.1
5969 |       '@esbuild/linux-loong64': 0.23.1
5970 |       '@esbuild/linux-mips64el': 0.23.1
5971 |       '@esbuild/linux-ppc64': 0.23.1
5972 |       '@esbuild/linux-riscv64': 0.23.1
5973 |       '@esbuild/linux-s390x': 0.23.1
5974 |       '@esbuild/linux-x64': 0.23.1
5975 |       '@esbuild/netbsd-x64': 0.23.1
5976 |       '@esbuild/openbsd-arm64': 0.23.1
5977 |       '@esbuild/openbsd-x64': 0.23.1
5978 |       '@esbuild/sunos-x64': 0.23.1
5979 |       '@esbuild/win32-arm64': 0.23.1
5980 |       '@esbuild/win32-ia32': 0.23.1
5981 |       '@esbuild/win32-x64': 0.23.1
5982 | 
5983 |   esbuild@0.24.2:
5984 |     optionalDependencies:
5985 |       '@esbuild/aix-ppc64': 0.24.2
5986 |       '@esbuild/android-arm': 0.24.2
5987 |       '@esbuild/android-arm64': 0.24.2
5988 |       '@esbuild/android-x64': 0.24.2
5989 |       '@esbuild/darwin-arm64': 0.24.2
5990 |       '@esbuild/darwin-x64': 0.24.2
5991 |       '@esbuild/freebsd-arm64': 0.24.2
5992 |       '@esbuild/freebsd-x64': 0.24.2
5993 |       '@esbuild/linux-arm': 0.24.2
5994 |       '@esbuild/linux-arm64': 0.24.2
5995 |       '@esbuild/linux-ia32': 0.24.2
5996 |       '@esbuild/linux-loong64': 0.24.2
5997 |       '@esbuild/linux-mips64el': 0.24.2
5998 |       '@esbuild/linux-ppc64': 0.24.2
5999 |       '@esbuild/linux-riscv64': 0.24.2
6000 |       '@esbuild/linux-s390x': 0.24.2
6001 |       '@esbuild/linux-x64': 0.24.2
6002 |       '@esbuild/netbsd-arm64': 0.24.2
6003 |       '@esbuild/netbsd-x64': 0.24.2
6004 |       '@esbuild/openbsd-arm64': 0.24.2
6005 |       '@esbuild/openbsd-x64': 0.24.2
6006 |       '@esbuild/sunos-x64': 0.24.2
6007 |       '@esbuild/win32-arm64': 0.24.2
6008 |       '@esbuild/win32-ia32': 0.24.2
6009 |       '@esbuild/win32-x64': 0.24.2
6010 | 
6011 |   escalade@3.2.0: {}
6012 | 
6013 |   escape-html@1.0.3: {}
6014 | 
6015 |   escape-string-regexp@2.0.0: {}
6016 | 
6017 |   escape-string-regexp@4.0.0: {}
6018 | 
6019 |   eslint-config-prettier@9.1.0(eslint@8.57.1):
6020 |     dependencies:
6021 |       eslint: 8.57.1
6022 | 
6023 |   eslint-plugin-react-hooks@4.6.2(eslint@8.57.1):
6024 |     dependencies:
6025 |       eslint: 8.57.1
6026 | 
6027 |   eslint-plugin-react-refresh@0.4.18(eslint@8.57.1):
6028 |     dependencies:
6029 |       eslint: 8.57.1
6030 | 
6031 |   eslint-scope@7.2.2:
6032 |     dependencies:
6033 |       esrecurse: 4.3.0
6034 |       estraverse: 5.3.0
6035 | 
6036 |   eslint-visitor-keys@3.4.3: {}
6037 | 
6038 |   eslint@8.57.1:
6039 |     dependencies:
6040 |       '@eslint-community/eslint-utils': 4.4.1(eslint@8.57.1)
6041 |       '@eslint-community/regexpp': 4.12.1
6042 |       '@eslint/eslintrc': 2.1.4
6043 |       '@eslint/js': 8.57.1
6044 |       '@humanwhocodes/config-array': 0.13.0
6045 |       '@humanwhocodes/module-importer': 1.0.1
6046 |       '@nodelib/fs.walk': 1.2.8
6047 |       '@ungap/structured-clone': 1.2.1
6048 |       ajv: 6.12.6
6049 |       chalk: 4.1.2
6050 |       cross-spawn: 7.0.6
6051 |       debug: 4.4.0
6052 |       doctrine: 3.0.0
6053 |       escape-string-regexp: 4.0.0
6054 |       eslint-scope: 7.2.2
6055 |       eslint-visitor-keys: 3.4.3
6056 |       espree: 9.6.1
6057 |       esquery: 1.6.0
6058 |       esutils: 2.0.3
6059 |       fast-deep-equal: 3.1.3
6060 |       file-entry-cache: 6.0.1
6061 |       find-up: 5.0.0
6062 |       glob-parent: 6.0.2
6063 |       globals: 13.24.0
6064 |       graphemer: 1.4.0
6065 |       ignore: 5.3.2
6066 |       imurmurhash: 0.1.4
6067 |       is-glob: 4.0.3
6068 |       is-path-inside: 3.0.3
6069 |       js-yaml: 4.1.0
6070 |       json-stable-stringify-without-jsonify: 1.0.1
6071 |       levn: 0.4.1
6072 |       lodash.merge: 4.6.2
6073 |       minimatch: 3.1.2
6074 |       natural-compare: 1.4.0
6075 |       optionator: 0.9.4
6076 |       strip-ansi: 6.0.1
6077 |       text-table: 0.2.0
6078 |     transitivePeerDependencies:
6079 |       - supports-color
6080 | 
6081 |   espree@9.6.1:
6082 |     dependencies:
6083 |       acorn: 8.14.0
6084 |       acorn-jsx: 5.3.2(acorn@8.14.0)
6085 |       eslint-visitor-keys: 3.4.3
6086 | 
6087 |   esprima@4.0.1: {}
6088 | 
6089 |   esquery@1.6.0:
6090 |     dependencies:
6091 |       estraverse: 5.3.0
6092 | 
6093 |   esrecurse@4.3.0:
6094 |     dependencies:
6095 |       estraverse: 5.3.0
6096 | 
6097 |   estraverse@5.3.0: {}
6098 | 
6099 |   estree-walker@3.0.3:
6100 |     dependencies:
6101 |       '@types/estree': 1.0.6
6102 | 
6103 |   esutils@2.0.3: {}
6104 | 
6105 |   etag@1.8.1: {}
6106 | 
6107 |   execa@5.1.1:
6108 |     dependencies:
6109 |       cross-spawn: 7.0.6
6110 |       get-stream: 6.0.1
6111 |       human-signals: 2.1.0
6112 |       is-stream: 2.0.1
6113 |       merge-stream: 2.0.0
6114 |       npm-run-path: 4.0.1
6115 |       onetime: 5.1.2
6116 |       signal-exit: 3.0.7
6117 |       strip-final-newline: 2.0.0
6118 | 
6119 |   execa@8.0.1:
6120 |     dependencies:
6121 |       cross-spawn: 7.0.6
6122 |       get-stream: 8.0.1
6123 |       human-signals: 5.0.0
6124 |       is-stream: 3.0.0
6125 |       merge-stream: 2.0.0
6126 |       npm-run-path: 5.3.0
6127 |       onetime: 6.0.0
6128 |       signal-exit: 4.1.0
6129 |       strip-final-newline: 3.0.0
6130 | 
6131 |   exit@0.1.2: {}
6132 | 
6133 |   expect@29.7.0:
6134 |     dependencies:
6135 |       '@jest/expect-utils': 29.7.0
6136 |       jest-get-type: 29.6.3
6137 |       jest-matcher-utils: 29.7.0
6138 |       jest-message-util: 29.7.0
6139 |       jest-util: 29.7.0
6140 | 
6141 |   express-rate-limit@7.5.0(express@4.21.2):
6142 |     dependencies:
6143 |       express: 4.21.2
6144 | 
6145 |   express@4.21.2:
6146 |     dependencies:
6147 |       accepts: 1.3.8
6148 |       array-flatten: 1.1.1
6149 |       body-parser: 1.20.3
6150 |       content-disposition: 0.5.4
6151 |       content-type: 1.0.5
6152 |       cookie: 0.7.1
6153 |       cookie-signature: 1.0.6
6154 |       debug: 2.6.9
6155 |       depd: 2.0.0
6156 |       encodeurl: 2.0.0
6157 |       escape-html: 1.0.3
6158 |       etag: 1.8.1
6159 |       finalhandler: 1.3.1
6160 |       fresh: 0.5.2
6161 |       http-errors: 2.0.0
6162 |       merge-descriptors: 1.0.3
6163 |       methods: 1.1.2
6164 |       on-finished: 2.4.1
6165 |       parseurl: 1.3.3
6166 |       path-to-regexp: 0.1.12
6167 |       proxy-addr: 2.0.7
6168 |       qs: 6.13.0
6169 |       range-parser: 1.2.1
6170 |       safe-buffer: 5.2.1
6171 |       send: 0.19.0
6172 |       serve-static: 1.16.2
6173 |       setprototypeof: 1.2.0
6174 |       statuses: 2.0.1
6175 |       type-is: 1.6.18
6176 |       utils-merge: 1.0.1
6177 |       vary: 1.1.2
6178 |     transitivePeerDependencies:
6179 |       - supports-color
6180 | 
6181 |   fast-deep-equal@3.1.3: {}
6182 | 
6183 |   fast-glob@3.3.3:
6184 |     dependencies:
6185 |       '@nodelib/fs.stat': 2.0.5
6186 |       '@nodelib/fs.walk': 1.2.8
6187 |       glob-parent: 5.1.2
6188 |       merge2: 1.4.1
6189 |       micromatch: 4.0.8
6190 | 
6191 |   fast-json-stable-stringify@2.1.0: {}
6192 | 
6193 |   fast-levenshtein@2.0.6: {}
6194 | 
6195 |   fast-safe-stringify@2.1.1: {}
6196 | 
6197 |   fastq@1.18.0:
6198 |     dependencies:
6199 |       reusify: 1.0.4
6200 | 
6201 |   fb-watchman@2.0.2:
6202 |     dependencies:
6203 |       bser: 2.1.1
6204 | 
6205 |   fdir@6.4.2(picomatch@4.0.2):
6206 |     optionalDependencies:
6207 |       picomatch: 4.0.2
6208 | 
6209 |   fecha@4.2.3: {}
6210 | 
6211 |   file-entry-cache@6.0.1:
6212 |     dependencies:
6213 |       flat-cache: 3.2.0
6214 | 
6215 |   filelist@1.0.4:
6216 |     dependencies:
6217 |       minimatch: 5.1.6
6218 | 
6219 |   fill-range@7.1.1:
6220 |     dependencies:
6221 |       to-regex-range: 5.0.1
6222 | 
6223 |   finalhandler@1.3.1:
6224 |     dependencies:
6225 |       debug: 2.6.9
6226 |       encodeurl: 2.0.0
6227 |       escape-html: 1.0.3
6228 |       on-finished: 2.4.1
6229 |       parseurl: 1.3.3
6230 |       statuses: 2.0.1
6231 |       unpipe: 1.0.0
6232 |     transitivePeerDependencies:
6233 |       - supports-color
6234 | 
6235 |   find-up@4.1.0:
6236 |     dependencies:
6237 |       locate-path: 5.0.0
6238 |       path-exists: 4.0.0
6239 | 
6240 |   find-up@5.0.0:
6241 |     dependencies:
6242 |       locate-path: 6.0.0
6243 |       path-exists: 4.0.0
6244 | 
6245 |   flat-cache@3.2.0:
6246 |     dependencies:
6247 |       flatted: 3.3.2
6248 |       keyv: 4.5.4
6249 |       rimraf: 3.0.2
6250 | 
6251 |   flatted@3.3.2: {}
6252 | 
6253 |   fn.name@1.1.0: {}
6254 | 
6255 |   follow-redirects@1.15.9: {}
6256 | 
6257 |   for-each@0.3.3:
6258 |     dependencies:
6259 |       is-callable: 1.2.7
6260 | 
6261 |   foreground-child@3.3.0:
6262 |     dependencies:
6263 |       cross-spawn: 7.0.6
6264 |       signal-exit: 4.1.0
6265 | 
6266 |   form-data@4.0.1:
6267 |     dependencies:
6268 |       asynckit: 0.4.0
6269 |       combined-stream: 1.0.8
6270 |       mime-types: 2.1.35
6271 | 
6272 |   formidable@3.5.2:
6273 |     dependencies:
6274 |       dezalgo: 1.0.4
6275 |       hexoid: 2.0.0
6276 |       once: 1.4.0
6277 | 
6278 |   forwarded@0.2.0: {}
6279 | 
6280 |   fraction.js@4.3.7: {}
6281 | 
6282 |   fresh@0.5.2: {}
6283 | 
6284 |   fs.realpath@1.0.0: {}
6285 | 
6286 |   fsevents@2.3.3:
6287 |     optional: true
6288 | 
6289 |   function-bind@1.1.2: {}
6290 | 
6291 |   functions-have-names@1.2.3: {}
6292 | 
6293 |   gensync@1.0.0-beta.2: {}
6294 | 
6295 |   get-caller-file@2.0.5: {}
6296 | 
6297 |   get-func-name@2.0.2: {}
6298 | 
6299 |   get-intrinsic@1.2.7:
6300 |     dependencies:
6301 |       call-bind-apply-helpers: 1.0.1
6302 |       es-define-property: 1.0.1
6303 |       es-errors: 1.3.0
6304 |       es-object-atoms: 1.0.0
6305 |       function-bind: 1.1.2
6306 |       get-proto: 1.0.1
6307 |       gopd: 1.2.0
6308 |       has-symbols: 1.1.0
6309 |       hasown: 2.0.2
6310 |       math-intrinsics: 1.1.0
6311 | 
6312 |   get-package-type@0.1.0: {}
6313 | 
6314 |   get-proto@1.0.1:
6315 |     dependencies:
6316 |       dunder-proto: 1.0.1
6317 |       es-object-atoms: 1.0.0
6318 | 
6319 |   get-stream@6.0.1: {}
6320 | 
6321 |   get-stream@8.0.1: {}
6322 | 
6323 |   get-tsconfig@4.8.1:
6324 |     dependencies:
6325 |       resolve-pkg-maps: 1.0.0
6326 | 
6327 |   glob-parent@5.1.2:
6328 |     dependencies:
6329 |       is-glob: 4.0.3
6330 | 
6331 |   glob-parent@6.0.2:
6332 |     dependencies:
6333 |       is-glob: 4.0.3
6334 | 
6335 |   glob@10.4.5:
6336 |     dependencies:
6337 |       foreground-child: 3.3.0
6338 |       jackspeak: 3.4.3
6339 |       minimatch: 9.0.5
6340 |       minipass: 7.1.2
6341 |       package-json-from-dist: 1.0.1
6342 |       path-scurry: 1.11.1
6343 | 
6344 |   glob@7.2.3:
6345 |     dependencies:
6346 |       fs.realpath: 1.0.0
6347 |       inflight: 1.0.6
6348 |       inherits: 2.0.4
6349 |       minimatch: 3.1.2
6350 |       once: 1.4.0
6351 |       path-is-absolute: 1.0.1
6352 | 
6353 |   globals@11.12.0: {}
6354 | 
6355 |   globals@13.24.0:
6356 |     dependencies:
6357 |       type-fest: 0.20.2
6358 | 
6359 |   globby@11.1.0:
6360 |     dependencies:
6361 |       array-union: 2.1.0
6362 |       dir-glob: 3.0.1
6363 |       fast-glob: 3.3.3
6364 |       ignore: 5.3.2
6365 |       merge2: 1.4.1
6366 |       slash: 3.0.0
6367 | 
6368 |   gopd@1.2.0: {}
6369 | 
6370 |   graceful-fs@4.2.11: {}
6371 | 
6372 |   graphemer@1.4.0: {}
6373 | 
6374 |   happy-dom@12.10.3:
6375 |     dependencies:
6376 |       css.escape: 1.5.1
6377 |       entities: 4.5.0
6378 |       iconv-lite: 0.6.3
6379 |       webidl-conversions: 7.0.0
6380 |       whatwg-encoding: 2.0.0
6381 |       whatwg-mimetype: 3.0.0
6382 | 
6383 |   has-bigints@1.1.0: {}
6384 | 
6385 |   has-flag@4.0.0: {}
6386 | 
6387 |   has-property-descriptors@1.0.2:
6388 |     dependencies:
6389 |       es-define-property: 1.0.1
6390 | 
6391 |   has-symbols@1.1.0: {}
6392 | 
6393 |   has-tostringtag@1.0.2:
6394 |     dependencies:
6395 |       has-symbols: 1.1.0
6396 | 
6397 |   hasown@2.0.2:
6398 |     dependencies:
6399 |       function-bind: 1.1.2
6400 | 
6401 |   hexoid@2.0.0: {}
6402 | 
6403 |   html-escaper@2.0.2: {}
6404 | 
6405 |   http-errors@2.0.0:
6406 |     dependencies:
6407 |       depd: 2.0.0
6408 |       inherits: 2.0.4
6409 |       setprototypeof: 1.2.0
6410 |       statuses: 2.0.1
6411 |       toidentifier: 1.0.1
6412 | 
6413 |   human-signals@2.1.0: {}
6414 | 
6415 |   human-signals@5.0.0: {}
6416 | 
6417 |   iconv-lite@0.4.24:
6418 |     dependencies:
6419 |       safer-buffer: 2.1.2
6420 | 
6421 |   iconv-lite@0.6.3:
6422 |     dependencies:
6423 |       safer-buffer: 2.1.2
6424 | 
6425 |   ignore@5.3.2: {}
6426 | 
6427 |   import-fresh@3.3.0:
6428 |     dependencies:
6429 |       parent-module: 1.0.1
6430 |       resolve-from: 4.0.0
6431 | 
6432 |   import-local@3.2.0:
6433 |     dependencies:
6434 |       pkg-dir: 4.2.0
6435 |       resolve-cwd: 3.0.0
6436 | 
6437 |   imurmurhash@0.1.4: {}
6438 | 
6439 |   indent-string@4.0.0: {}
6440 | 
6441 |   inflight@1.0.6:
6442 |     dependencies:
6443 |       once: 1.4.0
6444 |       wrappy: 1.0.2
6445 | 
6446 |   inherits@2.0.4: {}
6447 | 
6448 |   internal-slot@1.1.0:
6449 |     dependencies:
6450 |       es-errors: 1.3.0
6451 |       hasown: 2.0.2
6452 |       side-channel: 1.1.0
6453 | 
6454 |   invariant@2.2.4:
6455 |     dependencies:
6456 |       loose-envify: 1.4.0
6457 | 
6458 |   ipaddr.js@1.9.1: {}
6459 | 
6460 |   is-arguments@1.2.0:
6461 |     dependencies:
6462 |       call-bound: 1.0.3
6463 |       has-tostringtag: 1.0.2
6464 | 
6465 |   is-array-buffer@3.0.5:
6466 |     dependencies:
6467 |       call-bind: 1.0.8
6468 |       call-bound: 1.0.3
6469 |       get-intrinsic: 1.2.7
6470 | 
6471 |   is-arrayish@0.2.1: {}
6472 | 
6473 |   is-arrayish@0.3.2: {}
6474 | 
6475 |   is-bigint@1.1.0:
6476 |     dependencies:
6477 |       has-bigints: 1.1.0
6478 | 
6479 |   is-binary-path@2.1.0:
6480 |     dependencies:
6481 |       binary-extensions: 2.3.0
6482 | 
6483 |   is-boolean-object@1.2.1:
6484 |     dependencies:
6485 |       call-bound: 1.0.3
6486 |       has-tostringtag: 1.0.2
6487 | 
6488 |   is-callable@1.2.7: {}
6489 | 
6490 |   is-core-module@2.16.1:
6491 |     dependencies:
6492 |       hasown: 2.0.2
6493 | 
6494 |   is-date-object@1.1.0:
6495 |     dependencies:
6496 |       call-bound: 1.0.3
6497 |       has-tostringtag: 1.0.2
6498 | 
6499 |   is-extglob@2.1.1: {}
6500 | 
6501 |   is-fullwidth-code-point@3.0.0: {}
6502 | 
6503 |   is-generator-fn@2.1.0: {}
6504 | 
6505 |   is-glob@4.0.3:
6506 |     dependencies:
6507 |       is-extglob: 2.1.1
6508 | 
6509 |   is-map@2.0.3: {}
6510 | 
6511 |   is-number-object@1.1.1:
6512 |     dependencies:
6513 |       call-bound: 1.0.3
6514 |       has-tostringtag: 1.0.2
6515 | 
6516 |   is-number@7.0.0: {}
6517 | 
6518 |   is-path-inside@3.0.3: {}
6519 | 
6520 |   is-regex@1.2.1:
6521 |     dependencies:
6522 |       call-bound: 1.0.3
6523 |       gopd: 1.2.0
6524 |       has-tostringtag: 1.0.2
6525 |       hasown: 2.0.2
6526 | 
6527 |   is-set@2.0.3: {}
6528 | 
6529 |   is-shared-array-buffer@1.0.4:
6530 |     dependencies:
6531 |       call-bound: 1.0.3
6532 | 
6533 |   is-stream@2.0.1: {}
6534 | 
6535 |   is-stream@3.0.0: {}
6536 | 
6537 |   is-string@1.1.1:
6538 |     dependencies:
6539 |       call-bound: 1.0.3
6540 |       has-tostringtag: 1.0.2
6541 | 
6542 |   is-symbol@1.1.1:
6543 |     dependencies:
6544 |       call-bound: 1.0.3
6545 |       has-symbols: 1.1.0
6546 |       safe-regex-test: 1.1.0
6547 | 
6548 |   is-weakmap@2.0.2: {}
6549 | 
6550 |   is-weakset@2.0.4:
6551 |     dependencies:
6552 |       call-bound: 1.0.3
6553 |       get-intrinsic: 1.2.7
6554 | 
6555 |   isarray@1.0.0: {}
6556 | 
6557 |   isarray@2.0.5: {}
6558 | 
6559 |   isexe@2.0.0: {}
6560 | 
6561 |   istanbul-lib-coverage@3.2.2: {}
6562 | 
6563 |   istanbul-lib-instrument@5.2.1:
6564 |     dependencies:
6565 |       '@babel/core': 7.26.0
6566 |       '@babel/parser': 7.26.5
6567 |       '@istanbuljs/schema': 0.1.3
6568 |       istanbul-lib-coverage: 3.2.2
6569 |       semver: 6.3.1
6570 |     transitivePeerDependencies:
6571 |       - supports-color
6572 | 
6573 |   istanbul-lib-instrument@6.0.3:
6574 |     dependencies:
6575 |       '@babel/core': 7.26.0
6576 |       '@babel/parser': 7.26.5
6577 |       '@istanbuljs/schema': 0.1.3
6578 |       istanbul-lib-coverage: 3.2.2
6579 |       semver: 7.6.3
6580 |     transitivePeerDependencies:
6581 |       - supports-color
6582 | 
6583 |   istanbul-lib-report@3.0.1:
6584 |     dependencies:
6585 |       istanbul-lib-coverage: 3.2.2
6586 |       make-dir: 4.0.0
6587 |       supports-color: 7.2.0
6588 | 
6589 |   istanbul-lib-source-maps@4.0.1:
6590 |     dependencies:
6591 |       debug: 4.4.0
6592 |       istanbul-lib-coverage: 3.2.2
6593 |       source-map: 0.6.1
6594 |     transitivePeerDependencies:
6595 |       - supports-color
6596 | 
6597 |   istanbul-lib-source-maps@5.0.6:
6598 |     dependencies:
6599 |       '@jridgewell/trace-mapping': 0.3.25
6600 |       debug: 4.4.0
6601 |       istanbul-lib-coverage: 3.2.2
6602 |     transitivePeerDependencies:
6603 |       - supports-color
6604 | 
6605 |   istanbul-reports@3.1.7:
6606 |     dependencies:
6607 |       html-escaper: 2.0.2
6608 |       istanbul-lib-report: 3.0.1
6609 | 
6610 |   jackspeak@3.4.3:
6611 |     dependencies:
6612 |       '@isaacs/cliui': 8.0.2
6613 |     optionalDependencies:
6614 |       '@pkgjs/parseargs': 0.11.0
6615 | 
6616 |   jake@10.9.2:
6617 |     dependencies:
6618 |       async: 3.2.6
6619 |       chalk: 4.1.2
6620 |       filelist: 1.0.4
6621 |       minimatch: 3.1.2
6622 | 
6623 |   jest-changed-files@29.7.0:
6624 |     dependencies:
6625 |       execa: 5.1.1
6626 |       jest-util: 29.7.0
6627 |       p-limit: 3.1.0
6628 | 
6629 |   jest-circus@29.7.0:
6630 |     dependencies:
6631 |       '@jest/environment': 29.7.0
6632 |       '@jest/expect': 29.7.0
6633 |       '@jest/test-result': 29.7.0
6634 |       '@jest/types': 29.6.3
6635 |       '@types/node': 20.17.12
6636 |       chalk: 4.1.2
6637 |       co: 4.6.0
6638 |       dedent: 1.5.3
6639 |       is-generator-fn: 2.1.0
6640 |       jest-each: 29.7.0
6641 |       jest-matcher-utils: 29.7.0
6642 |       jest-message-util: 29.7.0
6643 |       jest-runtime: 29.7.0
6644 |       jest-snapshot: 29.7.0
6645 |       jest-util: 29.7.0
6646 |       p-limit: 3.1.0
6647 |       pretty-format: 29.7.0
6648 |       pure-rand: 6.1.0
6649 |       slash: 3.0.0
6650 |       stack-utils: 2.0.6
6651 |     transitivePeerDependencies:
6652 |       - babel-plugin-macros
6653 |       - supports-color
6654 | 
6655 |   jest-cli@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
6656 |     dependencies:
6657 |       '@jest/core': 29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6658 |       '@jest/test-result': 29.7.0
6659 |       '@jest/types': 29.6.3
6660 |       chalk: 4.1.2
6661 |       create-jest: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6662 |       exit: 0.1.2
6663 |       import-local: 3.2.0
6664 |       jest-config: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6665 |       jest-util: 29.7.0
6666 |       jest-validate: 29.7.0
6667 |       yargs: 17.7.2
6668 |     transitivePeerDependencies:
6669 |       - '@types/node'
6670 |       - babel-plugin-macros
6671 |       - supports-color
6672 |       - ts-node
6673 | 
6674 |   jest-config@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
6675 |     dependencies:
6676 |       '@babel/core': 7.26.0
6677 |       '@jest/test-sequencer': 29.7.0
6678 |       '@jest/types': 29.6.3
6679 |       babel-jest: 29.7.0(@babel/core@7.26.0)
6680 |       chalk: 4.1.2
6681 |       ci-info: 3.9.0
6682 |       deepmerge: 4.3.1
6683 |       glob: 7.2.3
6684 |       graceful-fs: 4.2.11
6685 |       jest-circus: 29.7.0
6686 |       jest-environment-node: 29.7.0
6687 |       jest-get-type: 29.6.3
6688 |       jest-regex-util: 29.6.3
6689 |       jest-resolve: 29.7.0
6690 |       jest-runner: 29.7.0
6691 |       jest-util: 29.7.0
6692 |       jest-validate: 29.7.0
6693 |       micromatch: 4.0.8
6694 |       parse-json: 5.2.0
6695 |       pretty-format: 29.7.0
6696 |       slash: 3.0.0
6697 |       strip-json-comments: 3.1.1
6698 |     optionalDependencies:
6699 |       '@types/node': 20.17.12
6700 |       ts-node: 10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)
6701 |     transitivePeerDependencies:
6702 |       - babel-plugin-macros
6703 |       - supports-color
6704 | 
6705 |   jest-diff@29.7.0:
6706 |     dependencies:
6707 |       chalk: 4.1.2
6708 |       diff-sequences: 29.6.3
6709 |       jest-get-type: 29.6.3
6710 |       pretty-format: 29.7.0
6711 | 
6712 |   jest-docblock@29.7.0:
6713 |     dependencies:
6714 |       detect-newline: 3.1.0
6715 | 
6716 |   jest-each@29.7.0:
6717 |     dependencies:
6718 |       '@jest/types': 29.6.3
6719 |       chalk: 4.1.2
6720 |       jest-get-type: 29.6.3
6721 |       jest-util: 29.7.0
6722 |       pretty-format: 29.7.0
6723 | 
6724 |   jest-environment-node@29.7.0:
6725 |     dependencies:
6726 |       '@jest/environment': 29.7.0
6727 |       '@jest/fake-timers': 29.7.0
6728 |       '@jest/types': 29.6.3
6729 |       '@types/node': 20.17.12
6730 |       jest-mock: 29.7.0
6731 |       jest-util: 29.7.0
6732 | 
6733 |   jest-get-type@29.6.3: {}
6734 | 
6735 |   jest-haste-map@29.7.0:
6736 |     dependencies:
6737 |       '@jest/types': 29.6.3
6738 |       '@types/graceful-fs': 4.1.9
6739 |       '@types/node': 20.17.12
6740 |       anymatch: 3.1.3
6741 |       fb-watchman: 2.0.2
6742 |       graceful-fs: 4.2.11
6743 |       jest-regex-util: 29.6.3
6744 |       jest-util: 29.7.0
6745 |       jest-worker: 29.7.0
6746 |       micromatch: 4.0.8
6747 |       walker: 1.0.8
6748 |     optionalDependencies:
6749 |       fsevents: 2.3.3
6750 | 
6751 |   jest-leak-detector@29.7.0:
6752 |     dependencies:
6753 |       jest-get-type: 29.6.3
6754 |       pretty-format: 29.7.0
6755 | 
6756 |   jest-matcher-utils@29.7.0:
6757 |     dependencies:
6758 |       chalk: 4.1.2
6759 |       jest-diff: 29.7.0
6760 |       jest-get-type: 29.6.3
6761 |       pretty-format: 29.7.0
6762 | 
6763 |   jest-message-util@29.7.0:
6764 |     dependencies:
6765 |       '@babel/code-frame': 7.26.2
6766 |       '@jest/types': 29.6.3
6767 |       '@types/stack-utils': 2.0.3
6768 |       chalk: 4.1.2
6769 |       graceful-fs: 4.2.11
6770 |       micromatch: 4.0.8
6771 |       pretty-format: 29.7.0
6772 |       slash: 3.0.0
6773 |       stack-utils: 2.0.6
6774 | 
6775 |   jest-mock@29.7.0:
6776 |     dependencies:
6777 |       '@jest/types': 29.6.3
6778 |       '@types/node': 20.17.12
6779 |       jest-util: 29.7.0
6780 | 
6781 |   jest-pnp-resolver@1.2.3(jest-resolve@29.7.0):
6782 |     optionalDependencies:
6783 |       jest-resolve: 29.7.0
6784 | 
6785 |   jest-regex-util@29.6.3: {}
6786 | 
6787 |   jest-resolve-dependencies@29.7.0:
6788 |     dependencies:
6789 |       jest-regex-util: 29.6.3
6790 |       jest-snapshot: 29.7.0
6791 |     transitivePeerDependencies:
6792 |       - supports-color
6793 | 
6794 |   jest-resolve@29.7.0:
6795 |     dependencies:
6796 |       chalk: 4.1.2
6797 |       graceful-fs: 4.2.11
6798 |       jest-haste-map: 29.7.0
6799 |       jest-pnp-resolver: 1.2.3(jest-resolve@29.7.0)
6800 |       jest-util: 29.7.0
6801 |       jest-validate: 29.7.0
6802 |       resolve: 1.22.10
6803 |       resolve.exports: 2.0.3
6804 |       slash: 3.0.0
6805 | 
6806 |   jest-runner@29.7.0:
6807 |     dependencies:
6808 |       '@jest/console': 29.7.0
6809 |       '@jest/environment': 29.7.0
6810 |       '@jest/test-result': 29.7.0
6811 |       '@jest/transform': 29.7.0
6812 |       '@jest/types': 29.6.3
6813 |       '@types/node': 20.17.12
6814 |       chalk: 4.1.2
6815 |       emittery: 0.13.1
6816 |       graceful-fs: 4.2.11
6817 |       jest-docblock: 29.7.0
6818 |       jest-environment-node: 29.7.0
6819 |       jest-haste-map: 29.7.0
6820 |       jest-leak-detector: 29.7.0
6821 |       jest-message-util: 29.7.0
6822 |       jest-resolve: 29.7.0
6823 |       jest-runtime: 29.7.0
6824 |       jest-util: 29.7.0
6825 |       jest-watcher: 29.7.0
6826 |       jest-worker: 29.7.0
6827 |       p-limit: 3.1.0
6828 |       source-map-support: 0.5.13
6829 |     transitivePeerDependencies:
6830 |       - supports-color
6831 | 
6832 |   jest-runtime@29.7.0:
6833 |     dependencies:
6834 |       '@jest/environment': 29.7.0
6835 |       '@jest/fake-timers': 29.7.0
6836 |       '@jest/globals': 29.7.0
6837 |       '@jest/source-map': 29.6.3
6838 |       '@jest/test-result': 29.7.0
6839 |       '@jest/transform': 29.7.0
6840 |       '@jest/types': 29.6.3
6841 |       '@types/node': 20.17.12
6842 |       chalk: 4.1.2
6843 |       cjs-module-lexer: 1.4.1
6844 |       collect-v8-coverage: 1.0.2
6845 |       glob: 7.2.3
6846 |       graceful-fs: 4.2.11
6847 |       jest-haste-map: 29.7.0
6848 |       jest-message-util: 29.7.0
6849 |       jest-mock: 29.7.0
6850 |       jest-regex-util: 29.6.3
6851 |       jest-resolve: 29.7.0
6852 |       jest-snapshot: 29.7.0
6853 |       jest-util: 29.7.0
6854 |       slash: 3.0.0
6855 |       strip-bom: 4.0.0
6856 |     transitivePeerDependencies:
6857 |       - supports-color
6858 | 
6859 |   jest-snapshot@29.7.0:
6860 |     dependencies:
6861 |       '@babel/core': 7.26.0
6862 |       '@babel/generator': 7.26.5
6863 |       '@babel/plugin-syntax-jsx': 7.25.9(@babel/core@7.26.0)
6864 |       '@babel/plugin-syntax-typescript': 7.25.9(@babel/core@7.26.0)
6865 |       '@babel/types': 7.26.5
6866 |       '@jest/expect-utils': 29.7.0
6867 |       '@jest/transform': 29.7.0
6868 |       '@jest/types': 29.6.3
6869 |       babel-preset-current-node-syntax: 1.1.0(@babel/core@7.26.0)
6870 |       chalk: 4.1.2
6871 |       expect: 29.7.0
6872 |       graceful-fs: 4.2.11
6873 |       jest-diff: 29.7.0
6874 |       jest-get-type: 29.6.3
6875 |       jest-matcher-utils: 29.7.0
6876 |       jest-message-util: 29.7.0
6877 |       jest-util: 29.7.0
6878 |       natural-compare: 1.4.0
6879 |       pretty-format: 29.7.0
6880 |       semver: 7.6.3
6881 |     transitivePeerDependencies:
6882 |       - supports-color
6883 | 
6884 |   jest-util@29.7.0:
6885 |     dependencies:
6886 |       '@jest/types': 29.6.3
6887 |       '@types/node': 20.17.12
6888 |       chalk: 4.1.2
6889 |       ci-info: 3.9.0
6890 |       graceful-fs: 4.2.11
6891 |       picomatch: 2.3.1
6892 | 
6893 |   jest-validate@29.7.0:
6894 |     dependencies:
6895 |       '@jest/types': 29.6.3
6896 |       camelcase: 6.3.0
6897 |       chalk: 4.1.2
6898 |       jest-get-type: 29.6.3
6899 |       leven: 3.1.0
6900 |       pretty-format: 29.7.0
6901 | 
6902 |   jest-watcher@29.7.0:
6903 |     dependencies:
6904 |       '@jest/test-result': 29.7.0
6905 |       '@jest/types': 29.6.3
6906 |       '@types/node': 20.17.12
6907 |       ansi-escapes: 4.3.2
6908 |       chalk: 4.1.2
6909 |       emittery: 0.13.1
6910 |       jest-util: 29.7.0
6911 |       string-length: 4.0.2
6912 | 
6913 |   jest-worker@29.7.0:
6914 |     dependencies:
6915 |       '@types/node': 20.17.12
6916 |       jest-util: 29.7.0
6917 |       merge-stream: 2.0.0
6918 |       supports-color: 8.1.1
6919 | 
6920 |   jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
6921 |     dependencies:
6922 |       '@jest/core': 29.7.0(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6923 |       '@jest/types': 29.6.3
6924 |       import-local: 3.2.0
6925 |       jest-cli: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
6926 |     transitivePeerDependencies:
6927 |       - '@types/node'
6928 |       - babel-plugin-macros
6929 |       - supports-color
6930 |       - ts-node
6931 | 
6932 |   jiti@1.21.7: {}
6933 | 
6934 |   joycon@3.1.1: {}
6935 | 
6936 |   js-tokens@4.0.0: {}
6937 | 
6938 |   js-tokens@9.0.1: {}
6939 | 
6940 |   js-yaml@3.14.1:
6941 |     dependencies:
6942 |       argparse: 1.0.10
6943 |       esprima: 4.0.1
6944 | 
6945 |   js-yaml@4.1.0:
6946 |     dependencies:
6947 |       argparse: 2.0.1
6948 | 
6949 |   jsesc@3.1.0: {}
6950 | 
6951 |   json-buffer@3.0.1: {}
6952 | 
6953 |   json-parse-even-better-errors@2.3.1: {}
6954 | 
6955 |   json-schema-traverse@0.4.1: {}
6956 | 
6957 |   json-stable-stringify-without-jsonify@1.0.1: {}
6958 | 
6959 |   json5@2.2.3: {}
6960 | 
6961 |   jsonwebtoken@9.0.2:
6962 |     dependencies:
6963 |       jws: 3.2.2
6964 |       lodash.includes: 4.3.0
6965 |       lodash.isboolean: 3.0.3
6966 |       lodash.isinteger: 4.0.4
6967 |       lodash.isnumber: 3.0.3
6968 |       lodash.isplainobject: 4.0.6
6969 |       lodash.isstring: 4.0.1
6970 |       lodash.once: 4.1.1
6971 |       ms: 2.1.3
6972 |       semver: 7.6.3
6973 | 
6974 |   jwa@1.4.1:
6975 |     dependencies:
6976 |       buffer-equal-constant-time: 1.0.1
6977 |       ecdsa-sig-formatter: 1.0.11
6978 |       safe-buffer: 5.2.1
6979 | 
6980 |   jws@3.2.2:
6981 |     dependencies:
6982 |       jwa: 1.4.1
6983 |       safe-buffer: 5.2.1
6984 | 
6985 |   kdbush@4.0.2: {}
6986 | 
6987 |   keyv@4.5.4:
6988 |     dependencies:
6989 |       json-buffer: 3.0.1
6990 | 
6991 |   kleur@3.0.3: {}
6992 | 
6993 |   kuler@2.0.0: {}
6994 | 
6995 |   leven@3.1.0: {}
6996 | 
6997 |   levn@0.4.1:
6998 |     dependencies:
6999 |       prelude-ls: 1.2.1
7000 |       type-check: 0.4.0
7001 | 
7002 |   lilconfig@3.1.3: {}
7003 | 
7004 |   lines-and-columns@1.2.4: {}
7005 | 
7006 |   load-tsconfig@0.2.5: {}
7007 | 
7008 |   local-pkg@0.5.1:
7009 |     dependencies:
7010 |       mlly: 1.7.4
7011 |       pkg-types: 1.3.0
7012 | 
7013 |   locate-path@5.0.0:
7014 |     dependencies:
7015 |       p-locate: 4.1.0
7016 | 
7017 |   locate-path@6.0.0:
7018 |     dependencies:
7019 |       p-locate: 5.0.0
7020 | 
7021 |   lodash.includes@4.3.0: {}
7022 | 
7023 |   lodash.isboolean@3.0.3: {}
7024 | 
7025 |   lodash.isinteger@4.0.4: {}
7026 | 
7027 |   lodash.isnumber@3.0.3: {}
7028 | 
7029 |   lodash.isplainobject@4.0.6: {}
7030 | 
7031 |   lodash.isstring@4.0.1: {}
7032 | 
7033 |   lodash.memoize@4.1.2: {}
7034 | 
7035 |   lodash.merge@4.6.2: {}
7036 | 
7037 |   lodash.once@4.1.1: {}
7038 | 
7039 |   lodash.sortby@4.7.0: {}
7040 | 
7041 |   lodash@4.17.21: {}
7042 | 
7043 |   logform@2.7.0:
7044 |     dependencies:
7045 |       '@colors/colors': 1.6.0
7046 |       '@types/triple-beam': 1.3.5
7047 |       fecha: 4.2.3
7048 |       ms: 2.1.3
7049 |       safe-stable-stringify: 2.5.0
7050 |       triple-beam: 1.4.1
7051 | 
7052 |   loose-envify@1.4.0:
7053 |     dependencies:
7054 |       js-tokens: 4.0.0
7055 | 
7056 |   loupe@2.3.7:
7057 |     dependencies:
7058 |       get-func-name: 2.0.2
7059 | 
7060 |   lru-cache@10.4.3: {}
7061 | 
7062 |   lru-cache@5.1.1:
7063 |     dependencies:
7064 |       yallist: 3.1.1
7065 | 
7066 |   lz-string@1.5.0: {}
7067 | 
7068 |   magic-string@0.30.17:
7069 |     dependencies:
7070 |       '@jridgewell/sourcemap-codec': 1.5.0
7071 | 
7072 |   magicast@0.3.5:
7073 |     dependencies:
7074 |       '@babel/parser': 7.26.5
7075 |       '@babel/types': 7.26.5
7076 |       source-map-js: 1.2.1
7077 | 
7078 |   make-dir@4.0.0:
7079 |     dependencies:
7080 |       semver: 7.6.3
7081 | 
7082 |   make-error@1.3.6: {}
7083 | 
7084 |   makeerror@1.0.12:
7085 |     dependencies:
7086 |       tmpl: 1.0.5
7087 | 
7088 |   math-intrinsics@1.1.0: {}
7089 | 
7090 |   media-typer@0.3.0: {}
7091 | 
7092 |   merge-descriptors@1.0.3: {}
7093 | 
7094 |   merge-stream@2.0.0: {}
7095 | 
7096 |   merge2@1.4.1: {}
7097 | 
7098 |   methods@1.1.2: {}
7099 | 
7100 |   micromatch@4.0.8:
7101 |     dependencies:
7102 |       braces: 3.0.3
7103 |       picomatch: 2.3.1
7104 | 
7105 |   mime-db@1.52.0: {}
7106 | 
7107 |   mime-types@2.1.35:
7108 |     dependencies:
7109 |       mime-db: 1.52.0
7110 | 
7111 |   mime@1.6.0: {}
7112 | 
7113 |   mime@2.6.0: {}
7114 | 
7115 |   mimic-fn@2.1.0: {}
7116 | 
7117 |   mimic-fn@4.0.0: {}
7118 | 
7119 |   min-indent@1.0.1: {}
7120 | 
7121 |   minimatch@3.1.2:
7122 |     dependencies:
7123 |       brace-expansion: 1.1.11
7124 | 
7125 |   minimatch@5.1.6:
7126 |     dependencies:
7127 |       brace-expansion: 2.0.1
7128 | 
7129 |   minimatch@9.0.3:
7130 |     dependencies:
7131 |       brace-expansion: 2.0.1
7132 | 
7133 |   minimatch@9.0.5:
7134 |     dependencies:
7135 |       brace-expansion: 2.0.1
7136 | 
7137 |   minimist@1.2.8: {}
7138 | 
7139 |   minipass@7.1.2: {}
7140 | 
7141 |   mkdirp@0.5.6:
7142 |     dependencies:
7143 |       minimist: 1.2.8
7144 | 
7145 |   mlly@1.7.4:
7146 |     dependencies:
7147 |       acorn: 8.14.0
7148 |       pathe: 2.0.1
7149 |       pkg-types: 1.3.0
7150 |       ufo: 1.5.4
7151 | 
7152 |   morgan@1.10.0:
7153 |     dependencies:
7154 |       basic-auth: 2.0.1
7155 |       debug: 2.6.9
7156 |       depd: 2.0.0
7157 |       on-finished: 2.3.0
7158 |       on-headers: 1.0.2
7159 |     transitivePeerDependencies:
7160 |       - supports-color
7161 | 
7162 |   ms@2.0.0: {}
7163 | 
7164 |   ms@2.1.3: {}
7165 | 
7166 |   multer@1.4.5-lts.1:
7167 |     dependencies:
7168 |       append-field: 1.0.0
7169 |       busboy: 1.6.0
7170 |       concat-stream: 1.6.2
7171 |       mkdirp: 0.5.6
7172 |       object-assign: 4.1.1
7173 |       type-is: 1.6.18
7174 |       xtend: 4.0.2
7175 | 
7176 |   mz@2.7.0:
7177 |     dependencies:
7178 |       any-promise: 1.3.0
7179 |       object-assign: 4.1.1
7180 |       thenify-all: 1.6.0
7181 | 
7182 |   nanoid@3.3.8: {}
7183 | 
7184 |   natural-compare@1.4.0: {}
7185 | 
7186 |   negotiator@0.6.3: {}
7187 | 
7188 |   node-int64@0.4.0: {}
7189 | 
7190 |   node-releases@2.0.19: {}
7191 | 
7192 |   nodemailer@6.9.16: {}
7193 | 
7194 |   normalize-path@3.0.0: {}
7195 | 
7196 |   normalize-range@0.1.2: {}
7197 | 
7198 |   npm-run-path@4.0.1:
7199 |     dependencies:
7200 |       path-key: 3.1.1
7201 | 
7202 |   npm-run-path@5.3.0:
7203 |     dependencies:
7204 |       path-key: 4.0.0
7205 | 
7206 |   object-assign@4.1.1: {}
7207 | 
7208 |   object-hash@3.0.0: {}
7209 | 
7210 |   object-inspect@1.13.3: {}
7211 | 
7212 |   object-is@1.1.6:
7213 |     dependencies:
7214 |       call-bind: 1.0.8
7215 |       define-properties: 1.2.1
7216 | 
7217 |   object-keys@1.1.1: {}
7218 | 
7219 |   object.assign@4.1.7:
7220 |     dependencies:
7221 |       call-bind: 1.0.8
7222 |       call-bound: 1.0.3
7223 |       define-properties: 1.2.1
7224 |       es-object-atoms: 1.0.0
7225 |       has-symbols: 1.1.0
7226 |       object-keys: 1.1.1
7227 | 
7228 |   on-finished@2.3.0:
7229 |     dependencies:
7230 |       ee-first: 1.1.1
7231 | 
7232 |   on-finished@2.4.1:
7233 |     dependencies:
7234 |       ee-first: 1.1.1
7235 | 
7236 |   on-headers@1.0.2: {}
7237 | 
7238 |   once@1.4.0:
7239 |     dependencies:
7240 |       wrappy: 1.0.2
7241 | 
7242 |   one-time@1.0.0:
7243 |     dependencies:
7244 |       fn.name: 1.1.0
7245 | 
7246 |   onetime@5.1.2:
7247 |     dependencies:
7248 |       mimic-fn: 2.1.0
7249 | 
7250 |   onetime@6.0.0:
7251 |     dependencies:
7252 |       mimic-fn: 4.0.0
7253 | 
7254 |   optionator@0.9.4:
7255 |     dependencies:
7256 |       deep-is: 0.1.4
7257 |       fast-levenshtein: 2.0.6
7258 |       levn: 0.4.1
7259 |       prelude-ls: 1.2.1
7260 |       type-check: 0.4.0
7261 |       word-wrap: 1.2.5
7262 | 
7263 |   p-limit@2.3.0:
7264 |     dependencies:
7265 |       p-try: 2.2.0
7266 | 
7267 |   p-limit@3.1.0:
7268 |     dependencies:
7269 |       yocto-queue: 0.1.0
7270 | 
7271 |   p-limit@5.0.0:
7272 |     dependencies:
7273 |       yocto-queue: 1.1.1
7274 | 
7275 |   p-locate@4.1.0:
7276 |     dependencies:
7277 |       p-limit: 2.3.0
7278 | 
7279 |   p-locate@5.0.0:
7280 |     dependencies:
7281 |       p-limit: 3.1.0
7282 | 
7283 |   p-try@2.2.0: {}
7284 | 
7285 |   package-json-from-dist@1.0.1: {}
7286 | 
7287 |   parent-module@1.0.1:
7288 |     dependencies:
7289 |       callsites: 3.1.0
7290 | 
7291 |   parse-json@5.2.0:
7292 |     dependencies:
7293 |       '@babel/code-frame': 7.26.2
7294 |       error-ex: 1.3.2
7295 |       json-parse-even-better-errors: 2.3.1
7296 |       lines-and-columns: 1.2.4
7297 | 
7298 |   parseurl@1.3.3: {}
7299 | 
7300 |   path-exists@4.0.0: {}
7301 | 
7302 |   path-is-absolute@1.0.1: {}
7303 | 
7304 |   path-key@3.1.1: {}
7305 | 
7306 |   path-key@4.0.0: {}
7307 | 
7308 |   path-parse@1.0.7: {}
7309 | 
7310 |   path-scurry@1.11.1:
7311 |     dependencies:
7312 |       lru-cache: 10.4.3
7313 |       minipass: 7.1.2
7314 | 
7315 |   path-to-regexp@0.1.12: {}
7316 | 
7317 |   path-type@4.0.0: {}
7318 | 
7319 |   pathe@1.1.2: {}
7320 | 
7321 |   pathe@2.0.1: {}
7322 | 
7323 |   pathval@1.1.1: {}
7324 | 
7325 |   picocolors@1.1.1: {}
7326 | 
7327 |   picomatch@2.3.1: {}
7328 | 
7329 |   picomatch@4.0.2: {}
7330 | 
7331 |   pify@2.3.0: {}
7332 | 
7333 |   pirates@4.0.6: {}
7334 | 
7335 |   pkg-dir@4.2.0:
7336 |     dependencies:
7337 |       find-up: 4.1.0
7338 | 
7339 |   pkg-types@1.3.0:
7340 |     dependencies:
7341 |       confbox: 0.1.8
7342 |       mlly: 1.7.4
7343 |       pathe: 1.1.2
7344 | 
7345 |   possible-typed-array-names@1.0.0: {}
7346 | 
7347 |   postcss-import@15.1.0(postcss@8.4.49):
7348 |     dependencies:
7349 |       postcss: 8.4.49
7350 |       postcss-value-parser: 4.2.0
7351 |       read-cache: 1.0.0
7352 |       resolve: 1.22.10
7353 | 
7354 |   postcss-js@4.0.1(postcss@8.4.49):
7355 |     dependencies:
7356 |       camelcase-css: 2.0.1
7357 |       postcss: 8.4.49
7358 | 
7359 |   postcss-load-config@4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
7360 |     dependencies:
7361 |       lilconfig: 3.1.3
7362 |       yaml: 2.7.0
7363 |     optionalDependencies:
7364 |       postcss: 8.4.49
7365 |       ts-node: 10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)
7366 | 
7367 |   postcss-load-config@6.0.1(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.7.0):
7368 |     dependencies:
7369 |       lilconfig: 3.1.3
7370 |     optionalDependencies:
7371 |       jiti: 1.21.7
7372 |       postcss: 8.4.49
7373 |       tsx: 4.19.2
7374 |       yaml: 2.7.0
7375 | 
7376 |   postcss-nested@6.2.0(postcss@8.4.49):
7377 |     dependencies:
7378 |       postcss: 8.4.49
7379 |       postcss-selector-parser: 6.1.2
7380 | 
7381 |   postcss-selector-parser@6.1.2:
7382 |     dependencies:
7383 |       cssesc: 3.0.0
7384 |       util-deprecate: 1.0.2
7385 | 
7386 |   postcss-value-parser@4.2.0: {}
7387 | 
7388 |   postcss@8.4.49:
7389 |     dependencies:
7390 |       nanoid: 3.3.8
7391 |       picocolors: 1.1.1
7392 |       source-map-js: 1.2.1
7393 | 
7394 |   prelude-ls@1.2.1: {}
7395 | 
7396 |   prettier@3.4.2: {}
7397 | 
7398 |   pretty-format@27.5.1:
7399 |     dependencies:
7400 |       ansi-regex: 5.0.1
7401 |       ansi-styles: 5.2.0
7402 |       react-is: 17.0.2
7403 | 
7404 |   pretty-format@29.7.0:
7405 |     dependencies:
7406 |       '@jest/schemas': 29.6.3
7407 |       ansi-styles: 5.2.0
7408 |       react-is: 18.3.1
7409 | 
7410 |   prisma@5.22.0:
7411 |     dependencies:
7412 |       '@prisma/engines': 5.22.0
7413 |     optionalDependencies:
7414 |       fsevents: 2.3.3
7415 | 
7416 |   process-nextick-args@2.0.1: {}
7417 | 
7418 |   prompts@2.4.2:
7419 |     dependencies:
7420 |       kleur: 3.0.3
7421 |       sisteransi: 1.0.5
7422 | 
7423 |   prop-types@15.8.1:
7424 |     dependencies:
7425 |       loose-envify: 1.4.0
7426 |       object-assign: 4.1.1
7427 |       react-is: 16.13.1
7428 | 
7429 |   proxy-addr@2.0.7:
7430 |     dependencies:
7431 |       forwarded: 0.2.0
7432 |       ipaddr.js: 1.9.1
7433 | 
7434 |   proxy-from-env@1.1.0: {}
7435 | 
7436 |   punycode@2.3.1: {}
7437 | 
7438 |   pure-rand@6.1.0: {}
7439 | 
7440 |   qs@6.13.0:
7441 |     dependencies:
7442 |       side-channel: 1.1.0
7443 | 
7444 |   queue-microtask@1.2.3: {}
7445 | 
7446 |   range-parser@1.2.1: {}
7447 | 
7448 |   raw-body@2.5.2:
7449 |     dependencies:
7450 |       bytes: 3.1.2
7451 |       http-errors: 2.0.0
7452 |       iconv-lite: 0.4.24
7453 |       unpipe: 1.0.0
7454 | 
7455 |   react-dom@18.3.1(react@18.3.1):
7456 |     dependencies:
7457 |       loose-envify: 1.4.0
7458 |       react: 18.3.1
7459 |       scheduler: 0.23.2
7460 | 
7461 |   react-is@16.13.1: {}
7462 | 
7463 |   react-is@17.0.2: {}
7464 | 
7465 |   react-is@18.3.1: {}
7466 | 
7467 |   react-refresh@0.14.2: {}
7468 | 
7469 |   react-router-dom@6.28.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
7470 |     dependencies:
7471 |       '@remix-run/router': 1.21.0
7472 |       react: 18.3.1
7473 |       react-dom: 18.3.1(react@18.3.1)
7474 |       react-router: 6.28.1(react@18.3.1)
7475 | 
7476 |   react-router@6.28.1(react@18.3.1):
7477 |     dependencies:
7478 |       '@remix-run/router': 1.21.0
7479 |       react: 18.3.1
7480 | 
7481 |   react-transition-group@4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
7482 |     dependencies:
7483 |       '@babel/runtime': 7.26.0
7484 |       dom-helpers: 5.2.1
7485 |       loose-envify: 1.4.0
7486 |       prop-types: 15.8.1
7487 |       react: 18.3.1
7488 |       react-dom: 18.3.1(react@18.3.1)
7489 | 
7490 |   react@18.3.1:
7491 |     dependencies:
7492 |       loose-envify: 1.4.0
7493 | 
7494 |   read-cache@1.0.0:
7495 |     dependencies:
7496 |       pify: 2.3.0
7497 | 
7498 |   readable-stream@2.3.8:
7499 |     dependencies:
7500 |       core-util-is: 1.0.3
7501 |       inherits: 2.0.4
7502 |       isarray: 1.0.0
7503 |       process-nextick-args: 2.0.1
7504 |       safe-buffer: 5.1.2
7505 |       string_decoder: 1.1.1
7506 |       util-deprecate: 1.0.2
7507 | 
7508 |   readable-stream@3.6.2:
7509 |     dependencies:
7510 |       inherits: 2.0.4
7511 |       string_decoder: 1.1.1
7512 |       util-deprecate: 1.0.2
7513 | 
7514 |   readdirp@3.6.0:
7515 |     dependencies:
7516 |       picomatch: 2.3.1
7517 | 
7518 |   readdirp@4.1.1: {}
7519 | 
7520 |   redent@3.0.0:
7521 |     dependencies:
7522 |       indent-string: 4.0.0
7523 |       strip-indent: 3.0.0
7524 | 
7525 |   regenerator-runtime@0.14.1: {}
7526 | 
7527 |   regexp.prototype.flags@1.5.4:
7528 |     dependencies:
7529 |       call-bind: 1.0.8
7530 |       define-properties: 1.2.1
7531 |       es-errors: 1.3.0
7532 |       get-proto: 1.0.1
7533 |       gopd: 1.2.0
7534 |       set-function-name: 2.0.2
7535 | 
7536 |   require-directory@2.1.1: {}
7537 | 
7538 |   resolve-cwd@3.0.0:
7539 |     dependencies:
7540 |       resolve-from: 5.0.0
7541 | 
7542 |   resolve-from@4.0.0: {}
7543 | 
7544 |   resolve-from@5.0.0: {}
7545 | 
7546 |   resolve-pkg-maps@1.0.0: {}
7547 | 
7548 |   resolve.exports@2.0.3: {}
7549 | 
7550 |   resolve@1.22.10:
7551 |     dependencies:
7552 |       is-core-module: 2.16.1
7553 |       path-parse: 1.0.7
7554 |       supports-preserve-symlinks-flag: 1.0.0
7555 | 
7556 |   reusify@1.0.4: {}
7557 | 
7558 |   rimraf@3.0.2:
7559 |     dependencies:
7560 |       glob: 7.2.3
7561 | 
7562 |   rollup@4.30.1:
7563 |     dependencies:
7564 |       '@types/estree': 1.0.6
7565 |     optionalDependencies:
7566 |       '@rollup/rollup-android-arm-eabi': 4.30.1
7567 |       '@rollup/rollup-android-arm64': 4.30.1
7568 |       '@rollup/rollup-darwin-arm64': 4.30.1
7569 |       '@rollup/rollup-darwin-x64': 4.30.1
7570 |       '@rollup/rollup-freebsd-arm64': 4.30.1
7571 |       '@rollup/rollup-freebsd-x64': 4.30.1
7572 |       '@rollup/rollup-linux-arm-gnueabihf': 4.30.1
7573 |       '@rollup/rollup-linux-arm-musleabihf': 4.30.1
7574 |       '@rollup/rollup-linux-arm64-gnu': 4.30.1
7575 |       '@rollup/rollup-linux-arm64-musl': 4.30.1
7576 |       '@rollup/rollup-linux-loongarch64-gnu': 4.30.1
7577 |       '@rollup/rollup-linux-powerpc64le-gnu': 4.30.1
7578 |       '@rollup/rollup-linux-riscv64-gnu': 4.30.1
7579 |       '@rollup/rollup-linux-s390x-gnu': 4.30.1
7580 |       '@rollup/rollup-linux-x64-gnu': 4.30.1
7581 |       '@rollup/rollup-linux-x64-musl': 4.30.1
7582 |       '@rollup/rollup-win32-arm64-msvc': 4.30.1
7583 |       '@rollup/rollup-win32-ia32-msvc': 4.30.1
7584 |       '@rollup/rollup-win32-x64-msvc': 4.30.1
7585 |       fsevents: 2.3.3
7586 | 
7587 |   run-parallel@1.2.0:
7588 |     dependencies:
7589 |       queue-microtask: 1.2.3
7590 | 
7591 |   safe-buffer@5.1.2: {}
7592 | 
7593 |   safe-buffer@5.2.1: {}
7594 | 
7595 |   safe-regex-test@1.1.0:
7596 |     dependencies:
7597 |       call-bound: 1.0.3
7598 |       es-errors: 1.3.0
7599 |       is-regex: 1.2.1
7600 | 
7601 |   safe-stable-stringify@2.5.0: {}
7602 | 
7603 |   safer-buffer@2.1.2: {}
7604 | 
7605 |   scheduler@0.23.2:
7606 |     dependencies:
7607 |       loose-envify: 1.4.0
7608 | 
7609 |   semver@6.3.1: {}
7610 | 
7611 |   semver@7.6.3: {}
7612 | 
7613 |   send@0.19.0:
7614 |     dependencies:
7615 |       debug: 2.6.9
7616 |       depd: 2.0.0
7617 |       destroy: 1.2.0
7618 |       encodeurl: 1.0.2
7619 |       escape-html: 1.0.3
7620 |       etag: 1.8.1
7621 |       fresh: 0.5.2
7622 |       http-errors: 2.0.0
7623 |       mime: 1.6.0
7624 |       ms: 2.1.3
7625 |       on-finished: 2.4.1
7626 |       range-parser: 1.2.1
7627 |       statuses: 2.0.1
7628 |     transitivePeerDependencies:
7629 |       - supports-color
7630 | 
7631 |   serve-static@1.16.2:
7632 |     dependencies:
7633 |       encodeurl: 2.0.0
7634 |       escape-html: 1.0.3
7635 |       parseurl: 1.3.3
7636 |       send: 0.19.0
7637 |     transitivePeerDependencies:
7638 |       - supports-color
7639 | 
7640 |   set-function-length@1.2.2:
7641 |     dependencies:
7642 |       define-data-property: 1.1.4
7643 |       es-errors: 1.3.0
7644 |       function-bind: 1.1.2
7645 |       get-intrinsic: 1.2.7
7646 |       gopd: 1.2.0
7647 |       has-property-descriptors: 1.0.2
7648 | 
7649 |   set-function-name@2.0.2:
7650 |     dependencies:
7651 |       define-data-property: 1.1.4
7652 |       es-errors: 1.3.0
7653 |       functions-have-names: 1.2.3
7654 |       has-property-descriptors: 1.0.2
7655 | 
7656 |   setprototypeof@1.2.0: {}
7657 | 
7658 |   shebang-command@2.0.0:
7659 |     dependencies:
7660 |       shebang-regex: 3.0.0
7661 | 
7662 |   shebang-regex@3.0.0: {}
7663 | 
7664 |   side-channel-list@1.0.0:
7665 |     dependencies:
7666 |       es-errors: 1.3.0
7667 |       object-inspect: 1.13.3
7668 | 
7669 |   side-channel-map@1.0.1:
7670 |     dependencies:
7671 |       call-bound: 1.0.3
7672 |       es-errors: 1.3.0
7673 |       get-intrinsic: 1.2.7
7674 |       object-inspect: 1.13.3
7675 | 
7676 |   side-channel-weakmap@1.0.2:
7677 |     dependencies:
7678 |       call-bound: 1.0.3
7679 |       es-errors: 1.3.0
7680 |       get-intrinsic: 1.2.7
7681 |       object-inspect: 1.13.3
7682 |       side-channel-map: 1.0.1
7683 | 
7684 |   side-channel@1.1.0:
7685 |     dependencies:
7686 |       es-errors: 1.3.0
7687 |       object-inspect: 1.13.3
7688 |       side-channel-list: 1.0.0
7689 |       side-channel-map: 1.0.1
7690 |       side-channel-weakmap: 1.0.2
7691 | 
7692 |   siginfo@2.0.0: {}
7693 | 
7694 |   signal-exit@3.0.7: {}
7695 | 
7696 |   signal-exit@4.1.0: {}
7697 | 
7698 |   simple-swizzle@0.2.2:
7699 |     dependencies:
7700 |       is-arrayish: 0.3.2
7701 | 
7702 |   sisteransi@1.0.5: {}
7703 | 
7704 |   slash@3.0.0: {}
7705 | 
7706 |   source-map-js@1.2.1: {}
7707 | 
7708 |   source-map-support@0.5.13:
7709 |     dependencies:
7710 |       buffer-from: 1.1.2
7711 |       source-map: 0.6.1
7712 | 
7713 |   source-map@0.6.1: {}
7714 | 
7715 |   source-map@0.8.0-beta.0:
7716 |     dependencies:
7717 |       whatwg-url: 7.1.0
7718 | 
7719 |   sprintf-js@1.0.3: {}
7720 | 
7721 |   stack-trace@0.0.10: {}
7722 | 
7723 |   stack-utils@2.0.6:
7724 |     dependencies:
7725 |       escape-string-regexp: 2.0.0
7726 | 
7727 |   stackback@0.0.2: {}
7728 | 
7729 |   statuses@2.0.1: {}
7730 | 
7731 |   std-env@3.8.0: {}
7732 | 
7733 |   stop-iteration-iterator@1.1.0:
7734 |     dependencies:
7735 |       es-errors: 1.3.0
7736 |       internal-slot: 1.1.0
7737 | 
7738 |   streamsearch@1.1.0: {}
7739 | 
7740 |   string-length@4.0.2:
7741 |     dependencies:
7742 |       char-regex: 1.0.2
7743 |       strip-ansi: 6.0.1
7744 | 
7745 |   string-width@4.2.3:
7746 |     dependencies:
7747 |       emoji-regex: 8.0.0
7748 |       is-fullwidth-code-point: 3.0.0
7749 |       strip-ansi: 6.0.1
7750 | 
7751 |   string-width@5.1.2:
7752 |     dependencies:
7753 |       eastasianwidth: 0.2.0
7754 |       emoji-regex: 9.2.2
7755 |       strip-ansi: 7.1.0
7756 | 
7757 |   string_decoder@1.1.1:
7758 |     dependencies:
7759 |       safe-buffer: 5.1.2
7760 | 
7761 |   strip-ansi@6.0.1:
7762 |     dependencies:
7763 |       ansi-regex: 5.0.1
7764 | 
7765 |   strip-ansi@7.1.0:
7766 |     dependencies:
7767 |       ansi-regex: 6.1.0
7768 | 
7769 |   strip-bom@4.0.0: {}
7770 | 
7771 |   strip-final-newline@2.0.0: {}
7772 | 
7773 |   strip-final-newline@3.0.0: {}
7774 | 
7775 |   strip-indent@3.0.0:
7776 |     dependencies:
7777 |       min-indent: 1.0.1
7778 | 
7779 |   strip-json-comments@3.1.1: {}
7780 | 
7781 |   strip-literal@2.1.1:
7782 |     dependencies:
7783 |       js-tokens: 9.0.1
7784 | 
7785 |   sucrase@3.35.0:
7786 |     dependencies:
7787 |       '@jridgewell/gen-mapping': 0.3.8
7788 |       commander: 4.1.1
7789 |       glob: 10.4.5
7790 |       lines-and-columns: 1.2.4
7791 |       mz: 2.7.0
7792 |       pirates: 4.0.6
7793 |       ts-interface-checker: 0.1.13
7794 | 
7795 |   superagent@9.0.2:
7796 |     dependencies:
7797 |       component-emitter: 1.3.1
7798 |       cookiejar: 2.1.4
7799 |       debug: 4.4.0
7800 |       fast-safe-stringify: 2.1.1
7801 |       form-data: 4.0.1
7802 |       formidable: 3.5.2
7803 |       methods: 1.1.2
7804 |       mime: 2.6.0
7805 |       qs: 6.13.0
7806 |     transitivePeerDependencies:
7807 |       - supports-color
7808 | 
7809 |   supercluster@8.0.1:
7810 |     dependencies:
7811 |       kdbush: 4.0.2
7812 | 
7813 |   supertest@7.0.0:
7814 |     dependencies:
7815 |       methods: 1.1.2
7816 |       superagent: 9.0.2
7817 |     transitivePeerDependencies:
7818 |       - supports-color
7819 | 
7820 |   supports-color@7.2.0:
7821 |     dependencies:
7822 |       has-flag: 4.0.0
7823 | 
7824 |   supports-color@8.1.1:
7825 |     dependencies:
7826 |       has-flag: 4.0.0
7827 | 
7828 |   supports-preserve-symlinks-flag@1.0.0: {}
7829 | 
7830 |   tailwindcss@3.4.17(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)):
7831 |     dependencies:
7832 |       '@alloc/quick-lru': 5.2.0
7833 |       arg: 5.0.2
7834 |       chokidar: 3.6.0
7835 |       didyoumean: 1.2.2
7836 |       dlv: 1.1.3
7837 |       fast-glob: 3.3.3
7838 |       glob-parent: 6.0.2
7839 |       is-glob: 4.0.3
7840 |       jiti: 1.21.7
7841 |       lilconfig: 3.1.3
7842 |       micromatch: 4.0.8
7843 |       normalize-path: 3.0.0
7844 |       object-hash: 3.0.0
7845 |       picocolors: 1.1.1
7846 |       postcss: 8.4.49
7847 |       postcss-import: 15.1.0(postcss@8.4.49)
7848 |       postcss-js: 4.0.1(postcss@8.4.49)
7849 |       postcss-load-config: 4.0.2(postcss@8.4.49)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
7850 |       postcss-nested: 6.2.0(postcss@8.4.49)
7851 |       postcss-selector-parser: 6.1.2
7852 |       resolve: 1.22.10
7853 |       sucrase: 3.35.0
7854 |     transitivePeerDependencies:
7855 |       - ts-node
7856 | 
7857 |   test-exclude@6.0.0:
7858 |     dependencies:
7859 |       '@istanbuljs/schema': 0.1.3
7860 |       glob: 7.2.3
7861 |       minimatch: 3.1.2
7862 | 
7863 |   text-hex@1.0.0: {}
7864 | 
7865 |   text-table@0.2.0: {}
7866 | 
7867 |   thenify-all@1.6.0:
7868 |     dependencies:
7869 |       thenify: 3.3.1
7870 | 
7871 |   thenify@3.3.1:
7872 |     dependencies:
7873 |       any-promise: 1.3.0
7874 | 
7875 |   tinybench@2.9.0: {}
7876 | 
7877 |   tinyexec@0.3.2: {}
7878 | 
7879 |   tinyglobby@0.2.10:
7880 |     dependencies:
7881 |       fdir: 6.4.2(picomatch@4.0.2)
7882 |       picomatch: 4.0.2
7883 | 
7884 |   tinypool@0.8.4: {}
7885 | 
7886 |   tinyspy@2.2.1: {}
7887 | 
7888 |   tmpl@1.0.5: {}
7889 | 
7890 |   to-regex-range@5.0.1:
7891 |     dependencies:
7892 |       is-number: 7.0.0
7893 | 
7894 |   toidentifier@1.0.1: {}
7895 | 
7896 |   tr46@1.0.1:
7897 |     dependencies:
7898 |       punycode: 2.3.1
7899 | 
7900 |   tree-kill@1.2.2: {}
7901 | 
7902 |   triple-beam@1.4.1: {}
7903 | 
7904 |   ts-api-utils@1.4.3(typescript@5.7.3):
7905 |     dependencies:
7906 |       typescript: 5.7.3
7907 | 
7908 |   ts-interface-checker@0.1.13: {}
7909 | 
7910 |   ts-jest@29.2.5(@babel/core@7.26.0)(@jest/transform@29.7.0)(@jest/types@29.6.3)(babel-jest@29.7.0(@babel/core@7.26.0))(esbuild@0.24.2)(jest@29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3)))(typescript@5.7.3):
7911 |     dependencies:
7912 |       bs-logger: 0.2.6
7913 |       ejs: 3.1.10
7914 |       fast-json-stable-stringify: 2.1.0
7915 |       jest: 29.7.0(@types/node@20.17.12)(ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3))
7916 |       jest-util: 29.7.0
7917 |       json5: 2.2.3
7918 |       lodash.memoize: 4.1.2
7919 |       make-error: 1.3.6
7920 |       semver: 7.6.3
7921 |       typescript: 5.7.3
7922 |       yargs-parser: 21.1.1
7923 |     optionalDependencies:
7924 |       '@babel/core': 7.26.0
7925 |       '@jest/transform': 29.7.0
7926 |       '@jest/types': 29.6.3
7927 |       babel-jest: 29.7.0(@babel/core@7.26.0)
7928 |       esbuild: 0.24.2
7929 | 
7930 |   ts-node@10.9.2(@swc/core@1.10.7)(@types/node@20.17.12)(typescript@5.7.3):
7931 |     dependencies:
7932 |       '@cspotcode/source-map-support': 0.8.1
7933 |       '@tsconfig/node10': 1.0.11
7934 |       '@tsconfig/node12': 1.0.11
7935 |       '@tsconfig/node14': 1.0.3
7936 |       '@tsconfig/node16': 1.0.4
7937 |       '@types/node': 20.17.12
7938 |       acorn: 8.14.0
7939 |       acorn-walk: 8.3.4
7940 |       arg: 4.1.3
7941 |       create-require: 1.1.1
7942 |       diff: 4.0.2
7943 |       make-error: 1.3.6
7944 |       typescript: 5.7.3
7945 |       v8-compile-cache-lib: 3.0.1
7946 |       yn: 3.1.1
7947 |     optionalDependencies:
7948 |       '@swc/core': 1.10.7
7949 |     optional: true
7950 | 
7951 |   tsup@8.3.5(@swc/core@1.10.7)(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(typescript@5.7.3)(yaml@2.7.0):
7952 |     dependencies:
7953 |       bundle-require: 5.1.0(esbuild@0.24.2)
7954 |       cac: 6.7.14
7955 |       chokidar: 4.0.3
7956 |       consola: 3.4.0
7957 |       debug: 4.4.0
7958 |       esbuild: 0.24.2
7959 |       joycon: 3.1.1
7960 |       picocolors: 1.1.1
7961 |       postcss-load-config: 6.0.1(jiti@1.21.7)(postcss@8.4.49)(tsx@4.19.2)(yaml@2.7.0)
7962 |       resolve-from: 5.0.0
7963 |       rollup: 4.30.1
7964 |       source-map: 0.8.0-beta.0
7965 |       sucrase: 3.35.0
7966 |       tinyexec: 0.3.2
7967 |       tinyglobby: 0.2.10
7968 |       tree-kill: 1.2.2
7969 |     optionalDependencies:
7970 |       '@swc/core': 1.10.7
7971 |       postcss: 8.4.49
7972 |       typescript: 5.7.3
7973 |     transitivePeerDependencies:
7974 |       - jiti
7975 |       - supports-color
7976 |       - tsx
7977 |       - yaml
7978 | 
7979 |   tsx@4.19.2:
7980 |     dependencies:
7981 |       esbuild: 0.23.1
7982 |       get-tsconfig: 4.8.1
7983 |     optionalDependencies:
7984 |       fsevents: 2.3.3
7985 | 
7986 |   turbo-darwin-64@1.13.4:
7987 |     optional: true
7988 | 
7989 |   turbo-darwin-arm64@1.13.4:
7990 |     optional: true
7991 | 
7992 |   turbo-linux-64@1.13.4:
7993 |     optional: true
7994 | 
7995 |   turbo-linux-arm64@1.13.4:
7996 |     optional: true
7997 | 
7998 |   turbo-windows-64@1.13.4:
7999 |     optional: true
8000 | 
8001 |   turbo-windows-arm64@1.13.4:
8002 |     optional: true
8003 | 
8004 |   turbo@1.13.4:
8005 |     optionalDependencies:
8006 |       turbo-darwin-64: 1.13.4
8007 |       turbo-darwin-arm64: 1.13.4
8008 |       turbo-linux-64: 1.13.4
8009 |       turbo-linux-arm64: 1.13.4
8010 |       turbo-windows-64: 1.13.4
8011 |       turbo-windows-arm64: 1.13.4
8012 | 
8013 |   type-check@0.4.0:
8014 |     dependencies:
8015 |       prelude-ls: 1.2.1
8016 | 
8017 |   type-detect@4.0.8: {}
8018 | 
8019 |   type-detect@4.1.0: {}
8020 | 
8021 |   type-fest@0.20.2: {}
8022 | 
8023 |   type-fest@0.21.3: {}
8024 | 
8025 |   type-is@1.6.18:
8026 |     dependencies:
8027 |       media-typer: 0.3.0
8028 |       mime-types: 2.1.35
8029 | 
8030 |   typedarray@0.0.6: {}
8031 | 
8032 |   typescript@5.7.3: {}
8033 | 
8034 |   ufo@1.5.4: {}
8035 | 
8036 |   undici-types@6.19.8: {}
8037 | 
8038 |   unpipe@1.0.0: {}
8039 | 
8040 |   update-browserslist-db@1.1.2(browserslist@4.24.4):
8041 |     dependencies:
8042 |       browserslist: 4.24.4
8043 |       escalade: 3.2.0
8044 |       picocolors: 1.1.1
8045 | 
8046 |   uri-js@4.4.1:
8047 |     dependencies:
8048 |       punycode: 2.3.1
8049 | 
8050 |   util-deprecate@1.0.2: {}
8051 | 
8052 |   utils-merge@1.0.1: {}
8053 | 
8054 |   v8-compile-cache-lib@3.0.1:
8055 |     optional: true
8056 | 
8057 |   v8-to-istanbul@9.3.0:
8058 |     dependencies:
8059 |       '@jridgewell/trace-mapping': 0.3.25
8060 |       '@types/istanbul-lib-coverage': 2.0.6
8061 |       convert-source-map: 2.0.0
8062 | 
8063 |   vary@1.1.2: {}
8064 | 
8065 |   vite-node@1.6.0(@types/node@20.17.12):
8066 |     dependencies:
8067 |       cac: 6.7.14
8068 |       debug: 4.4.0
8069 |       pathe: 1.1.2
8070 |       picocolors: 1.1.1
8071 |       vite: 5.4.11(@types/node@20.17.12)
8072 |     transitivePeerDependencies:
8073 |       - '@types/node'
8074 |       - less
8075 |       - lightningcss
8076 |       - sass
8077 |       - sass-embedded
8078 |       - stylus
8079 |       - sugarss
8080 |       - supports-color
8081 |       - terser
8082 | 
8083 |   vite@5.4.11(@types/node@20.17.12):
8084 |     dependencies:
8085 |       esbuild: 0.21.5
8086 |       postcss: 8.4.49
8087 |       rollup: 4.30.1
8088 |     optionalDependencies:
8089 |       '@types/node': 20.17.12
8090 |       fsevents: 2.3.3
8091 | 
8092 |   vitest@1.6.0(@types/node@20.17.12)(happy-dom@12.10.3):
8093 |     dependencies:
8094 |       '@vitest/expect': 1.6.0
8095 |       '@vitest/runner': 1.6.0
8096 |       '@vitest/snapshot': 1.6.0
8097 |       '@vitest/spy': 1.6.0
8098 |       '@vitest/utils': 1.6.0
8099 |       acorn-walk: 8.3.4
8100 |       chai: 4.5.0
8101 |       debug: 4.4.0
8102 |       execa: 8.0.1
8103 |       local-pkg: 0.5.1
8104 |       magic-string: 0.30.17
8105 |       pathe: 1.1.2
8106 |       picocolors: 1.1.1
8107 |       std-env: 3.8.0
8108 |       strip-literal: 2.1.1
8109 |       tinybench: 2.9.0
8110 |       tinypool: 0.8.4
8111 |       vite: 5.4.11(@types/node@20.17.12)
8112 |       vite-node: 1.6.0(@types/node@20.17.12)
8113 |       why-is-node-running: 2.3.0
8114 |     optionalDependencies:
8115 |       '@types/node': 20.17.12
8116 |       happy-dom: 12.10.3
8117 |     transitivePeerDependencies:
8118 |       - less
8119 |       - lightningcss
8120 |       - sass
8121 |       - sass-embedded
8122 |       - stylus
8123 |       - sugarss
8124 |       - supports-color
8125 |       - terser
8126 | 
8127 |   walker@1.0.8:
8128 |     dependencies:
8129 |       makeerror: 1.0.12
8130 | 
8131 |   webidl-conversions@4.0.2: {}
8132 | 
8133 |   webidl-conversions@7.0.0: {}
8134 | 
8135 |   whatwg-encoding@2.0.0:
8136 |     dependencies:
8137 |       iconv-lite: 0.6.3
8138 | 
8139 |   whatwg-mimetype@3.0.0: {}
8140 | 
8141 |   whatwg-url@7.1.0:
8142 |     dependencies:
8143 |       lodash.sortby: 4.7.0
8144 |       tr46: 1.0.1
8145 |       webidl-conversions: 4.0.2
8146 | 
8147 |   which-boxed-primitive@1.1.1:
8148 |     dependencies:
8149 |       is-bigint: 1.1.0
8150 |       is-boolean-object: 1.2.1
8151 |       is-number-object: 1.1.1
8152 |       is-string: 1.1.1
8153 |       is-symbol: 1.1.1
8154 | 
8155 |   which-collection@1.0.2:
8156 |     dependencies:
8157 |       is-map: 2.0.3
8158 |       is-set: 2.0.3
8159 |       is-weakmap: 2.0.2
8160 |       is-weakset: 2.0.4
8161 | 
8162 |   which-typed-array@1.1.18:
8163 |     dependencies:
8164 |       available-typed-arrays: 1.0.7
8165 |       call-bind: 1.0.8
8166 |       call-bound: 1.0.3
8167 |       for-each: 0.3.3
8168 |       gopd: 1.2.0
8169 |       has-tostringtag: 1.0.2
8170 | 
8171 |   which@2.0.2:
8172 |     dependencies:
8173 |       isexe: 2.0.0
8174 | 
8175 |   why-is-node-running@2.3.0:
8176 |     dependencies:
8177 |       siginfo: 2.0.0
8178 |       stackback: 0.0.2
8179 | 
8180 |   winston-transport@4.9.0:
8181 |     dependencies:
8182 |       logform: 2.7.0
8183 |       readable-stream: 3.6.2
8184 |       triple-beam: 1.4.1
8185 | 
8186 |   winston@3.17.0:
8187 |     dependencies:
8188 |       '@colors/colors': 1.6.0
8189 |       '@dabh/diagnostics': 2.0.3
8190 |       async: 3.2.6
8191 |       is-stream: 2.0.1
8192 |       logform: 2.7.0
8193 |       one-time: 1.0.0
8194 |       readable-stream: 3.6.2
8195 |       safe-stable-stringify: 2.5.0
8196 |       stack-trace: 0.0.10
8197 |       triple-beam: 1.4.1
8198 |       winston-transport: 4.9.0
8199 | 
8200 |   word-wrap@1.2.5: {}
8201 | 
8202 |   wrap-ansi@7.0.0:
8203 |     dependencies:
8204 |       ansi-styles: 4.3.0
8205 |       string-width: 4.2.3
8206 |       strip-ansi: 6.0.1
8207 | 
8208 |   wrap-ansi@8.1.0:
8209 |     dependencies:
8210 |       ansi-styles: 6.2.1
8211 |       string-width: 5.1.2
8212 |       strip-ansi: 7.1.0
8213 | 
8214 |   wrappy@1.0.2: {}
8215 | 
8216 |   write-file-atomic@4.0.2:
8217 |     dependencies:
8218 |       imurmurhash: 0.1.4
8219 |       signal-exit: 3.0.7
8220 | 
8221 |   xtend@4.0.2: {}
8222 | 
8223 |   y18n@5.0.8: {}
8224 | 
8225 |   yallist@3.1.1: {}
8226 | 
8227 |   yaml@2.7.0: {}
8228 | 
8229 |   yargs-parser@21.1.1: {}
8230 | 
8231 |   yargs@17.7.2:
8232 |     dependencies:
8233 |       cliui: 8.0.1
8234 |       escalade: 3.2.0
8235 |       get-caller-file: 2.0.5
8236 |       require-directory: 2.1.1
8237 |       string-width: 4.2.3
8238 |       y18n: 5.0.8
8239 |       yargs-parser: 21.1.1
8240 | 
8241 |   yn@3.1.1:
8242 |     optional: true
8243 | 
8244 |   yocto-queue@0.1.0: {}
8245 | 
8246 |   yocto-queue@1.1.1: {}
8247 | 
8248 |   zod@3.24.1: {}
8249 | 


--------------------------------------------------------------------------------
/pnpm-workspace.yaml:
--------------------------------------------------------------------------------
1 | packages:
2 |   - 'apps/*'
3 |   - 'packages/*' 
4 | 


--------------------------------------------------------------------------------
/turbo.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "$schema": "https://turbo.build/schema.json",
 3 |   "globalDependencies": ["**/.env.*local"],
 4 |   "pipeline": {
 5 |     "build": {
 6 |       "dependsOn": ["^build", "prisma:generate"],
 7 |       "outputs": ["dist/**"]
 8 |     },
 9 |     "lint": {
10 |       "outputs": []
11 |     },
12 |     "dev": {
13 |       "dependsOn": ["^build", "prisma:generate"],
14 |       "cache": false,
15 |       "persistent": true,
16 |       "dotEnv": [
17 |         ".env.local",
18 |         ".env.development.local",
19 |         ".env.development",
20 |         ".env"
21 |       ]
22 |     },
23 |     "clean": {
24 |       "cache": false
25 |     },
26 |     "prisma:generate": {
27 |       "cache": false
28 |     },
29 |     "prisma:migrate": {
30 |       "cache": false
31 |     },
32 |     "prisma:studio": {
33 |       "cache": false
34 |     },
35 |     "prisma:seed": {
36 |       "cache": false
37 |     }
38 |   }
39 | }
40 | 


--------------------------------------------------------------------------------
